{
 "canonicalReference": {
  "isEmpty": false,
  "source": "preact-prop-helpers!"
 },
 "displayName": "preact-prop-helpers",
 "containerKey": "preact-prop-helpers",
 "entryPoints": [
  {
   "canonicalReference": {
    "isEmpty": false,
    "source": "preact-prop-helpers!"
   },
   "containerKey": "",
   "displayName": "",
   "importPath": "",
   "kind": "EntryPoint",
   "name": "",
   "members": [
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "assertEmptyObject:function(1)"
     },
     "kind": "Function",
     "containerKey": "assertEmptyObject|Function|1",
     "displayName": "assertEmptyObject",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function assertEmptyObject<T extends {}>(_a: [keyof T] extends [never] ? T : `Unhandled keys in this rest spread object!`): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function assertEmptyObject<T extends "
       },
       {
        "kind": "Content",
        "text": "{}"
       },
       {
        "kind": "Content",
        "text": ">(_a: "
       },
       {
        "kind": "Content",
        "text": "[keyof T] extends [never] ? T : `Unhandled keys in this rest spread object!`"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "assertEmptyObject",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "_a",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "[keyof T] extends [never] ? T : `Unhandled keys in this rest spread object!`",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "[keyof T] extends [never] ? T : `Unhandled keys in this rest spread object!`"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "tsdocParamBlock": {
        "parameterName": "_a",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The remaining spread parameters of a given object that you expect to be empty (because you properly accounted for all the properties that exist in it, and want to ensure it stays that way)",
             "textExcerpt": {
              "startIndex": 93,
              "endIndex": 163
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "{}",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{}"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Does nothing at runtime -- type checking only.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 17
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Throws a (Typescript compiler) error if the passed object is anything but the empty object ",
           "textExcerpt": {
            "startIndex": 19,
            "endIndex": 51
           }
          },
          {
           "errorLocation": {
            "startIndex": 51,
            "endIndex": 52
           },
           "errorMessage": "Expecting a TSDoc tag starting with \"{@\"",
           "kind": "ErrorText",
           "messageId": "tsdoc-malformed-inline-tag",
           "text": "{",
           "textExcerpt": {
            "startIndex": 51,
            "endIndex": 52
           }
          },
          {
           "errorLocation": {
            "startIndex": 52,
            "endIndex": 53
           },
           "errorMessage": "The \"}\" character should be escaped using a backslash to avoid confusion with a TSDoc inline tag",
           "kind": "ErrorText",
           "messageId": "tsdoc-escape-right-brace",
           "text": "}",
           "textExcerpt": {
            "startIndex": 52,
            "endIndex": 53
           }
          },
          {
           "kind": "PlainText",
           "text": ".",
           "textExcerpt": {
            "startIndex": 53,
            "endIndex": 54
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Use this to ensure that your spread operators work correctly and cover all cases.",
           "textExcerpt": {
            "startIndex": 56,
            "endIndex": 84
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "_a",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The remaining spread parameters of a given object that you expect to be empty (because you properly accounted for all the properties that exist in it, and want to ensure it stays that way)",
              "textExcerpt": {
               "startIndex": 93,
               "endIndex": 163
              }
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function assertEmptyObject<T extends "
      },
      {
       "kind": "Content",
       "text": "{}"
      },
      {
       "kind": "Content",
       "text": ">(_a: "
      },
      {
       "kind": "Content",
       "text": "[keyof T] extends [never] ? T : `Unhandled keys in this rest spread object!`"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type AsyncHandler<EventType, CaptureType> = "
      },
      {
       "kind": "Content",
       "text": "((c: CaptureType, e: EventType) => ("
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Promise:interface"
       },
       "kind": "Reference",
       "text": "Promise"
      },
      {
       "kind": "Content",
       "text": "<void> | void))"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "AsyncHandler:type"
     },
     "containerKey": "AsyncHandler|TypeAlias",
     "displayName": "AsyncHandler",
     "excerpt": {
      "isEmpty": false,
      "text": "export type AsyncHandler<EventType, CaptureType> = ((c: CaptureType, e: EventType) => (Promise<void> | void));",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type AsyncHandler<EventType, CaptureType> = "
       },
       {
        "kind": "Content",
        "text": "((c: CaptureType, e: EventType) => ("
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Promise:interface"
        },
        "kind": "Reference",
        "text": "Promise"
       },
       {
        "kind": "Content",
        "text": "<void> | void))"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-async-handler.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "AsyncHandler",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "((c: CaptureType, e: EventType) => (Promise<void> | void))",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "((c: CaptureType, e: EventType) => ("
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Promise:interface"
        },
        "kind": "Reference",
        "text": "Promise"
       },
       {
        "kind": "Content",
        "text": "<void> | void))"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 1
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "EventType"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CaptureType"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "binarySearch:function(1)"
     },
     "kind": "Function",
     "containerKey": "binarySearch|Function|1",
     "displayName": "binarySearch",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function binarySearch<T, U, F extends (lhs: U, rhs: T) => number>(array: T[], wanted: U, comparator: F): number;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function binarySearch<T, U, F extends "
       },
       {
        "kind": "Content",
        "text": "(lhs: U, rhs: T) => number"
       },
       {
        "kind": "Content",
        "text": ">(array: "
       },
       {
        "kind": "Content",
        "text": "T[]"
       },
       {
        "kind": "Content",
        "text": ", wanted: "
       },
       {
        "kind": "Content",
        "text": "U"
       },
       {
        "kind": "Content",
        "text": ", comparator: "
       },
       {
        "kind": "Content",
        "text": "F"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "number"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "binarySearch",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "array",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T[]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T[]"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "tsdocParamBlock": {
        "parameterName": "array",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The array to search through",
             "textExcerpt": {
              "startIndex": 57,
              "endIndex": 66
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": false,
       "name": "wanted",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "U",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "U"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "tsdocParamBlock": {
        "parameterName": "wanted",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The value you'd like to find",
             "textExcerpt": {
              "startIndex": 75,
              "endIndex": 88
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": false,
       "name": "comparator",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "F",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "F"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       },
       "tsdocParamBlock": {
        "parameterName": "comparator",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Compares ",
             "textExcerpt": {
              "startIndex": 97,
              "endIndex": 99
             }
            },
            {
             "kind": "CodeSpan",
             "code": "wanted"
            },
            {
             "kind": "PlainText",
             "text": " with the current value in ",
             "textExcerpt": {
              "startIndex": 102,
              "endIndex": 113
             }
            },
            {
             "kind": "CodeSpan",
             "code": "array"
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "number",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "number"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "U"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "(lhs: U, rhs: T) => number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(lhs: U, rhs: T) => number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "F"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Your usual binary search implementation.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 10
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "It's used here to quickly find a good spot to start searching for our next typeahead candidate.",
           "textExcerpt": {
            "startIndex": 12,
            "endIndex": 48
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " A non-negative value if ",
            "textExcerpt": {
             "startIndex": 120,
             "endIndex": 131
            }
           },
           {
            "kind": "CodeSpan",
            "code": "wanted"
           },
           {
            "kind": "PlainText",
            "text": " was found, and a negative number if not. The absolute value of this number, minus one, is where ",
            "textExcerpt": {
             "startIndex": 134,
             "endIndex": 175
            }
           },
           {
            "kind": "CodeSpan",
            "code": "wanted"
           },
           {
            "kind": "PlainText",
            "text": " *would* be found if it *was* in ",
            "textExcerpt": {
             "startIndex": 178,
             "endIndex": 197
            }
           },
           {
            "kind": "CodeSpan",
            "code": "array"
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "array",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The array to search through",
              "textExcerpt": {
               "startIndex": 57,
               "endIndex": 66
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "wanted",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The value you'd like to find",
              "textExcerpt": {
               "startIndex": 75,
               "endIndex": 88
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "comparator",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "Compares ",
              "textExcerpt": {
               "startIndex": 97,
               "endIndex": 99
              }
             },
             {
              "kind": "CodeSpan",
              "code": "wanted"
             },
             {
              "kind": "PlainText",
              "text": " with the current value in ",
              "textExcerpt": {
               "startIndex": 102,
               "endIndex": 113
              }
             },
             {
              "kind": "CodeSpan",
              "code": "array"
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 3,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function binarySearch<T, U, F extends "
      },
      {
       "kind": "Content",
       "text": "(lhs: U, rhs: T) => number"
      },
      {
       "kind": "Content",
       "text": ">(array: "
      },
      {
       "kind": "Content",
       "text": "T[]"
      },
      {
       "kind": "Content",
       "text": ", wanted: "
      },
      {
       "kind": "Content",
       "text": "U"
      },
      {
       "kind": "Content",
       "text": ", comparator: "
      },
      {
       "kind": "Content",
       "text": "F"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "number"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type Compare<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildInfo"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "kind": "Content",
       "text": "(lhs: M, rhs: M) => number"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "Compare:type"
     },
     "containerKey": "Compare|TypeAlias",
     "displayName": "Compare",
     "excerpt": {
      "isEmpty": false,
      "text": "export type Compare<M extends UseRearrangeableChildInfo> = (lhs: M, rhs: M) => number;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type Compare<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildInfo"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "kind": "Content",
        "text": "(lhs: M, rhs: M) => number"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "Compare",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(lhs: M, rhs: M) => number",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(lhs: M, rhs: M) => number"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "CompleteGridNavigationContext:interface"
     },
     "containerKey": "CompleteGridNavigationContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface CompleteGridNavigationRowContext<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, _CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends UseManagedChildrenContext<RM>, UsePaginatedChildContext, UseStaggeredChildContext, UseChildrenHaveFocusContext<RowElement>, UseTypeaheadNavigationContext, UseSingleSelectionContext, RovingTabIndexChildContext, UseGridNavigationRowContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface CompleteGridNavigationRowContext<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", _CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildrenContext:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildrenContext"
       },
       {
        "kind": "Content",
        "text": "<RM>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildContext:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildContext:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusContext:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusContext"
       },
       {
        "kind": "Content",
        "text": "<RowElement>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationContext:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionContext:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "RovingTabIndexChildContext:interface"
        },
        "kind": "Reference",
        "text": "RovingTabIndexChildContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowContext:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationRowContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 31,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface CompleteGridNavigationRowContext<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", _CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenContext:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildrenContext"
      },
      {
       "kind": "Content",
       "text": "<RM>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildContext:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildContext:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusContext:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenHaveFocusContext"
      },
      {
       "kind": "Content",
       "text": "<RowElement>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationContext:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionContext:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "RovingTabIndexChildContext:interface"
       },
       "kind": "Reference",
       "text": "RovingTabIndexChildContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowContext:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationRowContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenContext<RM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenContext:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenContext"
         },
         {
          "kind": "Content",
          "text": "<RM>"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 13
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildContext:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 16
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildContext:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 19,
         "startIndex": 18
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusContext<RowElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusContext:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusContext"
         },
         {
          "kind": "Content",
          "text": "<RowElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 22,
         "startIndex": 20
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 24,
         "startIndex": 23
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         }
        ],
        "tokenRange": {
         "endIndex": 26,
         "startIndex": 25
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "RovingTabIndexChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RovingTabIndexChildContext:interface"
          },
          "kind": "Reference",
          "text": "RovingTabIndexChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 28,
         "startIndex": 27
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationRowContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowContext"
         }
        ],
        "tokenRange": {
         "endIndex": 30,
         "startIndex": 29
        }
       }
      }
     ],
     "displayName": "CompleteGridNavigationContext",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "CompleteGridNavigationContext",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "CompleteGridNavigationRowContext:interface"
     },
     "containerKey": "CompleteGridNavigationRowContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface CompleteGridNavigationCellContext<ParentElement extends Element, ChildElement extends Element, CM extends UseCompleteGridNavigationCellInfo<ChildElement>> extends UseManagedChildrenContext<CM>, UseTypeaheadNavigationContext, RovingTabIndexChildContext, UseGridNavigationCellContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface CompleteGridNavigationCellContext<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildrenContext:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildrenContext"
       },
       {
        "kind": "Content",
        "text": "<CM>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationContext:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "RovingTabIndexChildContext:interface"
        },
        "kind": "Reference",
        "text": "RovingTabIndexChildContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellContext:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 17,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface CompleteGridNavigationCellContext<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenContext:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildrenContext"
      },
      {
       "kind": "Content",
       "text": "<CM>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationContext:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "RovingTabIndexChildContext:interface"
       },
       "kind": "Reference",
       "text": "RovingTabIndexChildContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellContext:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationCellContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenContext<CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenContext:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenContext"
         },
         {
          "kind": "Content",
          "text": "<CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 11
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "RovingTabIndexChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RovingTabIndexChildContext:interface"
          },
          "kind": "Reference",
          "text": "RovingTabIndexChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 13
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellContext"
         }
        ],
        "tokenRange": {
         "endIndex": 16,
         "startIndex": 15
        }
       }
      }
     ],
     "displayName": "CompleteGridNavigationRowContext",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "CompleteGridNavigationRowContext",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "CompleteListNavigationContext:interface"
     },
     "containerKey": "CompleteListNavigationContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface CompleteListNavigationContext<_ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends UseManagedChildrenContext<M>, UsePaginatedChildContext, UseStaggeredChildContext, UseChildrenHaveFocusContext<ChildElement>, UseTypeaheadNavigationContext, UseSingleSelectionContext, RovingTabIndexChildContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface CompleteListNavigationContext<_ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildrenContext:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildrenContext"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildContext:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildContext:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusContext:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusContext"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationContext:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionContext:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "RovingTabIndexChildContext:interface"
        },
        "kind": "Reference",
        "text": "RovingTabIndexChildContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 24,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface CompleteListNavigationContext<_ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenContext:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildrenContext"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildContext:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildContext:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusContext:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenHaveFocusContext"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationContext:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionContext:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "RovingTabIndexChildContext:interface"
       },
       "kind": "Reference",
       "text": "RovingTabIndexChildContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenContext<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenContext:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenContext"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildContext:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 11
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildContext:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 13
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusContext<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusContext:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusContext"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 15
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 19,
         "startIndex": 18
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         }
        ],
        "tokenRange": {
         "endIndex": 21,
         "startIndex": 20
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "RovingTabIndexChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RovingTabIndexChildContext:interface"
          },
          "kind": "Reference",
          "text": "RovingTabIndexChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 23,
         "startIndex": 22
        }
       }
      }
     ],
     "displayName": "CompleteListNavigationContext",
     "fileUrlPath": "src/component-use/use-list-navigation-complete.tsx",
     "isExported": true,
     "name": "CompleteListNavigationContext",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type CompositionEventType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.TargetedCompositionEvent:type"
       },
       "kind": "Reference",
       "text": "JSX.TargetedCompositionEvent"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "CompositionEventType:type"
     },
     "containerKey": "CompositionEventType|TypeAlias",
     "displayName": "CompositionEventType",
     "excerpt": {
      "isEmpty": false,
      "text": "export type CompositionEventType<E extends EventTarget> = JSX.TargetedCompositionEvent<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type CompositionEventType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedCompositionEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedCompositionEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "CompositionEventType",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.TargetedCompositionEvent<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedCompositionEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedCompositionEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type CSSProperties = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.CSSProperties:interface"
       },
       "kind": "Reference",
       "text": "JSX.CSSProperties"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "CSSProperties:type"
     },
     "containerKey": "CSSProperties|TypeAlias",
     "displayName": "CSSProperties",
     "excerpt": {
      "isEmpty": false,
      "text": "export type CSSProperties = JSX.CSSProperties;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type CSSProperties = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.CSSProperties:interface"
        },
        "kind": "Reference",
        "text": "JSX.CSSProperties"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "CSSProperties",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.CSSProperties",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.CSSProperties:interface"
        },
        "kind": "Reference",
        "text": "JSX.CSSProperties"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "debounceRendering:function(1)"
     },
     "kind": "Function",
     "containerKey": "debounceRendering|Function|1",
     "displayName": "debounceRendering",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function debounceRendering(f: () => void): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function debounceRendering(f: "
       },
       {
        "kind": "Content",
        "text": "() => void"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "debounceRendering",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "f",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "() => void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => void"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function debounceRendering(f: "
      },
      {
       "kind": "Content",
       "text": "() => void"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "defaultCompare:function(1)"
     },
     "kind": "Function",
     "containerKey": "defaultCompare|Function|1",
     "displayName": "defaultCompare",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function defaultCompare(lhs: UseSortableChildInfo | undefined, rhs: UseSortableChildInfo | undefined): number;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function defaultCompare(lhs: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": " | undefined"
       },
       {
        "kind": "Content",
        "text": ", rhs: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": " | undefined"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "number"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "defaultCompare",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "lhs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSortableChildInfo | undefined",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": " | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       }
      },
      {
       "isOptional": false,
       "name": "rhs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSortableChildInfo | undefined",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": " | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 4
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "number",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "number"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 7
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function defaultCompare(lhs: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": " | undefined"
      },
      {
       "kind": "Content",
       "text": ", rhs: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": " | undefined"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "number"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type DismissListenerTypes = "
      },
      {
       "kind": "Content",
       "text": "\"backdrop\" | \"lost-focus\" | \"escape\""
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "DismissListenerTypes:type"
     },
     "containerKey": "DismissListenerTypes|TypeAlias",
     "displayName": "DismissListenerTypes",
     "excerpt": {
      "isEmpty": false,
      "text": "export type DismissListenerTypes = \"backdrop\" | \"lost-focus\" | \"escape\";",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type DismissListenerTypes = "
       },
       {
        "kind": "Content",
        "text": "\"backdrop\" | \"lost-focus\" | \"escape\""
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/use-dismiss.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "DismissListenerTypes",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "\"backdrop\" | \"lost-focus\" | \"escape\"",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "\"backdrop\" | \"lost-focus\" | \"escape\""
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "DropFile:interface"
     },
     "containerKey": "DropFile|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface DropFile extends DropFileMetadata ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface DropFile extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "DropFileMetadata:interface"
        },
        "kind": "Reference",
        "text": "DropFileMetadata"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface DropFile extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DropFileMetadata:interface"
       },
       "kind": "Reference",
       "text": "DropFileMetadata"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "DropFileMetadata",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DropFileMetadata:interface"
          },
          "kind": "Reference",
          "text": "DropFileMetadata"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "DropFile",
     "fileUrlPath": "src/dom-helpers/use-droppable.tsx",
     "isExported": true,
     "name": "DropFile",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DropFile#data:member"
       },
       "displayName": "data",
       "excerpt": {
        "isEmpty": false,
        "text": "data: ArrayBuffer;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "data: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "ArrayBuffer:interface"
          },
          "kind": "Reference",
          "text": "ArrayBuffer"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "data: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "ArrayBuffer:interface"
         },
         "kind": "Reference",
         "text": "ArrayBuffer"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "data|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "data",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ArrayBuffer",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "ArrayBuffer:interface"
          },
          "kind": "Reference",
          "text": "ArrayBuffer"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DropFile#lastModified:member"
       },
       "displayName": "lastModified",
       "excerpt": {
        "isEmpty": false,
        "text": "lastModified: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "lastModified: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "lastModified: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "lastModified|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "lastModified",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DropFile#name:member"
       },
       "displayName": "name",
       "excerpt": {
        "isEmpty": false,
        "text": "name: string;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "name: "
         },
         {
          "kind": "Content",
          "text": "string"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "name: "
        },
        {
         "kind": "Content",
         "text": "string"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "name|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "name",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "string",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DropFile#size:member"
       },
       "displayName": "size",
       "excerpt": {
        "isEmpty": false,
        "text": "size: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "size: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "size: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "size|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "size",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "DropFileMetadata:interface"
     },
     "containerKey": "DropFileMetadata|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface DropFileMetadata ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface DropFileMetadata "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface DropFileMetadata "
      }
     ],
     "extendsTypes": [],
     "displayName": "DropFileMetadata",
     "fileUrlPath": "src/dom-helpers/use-droppable.tsx",
     "isExported": true,
     "name": "DropFileMetadata",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DropFileMetadata#type:member"
       },
       "displayName": "type",
       "excerpt": {
        "isEmpty": false,
        "text": "type: string | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "type: "
         },
         {
          "kind": "Content",
          "text": "string | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "type: "
        },
        {
         "kind": "Content",
         "text": "string | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "type|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "type",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "string | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "DroppableFileError:class"
     },
     "excerpt": {
      "isEmpty": false,
      "text": "export declare class DroppableFileError extends Error ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare class DroppableFileError extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Error:interface"
        },
        "kind": "Reference",
        "text": "Error"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "displayName": "DroppableFileError",
     "containerKey": "DroppableFileError|Class",
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare class DroppableFileError extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Error:interface"
       },
       "kind": "Reference",
       "text": "Error"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "fileUrlPath": "src/dom-helpers/use-droppable.tsx",
     "extendsType": {
      "excerpt": {
       "isEmpty": false,
       "text": "Error",
       "spannedTokens": [
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Error:interface"
         },
         "kind": "Reference",
         "text": "Error"
        }
       ],
       "tokenRange": {
        "endIndex": 2,
        "startIndex": 1
       }
      }
     },
     "isAbstract": false,
     "isExported": true,
     "implementsTypes": [],
     "kind": "Class",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DroppableFileError:constructor(1)"
       },
       "displayName": "(constructor)",
       "excerpt": {
        "isEmpty": false,
        "text": "constructor(fileName: string, base: DOMException | null);",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "constructor(fileName: "
         },
         {
          "kind": "Content",
          "text": "string"
         },
         {
          "kind": "Content",
          "text": ", base: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DOMException:interface"
          },
          "kind": "Reference",
          "text": "DOMException"
         },
         {
          "kind": "Content",
          "text": " | null"
         },
         {
          "kind": "Content",
          "text": ");"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "constructor(fileName: "
        },
        {
         "kind": "Content",
         "text": "string"
        },
        {
         "kind": "Content",
         "text": ", base: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "DOMException:interface"
         },
         "kind": "Reference",
         "text": "DOMException"
        },
        {
         "kind": "Content",
         "text": " | null"
        },
        {
         "kind": "Content",
         "text": ");"
        }
       ],
       "containerKey": "|Constructor|1",
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "fileName",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "string",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "string"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        },
        {
         "isOptional": false,
         "name": "base",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "DOMException | null",
          "spannedTokens": [
           {
            "canonicalReference": {
             "isEmpty": false,
             "navigation": "~",
             "source": "!",
             "symbol": "DOMException:interface"
            },
            "kind": "Reference",
            "text": "DOMException"
           },
           {
            "kind": "Content",
            "text": " | null"
           }
          ],
          "tokenRange": {
           "endIndex": 5,
           "startIndex": 3
          }
         }
        }
       ],
       "kind": "Constructor",
       "members": [],
       "releaseTag": 4,
       "isProtected": false,
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Constructs a new instance of the ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 12
             }
            },
            {
             "kind": "CodeSpan",
             "code": "DroppableFileError"
            },
            {
             "kind": "PlainText",
             "text": " class",
             "textExcerpt": {
              "startIndex": 15,
              "endIndex": 17
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DroppableFileError#errorType:member"
       },
       "displayName": "errorType",
       "excerpt": {
        "isEmpty": false,
        "text": "errorType: DroppableFileErrorType;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "errorType: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "DroppableFileErrorType:type"
          },
          "kind": "Reference",
          "text": "DroppableFileErrorType"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "errorType: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "DroppableFileErrorType:type"
         },
         "kind": "Reference",
         "text": "DroppableFileErrorType"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "errorType|Property|instance",
       "isAbstract": false,
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "isStatic": false,
       "name": "errorType",
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "DroppableFileErrorType",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "DroppableFileErrorType:type"
          },
          "kind": "Reference",
          "text": "DroppableFileErrorType"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "kind": "Property",
       "members": [],
       "releaseTag": 4,
       "isProtected": false,
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DroppableFileError#fileName:member"
       },
       "displayName": "fileName",
       "excerpt": {
        "isEmpty": false,
        "text": "fileName: string;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "fileName: "
         },
         {
          "kind": "Content",
          "text": "string"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "fileName: "
        },
        {
         "kind": "Content",
         "text": "string"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "fileName|Property|instance",
       "isAbstract": false,
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "isStatic": false,
       "name": "fileName",
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "string",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "kind": "Property",
       "members": [],
       "releaseTag": 4,
       "isProtected": false,
       "sourceLocation": {}
      }
     ],
     "name": "DroppableFileError",
     "preserveMemberOrder": false,
     "releaseTag": 4,
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type ElementProps<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.HTMLAttributes:interface"
       },
       "kind": "Reference",
       "text": "JSX.HTMLAttributes"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ElementProps:type"
     },
     "containerKey": "ElementProps|TypeAlias",
     "displayName": "ElementProps",
     "excerpt": {
      "isEmpty": false,
      "text": "export type ElementProps<E extends EventTarget> = JSX.HTMLAttributes<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type ElementProps<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.HTMLAttributes:interface"
        },
        "kind": "Reference",
        "text": "JSX.HTMLAttributes"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "ElementProps",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.HTMLAttributes<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.HTMLAttributes:interface"
        },
        "kind": "Reference",
        "text": "JSX.HTMLAttributes"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ElementSize:interface"
     },
     "containerKey": "ElementSize|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface ElementSize ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface ElementSize "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface ElementSize "
      }
     ],
     "extendsTypes": [],
     "displayName": "ElementSize",
     "fileUrlPath": "src/observers/use-element-size.tsx",
     "isExported": true,
     "name": "ElementSize",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#clientHeight:member"
       },
       "displayName": "clientHeight",
       "excerpt": {
        "isEmpty": false,
        "text": "clientHeight: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "clientHeight: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "clientHeight: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "clientHeight|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "clientHeight",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#clientLeft:member"
       },
       "displayName": "clientLeft",
       "excerpt": {
        "isEmpty": false,
        "text": "clientLeft: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "clientLeft: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "clientLeft: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "clientLeft|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "clientLeft",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#clientTop:member"
       },
       "displayName": "clientTop",
       "excerpt": {
        "isEmpty": false,
        "text": "clientTop: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "clientTop: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "clientTop: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "clientTop|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "clientTop",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#clientWidth:member"
       },
       "displayName": "clientWidth",
       "excerpt": {
        "isEmpty": false,
        "text": "clientWidth: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "clientWidth: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "clientWidth: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "clientWidth|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "clientWidth",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#offsetHeight:member"
       },
       "displayName": "offsetHeight",
       "excerpt": {
        "isEmpty": false,
        "text": "offsetHeight: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "offsetHeight: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "offsetHeight: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "offsetHeight|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "offsetHeight",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#offsetLeft:member"
       },
       "displayName": "offsetLeft",
       "excerpt": {
        "isEmpty": false,
        "text": "offsetLeft: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "offsetLeft: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "offsetLeft: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "offsetLeft|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "offsetLeft",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#offsetTop:member"
       },
       "displayName": "offsetTop",
       "excerpt": {
        "isEmpty": false,
        "text": "offsetTop: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "offsetTop: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "offsetTop: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "offsetTop|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "offsetTop",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#offsetWidth:member"
       },
       "displayName": "offsetWidth",
       "excerpt": {
        "isEmpty": false,
        "text": "offsetWidth: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "offsetWidth: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "offsetWidth: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "offsetWidth|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "offsetWidth",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#scrollHeight:member"
       },
       "displayName": "scrollHeight",
       "excerpt": {
        "isEmpty": false,
        "text": "scrollHeight: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "scrollHeight: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "scrollHeight: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "scrollHeight|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "scrollHeight",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#scrollLeft:member"
       },
       "displayName": "scrollLeft",
       "excerpt": {
        "isEmpty": false,
        "text": "scrollLeft: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "scrollLeft: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "scrollLeft: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "scrollLeft|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "scrollLeft",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#scrollTop:member"
       },
       "displayName": "scrollTop",
       "excerpt": {
        "isEmpty": false,
        "text": "scrollTop: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "scrollTop: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "scrollTop: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "scrollTop|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "scrollTop",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementSize#scrollWidth:member"
       },
       "displayName": "scrollWidth",
       "excerpt": {
        "isEmpty": false,
        "text": "scrollWidth: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "scrollWidth: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "scrollWidth: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "scrollWidth|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "scrollWidth",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "enableLoggingPropConflicts:function(1)"
     },
     "kind": "Function",
     "containerKey": "enableLoggingPropConflicts|Function|1",
     "displayName": "enableLoggingPropConflicts",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function enableLoggingPropConflicts(log2: typeof console[\"log\"]): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function enableLoggingPropConflicts(log2: "
       },
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "console:var"
        },
        "kind": "Reference",
        "text": "console"
       },
       {
        "kind": "Content",
        "text": "[\"log\"]"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "enableLoggingPropConflicts",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "log2",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "typeof console[\"log\"]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "console:var"
          },
          "kind": "Reference",
          "text": "console"
         },
         {
          "kind": "Content",
          "text": "[\"log\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function enableLoggingPropConflicts(log2: "
      },
      {
       "kind": "Content",
       "text": "typeof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "console:var"
       },
       "kind": "Reference",
       "text": "console"
      },
      {
       "kind": "Content",
       "text": "[\"log\"]"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type EnhancedEventHandler<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": ", Detail> = "
      },
      {
       "kind": "Content",
       "text": "(e: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TargetedEnhancedEvent:type"
       },
       "kind": "Reference",
       "text": "TargetedEnhancedEvent"
      },
      {
       "kind": "Content",
       "text": "<E, Detail>) => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "EnhancedEventHandler:type"
     },
     "containerKey": "EnhancedEventHandler|TypeAlias",
     "displayName": "EnhancedEventHandler",
     "excerpt": {
      "isEmpty": false,
      "text": "export type EnhancedEventHandler<E extends Event, Detail> = (e: TargetedEnhancedEvent<E, Detail>) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type EnhancedEventHandler<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", Detail> = "
       },
       {
        "kind": "Content",
        "text": "(e: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TargetedEnhancedEvent:type"
        },
        "kind": "Reference",
        "text": "TargetedEnhancedEvent"
       },
       {
        "kind": "Content",
        "text": "<E, Detail>) => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/event.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "EnhancedEventHandler",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(e: TargetedEnhancedEvent<E, Detail>) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(e: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TargetedEnhancedEvent:type"
        },
        "kind": "Reference",
        "text": "TargetedEnhancedEvent"
       },
       {
        "kind": "Content",
        "text": "<E, Detail>) => void"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Event",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Detail"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "enhanceEvent:function(1)"
     },
     "kind": "Function",
     "containerKey": "enhanceEvent|Function|1",
     "displayName": "enhanceEvent",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function enhanceEvent<E extends Event, Detail extends object>(e: E, detail: Detail): TargetedEnhancedEvent<E, Detail>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function enhanceEvent<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", Detail extends "
       },
       {
        "kind": "Content",
        "text": "object"
       },
       {
        "kind": "Content",
        "text": ">(e: "
       },
       {
        "kind": "Content",
        "text": "E"
       },
       {
        "kind": "Content",
        "text": ", detail: "
       },
       {
        "kind": "Content",
        "text": "Detail"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TargetedEnhancedEvent:type"
        },
        "kind": "Reference",
        "text": "TargetedEnhancedEvent"
       },
       {
        "kind": "Content",
        "text": "<E, Detail>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "enhanceEvent",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "e",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "E",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "E"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       }
      },
      {
       "isOptional": false,
       "name": "detail",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Detail",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "Detail"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "TargetedEnhancedEvent<E, Detail>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TargetedEnhancedEvent:type"
        },
        "kind": "Reference",
        "text": "TargetedEnhancedEvent"
       },
       {
        "kind": "Content",
        "text": "<E, Detail>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Event",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "object",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "object"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Detail"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function enhanceEvent<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": ", Detail extends "
      },
      {
       "kind": "Content",
       "text": "object"
      },
      {
       "kind": "Content",
       "text": ">(e: "
      },
      {
       "kind": "Content",
       "text": "E"
      },
      {
       "kind": "Content",
       "text": ", detail: "
      },
      {
       "kind": "Content",
       "text": "Detail"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TargetedEnhancedEvent:type"
       },
       "kind": "Reference",
       "text": "TargetedEnhancedEvent"
      },
      {
       "kind": "Content",
       "text": "<E, Detail>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type EventDetail = "
      },
      {
       "kind": "Content",
       "text": "typeof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "EventDetail:var"
       },
       "kind": "Reference",
       "text": "EventDetail"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "EventDetail:type"
     },
     "containerKey": "EventDetail|TypeAlias",
     "displayName": "EventDetail",
     "excerpt": {
      "isEmpty": false,
      "text": "export type EventDetail = typeof EventDetail;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type EventDetail = "
       },
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "EventDetail:var"
        },
        "kind": "Reference",
        "text": "EventDetail"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/event.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "EventDetail",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "typeof EventDetail",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "EventDetail:var"
        },
        "kind": "Reference",
        "text": "EventDetail"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "EventDetail:var"
     },
     "containerKey": "EventDetail|Variable",
     "displayName": "EventDetail",
     "excerpt": {
      "isEmpty": false,
      "text": "EventDetail: unique symbol",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "EventDetail: "
       },
       {
        "kind": "Content",
        "text": "unique symbol"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "EventDetail: "
      },
      {
       "kind": "Content",
       "text": "unique symbol"
      }
     ],
     "fileUrlPath": "src/util/event.tsx",
     "isExported": true,
     "isReadonly": true,
     "kind": "Variable",
     "members": [],
     "name": "EventDetail",
     "releaseTag": 4,
     "sourceLocation": {},
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Quick and easy way to add extra information to an event that was fired.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 28
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "For example, \"this was a click event, but it has information about what list item was pressed too.\"",
           "textExcerpt": {
            "startIndex": 30,
            "endIndex": 70
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Get that extra information from the [EventDetail] symbol.",
           "textExcerpt": {
            "startIndex": 72,
            "endIndex": 90
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "variableTypeExcerpt": {
      "isEmpty": false,
      "text": "unique symbol",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "unique symbol"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     }
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type EventType<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": ", E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.TargetedEvent:type"
       },
       "kind": "Reference",
       "text": "JSX.TargetedEvent"
      },
      {
       "kind": "Content",
       "text": "<T, E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "EventType:type"
     },
     "containerKey": "EventType|TypeAlias",
     "displayName": "EventType",
     "excerpt": {
      "isEmpty": false,
      "text": "export type EventType<T extends EventTarget, E extends Event> = JSX.TargetedEvent<T, E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type EventType<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ", E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedEvent"
       },
       {
        "kind": "Content",
        "text": "<T, E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "EventType",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.TargetedEvent<T, E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedEvent"
       },
       {
        "kind": "Content",
        "text": "<T, E>"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 5
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Event",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type ExtendMerge<A, B> = "
      },
      {
       "kind": "Content",
       "text": "{\n    [K in (keyof A) | (keyof B)]: K extends keyof A ? (K extends keyof B ? (A[K] & B[K]) : A[K]) : K extends keyof B ? B[K] : unknown;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ExtendMerge:type"
     },
     "containerKey": "ExtendMerge|TypeAlias",
     "displayName": "ExtendMerge",
     "excerpt": {
      "isEmpty": false,
      "text": "export type ExtendMerge<A, B> = {\n    [K in (keyof A) | (keyof B)]: K extends keyof A ? (K extends keyof B ? (A[K] & B[K]) : A[K]) : K extends keyof B ? B[K] : unknown;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type ExtendMerge<A, B> = "
       },
       {
        "kind": "Content",
        "text": "{\n    [K in (keyof A) | (keyof B)]: K extends keyof A ? (K extends keyof B ? (A[K] & B[K]) : A[K]) : K extends keyof B ? B[K] : unknown;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "ExtendMerge",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "{\n    [K in (keyof A) | (keyof B)]: K extends keyof A ? (K extends keyof B ? (A[K] & B[K]) : A[K]) : K extends keyof B ? B[K] : unknown;\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "{\n    [K in (keyof A) | (keyof B)]: K extends keyof A ? (K extends keyof B ? (A[K] & B[K]) : A[K]) : K extends keyof B ? B[K] : unknown;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "A"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "B"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "findBackupFocus:function(1)"
     },
     "kind": "Function",
     "containerKey": "findBackupFocus|Function|1",
     "displayName": "findBackupFocus",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function findBackupFocus(unmountingElement: Element | null | undefined): HTMLElement;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function findBackupFocus(unmountingElement: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null | undefined"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElement:interface"
        },
        "kind": "Reference",
        "text": "HTMLElement"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "findBackupFocus",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "unmountingElement",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Element | null | undefined",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "tsdocParamBlock": {
        "parameterName": "unmountingElement",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "HTMLElement",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElement:interface"
        },
        "kind": "Reference",
        "text": "HTMLElement"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 4
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "When an element unmounts, default HTML behavior is to just send focus to the body, which is wildly unhelpful. It means you lose your place in the keyboard tab order.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 63
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "If you still have access to the element that's unmounting, or perhaps its parent from beforehand, this will find the next suitable element to send focus to instead of the body.",
           "textExcerpt": {
            "startIndex": 65,
            "endIndex": 131
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "**Important**: This function is linear on the number of DOM nodes in your document, so it's not particularly fast. Only call it once when you need its value, not every time tab focus changed or something.",
           "textExcerpt": {
            "startIndex": 133,
            "endIndex": 215
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "unmountingElement",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function findBackupFocus(unmountingElement: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null | undefined"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElement:interface"
       },
       "kind": "Reference",
       "text": "HTMLElement"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "findFirstFocusable:function(1)"
     },
     "kind": "Function",
     "containerKey": "findFirstFocusable|Function|1",
     "displayName": "findFirstFocusable",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function findFirstFocusable<T extends Node>(element: T): T | null;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function findFirstFocusable<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Node:interface"
        },
        "kind": "Reference",
        "text": "Node"
       },
       {
        "kind": "Content",
        "text": ">(element: "
       },
       {
        "kind": "Content",
        "text": "T"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "T | null"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "findFirstFocusable",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "element",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "tsdocParamBlock": {
        "parameterName": "element",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "T | null",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "T | null"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Node",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Node:interface"
          },
          "kind": "Reference",
          "text": "Node"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Returns the first focusable element contained within the given node, or null if none are found.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 33
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "element",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function findFirstFocusable<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Node:interface"
       },
       "kind": "Reference",
       "text": "Node"
      },
      {
       "kind": "Content",
       "text": ">(element: "
      },
      {
       "kind": "Content",
       "text": "T"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "T | null"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "findFirstTabbable:function(1)"
     },
     "kind": "Function",
     "containerKey": "findFirstTabbable|Function|1",
     "displayName": "findFirstTabbable",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function findFirstTabbable<T extends Node>(element: T): T | null;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function findFirstTabbable<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Node:interface"
        },
        "kind": "Reference",
        "text": "Node"
       },
       {
        "kind": "Content",
        "text": ">(element: "
       },
       {
        "kind": "Content",
        "text": "T"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "T | null"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "findFirstTabbable",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "element",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "tsdocParamBlock": {
        "parameterName": "element",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "T | null",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "T | null"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Node",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Node:interface"
          },
          "kind": "Reference",
          "text": "Node"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Returns the first tabbable element contained within the given node, or null if none are found.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 33
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "element",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function findFirstTabbable<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Node:interface"
       },
       "kind": "Reference",
       "text": "Node"
      },
      {
       "kind": "Content",
       "text": ">(element: "
      },
      {
       "kind": "Content",
       "text": "T"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "T | null"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "focus_2:function(1)"
     },
     "kind": "Function",
     "containerKey": "focus_2|Function|1",
     "displayName": "focus_2",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function focus(e: Element | null): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function focus(e: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "focus_2",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "e",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 4
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "If you want a single place to put a debugger for tracking focus, here:",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 29
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function focus(e: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type FocusEventType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.TargetedFocusEvent:type"
       },
       "kind": "Reference",
       "text": "JSX.TargetedFocusEvent"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "FocusEventType:type"
     },
     "containerKey": "FocusEventType|TypeAlias",
     "displayName": "FocusEventType",
     "excerpt": {
      "isEmpty": false,
      "text": "export type FocusEventType<E extends EventTarget> = JSX.TargetedFocusEvent<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type FocusEventType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedFocusEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedFocusEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "FocusEventType",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.TargetedFocusEvent<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedFocusEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedFocusEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "generateRandomId:function(1)"
     },
     "kind": "Function",
     "containerKey": "generateRandomId|Function|1",
     "displayName": "generateRandomId",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function generateRandomId(prefix?: string): string;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function generateRandomId(prefix?: "
       },
       {
        "kind": "Content",
        "text": "string"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "string"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "generateRandomId",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": true,
       "name": "prefix",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "string",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "string",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "string"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Returns a randomly-generated ID with an optional prefix. Note that if the prefix is *explicitly* set to \"\", then IDs that are not valid under HTML4 may be generated. Oh no.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 70
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "(This is here, in this particular file, to avoid circular dependencies because useBeforeLayoutEffect also needs random IDs for its own reasons)",
           "textExcerpt": {
            "startIndex": 72,
            "endIndex": 117
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function generateRandomId(prefix?: "
      },
      {
       "kind": "Content",
       "text": "string"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "string"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type GetAttribute<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "kind": "Content",
       "text": "<K extends keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<T>>(prop: K) => "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<T>[K]"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GetAttribute:type"
     },
     "containerKey": "GetAttribute|TypeAlias",
     "displayName": "GetAttribute",
     "excerpt": {
      "isEmpty": false,
      "text": "export type GetAttribute<T extends Element> = <K extends keyof ElementProps<T>>(prop: K) => ElementProps<T>[K];",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type GetAttribute<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "kind": "Content",
        "text": "<K extends keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<T>>(prop: K) => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<T>[K]"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "GetAttribute",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "<K extends keyof ElementProps<T>>(prop: K) => ElementProps<T>[K]",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "<K extends keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<T>>(prop: K) => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<T>[K]"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "getBuildMode:function(1)"
     },
     "kind": "Function",
     "containerKey": "getBuildMode|Function|1",
     "displayName": "getBuildMode",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function getBuildMode(): \"production\" | \"development\";",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function getBuildMode(): "
       },
       {
        "kind": "Content",
        "text": "\"production\" | \"development\""
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "getBuildMode",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "\"production\" | \"development\"",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "\"production\" | \"development\""
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function getBuildMode(): "
      },
      {
       "kind": "Content",
       "text": "\"production\" | \"development\""
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type GetClass = "
      },
      {
       "kind": "Content",
       "text": "(cls: string) => boolean"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GetClass:type"
     },
     "containerKey": "GetClass|TypeAlias",
     "displayName": "GetClass",
     "excerpt": {
      "isEmpty": false,
      "text": "export type GetClass = (cls: string) => boolean;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type GetClass = "
       },
       {
        "kind": "Content",
        "text": "(cls: string) => boolean"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "GetClass",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(cls: string) => boolean",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(cls: string) => boolean"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "getDocument:function(1)"
     },
     "kind": "Function",
     "containerKey": "getDocument|Function|1",
     "displayName": "getDocument",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function getDocument(element?: Node): Document;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function getDocument(element?: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Node:interface"
        },
        "kind": "Reference",
        "text": "Node"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Document:interface"
        },
        "kind": "Reference",
        "text": "Document"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "getDocument",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": true,
       "name": "element",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Node",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Node:interface"
          },
          "kind": "Reference",
          "text": "Node"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "Document",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Document:interface"
        },
        "kind": "Reference",
        "text": "Document"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function getDocument(element?: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Node:interface"
       },
       "kind": "Reference",
       "text": "Node"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Document:interface"
       },
       "kind": "Reference",
       "text": "Document"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "getFromLocalStorage:function(1)"
     },
     "kind": "Function",
     "containerKey": "getFromLocalStorage|Function|1",
     "displayName": "getFromLocalStorage",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function getFromLocalStorage<Key extends (keyof PersistentStates) & string>(key: Key, converter?: ((input: string) => PersistentStates[Key]), storage?: Storage): PersistentStates[Key] | null;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function getFromLocalStorage<Key extends "
       },
       {
        "kind": "Content",
        "text": "(keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": ") & string"
       },
       {
        "kind": "Content",
        "text": ">(key: "
       },
       {
        "kind": "Content",
        "text": "Key"
       },
       {
        "kind": "Content",
        "text": ", converter?: "
       },
       {
        "kind": "Content",
        "text": "((input: string) => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": "[Key])"
       },
       {
        "kind": "Content",
        "text": ", storage?: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Storage:interface"
        },
        "kind": "Reference",
        "text": "Storage"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": "[Key] | null"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "getFromLocalStorage",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "key",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Key",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "Key"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       }
      },
      {
       "isOptional": true,
       "name": "converter",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "((input: string) => PersistentStates[Key])",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "((input: string) => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PersistentStates:interface"
          },
          "kind": "Reference",
          "text": "PersistentStates"
         },
         {
          "kind": "Content",
          "text": "[Key])"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 7
        }
       }
      },
      {
       "isOptional": true,
       "name": "storage",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Storage",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Storage:interface"
          },
          "kind": "Reference",
          "text": "Storage"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 11
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "PersistentStates[Key] | null",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": "[Key] | null"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 13
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "(keyof PersistentStates) & string",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PersistentStates:interface"
          },
          "kind": "Reference",
          "text": "PersistentStates"
         },
         {
          "kind": "Content",
          "text": ") & string"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Key"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function getFromLocalStorage<Key extends "
      },
      {
       "kind": "Content",
       "text": "(keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PersistentStates:interface"
       },
       "kind": "Reference",
       "text": "PersistentStates"
      },
      {
       "kind": "Content",
       "text": ") & string"
      },
      {
       "kind": "Content",
       "text": ">(key: "
      },
      {
       "kind": "Content",
       "text": "Key"
      },
      {
       "kind": "Content",
       "text": ", converter?: "
      },
      {
       "kind": "Content",
       "text": "((input: string) => "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PersistentStates:interface"
       },
       "kind": "Reference",
       "text": "PersistentStates"
      },
      {
       "kind": "Content",
       "text": "[Key])"
      },
      {
       "kind": "Content",
       "text": ", storage?: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Storage:interface"
       },
       "kind": "Reference",
       "text": "Storage"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PersistentStates:interface"
       },
       "kind": "Reference",
       "text": "PersistentStates"
      },
      {
       "kind": "Content",
       "text": "[Key] | null"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type GetHighestChildIndex = "
      },
      {
       "kind": "Content",
       "text": "() => number"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GetHighestChildIndex:type"
     },
     "containerKey": "GetHighestChildIndex|TypeAlias",
     "displayName": "GetHighestChildIndex",
     "excerpt": {
      "isEmpty": false,
      "text": "export type GetHighestChildIndex = () => number;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type GetHighestChildIndex = "
       },
       {
        "kind": "Content",
        "text": "() => number"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "GetHighestChildIndex",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "() => number",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "() => number"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type GetIndex = "
      },
      {
       "kind": "Content",
       "text": "(row: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "VNode:type"
       },
       "kind": "Reference",
       "text": "VNode"
      },
      {
       "kind": "Content",
       "text": ") => (number | null | undefined)"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GetIndex:type"
     },
     "containerKey": "GetIndex|TypeAlias",
     "displayName": "GetIndex",
     "excerpt": {
      "isEmpty": false,
      "text": "export type GetIndex = (row: VNode) => (number | null | undefined);",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type GetIndex = "
       },
       {
        "kind": "Content",
        "text": "(row: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "VNode:type"
        },
        "kind": "Reference",
        "text": "VNode"
       },
       {
        "kind": "Content",
        "text": ") => (number | null | undefined)"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "GetIndex",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(row: VNode) => (number | null | undefined)",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(row: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "VNode:type"
        },
        "kind": "Reference",
        "text": "VNode"
       },
       {
        "kind": "Content",
        "text": ") => (number | null | undefined)"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type GetValid = "
      },
      {
       "kind": "Content",
       "text": "(index: number) => boolean"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GetValid:type"
     },
     "containerKey": "GetValid|TypeAlias",
     "displayName": "GetValid",
     "excerpt": {
      "isEmpty": false,
      "text": "export type GetValid = (index: number) => boolean;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type GetValid = "
       },
       {
        "kind": "Content",
        "text": "(index: number) => boolean"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "GetValid",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(index: number) => boolean",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(index: number) => boolean"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GridChildCellInfo:interface"
     },
     "containerKey": "GridChildCellInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface GridChildCellInfo<CellElement extends Element> extends UseListNavigationChildInfo<CellElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface GridChildCellInfo<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface GridChildCellInfo<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "GridChildCellInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "GridChildCellInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GridChildRowInfo:interface"
     },
     "containerKey": "GridChildRowInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface GridChildRowInfo<RowElement extends Element, _CellElement extends Element> extends UseListNavigationChildInfo<RowElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface GridChildRowInfo<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", _CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface GridChildRowInfo<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", _CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildInfo<RowElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       }
      }
     ],
     "displayName": "GridChildRowInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "GridChildRowInfo",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildRowInfo#setTabbableColumnIndex:member"
       },
       "displayName": "setTabbableColumnIndex",
       "excerpt": {
        "isEmpty": false,
        "text": "setTabbableColumnIndex: SetTabbableIndex;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setTabbableColumnIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setTabbableColumnIndex: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetTabbableIndex:type"
         },
         "kind": "Reference",
         "text": "SetTabbableIndex"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setTabbableColumnIndex|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "setTabbableColumnIndex",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "SetTabbableIndex",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_CellElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GridSingleSelectChildCellInfo:interface"
     },
     "containerKey": "GridSingleSelectChildCellInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface GridSingleSelectChildCellInfo<CellElement extends Element> extends gcci<CellElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface GridSingleSelectChildCellInfo<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "gcci"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface GridSingleSelectChildCellInfo<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "gcci"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "gcci<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "gcci"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "GridSingleSelectChildCellInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "GridSingleSelectChildCellInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GridSingleSelectChildRowInfo:interface"
     },
     "containerKey": "GridSingleSelectChildRowInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface GridSingleSelectChildRowInfo<RowElement extends Element, CellElement extends Element> extends gcri<RowElement, CellElement>, UseSingleSelectionChildInfo<RowElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface GridSingleSelectChildRowInfo<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "gcri"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface GridSingleSelectChildRowInfo<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "gcri"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "gcri<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "gcri"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionChildInfo<RowElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "GridSingleSelectChildRowInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "GridSingleSelectChildRowInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GridSingleSelectSortableChildCellInfo:interface"
     },
     "containerKey": "GridSingleSelectSortableChildCellInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface GridSingleSelectSortableChildCellInfo<CellElement extends Element> extends GridSingleSelectChildCellInfo<CellElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface GridSingleSelectSortableChildCellInfo<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface GridSingleSelectSortableChildCellInfo<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "GridSingleSelectSortableChildCellInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "GridSingleSelectSortableChildCellInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "GridSingleSelectSortableChildRowInfo:interface"
     },
     "containerKey": "GridSingleSelectSortableChildRowInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface GridSingleSelectSortableChildRowInfo<RowElement extends Element, CellElement extends Element> extends GridSingleSelectChildRowInfo<RowElement, CellElement>, UseSortableChildInfo ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface GridSingleSelectSortableChildRowInfo<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface GridSingleSelectSortableChildRowInfo<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSortableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "GridSingleSelectSortableChildRowInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "GridSingleSelectSortableChildRowInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "hideCallCount:function(1)"
     },
     "kind": "Function",
     "containerKey": "hideCallCount|Function|1",
     "displayName": "hideCallCount",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function hideCallCount(hook: Function | \"all\"): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function hideCallCount(hook: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Function:interface"
        },
        "kind": "Reference",
        "text": "Function"
       },
       {
        "kind": "Content",
        "text": " | \"all\""
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "hideCallCount",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "hook",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Function | \"all\"",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Function:interface"
          },
          "kind": "Reference",
          "text": "Function"
         },
         {
          "kind": "Content",
          "text": " | \"all\""
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 4
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function hideCallCount(hook: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Function:interface"
       },
       "kind": "Reference",
       "text": "Function"
      },
      {
       "kind": "Content",
       "text": " | \"all\""
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ImperativeElement:var"
     },
     "containerKey": "ImperativeElement|Variable",
     "displayName": "ImperativeElement",
     "excerpt": {
      "isEmpty": false,
      "text": "ImperativeElement: typeof ImperativeElementU",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "ImperativeElement: "
       },
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "ImperativeElementU:function"
        },
        "kind": "Reference",
        "text": "ImperativeElementU"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "ImperativeElement: "
      },
      {
       "kind": "Content",
       "text": "typeof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeElementU:function"
       },
       "kind": "Reference",
       "text": "ImperativeElementU"
      }
     ],
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "isExported": true,
     "isReadonly": true,
     "kind": "Variable",
     "members": [],
     "name": "ImperativeElement",
     "releaseTag": 4,
     "sourceLocation": {},
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Easy access to an HTMLElement that can be controlled imperatively.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 20
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "The HTMLElement rendered is controlled by the ",
           "textExcerpt": {
            "startIndex": 22,
            "endIndex": 36
           }
          },
          {
           "kind": "CodeSpan",
           "code": "tag"
          },
          {
           "kind": "PlainText",
           "text": " prop (e.g. \"span\", \"div\").",
           "textExcerpt": {
            "startIndex": 39,
            "endIndex": 58
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "The ",
           "textExcerpt": {
            "startIndex": 60,
            "endIndex": 62
           }
          },
          {
           "kind": "CodeSpan",
           "code": "handle"
          },
          {
           "kind": "PlainText",
           "text": " prop should be e.g. ",
           "textExcerpt": {
            "startIndex": 65,
            "endIndex": 77
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useRef<ImperativeHandle<HTMLDivElement>>(null)"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "variableTypeExcerpt": {
      "isEmpty": false,
      "text": "typeof ImperativeElementU",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "ImperativeElementU:function"
        },
        "kind": "Reference",
        "text": "ImperativeElementU"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 1
      }
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ImperativeElementProps:interface"
     },
     "containerKey": "ImperativeElementProps|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface ImperativeElementProps<T extends keyof HTMLElementTagNameMap> extends ElementProps<HTMLElementTagNameMap[T]> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface ImperativeElementProps<T extends "
       },
       {
        "kind": "Content",
        "text": "keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElementTagNameMap:interface"
        },
        "kind": "Reference",
        "text": "HTMLElementTagNameMap"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElementTagNameMap:interface"
        },
        "kind": "Reference",
        "text": "HTMLElementTagNameMap"
       },
       {
        "kind": "Content",
        "text": "[T]>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface ImperativeElementProps<T extends "
      },
      {
       "kind": "Content",
       "text": "keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElementTagNameMap:interface"
       },
       "kind": "Reference",
       "text": "HTMLElementTagNameMap"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElementTagNameMap:interface"
       },
       "kind": "Reference",
       "text": "HTMLElementTagNameMap"
      },
      {
       "kind": "Content",
       "text": "[T]>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ElementProps<HTMLElementTagNameMap[T]>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLElementTagNameMap:interface"
          },
          "kind": "Reference",
          "text": "HTMLElementTagNameMap"
         },
         {
          "kind": "Content",
          "text": "[T]>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 4
        }
       }
      }
     ],
     "displayName": "ImperativeElementProps",
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "isExported": true,
     "name": "ImperativeElementProps",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeElementProps#handle:member"
       },
       "displayName": "handle",
       "excerpt": {
        "isEmpty": false,
        "text": "handle: Ref<ImperativeHandle<HTMLElementTagNameMap[T]>>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "handle: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact!",
           "symbol": "Ref:type"
          },
          "kind": "Reference",
          "text": "Ref"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ImperativeHandle:interface"
          },
          "kind": "Reference",
          "text": "ImperativeHandle"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLElementTagNameMap:interface"
          },
          "kind": "Reference",
          "text": "HTMLElementTagNameMap"
         },
         {
          "kind": "Content",
          "text": "[T]>>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "handle: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact!",
          "symbol": "Ref:type"
         },
         "kind": "Reference",
         "text": "Ref"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ImperativeHandle:interface"
         },
         "kind": "Reference",
         "text": "ImperativeHandle"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "HTMLElementTagNameMap:interface"
         },
         "kind": "Reference",
         "text": "HTMLElementTagNameMap"
        },
        {
         "kind": "Content",
         "text": "[T]>>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "handle|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "handle",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Ref<ImperativeHandle<HTMLElementTagNameMap[T]>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact!",
           "symbol": "Ref:type"
          },
          "kind": "Reference",
          "text": "Ref"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ImperativeHandle:interface"
          },
          "kind": "Reference",
          "text": "ImperativeHandle"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLElementTagNameMap:interface"
          },
          "kind": "Reference",
          "text": "HTMLElementTagNameMap"
         },
         {
          "kind": "Content",
          "text": "[T]>>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeElementProps#tag:member"
       },
       "displayName": "tag",
       "excerpt": {
        "isEmpty": false,
        "text": "tag: T;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "tag: "
         },
         {
          "kind": "Content",
          "text": "T"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "tag: "
        },
        {
         "kind": "Content",
         "text": "T"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "tag|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "tag",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "keyof HTMLElementTagNameMap",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLElementTagNameMap:interface"
          },
          "kind": "Reference",
          "text": "HTMLElementTagNameMap"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ImperativeHandle:interface"
     },
     "containerKey": "ImperativeHandle|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface ImperativeHandle<T extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface ImperativeHandle<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface ImperativeHandle<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "ImperativeHandle",
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "isExported": true,
     "name": "ImperativeHandle",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#dangerouslyAppendHTML:member"
       },
       "displayName": "dangerouslyAppendHTML",
       "excerpt": {
        "isEmpty": false,
        "text": "dangerouslyAppendHTML: DangerouslyAppendHTML;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "dangerouslyAppendHTML: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "DangerouslyAppendHTML:type"
          },
          "kind": "Reference",
          "text": "DangerouslyAppendHTML"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "dangerouslyAppendHTML: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "DangerouslyAppendHTML:type"
         },
         "kind": "Reference",
         "text": "DangerouslyAppendHTML"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "dangerouslyAppendHTML|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "dangerouslyAppendHTML",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "DangerouslyAppendHTML",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "DangerouslyAppendHTML:type"
          },
          "kind": "Reference",
          "text": "DangerouslyAppendHTML"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#dangerouslySetInnerHTML:member"
       },
       "displayName": "dangerouslySetInnerHTML",
       "excerpt": {
        "isEmpty": false,
        "text": "dangerouslySetInnerHTML: DangerouslySetInnerHTML;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "dangerouslySetInnerHTML: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "DangerouslySetInnerHTML:type"
          },
          "kind": "Reference",
          "text": "DangerouslySetInnerHTML"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "dangerouslySetInnerHTML: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "DangerouslySetInnerHTML:type"
         },
         "kind": "Reference",
         "text": "DangerouslySetInnerHTML"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "dangerouslySetInnerHTML|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "dangerouslySetInnerHTML",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "DangerouslySetInnerHTML",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "DangerouslySetInnerHTML:type"
          },
          "kind": "Reference",
          "text": "DangerouslySetInnerHTML"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#getAttribute:member"
       },
       "displayName": "getAttribute",
       "excerpt": {
        "isEmpty": false,
        "text": "getAttribute: GetAttribute<T>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getAttribute: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GetAttribute:type"
          },
          "kind": "Reference",
          "text": "GetAttribute"
         },
         {
          "kind": "Content",
          "text": "<T>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getAttribute: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "GetAttribute:type"
         },
         "kind": "Reference",
         "text": "GetAttribute"
        },
        {
         "kind": "Content",
         "text": "<T>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getAttribute|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "getAttribute",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "GetAttribute<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GetAttribute:type"
          },
          "kind": "Reference",
          "text": "GetAttribute"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#hasClass:member"
       },
       "displayName": "hasClass",
       "excerpt": {
        "isEmpty": false,
        "text": "hasClass: GetClass;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasClass: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GetClass:type"
          },
          "kind": "Reference",
          "text": "GetClass"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasClass: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "GetClass:type"
         },
         "kind": "Reference",
         "text": "GetClass"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasClass|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasClass",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "GetClass",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GetClass:type"
          },
          "kind": "Reference",
          "text": "GetClass"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#setAttribute:member"
       },
       "displayName": "setAttribute",
       "excerpt": {
        "isEmpty": false,
        "text": "setAttribute: SetAttribute<T>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setAttribute: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetAttribute:type"
          },
          "kind": "Reference",
          "text": "SetAttribute"
         },
         {
          "kind": "Content",
          "text": "<T>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setAttribute: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetAttribute:type"
         },
         "kind": "Reference",
         "text": "SetAttribute"
        },
        {
         "kind": "Content",
         "text": "<T>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setAttribute|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "setAttribute",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "SetAttribute<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetAttribute:type"
          },
          "kind": "Reference",
          "text": "SetAttribute"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#setChildren:member"
       },
       "displayName": "setChildren",
       "excerpt": {
        "isEmpty": false,
        "text": "setChildren: SetChildren;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setChildren: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetChildren:type"
          },
          "kind": "Reference",
          "text": "SetChildren"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setChildren: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetChildren:type"
         },
         "kind": "Reference",
         "text": "SetChildren"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setChildren|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "setChildren",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "SetChildren",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetChildren:type"
          },
          "kind": "Reference",
          "text": "SetChildren"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#setClass:member"
       },
       "displayName": "setClass",
       "excerpt": {
        "isEmpty": false,
        "text": "setClass: SetClass;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setClass: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetClass:type"
          },
          "kind": "Reference",
          "text": "SetClass"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setClass: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetClass:type"
         },
         "kind": "Reference",
         "text": "SetClass"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setClass|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "setClass",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "SetClass",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetClass:type"
          },
          "kind": "Reference",
          "text": "SetClass"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#setEventHandler:member"
       },
       "displayName": "setEventHandler",
       "excerpt": {
        "isEmpty": false,
        "text": "setEventHandler: SetEventHandler;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setEventHandler: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetEventHandler:type"
          },
          "kind": "Reference",
          "text": "SetEventHandler"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setEventHandler: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetEventHandler:type"
         },
         "kind": "Reference",
         "text": "SetEventHandler"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setEventHandler|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "setEventHandler",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "SetEventHandler",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetEventHandler:type"
          },
          "kind": "Reference",
          "text": "SetEventHandler"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle#setStyle:member"
       },
       "displayName": "setStyle",
       "excerpt": {
        "isEmpty": false,
        "text": "setStyle: SetStyle;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setStyle: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetStyle:type"
          },
          "kind": "Reference",
          "text": "SetStyle"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setStyle: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetStyle:type"
         },
         "kind": "Reference",
         "text": "SetStyle"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setStyle|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "setStyle",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "SetStyle",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetStyle:type"
          },
          "kind": "Reference",
          "text": "SetStyle"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type KeyboardEventType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.TargetedKeyboardEvent:type"
       },
       "kind": "Reference",
       "text": "JSX.TargetedKeyboardEvent"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "KeyboardEventType:type"
     },
     "containerKey": "KeyboardEventType|TypeAlias",
     "displayName": "KeyboardEventType",
     "excerpt": {
      "isEmpty": false,
      "text": "export type KeyboardEventType<E extends EventTarget> = JSX.TargetedKeyboardEvent<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type KeyboardEventType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedKeyboardEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedKeyboardEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "KeyboardEventType",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.TargetedKeyboardEvent<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedKeyboardEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedKeyboardEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "LinearNavigationResult:interface"
     },
     "containerKey": "LinearNavigationResult|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface LinearNavigationResult ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface LinearNavigationResult "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface LinearNavigationResult "
      }
     ],
     "extendsTypes": [],
     "displayName": "LinearNavigationResult",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-linear-navigation.tsx",
     "isExported": true,
     "name": "LinearNavigationResult",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LinearNavigationResult#status:member"
       },
       "displayName": "status",
       "excerpt": {
        "isEmpty": false,
        "text": "status: \"normal\" | \"past-start\" | \"past-end\";",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "status: "
         },
         {
          "kind": "Content",
          "text": "\"normal\" | \"past-start\" | \"past-end\""
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "status: "
        },
        {
         "kind": "Content",
         "text": "\"normal\" | \"past-start\" | \"past-end\""
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "status|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "status",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "\"normal\" | \"past-start\" | \"past-end\"",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "\"normal\" | \"past-start\" | \"past-end\""
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LinearNavigationResult#valueUnmangled:member"
       },
       "displayName": "valueUnmangled",
       "excerpt": {
        "isEmpty": false,
        "text": "valueUnmangled: number | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "valueUnmangled: "
         },
         {
          "kind": "Content",
          "text": "number | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "valueUnmangled: "
        },
        {
         "kind": "Content",
         "text": "number | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "valueUnmangled|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "valueUnmangled",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "LogicalDirectionInfo:interface"
     },
     "containerKey": "LogicalDirectionInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface LogicalDirectionInfo ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface LogicalDirectionInfo "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface LogicalDirectionInfo "
      }
     ],
     "extendsTypes": [],
     "displayName": "LogicalDirectionInfo",
     "fileUrlPath": "src/observers/use-logical-direction.tsx",
     "isExported": true,
     "name": "LogicalDirectionInfo",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalDirectionInfo#blockDirection:member"
       },
       "displayName": "blockDirection",
       "excerpt": {
        "isEmpty": false,
        "text": "blockDirection: PhysicalDirection;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "blockDirection: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalDirection:type"
          },
          "kind": "Reference",
          "text": "PhysicalDirection"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "blockDirection: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalDirection:type"
         },
         "kind": "Reference",
         "text": "PhysicalDirection"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "blockDirection|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "blockDirection",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PhysicalDirection",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalDirection:type"
          },
          "kind": "Reference",
          "text": "PhysicalDirection"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Represents the direction text flows, line by line.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 17
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "* ",
             "textExcerpt": {
              "startIndex": 19,
              "endIndex": 21
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ttb"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 24,
              "endIndex": 27
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": ", regardless of direction * ",
             "textExcerpt": {
              "startIndex": 32,
              "endIndex": 42
             }
            },
            {
             "kind": "CodeSpan",
             "code": "rtl"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 45,
              "endIndex": 48
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-rl"
            },
            {
             "kind": "PlainText",
             "text": " & ",
             "textExcerpt": {
              "startIndex": 53,
              "endIndex": 56
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-rl"
            },
            {
             "kind": "PlainText",
             "text": ", regardless of direction * ",
             "textExcerpt": {
              "startIndex": 61,
              "endIndex": 71
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ltr"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 74,
              "endIndex": 77
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-lr"
            },
            {
             "kind": "PlainText",
             "text": " & ",
             "textExcerpt": {
              "startIndex": 82,
              "endIndex": 85
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-lr"
            },
            {
             "kind": "PlainText",
             "text": ", regardless of direction",
             "textExcerpt": {
              "startIndex": 90,
              "endIndex": 97
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalDirectionInfo#blockOrientation:member"
       },
       "displayName": "blockOrientation",
       "excerpt": {
        "isEmpty": false,
        "text": "blockOrientation: PhysicalOrientation;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "blockOrientation: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalOrientation:type"
          },
          "kind": "Reference",
          "text": "PhysicalOrientation"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "blockOrientation: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalOrientation:type"
         },
         "kind": "Reference",
         "text": "PhysicalOrientation"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "blockOrientation|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "blockOrientation",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PhysicalOrientation",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalOrientation:type"
          },
          "kind": "Reference",
          "text": "PhysicalOrientation"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Simplified version of ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 6
             }
            },
            {
             "kind": "CodeSpan",
             "code": "blockDirection"
            },
            {
             "kind": "PlainText",
             "text": ":",
             "textExcerpt": {
              "startIndex": 9,
              "endIndex": 10
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "* ",
             "textExcerpt": {
              "startIndex": 12,
              "endIndex": 14
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 17,
              "endIndex": 20
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": " * ",
             "textExcerpt": {
              "startIndex": 25,
              "endIndex": 28
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal"
            },
            {
             "kind": "PlainText",
             "text": " for all others",
             "textExcerpt": {
              "startIndex": 31,
              "endIndex": 37
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalDirectionInfo#blockSize:member"
       },
       "displayName": "blockSize",
       "excerpt": {
        "isEmpty": false,
        "text": "blockSize: PhysicalSize;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "blockSize: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalSize:type"
          },
          "kind": "Reference",
          "text": "PhysicalSize"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "blockSize: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalSize:type"
         },
         "kind": "Reference",
         "text": "PhysicalSize"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "blockSize|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "blockSize",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PhysicalSize",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalSize:type"
          },
          "kind": "Reference",
          "text": "PhysicalSize"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Represents how you can *physically* refer to the size of the element in the *block* size.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 36
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "* ",
             "textExcerpt": {
              "startIndex": 38,
              "endIndex": 40
             }
            },
            {
             "kind": "CodeSpan",
             "code": "height"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 43,
              "endIndex": 46
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": ", regardless of direction * ",
             "textExcerpt": {
              "startIndex": 51,
              "endIndex": 61
             }
            },
            {
             "kind": "CodeSpan",
             "code": "width"
            },
            {
             "kind": "PlainText",
             "text": " for all others",
             "textExcerpt": {
              "startIndex": 64,
              "endIndex": 70
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalDirectionInfo#inlineDirection:member"
       },
       "displayName": "inlineDirection",
       "excerpt": {
        "isEmpty": false,
        "text": "inlineDirection: PhysicalDirection;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "inlineDirection: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalDirection:type"
          },
          "kind": "Reference",
          "text": "PhysicalDirection"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "inlineDirection: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalDirection:type"
         },
         "kind": "Reference",
         "text": "PhysicalDirection"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "inlineDirection|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "inlineDirection",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PhysicalDirection",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalDirection:type"
          },
          "kind": "Reference",
          "text": "PhysicalDirection"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Represents the direction text flows, glyph by glyph. By far the most complex property.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 30
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 32,
              "endIndex": 33
             }
            },
            {
             "kind": "CodeSpan",
             "code": "writing-mode"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 38,
              "endIndex": 39
             }
            },
            {
             "kind": "CodeSpan",
             "code": "direction"
            },
            {
             "kind": "PlainText",
             "text": "|Result| |-----|-----|-----| |",
             "textExcerpt": {
              "startIndex": 42,
              "endIndex": 67
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 72,
              "endIndex": 73
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ltr"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 76,
              "endIndex": 77
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ltr"
            },
            {
             "kind": "PlainText",
             "text": "| |",
             "textExcerpt": {
              "startIndex": 80,
              "endIndex": 83
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 88,
              "endIndex": 89
             }
            },
            {
             "kind": "CodeSpan",
             "code": "rtl"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 92,
              "endIndex": 93
             }
            },
            {
             "kind": "CodeSpan",
             "code": "rtl"
            },
            {
             "kind": "PlainText",
             "text": "| |",
             "textExcerpt": {
              "startIndex": 96,
              "endIndex": 99
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-rl"
            },
            {
             "kind": "PlainText",
             "text": " & ",
             "textExcerpt": {
              "startIndex": 104,
              "endIndex": 107
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-rl"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 112,
              "endIndex": 113
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ltr"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 116,
              "endIndex": 117
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ttb"
            },
            {
             "kind": "PlainText",
             "text": "| |",
             "textExcerpt": {
              "startIndex": 120,
              "endIndex": 123
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-rl"
            },
            {
             "kind": "PlainText",
             "text": " & ",
             "textExcerpt": {
              "startIndex": 128,
              "endIndex": 131
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-rl"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 136,
              "endIndex": 137
             }
            },
            {
             "kind": "CodeSpan",
             "code": "rtl"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 140,
              "endIndex": 141
             }
            },
            {
             "kind": "CodeSpan",
             "code": "btt"
            },
            {
             "kind": "PlainText",
             "text": "| |",
             "textExcerpt": {
              "startIndex": 144,
              "endIndex": 147
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-lr"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 152,
              "endIndex": 153
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ltr"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 156,
              "endIndex": 157
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ttb"
            },
            {
             "kind": "PlainText",
             "text": "| |",
             "textExcerpt": {
              "startIndex": 160,
              "endIndex": 163
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-lr"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 168,
              "endIndex": 169
             }
            },
            {
             "kind": "CodeSpan",
             "code": "rtl"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 172,
              "endIndex": 173
             }
            },
            {
             "kind": "CodeSpan",
             "code": "btt"
            },
            {
             "kind": "PlainText",
             "text": "| |",
             "textExcerpt": {
              "startIndex": 176,
              "endIndex": 179
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-lr"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 184,
              "endIndex": 185
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ltr"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 188,
              "endIndex": 189
             }
            },
            {
             "kind": "CodeSpan",
             "code": "btt"
            },
            {
             "kind": "PlainText",
             "text": "| |",
             "textExcerpt": {
              "startIndex": 192,
              "endIndex": 195
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-lr"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 200,
              "endIndex": 201
             }
            },
            {
             "kind": "CodeSpan",
             "code": "rtl"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 204,
              "endIndex": 205
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ttb"
            },
            {
             "kind": "PlainText",
             "text": "|",
             "textExcerpt": {
              "startIndex": 208,
              "endIndex": 209
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalDirectionInfo#inlineOrientation:member"
       },
       "displayName": "inlineOrientation",
       "excerpt": {
        "isEmpty": false,
        "text": "inlineOrientation: PhysicalOrientation;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "inlineOrientation: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalOrientation:type"
          },
          "kind": "Reference",
          "text": "PhysicalOrientation"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "inlineOrientation: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalOrientation:type"
         },
         "kind": "Reference",
         "text": "PhysicalOrientation"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "inlineOrientation|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "inlineOrientation",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PhysicalOrientation",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalOrientation:type"
          },
          "kind": "Reference",
          "text": "PhysicalOrientation"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Simplified version of ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 6
             }
            },
            {
             "kind": "CodeSpan",
             "code": "inlineDirection"
            },
            {
             "kind": "PlainText",
             "text": ":",
             "textExcerpt": {
              "startIndex": 9,
              "endIndex": 10
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "* ",
             "textExcerpt": {
              "startIndex": 12,
              "endIndex": 14
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 17,
              "endIndex": 20
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": " * ",
             "textExcerpt": {
              "startIndex": 25,
              "endIndex": 28
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical"
            },
            {
             "kind": "PlainText",
             "text": " for all others",
             "textExcerpt": {
              "startIndex": 31,
              "endIndex": 37
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalDirectionInfo#inlineSize:member"
       },
       "displayName": "inlineSize",
       "excerpt": {
        "isEmpty": false,
        "text": "inlineSize: PhysicalSize;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "inlineSize: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalSize:type"
          },
          "kind": "Reference",
          "text": "PhysicalSize"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "inlineSize: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalSize:type"
         },
         "kind": "Reference",
         "text": "PhysicalSize"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "inlineSize|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "inlineSize",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PhysicalSize",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalSize:type"
          },
          "kind": "Reference",
          "text": "PhysicalSize"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Represents how you can *physically* refer to the size of the element in the *inline* size.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 36
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "* ",
             "textExcerpt": {
              "startIndex": 38,
              "endIndex": 40
             }
            },
            {
             "kind": "CodeSpan",
             "code": "width"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 43,
              "endIndex": 46
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": ", regardless of direction * ",
             "textExcerpt": {
              "startIndex": 51,
              "endIndex": 61
             }
            },
            {
             "kind": "CodeSpan",
             "code": "height"
            },
            {
             "kind": "PlainText",
             "text": " for all others",
             "textExcerpt": {
              "startIndex": 64,
              "endIndex": 70
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalDirectionInfo#leftRightDirection:member"
       },
       "displayName": "leftRightDirection",
       "excerpt": {
        "isEmpty": false,
        "text": "leftRightDirection: PhysicalDirection;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "leftRightDirection: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalDirection:type"
          },
          "kind": "Reference",
          "text": "PhysicalDirection"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "leftRightDirection: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalDirection:type"
         },
         "kind": "Reference",
         "text": "PhysicalDirection"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "leftRightDirection|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "leftRightDirection",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PhysicalDirection",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalDirection:type"
          },
          "kind": "Reference",
          "text": "PhysicalDirection"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "For each glyph, its \"left\" side (think of this relative to ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 26
             }
            },
            {
             "kind": "CodeSpan",
             "code": "writing-mode"
            },
            {
             "kind": "PlainText",
             "text": " but *not* relative to ",
             "textExcerpt": {
              "startIndex": 31,
              "endIndex": 42
             }
            },
            {
             "kind": "CodeSpan",
             "code": "direction"
            },
            {
             "kind": "PlainText",
             "text": ", or alternatively what ",
             "textExcerpt": {
              "startIndex": 45,
              "endIndex": 53
             }
            },
            {
             "kind": "CodeSpan",
             "code": "text-align: left"
            },
            {
             "kind": "PlainText",
             "text": " means) to its \"right\" side *physically* goes from:",
             "textExcerpt": {
              "startIndex": 61,
              "endIndex": 83
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "* ",
             "textExcerpt": {
              "startIndex": 85,
              "endIndex": 87
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ltr"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 90,
              "endIndex": 93
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": " * ",
             "textExcerpt": {
              "startIndex": 98,
              "endIndex": 101
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ttb"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 104,
              "endIndex": 107
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-rl"
            },
            {
             "kind": "PlainText",
             "text": ", ",
             "textExcerpt": {
              "startIndex": 112,
              "endIndex": 114
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-lr"
            },
            {
             "kind": "PlainText",
             "text": ", & ",
             "textExcerpt": {
              "startIndex": 119,
              "endIndex": 123
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-rl"
            },
            {
             "kind": "PlainText",
             "text": " * ",
             "textExcerpt": {
              "startIndex": 128,
              "endIndex": 131
             }
            },
            {
             "kind": "CodeSpan",
             "code": "btt"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 134,
              "endIndex": 137
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-lr"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalDirectionInfo#overUnderDirection:member"
       },
       "displayName": "overUnderDirection",
       "excerpt": {
        "isEmpty": false,
        "text": "overUnderDirection: PhysicalDirection;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "overUnderDirection: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalDirection:type"
          },
          "kind": "Reference",
          "text": "PhysicalDirection"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "overUnderDirection: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalDirection:type"
         },
         "kind": "Reference",
         "text": "PhysicalDirection"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "overUnderDirection|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "overUnderDirection",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PhysicalDirection",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalDirection:type"
          },
          "kind": "Reference",
          "text": "PhysicalDirection"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "For each glyph, ascenders to descenders *physically* go:",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 19
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "* ",
             "textExcerpt": {
              "startIndex": 21,
              "endIndex": 23
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ttb"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 26,
              "endIndex": 29
             }
            },
            {
             "kind": "CodeSpan",
             "code": "horizontal-tb"
            },
            {
             "kind": "PlainText",
             "text": " * ",
             "textExcerpt": {
              "startIndex": 34,
              "endIndex": 37
             }
            },
            {
             "kind": "CodeSpan",
             "code": "rtl"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 40,
              "endIndex": 43
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-rl"
            },
            {
             "kind": "PlainText",
             "text": ", ",
             "textExcerpt": {
              "startIndex": 48,
              "endIndex": 50
             }
            },
            {
             "kind": "CodeSpan",
             "code": "vertical-lr"
            },
            {
             "kind": "PlainText",
             "text": ", & ",
             "textExcerpt": {
              "startIndex": 55,
              "endIndex": 59
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-rl"
            },
            {
             "kind": "PlainText",
             "text": " * ",
             "textExcerpt": {
              "startIndex": 64,
              "endIndex": 67
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ltr"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 70,
              "endIndex": 73
             }
            },
            {
             "kind": "CodeSpan",
             "code": "sideways-lr"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "LogicalElementSize:interface"
     },
     "containerKey": "LogicalElementSize|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface LogicalElementSize ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface LogicalElementSize "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface LogicalElementSize "
      }
     ],
     "extendsTypes": [],
     "displayName": "LogicalElementSize",
     "fileUrlPath": "src/observers/use-logical-direction.tsx",
     "isExported": true,
     "name": "LogicalElementSize",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#clientBlockInset:member"
       },
       "displayName": "clientBlockInset",
       "excerpt": {
        "isEmpty": false,
        "text": "clientBlockInset: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "clientBlockInset: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "clientBlockInset: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "clientBlockInset|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "clientBlockInset",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#clientBlockSize:member"
       },
       "displayName": "clientBlockSize",
       "excerpt": {
        "isEmpty": false,
        "text": "clientBlockSize: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "clientBlockSize: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "clientBlockSize: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "clientBlockSize|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "clientBlockSize",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#clientInlineInset:member"
       },
       "displayName": "clientInlineInset",
       "excerpt": {
        "isEmpty": false,
        "text": "clientInlineInset: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "clientInlineInset: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "clientInlineInset: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "clientInlineInset|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "clientInlineInset",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#clientInlineSize:member"
       },
       "displayName": "clientInlineSize",
       "excerpt": {
        "isEmpty": false,
        "text": "clientInlineSize: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "clientInlineSize: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "clientInlineSize: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "clientInlineSize|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "clientInlineSize",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#offsetBlockInset:member"
       },
       "displayName": "offsetBlockInset",
       "excerpt": {
        "isEmpty": false,
        "text": "offsetBlockInset: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "offsetBlockInset: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "offsetBlockInset: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "offsetBlockInset|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "offsetBlockInset",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#offsetBlockSize:member"
       },
       "displayName": "offsetBlockSize",
       "excerpt": {
        "isEmpty": false,
        "text": "offsetBlockSize: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "offsetBlockSize: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "offsetBlockSize: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "offsetBlockSize|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "offsetBlockSize",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#offsetInlineInset:member"
       },
       "displayName": "offsetInlineInset",
       "excerpt": {
        "isEmpty": false,
        "text": "offsetInlineInset: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "offsetInlineInset: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "offsetInlineInset: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "offsetInlineInset|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "offsetInlineInset",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#offsetInlineSize:member"
       },
       "displayName": "offsetInlineSize",
       "excerpt": {
        "isEmpty": false,
        "text": "offsetInlineSize: number | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "offsetInlineSize: "
         },
         {
          "kind": "Content",
          "text": "number | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "offsetInlineSize: "
        },
        {
         "kind": "Content",
         "text": "number | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "offsetInlineSize|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "offsetInlineSize",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#scrollBlockInset:member"
       },
       "displayName": "scrollBlockInset",
       "excerpt": {
        "isEmpty": false,
        "text": "scrollBlockInset: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "scrollBlockInset: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "scrollBlockInset: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "scrollBlockInset|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "scrollBlockInset",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#scrollBlockSize:member"
       },
       "displayName": "scrollBlockSize",
       "excerpt": {
        "isEmpty": false,
        "text": "scrollBlockSize: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "scrollBlockSize: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "scrollBlockSize: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "scrollBlockSize|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "scrollBlockSize",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#scrollInlineInset:member"
       },
       "displayName": "scrollInlineInset",
       "excerpt": {
        "isEmpty": false,
        "text": "scrollInlineInset: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "scrollInlineInset: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "scrollInlineInset: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "scrollInlineInset|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "scrollInlineInset",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LogicalElementSize#scrollInlineSize:member"
       },
       "displayName": "scrollInlineSize",
       "excerpt": {
        "isEmpty": false,
        "text": "scrollInlineSize: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "scrollInlineSize: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "scrollInlineSize: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "scrollInlineSize|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "scrollInlineSize",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type LogicalOrientation = "
      },
      {
       "kind": "Content",
       "text": "\"inline\" | \"block\""
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "LogicalOrientation:type"
     },
     "containerKey": "LogicalOrientation|TypeAlias",
     "displayName": "LogicalOrientation",
     "excerpt": {
      "isEmpty": false,
      "text": "export type LogicalOrientation = \"inline\" | \"block\";",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type LogicalOrientation = "
       },
       {
        "kind": "Content",
        "text": "\"inline\" | \"block\""
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/observers/use-logical-direction.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "LogicalOrientation",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "\"inline\" | \"block\"",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "\"inline\" | \"block\""
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type MakeSingleSelectionDeclarativeParameters<P> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Omit:type"
       },
       "kind": "Reference",
       "text": "Omit"
      },
      {
       "kind": "Content",
       "text": "<P, \"singleSelectionParameters\"> & "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionDeclarativeParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionDeclarativeParameters"
      },
      {
       "kind": "Content",
       "text": " & {\n    singleSelectionParameters: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": "<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\">;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "MakeSingleSelectionDeclarativeParameters:type"
     },
     "containerKey": "MakeSingleSelectionDeclarativeParameters|TypeAlias",
     "displayName": "MakeSingleSelectionDeclarativeParameters",
     "excerpt": {
      "isEmpty": false,
      "text": "export type MakeSingleSelectionDeclarativeParameters<P> = Omit<P, \"singleSelectionParameters\"> & UseSingleSelectionDeclarativeParameters & {\n    singleSelectionParameters: Pick<UseSingleSelectionParameters<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\">;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type MakeSingleSelectionDeclarativeParameters<P> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Omit:type"
        },
        "kind": "Reference",
        "text": "Omit"
       },
       {
        "kind": "Content",
        "text": "<P, \"singleSelectionParameters\"> & "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionDeclarativeParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionDeclarativeParameters"
       },
       {
        "kind": "Content",
        "text": " & {\n    singleSelectionParameters: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\">;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "MakeSingleSelectionDeclarativeParameters",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "Omit<P, \"singleSelectionParameters\"> & UseSingleSelectionDeclarativeParameters & {\n    singleSelectionParameters: Pick<UseSingleSelectionParameters<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\">;\n}",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Omit:type"
        },
        "kind": "Reference",
        "text": "Omit"
       },
       {
        "kind": "Content",
        "text": "<P, \"singleSelectionParameters\"> & "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionDeclarativeParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionDeclarativeParameters"
       },
       {
        "kind": "Content",
        "text": " & {\n    singleSelectionParameters: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\">;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 1
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "P"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type MakeSingleSelectionDeclarativeReturnType<R> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Omit:type"
       },
       "kind": "Reference",
       "text": "Omit"
      },
      {
       "kind": "Content",
       "text": "<R, \"singleSelectionReturn\">"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "MakeSingleSelectionDeclarativeReturnType:type"
     },
     "containerKey": "MakeSingleSelectionDeclarativeReturnType|TypeAlias",
     "displayName": "MakeSingleSelectionDeclarativeReturnType",
     "excerpt": {
      "isEmpty": false,
      "text": "export type MakeSingleSelectionDeclarativeReturnType<R> = Omit<R, \"singleSelectionReturn\">;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type MakeSingleSelectionDeclarativeReturnType<R> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Omit:type"
        },
        "kind": "Reference",
        "text": "Omit"
       },
       {
        "kind": "Content",
        "text": "<R, \"singleSelectionReturn\">"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "MakeSingleSelectionDeclarativeReturnType",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "Omit<R, \"singleSelectionReturn\">",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Omit:type"
        },
        "kind": "Reference",
        "text": "Omit"
       },
       {
        "kind": "Content",
        "text": "<R, \"singleSelectionReturn\">"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 1
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ManagedChildInfo:interface"
     },
     "containerKey": "ManagedChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface ManagedChildInfo<T extends string | number> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface ManagedChildInfo<T extends "
       },
       {
        "kind": "Content",
        "text": "string | number"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface ManagedChildInfo<T extends "
      },
      {
       "kind": "Content",
       "text": "string | number"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "ManagedChildInfo",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "ManagedChildInfo",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo#index:member"
       },
       "displayName": "index",
       "excerpt": {
        "isEmpty": false,
        "text": "index: T;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "index: "
         },
         {
          "kind": "Content",
          "text": "T"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "index: "
        },
        {
         "kind": "Content",
         "text": "T"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "index|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "index",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "string | number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string | number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Information that children and parents use to communicate with each other.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 22
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Other hooks will inherit from this to provide more complicated behavior.",
           "textExcerpt": {
            "startIndex": 24,
            "endIndex": 46
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ManagedChildren:interface"
     },
     "containerKey": "ManagedChildren|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface ManagedChildren<M extends ManagedChildInfo<any>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface ManagedChildren<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<any>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface ManagedChildren<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<any>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "ManagedChildren",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "ManagedChildren",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildren#arraySlice:member"
       },
       "displayName": "arraySlice",
       "excerpt": {
        "isEmpty": false,
        "text": "arraySlice: () => M[];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "arraySlice: "
         },
         {
          "kind": "Content",
          "text": "() => M[]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "arraySlice: "
        },
        {
         "kind": "Content",
         "text": "() => M[]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "arraySlice|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "arraySlice",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => M[]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => M[]"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**UNSTABLE**, also internal-use only, also TODO need a workaround for this for sortable children, or at least properly name it.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 49
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "WHAT THIS DOES:",
             "textExcerpt": {
              "startIndex": 51,
              "endIndex": 57
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This function takes the children, slices the array containing them, and, *crutially*, fills in any holes in the array with a pseudo-child that just contains an index.",
             "textExcerpt": {
              "startIndex": 59,
              "endIndex": 121
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This behavior, to be clear, is only necessary for sorting and rearranging because sorting and rearranging require knowing perfectly which index maps to which. We don't need any other missing information in the array besides the missing index.",
             "textExcerpt": {
              "startIndex": 123,
              "endIndex": 204
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildren#forEach:member"
       },
       "displayName": "forEach",
       "excerpt": {
        "isEmpty": false,
        "text": "forEach: (f: (child: M) => void) => void | \"break\";",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "forEach: "
         },
         {
          "kind": "Content",
          "text": "(f: (child: M) => void) => void | \"break\""
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "forEach: "
        },
        {
         "kind": "Content",
         "text": "(f: (child: M) => void) => void | \"break\""
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "forEach|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "forEach",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "(f: (child: M) => void) => void | \"break\"",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(f: (child: M) => void) => void | \"break\""
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "STABLE",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 1
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildren#getAt:member(1)"
       },
       "displayName": "getAt",
       "excerpt": {
        "isEmpty": false,
        "text": "getAt(index: M[\"index\"]): M | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getAt(index: "
         },
         {
          "kind": "Content",
          "text": "M[\"index\"]"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "M | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getAt(index: "
        },
        {
         "kind": "Content",
         "text": "M[\"index\"]"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "M | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getAt|MethodSignature|1",
       "isOptional": false,
       "name": "getAt",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "index",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "M[\"index\"]",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "M[\"index\"]"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "M | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "M | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "STABLE",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 1
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildren#getHighestIndex:member(1)"
       },
       "displayName": "getHighestIndex",
       "excerpt": {
        "isEmpty": false,
        "text": "getHighestIndex(): number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getHighestIndex(): "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getHighestIndex(): "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getHighestIndex|MethodSignature|1",
       "isOptional": false,
       "name": "getHighestIndex",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "STABLE",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 1
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<any>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<any>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Abstraction over the managed children",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 9
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "mergeFunctions:function(1)"
     },
     "kind": "Function",
     "containerKey": "mergeFunctions|Function|1",
     "displayName": "mergeFunctions",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function mergeFunctions<T extends (...args: any[]) => (void | Promise<void>), U extends (...args: any[]) => (void | Promise<void>)>(lhs: T | null | undefined, rhs: U | null | undefined): T | U | ((...args: Parameters<T>) => Promise<[void, void]> | undefined) | null | undefined;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function mergeFunctions<T extends "
       },
       {
        "kind": "Content",
        "text": "(...args: any[]) => (void | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Promise:interface"
        },
        "kind": "Reference",
        "text": "Promise"
       },
       {
        "kind": "Content",
        "text": "<void>)"
       },
       {
        "kind": "Content",
        "text": ", U extends "
       },
       {
        "kind": "Content",
        "text": "(...args: any[]) => (void | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Promise:interface"
        },
        "kind": "Reference",
        "text": "Promise"
       },
       {
        "kind": "Content",
        "text": "<void>)"
       },
       {
        "kind": "Content",
        "text": ">(lhs: "
       },
       {
        "kind": "Content",
        "text": "T | null | undefined"
       },
       {
        "kind": "Content",
        "text": ", rhs: "
       },
       {
        "kind": "Content",
        "text": "U | null | undefined"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "T | U | ((...args: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Parameters:type"
        },
        "kind": "Reference",
        "text": "Parameters"
       },
       {
        "kind": "Content",
        "text": "<T>) => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Promise:interface"
        },
        "kind": "Reference",
        "text": "Promise"
       },
       {
        "kind": "Content",
        "text": "<[void, void]> | undefined) | null | undefined"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "mergeFunctions",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "lhs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T | null | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T | null | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 9
        }
       }
      },
      {
       "isOptional": false,
       "name": "rhs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "U | null | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "U | null | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 11
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "T | U | ((...args: Parameters<T>) => Promise<[void, void]> | undefined) | null | undefined",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "T | U | ((...args: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Parameters:type"
        },
        "kind": "Reference",
        "text": "Parameters"
       },
       {
        "kind": "Content",
        "text": "<T>) => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Promise:interface"
        },
        "kind": "Reference",
        "text": "Promise"
       },
       {
        "kind": "Content",
        "text": "<[void, void]> | undefined) | null | undefined"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 13
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "(...args: any[]) => (void | Promise<void>)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(...args: any[]) => (void | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<void>)"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "(...args: any[]) => (void | Promise<void>)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(...args: any[]) => (void | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<void>)"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "U"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function mergeFunctions<T extends "
      },
      {
       "kind": "Content",
       "text": "(...args: any[]) => (void | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Promise:interface"
       },
       "kind": "Reference",
       "text": "Promise"
      },
      {
       "kind": "Content",
       "text": "<void>)"
      },
      {
       "kind": "Content",
       "text": ", U extends "
      },
      {
       "kind": "Content",
       "text": "(...args: any[]) => (void | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Promise:interface"
       },
       "kind": "Reference",
       "text": "Promise"
      },
      {
       "kind": "Content",
       "text": "<void>)"
      },
      {
       "kind": "Content",
       "text": ">(lhs: "
      },
      {
       "kind": "Content",
       "text": "T | null | undefined"
      },
      {
       "kind": "Content",
       "text": ", rhs: "
      },
      {
       "kind": "Content",
       "text": "U | null | undefined"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "T | U | ((...args: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Parameters:type"
       },
       "kind": "Reference",
       "text": "Parameters"
      },
      {
       "kind": "Content",
       "text": "<T>) => "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Promise:interface"
       },
       "kind": "Reference",
       "text": "Promise"
      },
      {
       "kind": "Content",
       "text": "<[void, void]> | undefined) | null | undefined"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "monitorCallCount:var"
     },
     "containerKey": "monitorCallCount|Variable",
     "displayName": "monitorCallCount",
     "excerpt": {
      "isEmpty": false,
      "text": "monitorCallCount: typeof callCountU",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "monitorCallCount: "
       },
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "callCountU:function"
        },
        "kind": "Reference",
        "text": "callCountU"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "monitorCallCount: "
      },
      {
       "kind": "Content",
       "text": "typeof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "callCountU:function"
       },
       "kind": "Reference",
       "text": "callCountU"
      }
     ],
     "fileUrlPath": "src/util/use-call-count.tsx",
     "isExported": true,
     "isReadonly": true,
     "kind": "Variable",
     "members": [],
     "name": "monitorCallCount",
     "releaseTag": 4,
     "sourceLocation": {},
     "variableTypeExcerpt": {
      "isEmpty": false,
      "text": "typeof callCountU",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "callCountU:function"
        },
        "kind": "Reference",
        "text": "callCountU"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 1
      }
     }
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type MouseEventType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.TargetedMouseEvent:type"
       },
       "kind": "Reference",
       "text": "JSX.TargetedMouseEvent"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "MouseEventType:type"
     },
     "containerKey": "MouseEventType|TypeAlias",
     "displayName": "MouseEventType",
     "excerpt": {
      "isEmpty": false,
      "text": "export type MouseEventType<E extends EventTarget> = JSX.TargetedMouseEvent<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type MouseEventType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedMouseEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedMouseEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "MouseEventType",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.TargetedMouseEvent<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedMouseEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedMouseEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type Nullable<T = "
      },
      {
       "kind": "Content",
       "text": "null"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "kind": "Content",
       "text": "null | undefined | T"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "Nullable:type"
     },
     "containerKey": "Nullable|TypeAlias",
     "displayName": "Nullable",
     "excerpt": {
      "isEmpty": false,
      "text": "export type Nullable<T = null> = null | undefined | T;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type Nullable<T = "
       },
       {
        "kind": "Content",
        "text": "null"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "kind": "Content",
        "text": "null | undefined | T"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "Nullable",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "null | undefined | T",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "null | undefined | T"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": false,
        "text": "null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "isOptional": true,
       "name": "T"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type OmitStrong<T, K extends "
      },
      {
       "kind": "Content",
       "text": "keyof T"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Omit:type"
       },
       "kind": "Reference",
       "text": "Omit"
      },
      {
       "kind": "Content",
       "text": "<T, K>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "OmitStrong:type"
     },
     "containerKey": "OmitStrong|TypeAlias",
     "displayName": "OmitStrong",
     "excerpt": {
      "isEmpty": false,
      "text": "export type OmitStrong<T, K extends keyof T> = Omit<T, K>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type OmitStrong<T, K extends "
       },
       {
        "kind": "Content",
        "text": "keyof T"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Omit:type"
        },
        "kind": "Reference",
        "text": "Omit"
       },
       {
        "kind": "Content",
        "text": "<T, K>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "OmitStrong",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "Omit<T, K>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Omit:type"
        },
        "kind": "Reference",
        "text": "Omit"
       },
       {
        "kind": "Content",
        "text": "<T, K>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "keyof T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "keyof T"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "K"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type OnAfterChildLayoutEffect<T extends "
      },
      {
       "kind": "Content",
       "text": "string | number"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "kind": "Content",
       "text": "((causers: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Iterable:interface"
       },
       "kind": "Reference",
       "text": "Iterable"
      },
      {
       "kind": "Content",
       "text": "<T>) => void)"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "OnAfterChildLayoutEffect:type"
     },
     "containerKey": "OnAfterChildLayoutEffect|TypeAlias",
     "displayName": "OnAfterChildLayoutEffect",
     "excerpt": {
      "isEmpty": false,
      "text": "export type OnAfterChildLayoutEffect<T extends string | number> = ((causers: Iterable<T>) => void);",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type OnAfterChildLayoutEffect<T extends "
       },
       {
        "kind": "Content",
        "text": "string | number"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "kind": "Content",
        "text": "((causers: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Iterable:interface"
        },
        "kind": "Reference",
        "text": "Iterable"
       },
       {
        "kind": "Content",
        "text": "<T>) => void)"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "OnAfterChildLayoutEffect",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "((causers: Iterable<T>) => void)",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "((causers: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Iterable:interface"
        },
        "kind": "Reference",
        "text": "Iterable"
       },
       {
        "kind": "Content",
        "text": "<T>) => void)"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "string | number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string | number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type OnChildrenMountChange<T extends "
      },
      {
       "kind": "Content",
       "text": "string | number"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "kind": "Content",
       "text": "((mounted: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Set:interface"
       },
       "kind": "Reference",
       "text": "Set"
      },
      {
       "kind": "Content",
       "text": "<T>, unmounted: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Set:interface"
       },
       "kind": "Reference",
       "text": "Set"
      },
      {
       "kind": "Content",
       "text": "<T>) => void)"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "OnChildrenMountChange:type"
     },
     "containerKey": "OnChildrenMountChange|TypeAlias",
     "displayName": "OnChildrenMountChange",
     "excerpt": {
      "isEmpty": false,
      "text": "export type OnChildrenMountChange<T extends string | number> = ((mounted: Set<T>, unmounted: Set<T>) => void);",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type OnChildrenMountChange<T extends "
       },
       {
        "kind": "Content",
        "text": "string | number"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "kind": "Content",
        "text": "((mounted: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Set:interface"
        },
        "kind": "Reference",
        "text": "Set"
       },
       {
        "kind": "Content",
        "text": "<T>, unmounted: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Set:interface"
        },
        "kind": "Reference",
        "text": "Set"
       },
       {
        "kind": "Content",
        "text": "<T>) => void)"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "OnChildrenMountChange",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "((mounted: Set<T>, unmounted: Set<T>) => void)",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "((mounted: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Set:interface"
        },
        "kind": "Reference",
        "text": "Set"
       },
       {
        "kind": "Content",
        "text": "<T>, unmounted: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Set:interface"
        },
        "kind": "Reference",
        "text": "Set"
       },
       {
        "kind": "Content",
        "text": "<T>) => void)"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "string | number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string | number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type OnParamValueChanged<T> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OnPassiveStateChange:type"
       },
       "kind": "Reference",
       "text": "OnPassiveStateChange"
      },
      {
       "kind": "Content",
       "text": "<T, never>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "OnParamValueChanged:type"
     },
     "containerKey": "OnParamValueChanged|TypeAlias",
     "displayName": "OnParamValueChanged",
     "excerpt": {
      "isEmpty": false,
      "text": "export type OnParamValueChanged<T> = OnPassiveStateChange<T, never>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type OnParamValueChanged<T> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OnPassiveStateChange:type"
        },
        "kind": "Reference",
        "text": "OnPassiveStateChange"
       },
       {
        "kind": "Content",
        "text": "<T, never>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/preact-extensions/use-search-param-state.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "OnParamValueChanged",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "OnPassiveStateChange<T, never>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OnPassiveStateChange:type"
        },
        "kind": "Reference",
        "text": "OnPassiveStateChange"
       },
       {
        "kind": "Content",
        "text": "<T, never>"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 1
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type OnPassiveStateChange<S, R> = "
      },
      {
       "kind": "Content",
       "text": "((value: S, prevValue: S | undefined, reason?: R) => (void | (() => void)))"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "OnPassiveStateChange:type"
     },
     "containerKey": "OnPassiveStateChange|TypeAlias",
     "displayName": "OnPassiveStateChange",
     "excerpt": {
      "isEmpty": false,
      "text": "export type OnPassiveStateChange<S, R> = ((value: S, prevValue: S | undefined, reason?: R) => (void | (() => void)));",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type OnPassiveStateChange<S, R> = "
       },
       {
        "kind": "Content",
        "text": "((value: S, prevValue: S | undefined, reason?: R) => (void | (() => void)))"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/preact-extensions/use-passive-state.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "OnPassiveStateChange",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "((value: S, prevValue: S | undefined, reason?: R) => (void | (() => void)))",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "((value: S, prevValue: S | undefined, reason?: R) => (void | (() => void)))"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Responds to a change in a value, unlike ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 17
           }
          },
          {
           "kind": "CodeSpan",
           "code": "PassiveStateUpdater"
          },
          {
           "kind": "PlainText",
           "text": " which causes the updates",
           "textExcerpt": {
            "startIndex": 20,
            "endIndex": 28
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "S"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type OnTabbableIndexChange = "
      },
      {
       "kind": "Content",
       "text": "(tabbableIndex: number | null) => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "OnTabbableIndexChange:type"
     },
     "containerKey": "OnTabbableIndexChange|TypeAlias",
     "displayName": "OnTabbableIndexChange",
     "excerpt": {
      "isEmpty": false,
      "text": "export type OnTabbableIndexChange = (tabbableIndex: number | null) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type OnTabbableIndexChange = "
       },
       {
        "kind": "Content",
        "text": "(tabbableIndex: number | null) => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-roving-tabindex.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "OnTabbableIndexChange",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(tabbableIndex: number | null) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(tabbableIndex: number | null) => void"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PassiveStateUpdater<S, R> = "
      },
      {
       "kind": "Content",
       "text": "((value: S | ((prevState: S | undefined) => S), reason?: R) => void)"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PassiveStateUpdater:type"
     },
     "containerKey": "PassiveStateUpdater|TypeAlias",
     "displayName": "PassiveStateUpdater",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PassiveStateUpdater<S, R> = ((value: S | ((prevState: S | undefined) => S), reason?: R) => void);",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PassiveStateUpdater<S, R> = "
       },
       {
        "kind": "Content",
        "text": "((value: S | ((prevState: S | undefined) => S), reason?: R) => void)"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/preact-extensions/use-passive-state.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PassiveStateUpdater",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "((value: S | ((prevState: S | undefined) => S), reason?: R) => void)",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "((value: S | ((prevState: S | undefined) => S), reason?: R) => void)"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Takes a new value or a function that updates a value, unlike ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 25
           }
          },
          {
           "kind": "CodeSpan",
           "code": "OnPassiveStateChange"
          },
          {
           "kind": "PlainText",
           "text": " which reacts to those updates",
           "textExcerpt": {
            "startIndex": 28,
            "endIndex": 38
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "S"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PersistentStates:interface"
     },
     "containerKey": "PersistentStates|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface PersistentStates ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface PersistentStates "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface PersistentStates "
      }
     ],
     "extendsTypes": [],
     "displayName": "PersistentStates",
     "fileUrlPath": "src/preact-extensions/use-persistent-state.tsx",
     "isExported": true,
     "name": "PersistentStates",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "All types allowed by ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 8
           }
          },
          {
           "kind": "CodeSpan",
           "code": "usePersistentState"
          },
          {
           "kind": "PlainText",
           "text": ".",
           "textExcerpt": {
            "startIndex": 11,
            "endIndex": 12
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Use module augmentation to add new properties to this object that ",
           "textExcerpt": {
            "startIndex": 14,
            "endIndex": 36
           }
          },
          {
           "kind": "CodeSpan",
           "code": "usePersistentState"
          },
          {
           "kind": "PlainText",
           "text": " will correctly understand:",
           "textExcerpt": {
            "startIndex": 39,
            "endIndex": 46
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "errorLocation": {
            "startIndex": 51,
            "endIndex": 52
           },
           "errorMessage": "Error parsing code fence: The language specifier cannot contain backtick characters",
           "kind": "ErrorText",
           "messageId": "tsdoc-code-fence-specifier-syntax",
           "text": "```",
           "textExcerpt": {
            "startIndex": 48,
            "endIndex": 51
           }
          },
          {
           "kind": "CodeSpan",
           "code": " declare module 'preact-prop-helpers' { interface PersistentStates { numberState: number; stringState: string; } } "
          },
          {
           "errorLocation": {
            "startIndex": 90,
            "endIndex": 93
           },
           "errorMessage": "The opening backtick for a code fence must appear at the start of the line",
           "kind": "ErrorText",
           "messageId": "tsdoc-code-fence-opening-indent",
           "text": "```",
           "textExcerpt": {
            "startIndex": 90,
            "endIndex": 93
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PhysicalDirection = "
      },
      {
       "kind": "Content",
       "text": "\"ltr\" | \"rtl\" | \"ttb\" | \"btt\""
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PhysicalDirection:type"
     },
     "containerKey": "PhysicalDirection|TypeAlias",
     "displayName": "PhysicalDirection",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PhysicalDirection = \"ltr\" | \"rtl\" | \"ttb\" | \"btt\";",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PhysicalDirection = "
       },
       {
        "kind": "Content",
        "text": "\"ltr\" | \"rtl\" | \"ttb\" | \"btt\""
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/observers/use-logical-direction.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PhysicalDirection",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "\"ltr\" | \"rtl\" | \"ttb\" | \"btt\"",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "\"ltr\" | \"rtl\" | \"ttb\" | \"btt\""
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PhysicalOrientation = "
      },
      {
       "kind": "Content",
       "text": "\"horizontal\" | \"vertical\""
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PhysicalOrientation:type"
     },
     "containerKey": "PhysicalOrientation|TypeAlias",
     "displayName": "PhysicalOrientation",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PhysicalOrientation = \"horizontal\" | \"vertical\";",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PhysicalOrientation = "
       },
       {
        "kind": "Content",
        "text": "\"horizontal\" | \"vertical\""
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/observers/use-logical-direction.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PhysicalOrientation",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "\"horizontal\" | \"vertical\"",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "\"horizontal\" | \"vertical\""
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PhysicalSize = "
      },
      {
       "kind": "Content",
       "text": "\"width\" | \"height\""
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PhysicalSize:type"
     },
     "containerKey": "PhysicalSize|TypeAlias",
     "displayName": "PhysicalSize",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PhysicalSize = \"width\" | \"height\";",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PhysicalSize = "
       },
       {
        "kind": "Content",
        "text": "\"width\" | \"height\""
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/observers/use-logical-direction.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PhysicalSize",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "\"width\" | \"height\"",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "\"width\" | \"height\""
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PointerEventType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.TargetedPointerEvent:type"
       },
       "kind": "Reference",
       "text": "JSX.TargetedPointerEvent"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PointerEventType:type"
     },
     "containerKey": "PointerEventType|TypeAlias",
     "displayName": "PointerEventType",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PointerEventType<E extends EventTarget> = JSX.TargetedPointerEvent<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PointerEventType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedPointerEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedPointerEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PointerEventType",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.TargetedPointerEvent<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedPointerEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedPointerEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PortalChildUpdater<S> = "
      },
      {
       "kind": "Content",
       "text": "(value: ((prevState: S) => S)) => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PortalChildUpdater:type"
     },
     "containerKey": "PortalChildUpdater|TypeAlias",
     "displayName": "PortalChildUpdater",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PortalChildUpdater<S> = (value: ((prevState: S) => S)) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PortalChildUpdater<S> = "
       },
       {
        "kind": "Content",
        "text": "(value: ((prevState: S) => S)) => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-portal-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PortalChildUpdater",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(value: ((prevState: S) => S)) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(value: ((prevState: S) => S)) => void"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "S"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PressChangeEventReason<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "MouseEventType:type"
       },
       "kind": "Reference",
       "text": "MouseEventType"
      },
      {
       "kind": "Content",
       "text": "<E> | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "KeyboardEventType:type"
       },
       "kind": "Reference",
       "text": "KeyboardEventType"
      },
      {
       "kind": "Content",
       "text": "<E> | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TouchEventType:type"
       },
       "kind": "Reference",
       "text": "TouchEventType"
      },
      {
       "kind": "Content",
       "text": "<E> | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PointerEventType:type"
       },
       "kind": "Reference",
       "text": "PointerEventType"
      },
      {
       "kind": "Content",
       "text": "<E> | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "FocusEventType:type"
       },
       "kind": "Reference",
       "text": "FocusEventType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PressChangeEventReason:type"
     },
     "containerKey": "PressChangeEventReason|TypeAlias",
     "displayName": "PressChangeEventReason",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PressChangeEventReason<E extends EventTarget> = MouseEventType<E> | KeyboardEventType<E> | TouchEventType<E> | PointerEventType<E> | FocusEventType<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PressChangeEventReason<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "MouseEventType:type"
        },
        "kind": "Reference",
        "text": "MouseEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "KeyboardEventType:type"
        },
        "kind": "Reference",
        "text": "KeyboardEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TouchEventType:type"
        },
        "kind": "Reference",
        "text": "TouchEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PointerEventType:type"
        },
        "kind": "Reference",
        "text": "PointerEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "FocusEventType:type"
        },
        "kind": "Reference",
        "text": "FocusEventType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-use/use-press.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PressChangeEventReason",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "MouseEventType<E> | KeyboardEventType<E> | TouchEventType<E> | PointerEventType<E> | FocusEventType<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "MouseEventType:type"
        },
        "kind": "Reference",
        "text": "MouseEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "KeyboardEventType:type"
        },
        "kind": "Reference",
        "text": "KeyboardEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TouchEventType:type"
        },
        "kind": "Reference",
        "text": "TouchEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PointerEventType:type"
        },
        "kind": "Reference",
        "text": "PointerEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "FocusEventType:type"
        },
        "kind": "Reference",
        "text": "FocusEventType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PressEventReason<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "MouseEventType:type"
       },
       "kind": "Reference",
       "text": "MouseEventType"
      },
      {
       "kind": "Content",
       "text": "<E> | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "KeyboardEventType:type"
       },
       "kind": "Reference",
       "text": "KeyboardEventType"
      },
      {
       "kind": "Content",
       "text": "<E> | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TouchEventType:type"
       },
       "kind": "Reference",
       "text": "TouchEventType"
      },
      {
       "kind": "Content",
       "text": "<E> | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PointerEventType:type"
       },
       "kind": "Reference",
       "text": "PointerEventType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PressEventReason:type"
     },
     "containerKey": "PressEventReason|TypeAlias",
     "displayName": "PressEventReason",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PressEventReason<E extends EventTarget> = MouseEventType<E> | KeyboardEventType<E> | TouchEventType<E> | PointerEventType<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PressEventReason<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "MouseEventType:type"
        },
        "kind": "Reference",
        "text": "MouseEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "KeyboardEventType:type"
        },
        "kind": "Reference",
        "text": "KeyboardEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TouchEventType:type"
        },
        "kind": "Reference",
        "text": "TouchEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PointerEventType:type"
        },
        "kind": "Reference",
        "text": "PointerEventType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-use/use-press.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PressEventReason",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "MouseEventType<E> | KeyboardEventType<E> | TouchEventType<E> | PointerEventType<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "MouseEventType:type"
        },
        "kind": "Reference",
        "text": "MouseEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "KeyboardEventType:type"
        },
        "kind": "Reference",
        "text": "KeyboardEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TouchEventType:type"
        },
        "kind": "Reference",
        "text": "TouchEventType"
       },
       {
        "kind": "Content",
        "text": "<E> | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PointerEventType:type"
        },
        "kind": "Reference",
        "text": "PointerEventType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "ProvideBatchedAnimationFrames:function(1)"
     },
     "kind": "Function",
     "containerKey": "ProvideBatchedAnimationFrames|Function|1",
     "displayName": "ProvideBatchedAnimationFrames",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function ProvideBatchedAnimationFrames({ children }: {\n    children: ComponentChildren;\n}): import(\"preact\").JSX.Element;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function ProvideBatchedAnimationFrames({ children }: "
       },
       {
        "kind": "Content",
        "text": "{\n    children: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "ComponentChildren:type"
        },
        "kind": "Reference",
        "text": "ComponentChildren"
       },
       {
        "kind": "Content",
        "text": ";\n}"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "import(\"preact\")."
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.Element:interface"
        },
        "kind": "Reference",
        "text": "JSX.Element"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "ProvideBatchedAnimationFrames",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ children }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n    children: ComponentChildren;\n}",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n    children: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact!",
           "symbol": "ComponentChildren:type"
          },
          "kind": "Reference",
          "text": "ComponentChildren"
         },
         {
          "kind": "Content",
          "text": ";\n}"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "import(\"preact\").JSX.Element",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "import(\"preact\")."
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.Element:interface"
        },
        "kind": "Reference",
        "text": "JSX.Element"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "When a bunch of unrelated components all use ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 16
           }
          },
          {
           "kind": "CodeSpan",
           "code": "requestAnimationFrame"
          },
          {
           "kind": "PlainText",
           "text": ", yes, this actually is faster. I wish it wasn't. It's lame.",
           "textExcerpt": {
            "startIndex": 19,
            "endIndex": 50
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "param0",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function ProvideBatchedAnimationFrames({ children }: "
      },
      {
       "kind": "Content",
       "text": "{\n    children: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "ComponentChildren:type"
       },
       "kind": "Reference",
       "text": "ComponentChildren"
      },
      {
       "kind": "Content",
       "text": ";\n}"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "import(\"preact\")."
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.Element:interface"
       },
       "kind": "Reference",
       "text": "JSX.Element"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type PushPortalChild = "
      },
      {
       "kind": "Content",
       "text": "(child: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "VNode:type"
       },
       "kind": "Reference",
       "text": "VNode"
      },
      {
       "kind": "Content",
       "text": ") => number"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "PushPortalChild:type"
     },
     "containerKey": "PushPortalChild|TypeAlias",
     "displayName": "PushPortalChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export type PushPortalChild = (child: VNode) => number;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type PushPortalChild = "
       },
       {
        "kind": "Content",
        "text": "(child: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "VNode:type"
        },
        "kind": "Reference",
        "text": "VNode"
       },
       {
        "kind": "Content",
        "text": ") => number"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-portal-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "PushPortalChild",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(child: VNode) => number",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(child: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "VNode:type"
        },
        "kind": "Reference",
        "text": "VNode"
       },
       {
        "kind": "Content",
        "text": ") => number"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type RemovePortalChild = "
      },
      {
       "kind": "Content",
       "text": "(index: number) => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "RemovePortalChild:type"
     },
     "containerKey": "RemovePortalChild|TypeAlias",
     "displayName": "RemovePortalChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export type RemovePortalChild = (index: number) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type RemovePortalChild = "
       },
       {
        "kind": "Content",
        "text": "(index: number) => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-portal-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "RemovePortalChild",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(index: number) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(index: number) => void"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "returnFalse:function(1)"
     },
     "kind": "Function",
     "containerKey": "returnFalse|Function|1",
     "displayName": "returnFalse",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function returnFalse(): boolean;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function returnFalse(): "
       },
       {
        "kind": "Content",
        "text": "boolean"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "returnFalse",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "boolean",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "boolean"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function returnFalse(): "
      },
      {
       "kind": "Content",
       "text": "boolean"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "returnNull:function(1)"
     },
     "kind": "Function",
     "containerKey": "returnNull|Function|1",
     "displayName": "returnNull",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function returnNull(): null;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function returnNull(): "
       },
       {
        "kind": "Content",
        "text": "null"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "returnNull",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "null",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "null"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function returnNull(): "
      },
      {
       "kind": "Content",
       "text": "null"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "returnsFunction:function(1)"
     },
     "kind": "Function",
     "containerKey": "returnsFunction|Function|1",
     "displayName": "returnsFunction",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function returnsFunction(): () => number;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function returnsFunction(): "
       },
       {
        "kind": "Content",
        "text": "() => number"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "returnsFunction",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "() => number",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "() => number"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Summary of returnsFunction",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 5
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function returnsFunction(): "
      },
      {
       "kind": "Content",
       "text": "() => number"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "returnTrue:function(1)"
     },
     "kind": "Function",
     "containerKey": "returnTrue|Function|1",
     "displayName": "returnTrue",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function returnTrue(): boolean;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function returnTrue(): "
       },
       {
        "kind": "Content",
        "text": "boolean"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "returnTrue",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "boolean",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "boolean"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function returnTrue(): "
      },
      {
       "kind": "Content",
       "text": "boolean"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "returnUndefined:function(1)"
     },
     "kind": "Function",
     "containerKey": "returnUndefined|Function|1",
     "displayName": "returnUndefined",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function returnUndefined(): undefined;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function returnUndefined(): "
       },
       {
        "kind": "Content",
        "text": "undefined"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "returnUndefined",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "undefined",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "undefined"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function returnUndefined(): "
      },
      {
       "kind": "Content",
       "text": "undefined"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "returnZero:function(1)"
     },
     "kind": "Function",
     "containerKey": "returnZero|Function|1",
     "displayName": "returnZero",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function returnZero(): number;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function returnZero(): "
       },
       {
        "kind": "Content",
        "text": "number"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "returnZero",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "number",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "number"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function returnZero(): "
      },
      {
       "kind": "Content",
       "text": "number"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "RovingTabIndexChildContext:interface"
     },
     "containerKey": "RovingTabIndexChildContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface RovingTabIndexChildContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface RovingTabIndexChildContext "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface RovingTabIndexChildContext "
      }
     ],
     "extendsTypes": [],
     "displayName": "RovingTabIndexChildContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-roving-tabindex.tsx",
     "isExported": true,
     "name": "RovingTabIndexChildContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "RovingTabIndexChildContext#rovingTabIndexContext:member"
       },
       "displayName": "rovingTabIndexContext",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexContext: {\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        parentFocusSelf: () => void;\n        giveParentFocusedElement(element: Element): void;\n        setTabbableIndex: SetTabbableIndex;\n        getInitiallyTabbedIndex(): number | null;\n        reevaluateClosestFit: (requestedIndex?: number) => void;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexContext: "
         },
         {
          "kind": "Content",
          "text": "{\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        parentFocusSelf: () => void;\n        giveParentFocusedElement(element: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": "): void;\n        setTabbableIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        getInitiallyTabbedIndex(): number | null;\n        reevaluateClosestFit: (requestedIndex?: number) => void;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexContext: "
        },
        {
         "kind": "Content",
         "text": "{\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        parentFocusSelf: () => void;\n        giveParentFocusedElement(element: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Element:interface"
         },
         "kind": "Reference",
         "text": "Element"
        },
        {
         "kind": "Content",
         "text": "): void;\n        setTabbableIndex: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetTabbableIndex:type"
         },
         "kind": "Reference",
         "text": "SetTabbableIndex"
        },
        {
         "kind": "Content",
         "text": ";\n        getInitiallyTabbedIndex(): number | null;\n        reevaluateClosestFit: (requestedIndex?: number) => void;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        parentFocusSelf: () => void;\n        giveParentFocusedElement(element: Element): void;\n        setTabbableIndex: SetTabbableIndex;\n        getInitiallyTabbedIndex(): number | null;\n        reevaluateClosestFit: (requestedIndex?: number) => void;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        parentFocusSelf: () => void;\n        giveParentFocusedElement(element: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": "): void;\n        setTabbableIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        getInitiallyTabbedIndex(): number | null;\n        reevaluateClosestFit: (requestedIndex?: number) => void;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "runImmediately:function(1)"
     },
     "kind": "Function",
     "containerKey": "runImmediately|Function|1",
     "displayName": "runImmediately",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function runImmediately(f: () => void): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function runImmediately(f: "
       },
       {
        "kind": "Content",
        "text": "() => void"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "runImmediately",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "f",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "() => void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => void"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "An alternative to use for ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 10
           }
          },
          {
           "kind": "CodeSpan",
           "code": "customDebounceRendering"
          },
          {
           "kind": "PlainText",
           "text": " that causes ",
           "textExcerpt": {
            "startIndex": 13,
            "endIndex": 18
           }
          },
          {
           "kind": "CodeSpan",
           "code": "usePassiveState"
          },
          {
           "kind": "PlainText",
           "text": " to run changes without waiting a tick.",
           "textExcerpt": {
            "startIndex": 21,
            "endIndex": 36
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function runImmediately(f: "
      },
      {
       "kind": "Content",
       "text": "() => void"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SearchParamStates:interface"
     },
     "containerKey": "SearchParamStates|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface SearchParamStates ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface SearchParamStates "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface SearchParamStates "
      }
     ],
     "extendsTypes": [],
     "displayName": "SearchParamStates",
     "fileUrlPath": "src/preact-extensions/use-search-param-state.tsx",
     "isExported": true,
     "name": "SearchParamStates",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "All types allowed by ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 8
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useSearchParamState"
          },
          {
           "kind": "PlainText",
           "text": ".",
           "textExcerpt": {
            "startIndex": 11,
            "endIndex": 12
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Use module augmentation to add new properties to this object that ",
           "textExcerpt": {
            "startIndex": 14,
            "endIndex": 36
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useSearchParamState"
          },
          {
           "kind": "PlainText",
           "text": " will correctly understand:",
           "textExcerpt": {
            "startIndex": 39,
            "endIndex": 46
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "errorLocation": {
            "startIndex": 51,
            "endIndex": 52
           },
           "errorMessage": "Error parsing code fence: The language specifier cannot contain backtick characters",
           "kind": "ErrorText",
           "messageId": "tsdoc-code-fence-specifier-syntax",
           "text": "```",
           "textExcerpt": {
            "startIndex": 48,
            "endIndex": 51
           }
          },
          {
           "kind": "CodeSpan",
           "code": " declare module 'preact-prop-helpers' { interface SearchParamStates { numberState: number; stringState: string; } } "
          },
          {
           "errorLocation": {
            "startIndex": 90,
            "endIndex": 93
           },
           "errorMessage": "The opening backtick for a code fence must appear at the start of the line",
           "kind": "ErrorText",
           "messageId": "tsdoc-code-fence-opening-indent",
           "text": "```",
           "textExcerpt": {
            "startIndex": 90,
            "endIndex": 93
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SelectedIndexChangeEvent = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TargetedEnhancedEvent:type"
       },
       "kind": "Reference",
       "text": "TargetedEnhancedEvent"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": ", {\n    selectedIndex: number;\n}>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SelectedIndexChangeEvent:type"
     },
     "containerKey": "SelectedIndexChangeEvent|TypeAlias",
     "displayName": "SelectedIndexChangeEvent",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SelectedIndexChangeEvent = TargetedEnhancedEvent<Event, {\n    selectedIndex: number;\n}>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SelectedIndexChangeEvent = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TargetedEnhancedEvent:type"
        },
        "kind": "Reference",
        "text": "TargetedEnhancedEvent"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", {\n    selectedIndex: number;\n}>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SelectedIndexChangeEvent",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "TargetedEnhancedEvent<Event, {\n    selectedIndex: number;\n}>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TargetedEnhancedEvent:type"
        },
        "kind": "Reference",
        "text": "TargetedEnhancedEvent"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", {\n    selectedIndex: number;\n}>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SelectedIndexChangeHandler = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "EnhancedEventHandler:type"
       },
       "kind": "Reference",
       "text": "EnhancedEventHandler"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": ", {\n    selectedIndex: number;\n}>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SelectedIndexChangeHandler:type"
     },
     "containerKey": "SelectedIndexChangeHandler|TypeAlias",
     "displayName": "SelectedIndexChangeHandler",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SelectedIndexChangeHandler = EnhancedEventHandler<Event, {\n    selectedIndex: number;\n}>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SelectedIndexChangeHandler = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "EnhancedEventHandler:type"
        },
        "kind": "Reference",
        "text": "EnhancedEventHandler"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", {\n    selectedIndex: number;\n}>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SelectedIndexChangeHandler",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "EnhancedEventHandler<Event, {\n    selectedIndex: number;\n}>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "EnhancedEventHandler:type"
        },
        "kind": "Reference",
        "text": "EnhancedEventHandler"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", {\n    selectedIndex: number;\n}>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SetAttribute<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "kind": "Content",
       "text": "<K extends keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<T>>(prop: K, value: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<T>[K] | null) => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SetAttribute:type"
     },
     "containerKey": "SetAttribute|TypeAlias",
     "displayName": "SetAttribute",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SetAttribute<T extends Element> = <K extends keyof ElementProps<T>>(prop: K, value: ElementProps<T>[K] | null) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SetAttribute<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "kind": "Content",
        "text": "<K extends keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<T>>(prop: K, value: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<T>[K] | null) => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SetAttribute",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "<K extends keyof ElementProps<T>>(prop: K, value: ElementProps<T>[K] | null) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "<K extends keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<T>>(prop: K, value: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<T>[K] | null) => void"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SetChildren = "
      },
      {
       "kind": "Content",
       "text": "((children: string | null) => void)"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SetChildren:type"
     },
     "containerKey": "SetChildren|TypeAlias",
     "displayName": "SetChildren",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SetChildren = ((children: string | null) => void);",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SetChildren = "
       },
       {
        "kind": "Content",
        "text": "((children: string | null) => void)"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SetChildren",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "((children: string | null) => void)",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "((children: string | null) => void)"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SetClass = "
      },
      {
       "kind": "Content",
       "text": "(cls: string, enabled: boolean) => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SetClass:type"
     },
     "containerKey": "SetClass|TypeAlias",
     "displayName": "SetClass",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SetClass = (cls: string, enabled: boolean) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SetClass = "
       },
       {
        "kind": "Content",
        "text": "(cls: string, enabled: boolean) => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SetClass",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(cls: string, enabled: boolean) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(cls: string, enabled: boolean) => void"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SetEventHandler = "
      },
      {
       "kind": "Content",
       "text": "<K extends keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElementEventMap:interface"
       },
       "kind": "Reference",
       "text": "HTMLElementEventMap"
      },
      {
       "kind": "Content",
       "text": ">(type: K, listener: null | ((this: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElement:interface"
       },
       "kind": "Reference",
       "text": "HTMLElement"
      },
      {
       "kind": "Content",
       "text": ", ev: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElementEventMap:interface"
       },
       "kind": "Reference",
       "text": "HTMLElementEventMap"
      },
      {
       "kind": "Content",
       "text": "[K]) => void), options: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "AddEventListenerOptions:interface"
       },
       "kind": "Reference",
       "text": "AddEventListenerOptions"
      },
      {
       "kind": "Content",
       "text": ") => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SetEventHandler:type"
     },
     "containerKey": "SetEventHandler|TypeAlias",
     "displayName": "SetEventHandler",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SetEventHandler = <K extends keyof HTMLElementEventMap>(type: K, listener: null | ((this: HTMLElement, ev: HTMLElementEventMap[K]) => void), options: AddEventListenerOptions) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SetEventHandler = "
       },
       {
        "kind": "Content",
        "text": "<K extends keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElementEventMap:interface"
        },
        "kind": "Reference",
        "text": "HTMLElementEventMap"
       },
       {
        "kind": "Content",
        "text": ">(type: K, listener: null | ((this: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElement:interface"
        },
        "kind": "Reference",
        "text": "HTMLElement"
       },
       {
        "kind": "Content",
        "text": ", ev: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElementEventMap:interface"
        },
        "kind": "Reference",
        "text": "HTMLElementEventMap"
       },
       {
        "kind": "Content",
        "text": "[K]) => void), options: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "AddEventListenerOptions:interface"
        },
        "kind": "Reference",
        "text": "AddEventListenerOptions"
       },
       {
        "kind": "Content",
        "text": ") => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SetEventHandler",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "<K extends keyof HTMLElementEventMap>(type: K, listener: null | ((this: HTMLElement, ev: HTMLElementEventMap[K]) => void), options: AddEventListenerOptions) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "<K extends keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElementEventMap:interface"
        },
        "kind": "Reference",
        "text": "HTMLElementEventMap"
       },
       {
        "kind": "Content",
        "text": ">(type: K, listener: null | ((this: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElement:interface"
        },
        "kind": "Reference",
        "text": "HTMLElement"
       },
       {
        "kind": "Content",
        "text": ", ev: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElementEventMap:interface"
        },
        "kind": "Reference",
        "text": "HTMLElementEventMap"
       },
       {
        "kind": "Content",
        "text": "[K]) => void), options: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "AddEventListenerOptions:interface"
        },
        "kind": "Reference",
        "text": "AddEventListenerOptions"
       },
       {
        "kind": "Content",
        "text": ") => void"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SetParamWithHistory<T> = "
      },
      {
       "kind": "Content",
       "text": "(value: T | ((prevValue: T) => T), reason?: \"push\" | \"replace\") => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SetParamWithHistory:type"
     },
     "containerKey": "SetParamWithHistory|TypeAlias",
     "displayName": "SetParamWithHistory",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SetParamWithHistory<T> = (value: T | ((prevValue: T) => T), reason?: \"push\" | \"replace\") => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SetParamWithHistory<T> = "
       },
       {
        "kind": "Content",
        "text": "(value: T | ((prevValue: T) => T), reason?: \"push\" | \"replace\") => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/preact-extensions/use-search-param-state.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SetParamWithHistory",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(value: T | ((prevValue: T) => T), reason?: \"push\" | \"replace\") => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(value: T | ((prevValue: T) => T), reason?: \"push\" | \"replace\") => void"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "setPressVibrate:function(1)"
     },
     "kind": "Function",
     "containerKey": "setPressVibrate|Function|1",
     "displayName": "setPressVibrate",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function setPressVibrate(func: () => void): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function setPressVibrate(func: "
       },
       {
        "kind": "Content",
        "text": "() => void"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "setPressVibrate",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "func",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "() => void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => void"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "tsdocParamBlock": {
        "parameterName": "func",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The function to run when a button is tapped. (Default is ",
             "textExcerpt": {
              "startIndex": 41,
              "endIndex": 65
             }
            },
            {
             "kind": "CodeSpan",
             "code": "() => navigator.vibrate(10)"
            },
            {
             "kind": "PlainText",
             "text": " in browsers that support it, a noop otherwise)",
             "textExcerpt": {
              "startIndex": 79,
              "endIndex": 97
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "This function can be used to enable/disable button vibration pulses on an app-wide scale.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 32
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "func",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The function to run when a button is tapped. (Default is ",
              "textExcerpt": {
               "startIndex": 41,
               "endIndex": 65
              }
             },
             {
              "kind": "CodeSpan",
              "code": "() => navigator.vibrate(10)"
             },
             {
              "kind": "PlainText",
              "text": " in browsers that support it, a noop otherwise)",
              "textExcerpt": {
               "startIndex": 79,
               "endIndex": 97
              }
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function setPressVibrate(func: "
      },
      {
       "kind": "Content",
       "text": "() => void"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SetStyle = "
      },
      {
       "kind": "Content",
       "text": "<T extends (keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "CSSStyleDeclaration:interface"
       },
       "kind": "Reference",
       "text": "CSSStyleDeclaration"
      },
      {
       "kind": "Content",
       "text": ") & string>(prop: T, value: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "CSSProperties:type"
       },
       "kind": "Reference",
       "text": "CSSProperties"
      },
      {
       "kind": "Content",
       "text": "[T] | null) => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SetStyle:type"
     },
     "containerKey": "SetStyle|TypeAlias",
     "displayName": "SetStyle",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SetStyle = <T extends (keyof CSSStyleDeclaration) & string>(prop: T, value: CSSProperties[T] | null) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SetStyle = "
       },
       {
        "kind": "Content",
        "text": "<T extends (keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "CSSStyleDeclaration:interface"
        },
        "kind": "Reference",
        "text": "CSSStyleDeclaration"
       },
       {
        "kind": "Content",
        "text": ") & string>(prop: T, value: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "CSSProperties:type"
        },
        "kind": "Reference",
        "text": "CSSProperties"
       },
       {
        "kind": "Content",
        "text": "[T] | null) => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SetStyle",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "<T extends (keyof CSSStyleDeclaration) & string>(prop: T, value: CSSProperties[T] | null) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "<T extends (keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "CSSStyleDeclaration:interface"
        },
        "kind": "Reference",
        "text": "CSSStyleDeclaration"
       },
       {
        "kind": "Content",
        "text": ") & string>(prop: T, value: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "CSSProperties:type"
        },
        "kind": "Reference",
        "text": "CSSProperties"
       },
       {
        "kind": "Content",
        "text": "[T] | null) => void"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type SetTabbableIndex = "
      },
      {
       "kind": "Content",
       "text": "(updater: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Parameters:type"
       },
       "kind": "Reference",
       "text": "Parameters"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PassiveStateUpdater:type"
       },
       "kind": "Reference",
       "text": "PassiveStateUpdater"
      },
      {
       "kind": "Content",
       "text": "<number | null, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": ">>[0], reason: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": " | undefined, fromUserInteraction: boolean) => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "SetTabbableIndex:type"
     },
     "containerKey": "SetTabbableIndex|TypeAlias",
     "displayName": "SetTabbableIndex",
     "excerpt": {
      "isEmpty": false,
      "text": "export type SetTabbableIndex = (updater: Parameters<PassiveStateUpdater<number | null, Event>>[0], reason: Event | undefined, fromUserInteraction: boolean) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type SetTabbableIndex = "
       },
       {
        "kind": "Content",
        "text": "(updater: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Parameters:type"
        },
        "kind": "Reference",
        "text": "Parameters"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PassiveStateUpdater:type"
        },
        "kind": "Reference",
        "text": "PassiveStateUpdater"
       },
       {
        "kind": "Content",
        "text": "<number | null, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ">>[0], reason: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": " | undefined, fromUserInteraction: boolean) => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-roving-tabindex.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "SetTabbableIndex",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(updater: Parameters<PassiveStateUpdater<number | null, Event>>[0], reason: Event | undefined, fromUserInteraction: boolean) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(updater: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Parameters:type"
        },
        "kind": "Reference",
        "text": "Parameters"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PassiveStateUpdater:type"
        },
        "kind": "Reference",
        "text": "PassiveStateUpdater"
       },
       {
        "kind": "Content",
        "text": "<number | null, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ">>[0], reason: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": " | undefined, fromUserInteraction: boolean) => void"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "storeToLocalStorage:function(1)"
     },
     "kind": "Function",
     "containerKey": "storeToLocalStorage|Function|1",
     "displayName": "storeToLocalStorage",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function storeToLocalStorage<Key extends (keyof PersistentStates) & string>(key: Key, value: PersistentStates[Key], converter?: ((input: PersistentStates[Key]) => string), storage?: Storage): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function storeToLocalStorage<Key extends "
       },
       {
        "kind": "Content",
        "text": "(keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": ") & string"
       },
       {
        "kind": "Content",
        "text": ">(key: "
       },
       {
        "kind": "Content",
        "text": "Key"
       },
       {
        "kind": "Content",
        "text": ", value: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": "[Key]"
       },
       {
        "kind": "Content",
        "text": ", converter?: "
       },
       {
        "kind": "Content",
        "text": "((input: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": "[Key]) => string)"
       },
       {
        "kind": "Content",
        "text": ", storage?: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Storage:interface"
        },
        "kind": "Reference",
        "text": "Storage"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "storeToLocalStorage",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "key",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Key",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "Key"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       }
      },
      {
       "isOptional": false,
       "name": "value",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "PersistentStates[Key]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PersistentStates:interface"
          },
          "kind": "Reference",
          "text": "PersistentStates"
         },
         {
          "kind": "Content",
          "text": "[Key]"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       }
      },
      {
       "isOptional": true,
       "name": "converter",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "((input: PersistentStates[Key]) => string)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "((input: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PersistentStates:interface"
          },
          "kind": "Reference",
          "text": "PersistentStates"
         },
         {
          "kind": "Content",
          "text": "[Key]) => string)"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 10
        }
       }
      },
      {
       "isOptional": true,
       "name": "storage",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Storage",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Storage:interface"
          },
          "kind": "Reference",
          "text": "Storage"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 14
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 17,
       "startIndex": 16
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "(keyof PersistentStates) & string",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PersistentStates:interface"
          },
          "kind": "Reference",
          "text": "PersistentStates"
         },
         {
          "kind": "Content",
          "text": ") & string"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Key"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function storeToLocalStorage<Key extends "
      },
      {
       "kind": "Content",
       "text": "(keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PersistentStates:interface"
       },
       "kind": "Reference",
       "text": "PersistentStates"
      },
      {
       "kind": "Content",
       "text": ") & string"
      },
      {
       "kind": "Content",
       "text": ">(key: "
      },
      {
       "kind": "Content",
       "text": "Key"
      },
      {
       "kind": "Content",
       "text": ", value: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PersistentStates:interface"
       },
       "kind": "Reference",
       "text": "PersistentStates"
      },
      {
       "kind": "Content",
       "text": "[Key]"
      },
      {
       "kind": "Content",
       "text": ", converter?: "
      },
      {
       "kind": "Content",
       "text": "((input: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PersistentStates:interface"
       },
       "kind": "Reference",
       "text": "PersistentStates"
      },
      {
       "kind": "Content",
       "text": "[Key]) => string)"
      },
      {
       "kind": "Content",
       "text": ", storage?: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Storage:interface"
       },
       "kind": "Reference",
       "text": "Storage"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type TargetedEnhancedEvent<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": ", Detail> = "
      },
      {
       "kind": "Content",
       "text": "E & {\n    ["
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "EventDetail:var"
       },
       "kind": "Reference",
       "text": "EventDetail"
      },
      {
       "kind": "Content",
       "text": "]: Detail;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "TargetedEnhancedEvent:type"
     },
     "containerKey": "TargetedEnhancedEvent|TypeAlias",
     "displayName": "TargetedEnhancedEvent",
     "excerpt": {
      "isEmpty": false,
      "text": "export type TargetedEnhancedEvent<E extends Event, Detail> = E & {\n    [EventDetail]: Detail;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type TargetedEnhancedEvent<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", Detail> = "
       },
       {
        "kind": "Content",
        "text": "E & {\n    ["
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "EventDetail:var"
        },
        "kind": "Reference",
        "text": "EventDetail"
       },
       {
        "kind": "Content",
        "text": "]: Detail;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/event.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "TargetedEnhancedEvent",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "E & {\n    [EventDetail]: Detail;\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "E & {\n    ["
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "EventDetail:var"
        },
        "kind": "Reference",
        "text": "EventDetail"
       },
       {
        "kind": "Content",
        "text": "]: Detail;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Event",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Detail"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "TestClass:class"
     },
     "excerpt": {
      "isEmpty": false,
      "text": "export declare class TestClass<T> extends TestClassBase ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare class TestClass<T> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "TestClassBase:class"
        },
        "kind": "Reference",
        "text": "TestClassBase"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "displayName": "TestClass",
     "containerKey": "TestClass|Class",
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare class TestClass<T> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "TestClassBase:class"
       },
       "kind": "Reference",
       "text": "TestClassBase"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "fileUrlPath": "src/util/temp.tsx",
     "extendsType": {
      "excerpt": {
       "isEmpty": false,
       "text": "TestClassBase",
       "spannedTokens": [
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "TestClassBase:class"
         },
         "kind": "Reference",
         "text": "TestClassBase"
        }
       ],
       "tokenRange": {
        "endIndex": 2,
        "startIndex": 1
       }
      }
     },
     "isAbstract": false,
     "isExported": true,
     "implementsTypes": [],
     "kind": "Class",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestClass:constructor(1)"
       },
       "displayName": "(constructor)",
       "excerpt": {
        "isEmpty": false,
        "text": "constructor();",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "constructor();"
         }
        ],
        "tokenRange": {
         "endIndex": 1,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "constructor();"
        }
       ],
       "containerKey": "|Constructor|1",
       "overloadIndex": 1,
       "parameters": [],
       "kind": "Constructor",
       "members": [],
       "releaseTag": 4,
       "isProtected": false,
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Constructs a new instance of the ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 12
             }
            },
            {
             "kind": "CodeSpan",
             "code": "TestClass"
            },
            {
             "kind": "PlainText",
             "text": " class",
             "textExcerpt": {
              "startIndex": 15,
              "endIndex": 17
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestClass#abstractFrob:member(1)"
       },
       "displayName": "abstractFrob",
       "excerpt": {
        "isEmpty": false,
        "text": "abstractFrob(): number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "abstractFrob(): "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "abstractFrob(): "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "abstractFrob|Method|instance|1",
       "isOptional": false,
       "isAbstract": false,
       "isProtected": false,
       "isStatic": false,
       "name": "abstractFrob",
       "kind": "Method",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Summary of frob (implemented)",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 9
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestClass#foo:member(1)"
       },
       "displayName": "foo",
       "excerpt": {
        "isEmpty": false,
        "text": "foo<T>(): NonNullable<T>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "foo<T>(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<T>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "foo<T>(): "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NonNullable:type"
         },
         "kind": "Reference",
         "text": "NonNullable"
        },
        {
         "kind": "Content",
         "text": "<T>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "foo|Method|instance|1",
       "isOptional": false,
       "isAbstract": false,
       "isProtected": false,
       "isStatic": false,
       "name": "foo",
       "kind": "Method",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [
        {
         "constraintExcerpt": {
          "isEmpty": true,
          "text": "",
          "spannedTokens": [],
          "tokenRange": {
           "endIndex": 0,
           "startIndex": 0
          }
         },
         "defaultTypeExcerpt": {
          "isEmpty": true,
          "text": "",
          "spannedTokens": [],
          "tokenRange": {
           "endIndex": 0,
           "startIndex": 0
          }
         },
         "isOptional": false,
         "name": "T"
        }
       ],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "NonNullable<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Summary of foo",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 5
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestClass#frob:member(1)"
       },
       "displayName": "frob",
       "excerpt": {
        "isEmpty": false,
        "text": "frob(): number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "frob(): "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "frob(): "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "frob|Method|instance|1",
       "isOptional": false,
       "isAbstract": false,
       "isProtected": false,
       "isStatic": false,
       "name": "frob",
       "kind": "Method",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Summary of frob (overridden)",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 9
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "name": "TestClass",
     "preserveMemberOrder": false,
     "releaseTag": 4,
     "tsdocComment": {
      "kind": "Comment",
      "remarksBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@remarks"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           },
           {
            "kind": "SoftBreak"
           },
           {
            "kind": "PlainText",
            "text": "Extra remarks",
            "textExcerpt": {
             "startIndex": 11,
             "endIndex": 14
            }
           },
           {
            "kind": "SoftBreak"
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Summary of TestClass",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 5
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [
        {
         "parameterName": "T",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "A type parameter",
              "textExcerpt": {
               "startIndex": 23,
               "endIndex": 28
              }
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@typeParam"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T",
       "tsdocTypeParamBlock": {
        "parameterName": "T",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "A type parameter",
             "textExcerpt": {
              "startIndex": 23,
              "endIndex": 28
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@typeParam"
        }
       }
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "TestEnum:enum"
     },
     "containerKey": "TestEnum|Enum",
     "displayName": "TestEnum",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare const enum TestEnum ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare const enum TestEnum "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare const enum TestEnum "
      }
     ],
     "fileUrlPath": "src/util/temp.tsx",
     "isExported": true,
     "kind": "Enum",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestEnum.A:member"
       },
       "displayName": "A",
       "excerpt": {
        "isEmpty": false,
        "text": "A = 0",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "A = "
         },
         {
          "kind": "Content",
          "text": "0"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "A = "
        },
        {
         "kind": "Content",
         "text": "0"
        }
       ],
       "containerKey": "A",
       "name": "A",
       "kind": "EnumMember",
       "members": [],
       "releaseTag": 4,
       "initializerExcerpt": {
        "isEmpty": false,
        "text": "0",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "0"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestEnum.B:member"
       },
       "displayName": "B",
       "excerpt": {
        "isEmpty": false,
        "text": "B = 1",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "B = "
         },
         {
          "kind": "Content",
          "text": "1"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "B = "
        },
        {
         "kind": "Content",
         "text": "1"
        }
       ],
       "containerKey": "B",
       "name": "B",
       "kind": "EnumMember",
       "members": [],
       "releaseTag": 4,
       "initializerExcerpt": {
        "isEmpty": false,
        "text": "1",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "1"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestEnum.C:member"
       },
       "displayName": "C",
       "excerpt": {
        "isEmpty": false,
        "text": "C = 2",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "C = "
         },
         {
          "kind": "Content",
          "text": "2"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "C = "
        },
        {
         "kind": "Content",
         "text": "2"
        }
       ],
       "containerKey": "C",
       "name": "C",
       "kind": "EnumMember",
       "members": [],
       "releaseTag": 4,
       "initializerExcerpt": {
        "isEmpty": false,
        "text": "2",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "2"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestEnum.D:member"
       },
       "displayName": "D",
       "excerpt": {
        "isEmpty": false,
        "text": "D = 3",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "D = "
         },
         {
          "kind": "Content",
          "text": "3"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "D = "
        },
        {
         "kind": "Content",
         "text": "3"
        }
       ],
       "containerKey": "D",
       "name": "D",
       "kind": "EnumMember",
       "members": [],
       "releaseTag": 4,
       "initializerExcerpt": {
        "isEmpty": false,
        "text": "3",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "3"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestEnum.E:member"
       },
       "displayName": "E",
       "excerpt": {
        "isEmpty": false,
        "text": "E = 4",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "E = "
         },
         {
          "kind": "Content",
          "text": "4"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "E = "
        },
        {
         "kind": "Content",
         "text": "4"
        }
       ],
       "containerKey": "E",
       "name": "E",
       "kind": "EnumMember",
       "members": [],
       "releaseTag": 4,
       "initializerExcerpt": {
        "isEmpty": false,
        "text": "4",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "4"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TestEnum.F:member"
       },
       "displayName": "F",
       "excerpt": {
        "isEmpty": false,
        "text": "F = 5",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "F = "
         },
         {
          "kind": "Content",
          "text": "5"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "F = "
        },
        {
         "kind": "Content",
         "text": "5"
        }
       ],
       "containerKey": "F",
       "name": "F",
       "kind": "EnumMember",
       "members": [],
       "releaseTag": 4,
       "initializerExcerpt": {
        "isEmpty": false,
        "text": "5",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "5"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "name": "TestEnum",
     "preserveMemberOrder": false,
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Summary of TestEnum",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 5
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "sourceLocation": {},
     "releaseTag": 4
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type TouchEventType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.TargetedTouchEvent:type"
       },
       "kind": "Reference",
       "text": "JSX.TargetedTouchEvent"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "TouchEventType:type"
     },
     "containerKey": "TouchEventType|TypeAlias",
     "displayName": "TouchEventType",
     "excerpt": {
      "isEmpty": false,
      "text": "export type TouchEventType<E extends EventTarget> = JSX.TargetedTouchEvent<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type TouchEventType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedTouchEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedTouchEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "TouchEventType",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.TargetedTouchEvent<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.TargetedTouchEvent:type"
        },
        "kind": "Reference",
        "text": "JSX.TargetedTouchEvent"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 3
      }
     },
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "tryNavigateToIndex:function(1)"
     },
     "kind": "Function",
     "containerKey": "tryNavigateToIndex|Function|1",
     "displayName": "tryNavigateToIndex",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function tryNavigateToIndex({ isValid, highestChildIndex, searchDirection, indexDemangler, indexMangler, targetUnmangled }: TryNavigateToIndexParameters): LinearNavigationResult;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function tryNavigateToIndex({ isValid, highestChildIndex, searchDirection, indexDemangler, indexMangler, targetUnmangled }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TryNavigateToIndexParameters:interface"
        },
        "kind": "Reference",
        "text": "TryNavigateToIndexParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "LinearNavigationResult:interface"
        },
        "kind": "Reference",
        "text": "LinearNavigationResult"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "tryNavigateToIndex",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ isValid, highestChildIndex, searchDirection, indexDemangler, indexMangler, targetUnmangled }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "TryNavigateToIndexParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "TryNavigateToIndexParameters:interface"
          },
          "kind": "Reference",
          "text": "TryNavigateToIndexParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "LinearNavigationResult",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "LinearNavigationResult:interface"
        },
        "kind": "Reference",
        "text": "LinearNavigationResult"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function tryNavigateToIndex({ isValid, highestChildIndex, searchDirection, indexDemangler, indexMangler, targetUnmangled }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TryNavigateToIndexParameters:interface"
       },
       "kind": "Reference",
       "text": "TryNavigateToIndexParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "LinearNavigationResult:interface"
       },
       "kind": "Reference",
       "text": "LinearNavigationResult"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "TryNavigateToIndexParameters:interface"
     },
     "containerKey": "TryNavigateToIndexParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface TryNavigateToIndexParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface TryNavigateToIndexParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface TryNavigateToIndexParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "TryNavigateToIndexParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-linear-navigation.tsx",
     "isExported": true,
     "name": "TryNavigateToIndexParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TryNavigateToIndexParameters#highestChildIndex:member"
       },
       "displayName": "highestChildIndex",
       "excerpt": {
        "isEmpty": false,
        "text": "highestChildIndex: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "highestChildIndex: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "highestChildIndex: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "highestChildIndex|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "highestChildIndex",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TryNavigateToIndexParameters#indexDemangler:member"
       },
       "displayName": "indexDemangler",
       "excerpt": {
        "isEmpty": false,
        "text": "indexDemangler: (n: number) => number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "indexDemangler: "
         },
         {
          "kind": "Content",
          "text": "(n: number) => number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "indexDemangler: "
        },
        {
         "kind": "Content",
         "text": "(n: number) => number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "indexDemangler|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "indexDemangler",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "(n: number) => number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(n: number) => number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TryNavigateToIndexParameters#indexMangler:member"
       },
       "displayName": "indexMangler",
       "excerpt": {
        "isEmpty": false,
        "text": "indexMangler: (n: number) => number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "indexMangler: "
         },
         {
          "kind": "Content",
          "text": "(n: number) => number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "indexMangler: "
        },
        {
         "kind": "Content",
         "text": "(n: number) => number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "indexMangler|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "indexMangler",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "(n: number) => number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(n: number) => number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TryNavigateToIndexParameters#isValid:member(1)"
       },
       "displayName": "isValid",
       "excerpt": {
        "isEmpty": false,
        "text": "isValid(index: number): boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "isValid(index: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "isValid(index: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "isValid|MethodSignature|1",
       "isOptional": false,
       "name": "isValid",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "index",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "number",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "number"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TryNavigateToIndexParameters#searchDirection:member"
       },
       "displayName": "searchDirection",
       "excerpt": {
        "isEmpty": false,
        "text": "searchDirection: 1 | -1;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "searchDirection: "
         },
         {
          "kind": "Content",
          "text": "1 | -1"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "searchDirection: "
        },
        {
         "kind": "Content",
         "text": "1 | -1"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "searchDirection|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "searchDirection",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "1 | -1",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "1 | -1"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TryNavigateToIndexParameters#targetUnmangled:member"
       },
       "displayName": "targetUnmangled",
       "excerpt": {
        "isEmpty": false,
        "text": "targetUnmangled: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "targetUnmangled: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "targetUnmangled: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "targetUnmangled|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "targetUnmangled",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type TypeAliasBase = "
      },
      {
       "kind": "Content",
       "text": "'foo'"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "TypeAliasBase:type"
     },
     "containerKey": "TypeAliasBase|TypeAlias",
     "displayName": "TypeAliasBase",
     "excerpt": {
      "isEmpty": false,
      "text": "export type TypeAliasBase = 'foo';",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type TypeAliasBase = "
       },
       {
        "kind": "Content",
        "text": "'foo'"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/temp.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "TypeAliasBase",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "'foo'",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "'foo'"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type TypeAliasDerived = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "TypeAliasBase:type"
       },
       "kind": "Reference",
       "text": "TypeAliasBase"
      },
      {
       "kind": "Content",
       "text": " | 'bar'"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "TypeAliasDerived:type"
     },
     "containerKey": "TypeAliasDerived|TypeAlias",
     "displayName": "TypeAliasDerived",
     "excerpt": {
      "isEmpty": false,
      "text": "export type TypeAliasDerived = TypeAliasBase | 'bar';",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type TypeAliasDerived = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TypeAliasBase:type"
        },
        "kind": "Reference",
        "text": "TypeAliasBase"
       },
       {
        "kind": "Content",
        "text": " | 'bar'"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/temp.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "TypeAliasDerived",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "TypeAliasBase | 'bar'",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "TypeAliasBase:type"
        },
        "kind": "Reference",
        "text": "TypeAliasBase"
       },
       {
        "kind": "Content",
        "text": " | 'bar'"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type UpdatePortalChild = "
      },
      {
       "kind": "Content",
       "text": "(index: number, child: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "VNode:type"
       },
       "kind": "Reference",
       "text": "VNode"
      },
      {
       "kind": "Content",
       "text": ") => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UpdatePortalChild:type"
     },
     "containerKey": "UpdatePortalChild|TypeAlias",
     "displayName": "UpdatePortalChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export type UpdatePortalChild = (index: number, child: VNode) => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type UpdatePortalChild = "
       },
       {
        "kind": "Content",
        "text": "(index: number, child: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "VNode:type"
        },
        "kind": "Reference",
        "text": "VNode"
       },
       {
        "kind": "Content",
        "text": ") => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/dom-helpers/use-portal-children.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "UpdatePortalChild",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "(index: number, child: VNode) => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "(index: number, child: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "VNode:type"
        },
        "kind": "Reference",
        "text": "VNode"
       },
       {
        "kind": "Content",
        "text": ") => void"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useActiveElement:function(1)"
     },
     "kind": "Function",
     "containerKey": "useActiveElement|Function|1",
     "displayName": "useActiveElement",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useActiveElement({ activeElementParameters: { onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange, getDocument, getWindow } }: UseActiveElementParameters): UseActiveElementReturnType;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useActiveElement({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseActiveElementParameters#activeElementParameters"
        },
        "kind": "Reference",
        "text": "activeElementParameters"
       },
       {
        "kind": "Content",
        "text": ": { onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange, getDocument, getWindow } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseActiveElementParameters:interface"
        },
        "kind": "Reference",
        "text": "UseActiveElementParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseActiveElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseActiveElementReturnType"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useActiveElement",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ activeElementParameters: { onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange, getDocument, getWindow } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseActiveElementParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseActiveElementParameters:interface"
          },
          "kind": "Reference",
          "text": "UseActiveElementParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseActiveElementReturnType",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseActiveElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseActiveElementReturnType"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows you to inspect which element in the ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 16
           }
          },
          {
           "kind": "CodeSpan",
           "code": "document"
          },
          {
           "kind": "PlainText",
           "text": " currently has focus, which was most recently focused if none are currently, and whether or not the window has focus by returning the following functions: * ",
           "textExcerpt": {
            "startIndex": 19,
            "endIndex": 75
           }
          },
          {
           "kind": "CodeSpan",
           "code": "getActiveElement()"
          },
          {
           "kind": "PlainText",
           "text": " * ",
           "textExcerpt": {
            "startIndex": 80,
            "endIndex": 83
           }
          },
          {
           "kind": "CodeSpan",
           "code": "getLastActiveElement()"
          },
          {
           "kind": "PlainText",
           "text": " * ",
           "textExcerpt": {
            "startIndex": 88,
            "endIndex": 91
           }
          },
          {
           "kind": "CodeSpan",
           "code": "getWindowFocused()"
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "(The document's body receiving focus, like it does when you click on an empty area, is counted as no element having focus for all intents and purposes)",
           "textExcerpt": {
            "startIndex": 98,
            "endIndex": 157
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "This is a passive hook, so by default it returns getter functions that report this information but the component will not re-render by default when the active element changes.",
           "textExcerpt": {
            "startIndex": 159,
            "endIndex": 220
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "If you need the component to re-render when the active element changes, use the ",
           "textExcerpt": {
            "startIndex": 222,
            "endIndex": 253
           }
          },
          {
           "kind": "CodeSpan",
           "code": "on*Change"
          },
          {
           "kind": "PlainText",
           "text": " arguments to set some state on your end.",
           "textExcerpt": {
            "startIndex": 258,
            "endIndex": 275
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useActiveElement({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseActiveElementParameters#activeElementParameters"
       },
       "kind": "Reference",
       "text": "activeElementParameters"
      },
      {
       "kind": "Content",
       "text": ": { onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange, getDocument, getWindow } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseActiveElementParameters:interface"
       },
       "kind": "Reference",
       "text": "UseActiveElementParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseActiveElementReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseActiveElementReturnType"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseActiveElementParameters:interface"
     },
     "containerKey": "UseActiveElementParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseActiveElementParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseActiveElementParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseActiveElementParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseActiveElementParameters",
     "fileUrlPath": "src/observers/use-active-element.tsx",
     "isExported": true,
     "name": "UseActiveElementParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseActiveElementParameters#activeElementParameters:member"
       },
       "displayName": "activeElementParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "activeElementParameters: {\n        onActiveElementChange?: OnPassiveStateChange<Element | null, FocusEvent> | null | undefined;\n        onLastActiveElementChange?: OnPassiveStateChange<Element, FocusEvent> | null | undefined;\n        onWindowFocusedChange?: OnPassiveStateChange<boolean, FocusEvent> | null | undefined;\n        getDocument(): Document;\n        getWindow?: ((document: Document) => Window) | null | undefined;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "activeElementParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onActiveElementChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "FocusEvent:interface"
          },
          "kind": "Reference",
          "text": "FocusEvent"
         },
         {
          "kind": "Content",
          "text": "> | null | undefined;\n        onLastActiveElementChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": ", "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "FocusEvent:interface"
          },
          "kind": "Reference",
          "text": "FocusEvent"
         },
         {
          "kind": "Content",
          "text": "> | null | undefined;\n        onWindowFocusedChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "FocusEvent:interface"
          },
          "kind": "Reference",
          "text": "FocusEvent"
         },
         {
          "kind": "Content",
          "text": "> | null | undefined;\n        getDocument(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Document:interface"
          },
          "kind": "Reference",
          "text": "Document"
         },
         {
          "kind": "Content",
          "text": ";\n        getWindow?: ((document: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Document:interface"
          },
          "kind": "Reference",
          "text": "Document"
         },
         {
          "kind": "Content",
          "text": ") => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Window:interface"
          },
          "kind": "Reference",
          "text": "Window"
         },
         {
          "kind": "Content",
          "text": ") | null | undefined;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 25,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "activeElementParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onActiveElementChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Element:interface"
         },
         "kind": "Reference",
         "text": "Element"
        },
        {
         "kind": "Content",
         "text": " | null, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "FocusEvent:interface"
         },
         "kind": "Reference",
         "text": "FocusEvent"
        },
        {
         "kind": "Content",
         "text": "> | null | undefined;\n        onLastActiveElementChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Element:interface"
         },
         "kind": "Reference",
         "text": "Element"
        },
        {
         "kind": "Content",
         "text": ", "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "FocusEvent:interface"
         },
         "kind": "Reference",
         "text": "FocusEvent"
        },
        {
         "kind": "Content",
         "text": "> | null | undefined;\n        onWindowFocusedChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<boolean, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "FocusEvent:interface"
         },
         "kind": "Reference",
         "text": "FocusEvent"
        },
        {
         "kind": "Content",
         "text": "> | null | undefined;\n        getDocument(): "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Document:interface"
         },
         "kind": "Reference",
         "text": "Document"
        },
        {
         "kind": "Content",
         "text": ";\n        getWindow?: ((document: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Document:interface"
         },
         "kind": "Reference",
         "text": "Document"
        },
        {
         "kind": "Content",
         "text": ") => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Window:interface"
         },
         "kind": "Reference",
         "text": "Window"
        },
        {
         "kind": "Content",
         "text": ") | null | undefined;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "activeElementParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "activeElementParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onActiveElementChange?: OnPassiveStateChange<Element | null, FocusEvent> | null | undefined;\n        onLastActiveElementChange?: OnPassiveStateChange<Element, FocusEvent> | null | undefined;\n        onWindowFocusedChange?: OnPassiveStateChange<boolean, FocusEvent> | null | undefined;\n        getDocument(): Document;\n        getWindow?: ((document: Document) => Window) | null | undefined;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onActiveElementChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "FocusEvent:interface"
          },
          "kind": "Reference",
          "text": "FocusEvent"
         },
         {
          "kind": "Content",
          "text": "> | null | undefined;\n        onLastActiveElementChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": ", "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "FocusEvent:interface"
          },
          "kind": "Reference",
          "text": "FocusEvent"
         },
         {
          "kind": "Content",
          "text": "> | null | undefined;\n        onWindowFocusedChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "FocusEvent:interface"
          },
          "kind": "Reference",
          "text": "FocusEvent"
         },
         {
          "kind": "Content",
          "text": "> | null | undefined;\n        getDocument(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Document:interface"
          },
          "kind": "Reference",
          "text": "Document"
         },
         {
          "kind": "Content",
          "text": ";\n        getWindow?: ((document: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Document:interface"
          },
          "kind": "Reference",
          "text": "Document"
         },
         {
          "kind": "Content",
          "text": ") => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Window:interface"
          },
          "kind": "Reference",
          "text": "Window"
         },
         {
          "kind": "Content",
          "text": ") | null | undefined;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 24,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseActiveElementReturnType:interface"
     },
     "containerKey": "UseActiveElementReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseActiveElementReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseActiveElementReturnType "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseActiveElementReturnType "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseActiveElementReturnType",
     "fileUrlPath": "src/observers/use-active-element.tsx",
     "isExported": true,
     "name": "UseActiveElementReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseActiveElementReturnType#activeElementReturn:member"
       },
       "displayName": "activeElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "activeElementReturn: {\n        getActiveElement: () => Element | null;\n        getLastActiveElement: () => Element;\n        getWindowFocused: () => boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "activeElementReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getActiveElement: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null;\n        getLastActiveElement: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": ";\n        getWindowFocused: () => boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "activeElementReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getActiveElement: () => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Element:interface"
         },
         "kind": "Reference",
         "text": "Element"
        },
        {
         "kind": "Content",
         "text": " | null;\n        getLastActiveElement: () => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Element:interface"
         },
         "kind": "Reference",
         "text": "Element"
        },
        {
         "kind": "Content",
         "text": ";\n        getWindowFocused: () => boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "activeElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "activeElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getActiveElement: () => Element | null;\n        getLastActiveElement: () => Element;\n        getWindowFocused: () => boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getActiveElement: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null;\n        getLastActiveElement: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": ";\n        getWindowFocused: () => boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useAnimationFrame:function(1)"
     },
     "kind": "Function",
     "containerKey": "useAnimationFrame|Function|1",
     "displayName": "useAnimationFrame",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useAnimationFrame({ callback }: UseAnimationFrameParameters): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useAnimationFrame({ callback }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAnimationFrameParameters:interface"
        },
        "kind": "Reference",
        "text": "UseAnimationFrameParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useAnimationFrame",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ callback }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseAnimationFrameParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseAnimationFrameParameters:interface"
          },
          "kind": "Reference",
          "text": "UseAnimationFrameParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "The (optionally non-stable) ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 10
           }
          },
          {
           "kind": "CodeSpan",
           "code": "callback"
          },
          {
           "kind": "PlainText",
           "text": " you provide will start running every frame after the component mounts.",
           "textExcerpt": {
            "startIndex": 13,
            "endIndex": 36
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Passing ",
           "textExcerpt": {
            "startIndex": 38,
            "endIndex": 40
           }
          },
          {
           "kind": "CodeSpan",
           "code": "null"
          },
          {
           "kind": "PlainText",
           "text": " is fine and simply stops the effect until you restart it by providing a non-null callback.",
           "textExcerpt": {
            "startIndex": 43,
            "endIndex": 78
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "**This hook does not return anything at all, including no prop-modifying hooks**",
           "textExcerpt": {
            "startIndex": 80,
            "endIndex": 110
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useAnimationFrame({ callback }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAnimationFrameParameters:interface"
       },
       "kind": "Reference",
       "text": "UseAnimationFrameParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseAnimationFrameParameters:interface"
     },
     "containerKey": "UseAnimationFrameParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseAnimationFrameParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseAnimationFrameParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseAnimationFrameParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseAnimationFrameParameters",
     "fileUrlPath": "src/timing/use-animation-frame.tsx",
     "isExported": true,
     "name": "UseAnimationFrameParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAnimationFrameParameters#callback:member"
       },
       "displayName": "callback",
       "excerpt": {
        "isEmpty": false,
        "text": "callback: null | ((msSinceLast: number) => void);",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "callback: "
         },
         {
          "kind": "Content",
          "text": "null | ((msSinceLast: number) => void)"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "callback: "
        },
        {
         "kind": "Content",
         "text": "null | ((msSinceLast: number) => void)"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "callback|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "callback",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "null | ((msSinceLast: number) => void)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "null | ((msSinceLast: number) => void)"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Callback with effectively the same rules as ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 14
             }
            },
            {
             "kind": "CodeSpan",
             "code": "requestAnimationFrame"
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Doesn't need to be stable.",
             "textExcerpt": {
              "startIndex": 19,
              "endIndex": 31
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useAsync:function(1)"
     },
     "kind": "Function",
     "containerKey": "useAsync|Function|1",
     "displayName": "useAsync",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useAsync<AP extends unknown[], R, SP extends unknown[] = AP>(asyncHandler2: AsyncFunctionType<AP, R> | null, options?: UseAsyncParameters<AP, SP>): UseAsyncReturnType<SP, R>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useAsync<AP extends "
       },
       {
        "kind": "Content",
        "text": "unknown[]"
       },
       {
        "kind": "Content",
        "text": ", R, SP extends "
       },
       {
        "kind": "Content",
        "text": "unknown[]"
       },
       {
        "kind": "Content",
        "text": " = "
       },
       {
        "kind": "Content",
        "text": "AP"
       },
       {
        "kind": "Content",
        "text": ">(asyncHandler2: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "AsyncFunctionType:type"
        },
        "kind": "Reference",
        "text": "AsyncFunctionType"
       },
       {
        "kind": "Content",
        "text": "<AP, R> | null"
       },
       {
        "kind": "Content",
        "text": ", options?: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncParameters:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncParameters"
       },
       {
        "kind": "Content",
        "text": "<AP, SP>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncReturnType"
       },
       {
        "kind": "Content",
        "text": "<SP, R>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useAsync",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "asyncHandler2",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "AsyncFunctionType<AP, R> | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "AsyncFunctionType:type"
          },
          "kind": "Reference",
          "text": "AsyncFunctionType"
         },
         {
          "kind": "Content",
          "text": "<AP, R> | null"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       }
      },
      {
       "isOptional": true,
       "name": "options",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseAsyncParameters<AP, SP>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseAsyncParameters:interface"
          },
          "kind": "Reference",
          "text": "UseAsyncParameters"
         },
         {
          "kind": "Content",
          "text": "<AP, SP>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseAsyncReturnType<SP, R>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncReturnType"
       },
       {
        "kind": "Content",
        "text": "<SP, R>"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 13
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "unknown[]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown[]"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "AP"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "unknown[]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown[]"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": false,
        "text": "AP",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "AP"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "isOptional": true,
       "name": "SP"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Given an async function, returns a function that's suitable for non-async APIs, along with other information about the current run's status.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 50
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "See also ",
           "textExcerpt": {
            "startIndex": 52,
            "endIndex": 56
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useAsyncHandler"
          },
          {
           "kind": "PlainText",
           "text": " for a version that's specialized for DOM event handlers.",
           "textExcerpt": {
            "startIndex": 59,
            "endIndex": 80
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "When called multiple times in quick succession, (i.e. before the handler has finished), this works like Lodash's ",
           "textExcerpt": {
            "startIndex": 82,
            "endIndex": 125
           }
          },
          {
           "kind": "CodeSpan",
           "code": "throttle"
          },
          {
           "kind": "PlainText",
           "text": " function with the ",
           "textExcerpt": {
            "startIndex": 128,
            "endIndex": 135
           }
          },
          {
           "kind": "CodeSpan",
           "code": "wait"
          },
          {
           "kind": "PlainText",
           "text": " option always set to however long the handler takes to complete. A second call to the sync function will be throttled until the first call has finished. The return value of the function is the result of the previous invocation, or ",
           "textExcerpt": {
            "startIndex": 138,
            "endIndex": 224
           }
          },
          {
           "kind": "CodeSpan",
           "code": "undefined"
          },
          {
           "kind": "PlainText",
           "text": " on the first call.",
           "textExcerpt": {
            "startIndex": 227,
            "endIndex": 236
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "The handler is only ever delayed if one is currently running, so, e.g. for iOS touch events the first call happens in the same event handler (which means things like calls to ",
           "textExcerpt": {
            "startIndex": 238,
            "endIndex": 308
           }
          },
          {
           "kind": "CodeSpan",
           "code": "element.focus()"
          },
          {
           "kind": "PlainText",
           "text": " will work as intended, since that fails when the event is \"split up\")",
           "textExcerpt": {
            "startIndex": 315,
            "endIndex": 345
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Finally, because the sync handler may be invoked on a delay, any property references on the arguments provided might be stale by the time it's actually invoked (e.g. accessing ",
           "textExcerpt": {
            "startIndex": 347,
            "endIndex": 413
           }
          },
          {
           "kind": "CodeSpan",
           "code": "event.currentTarget.checked"
          },
          {
           "kind": "PlainText",
           "text": " is not stable across time because it's a \"live\" value -- you almost always want the value that it had at the original time the handler was called). The ",
           "textExcerpt": {
            "startIndex": 420,
            "endIndex": 486
           }
          },
          {
           "kind": "CodeSpan",
           "code": "capture"
          },
          {
           "kind": "PlainText",
           "text": " option allows you to save that kind of dynamic data at the time it runs; the ",
           "textExcerpt": {
            "startIndex": 489,
            "endIndex": 523
           }
          },
          {
           "kind": "CodeSpan",
           "code": "AP"
          },
          {
           "kind": "PlainText",
           "text": " and ",
           "textExcerpt": {
            "startIndex": 526,
            "endIndex": 529
           }
          },
          {
           "kind": "CodeSpan",
           "code": "SP"
          },
          {
           "kind": "PlainText",
           "text": " type parameters likewise control the parameters the async handler and sync handler expect respectively.",
           "textExcerpt": {
            "startIndex": 532,
            "endIndex": 561
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useAsync<AP extends "
      },
      {
       "kind": "Content",
       "text": "unknown[]"
      },
      {
       "kind": "Content",
       "text": ", R, SP extends "
      },
      {
       "kind": "Content",
       "text": "unknown[]"
      },
      {
       "kind": "Content",
       "text": " = "
      },
      {
       "kind": "Content",
       "text": "AP"
      },
      {
       "kind": "Content",
       "text": ">(asyncHandler2: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "AsyncFunctionType:type"
       },
       "kind": "Reference",
       "text": "AsyncFunctionType"
      },
      {
       "kind": "Content",
       "text": "<AP, R> | null"
      },
      {
       "kind": "Content",
       "text": ", options?: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncParameters:interface"
       },
       "kind": "Reference",
       "text": "UseAsyncParameters"
      },
      {
       "kind": "Content",
       "text": "<AP, SP>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseAsyncReturnType"
      },
      {
       "kind": "Content",
       "text": "<SP, R>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useAsyncEffect:function(1)"
     },
     "kind": "Function",
     "containerKey": "useAsyncEffect|Function|1",
     "displayName": "useAsyncEffect",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useAsyncEffect<I extends Inputs>(effect: () => Promise<(void | (() => void))>, inputs?: I, options?: OmitStrong<UseAsyncParameters<[void], [void]>, \"capture\">): {\n    pending: boolean;\n    debouncingSync: boolean;\n    debouncingAsync: boolean;\n    callCount: number;\n    settleCount: number;\n    resolveCount: number;\n    rejectCount: number;\n    result: void | (() => void) | undefined;\n    hasResult: boolean;\n    error: unknown;\n    hasError: boolean;\n    invocationResult: \"sync\" | \"async\" | \"throw\" | null;\n    flushDebouncedPromise: () => void;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useAsyncEffect<I extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-hooks!",
         "symbol": "Inputs:type"
        },
        "kind": "Reference",
        "text": "Inputs"
       },
       {
        "kind": "Content",
        "text": ">(effect: "
       },
       {
        "kind": "Content",
        "text": "() => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Promise:interface"
        },
        "kind": "Reference",
        "text": "Promise"
       },
       {
        "kind": "Content",
        "text": "<(void | (() => void))>"
       },
       {
        "kind": "Content",
        "text": ", inputs?: "
       },
       {
        "kind": "Content",
        "text": "I"
       },
       {
        "kind": "Content",
        "text": ", options?: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncParameters:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncParameters"
       },
       {
        "kind": "Content",
        "text": "<[void], [void]>, \"capture\">"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "{\n    pending: boolean;\n    debouncingSync: boolean;\n    debouncingAsync: boolean;\n    callCount: number;\n    settleCount: number;\n    resolveCount: number;\n    rejectCount: number;\n    result: void | (() => void) | undefined;\n    hasResult: boolean;\n    error: unknown;\n    hasError: boolean;\n    invocationResult: \"sync\" | \"async\" | \"throw\" | null;\n    flushDebouncedPromise: () => void;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useAsyncEffect",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "effect",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "() => Promise<(void | (() => void))>",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<(void | (() => void))>"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 3
        }
       }
      },
      {
       "isOptional": true,
       "name": "inputs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "I",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "I"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       }
      },
      {
       "isOptional": true,
       "name": "options",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseAsyncParameters<[void], [void]>, \"capture\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseAsyncParameters:interface"
          },
          "kind": "Reference",
          "text": "UseAsyncParameters"
         },
         {
          "kind": "Content",
          "text": "<[void], [void]>, \"capture\">"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 9
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "{\n    pending: boolean;\n    debouncingSync: boolean;\n    debouncingAsync: boolean;\n    callCount: number;\n    settleCount: number;\n    resolveCount: number;\n    rejectCount: number;\n    result: void | (() => void) | undefined;\n    hasResult: boolean;\n    error: unknown;\n    hasError: boolean;\n    invocationResult: \"sync\" | \"async\" | \"throw\" | null;\n    flushDebouncedPromise: () => void;\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "{\n    pending: boolean;\n    debouncingSync: boolean;\n    debouncingAsync: boolean;\n    callCount: number;\n    settleCount: number;\n    resolveCount: number;\n    rejectCount: number;\n    result: void | (() => void) | undefined;\n    hasResult: boolean;\n    error: unknown;\n    hasError: boolean;\n    invocationResult: \"sync\" | \"async\" | \"throw\" | null;\n    flushDebouncedPromise: () => void;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 14
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Inputs",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-hooks!",
           "symbol": "Inputs:type"
          },
          "kind": "Reference",
          "text": "Inputs"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "I"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Combines the semantics of ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 8
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useAsync"
          },
          {
           "kind": "PlainText",
           "text": " and ",
           "textExcerpt": {
            "startIndex": 11,
            "endIndex": 14
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": ".",
           "textExcerpt": {
            "startIndex": 17,
            "endIndex": 18
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "More specifically, if an event would run again, but the previous async event is still running, then we'll wait until it finishes to run the new effect. And while waiting, further new effect runs will bump old ones off, only remembering the most recent request.",
           "textExcerpt": {
            "startIndex": 20,
            "endIndex": 118
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " All values from ",
            "textExcerpt": {
             "startIndex": 122,
             "endIndex": 129
            }
           },
           {
            "kind": "CodeSpan",
            "code": "useAsync"
           },
           {
            "kind": "PlainText",
            "text": ", except for ",
            "textExcerpt": {
             "startIndex": 132,
             "endIndex": 138
            }
           },
           {
            "kind": "CodeSpan",
            "code": "syncHandler"
           },
           {
            "kind": "PlainText",
            "text": ".",
            "textExcerpt": {
             "startIndex": 141,
             "endIndex": 142
            }
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useAsyncEffect<I extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-hooks!",
        "symbol": "Inputs:type"
       },
       "kind": "Reference",
       "text": "Inputs"
      },
      {
       "kind": "Content",
       "text": ">(effect: "
      },
      {
       "kind": "Content",
       "text": "() => "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Promise:interface"
       },
       "kind": "Reference",
       "text": "Promise"
      },
      {
       "kind": "Content",
       "text": "<(void | (() => void))>"
      },
      {
       "kind": "Content",
       "text": ", inputs?: "
      },
      {
       "kind": "Content",
       "text": "I"
      },
      {
       "kind": "Content",
       "text": ", options?: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncParameters:interface"
       },
       "kind": "Reference",
       "text": "UseAsyncParameters"
      },
      {
       "kind": "Content",
       "text": "<[void], [void]>, \"capture\">"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "{\n    pending: boolean;\n    debouncingSync: boolean;\n    debouncingAsync: boolean;\n    callCount: number;\n    settleCount: number;\n    resolveCount: number;\n    rejectCount: number;\n    result: void | (() => void) | undefined;\n    hasResult: boolean;\n    error: unknown;\n    hasError: boolean;\n    invocationResult: \"sync\" | \"async\" | \"throw\" | null;\n    flushDebouncedPromise: () => void;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useAsyncHandler:function(1)"
     },
     "kind": "Function",
     "containerKey": "useAsyncHandler|Function|1",
     "displayName": "useAsyncHandler",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useAsyncHandler<EventType, CaptureType>({ asyncHandler, capture: originalCapture, ...restAsyncOptions }: UseAsyncHandlerParameters<EventType, CaptureType>): UseAsyncHandlerReturnType<EventType, CaptureType>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useAsyncHandler<EventType, CaptureType>({ asyncHandler, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncHandlerParameters#capture"
        },
        "kind": "Reference",
        "text": "capture"
       },
       {
        "kind": "Content",
        "text": ": originalCapture, ...restAsyncOptions }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncHandlerParameters:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncHandlerParameters"
       },
       {
        "kind": "Content",
        "text": "<EventType, CaptureType>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncHandlerReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncHandlerReturnType"
       },
       {
        "kind": "Content",
        "text": "<EventType, CaptureType>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useAsyncHandler",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ asyncHandler, capture: originalCapture, ...restAsyncOptions }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseAsyncHandlerParameters<EventType, CaptureType>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseAsyncHandlerParameters:interface"
          },
          "kind": "Reference",
          "text": "UseAsyncHandlerParameters"
         },
         {
          "kind": "Content",
          "text": "<EventType, CaptureType>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseAsyncHandlerReturnType<EventType, CaptureType>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncHandlerReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncHandlerReturnType"
       },
       {
        "kind": "Content",
        "text": "<EventType, CaptureType>"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 6
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "EventType"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CaptureType"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Given an asyncronous event handler, returns a syncronous one that works on the DOM, along with some other information related to the current state. Does not modify any props.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 61
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Note that because the handler you provide may be called with a delay, and because the value of, e.g., an ",
           "textExcerpt": {
            "startIndex": 63,
            "endIndex": 109
           }
          },
          {
           "kind": "CodeSpan",
           "code": "<input>"
          },
          {
           "kind": "PlainText",
           "text": " element will likely be stale by the time the delay is over, a ",
           "textExcerpt": {
            "startIndex": 114,
            "endIndex": 142
           }
          },
          {
           "kind": "CodeSpan",
           "code": "capture"
          },
          {
           "kind": "PlainText",
           "text": " function is necessary in order to capture the relevant information from the DOM. Any other simple event data, like ",
           "textExcerpt": {
            "startIndex": 145,
            "endIndex": 186
           }
          },
          {
           "kind": "CodeSpan",
           "code": "mouseX"
          },
          {
           "kind": "PlainText",
           "text": " or ",
           "textExcerpt": {
            "startIndex": 189,
            "endIndex": 192
           }
          },
          {
           "kind": "CodeSpan",
           "code": "shiftKey"
          },
          {
           "kind": "PlainText",
           "text": " can stay on the event itself and don't need to be captured &ndash; it's never stale.",
           "textExcerpt": {
            "startIndex": 195,
            "endIndex": 234
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "code": "const asyncOnInput = async (value: number, e: Event) => {\n    [...] // Ex. send to a server and setState when done\n};\nconst {\n    // A sync version of asyncOnInput\n    syncHandler,\n    // True while the handler is running\n    pending,\n    // The error thrown, if any\n    error,\n    // Show this value while the operation's pending\n    currentCapture,\n    // And others, see `UseAsyncHandlerReturnType`\n    ...rest\n} = useAsyncHandler<HTMLInputElement>()(asyncOnInput, {\n    // Pass in the capture function that saves event data\n    // from being stale.\n    capture: e => {\n        // `capture` can have side-effects because\n        // it's called exactly once per invocation\n        e.preventDefault();\n\n        // Save this value so that it's never stale\n        return e.currentTarget.valueAsNumber;\n    }\n});\n\nconst onInput = pending? null : syncHandler;\n",
         "kind": "FencedCode",
         "language": "tsx"
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "PlainText",
           "text": "The handler is automatically throttled to only run one at a time. If the handler is called, and then before it finishes, is called again, it will be put on hold until the current one finishes, at which point the second one will run. If the handler is called a third time before the first has finished, it will *replace* the second, so only the most recently called iteration of the handler will run.",
           "textExcerpt": {
            "startIndex": 570,
            "endIndex": 728
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "You may optionally *also* specify debounce and throttle parameters that wait until the syncronous handler has not been called for the specified number of milliseconds, at which point we *actually* run the asyncronous handler according to the logic in the previous paragraph. This is in *addition* to throttling the handler, and does not replace that behavior.",
           "textExcerpt": {
            "startIndex": 730,
            "endIndex": 851
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [
       {
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@see"
        },
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "PlainText",
             "text": "useAsync A more general version of this hook that can work with any type of handler, not just DOM event handlers.",
             "textExcerpt": {
              "startIndex": 857,
              "endIndex": 900
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "kind": "Block"
       }
      ],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useAsyncHandler<EventType, CaptureType>({ asyncHandler, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncHandlerParameters#capture"
       },
       "kind": "Reference",
       "text": "capture"
      },
      {
       "kind": "Content",
       "text": ": originalCapture, ...restAsyncOptions }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncHandlerParameters:interface"
       },
       "kind": "Reference",
       "text": "UseAsyncHandlerParameters"
      },
      {
       "kind": "Content",
       "text": "<EventType, CaptureType>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncHandlerReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseAsyncHandlerReturnType"
      },
      {
       "kind": "Content",
       "text": "<EventType, CaptureType>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseAsyncHandlerParameters:interface"
     },
     "containerKey": "UseAsyncHandlerParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseAsyncHandlerParameters<EventType, CaptureType> extends OmitStrong<UseAsyncParameters<[CaptureType, EventType], [EventType]>, \"capture\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseAsyncHandlerParameters<EventType, CaptureType> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncParameters:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncParameters"
       },
       {
        "kind": "Content",
        "text": "<[CaptureType, EventType], [EventType]>, \"capture\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseAsyncHandlerParameters<EventType, CaptureType> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncParameters:interface"
       },
       "kind": "Reference",
       "text": "UseAsyncParameters"
      },
      {
       "kind": "Content",
       "text": "<[CaptureType, EventType], [EventType]>, \"capture\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseAsyncParameters<[CaptureType, EventType], [EventType]>, \"capture\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseAsyncParameters:interface"
          },
          "kind": "Reference",
          "text": "UseAsyncParameters"
         },
         {
          "kind": "Content",
          "text": "<[CaptureType, EventType], [EventType]>, \"capture\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "UseAsyncHandlerParameters",
     "fileUrlPath": "src/dom-helpers/use-async-handler.tsx",
     "isExported": true,
     "name": "UseAsyncHandlerParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncHandlerParameters#asyncHandler:member"
       },
       "displayName": "asyncHandler",
       "excerpt": {
        "isEmpty": false,
        "text": "asyncHandler: AsyncHandler<EventType, CaptureType> | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "asyncHandler: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "AsyncHandler:type"
          },
          "kind": "Reference",
          "text": "AsyncHandler"
         },
         {
          "kind": "Content",
          "text": "<EventType, CaptureType> | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "asyncHandler: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "AsyncHandler:type"
         },
         "kind": "Reference",
         "text": "AsyncHandler"
        },
        {
         "kind": "Content",
         "text": "<EventType, CaptureType> | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "asyncHandler|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "asyncHandler",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "AsyncHandler<EventType, CaptureType> | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "AsyncHandler:type"
          },
          "kind": "Reference",
          "text": "AsyncHandler"
         },
         {
          "kind": "Content",
          "text": "<EventType, CaptureType> | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The function (either async or sync) that you want to convert to a regular, sync event handler.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 37
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncHandlerParameters#capture:member"
       },
       "displayName": "capture",
       "excerpt": {
        "isEmpty": false,
        "text": "capture: (event: EventType) => CaptureType;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "capture: "
         },
         {
          "kind": "Content",
          "text": "(event: EventType) => CaptureType"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "capture: "
        },
        {
         "kind": "Content",
         "text": "(event: EventType) => CaptureType"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "capture|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "capture",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "(event: EventType) => CaptureType",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(event: EventType) => CaptureType"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "What transient information is captured by this event and presented as the first argument of the event handler?",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 36
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The \"capture\" parameter answers this question. To implement a checkbox, for example, return ",
             "textExcerpt": {
              "startIndex": 38,
              "endIndex": 69
             }
            },
            {
             "kind": "CodeSpan",
             "code": "target.checked"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 74,
              "endIndex": 75
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "EventType"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CaptureType"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseAsyncHandlerReturnType:interface"
     },
     "containerKey": "UseAsyncHandlerReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseAsyncHandlerReturnType<EventType, CaptureType> extends UseAsyncReturnType<[EventType], void> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseAsyncHandlerReturnType<EventType, CaptureType> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseAsyncReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseAsyncReturnType"
       },
       {
        "kind": "Content",
        "text": "<[EventType], void>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseAsyncHandlerReturnType<EventType, CaptureType> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseAsyncReturnType"
      },
      {
       "kind": "Content",
       "text": "<[EventType], void>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseAsyncReturnType<[EventType], void>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseAsyncReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseAsyncReturnType"
         },
         {
          "kind": "Content",
          "text": "<[EventType], void>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "UseAsyncHandlerReturnType",
     "fileUrlPath": "src/dom-helpers/use-async-handler.tsx",
     "isExported": true,
     "name": "UseAsyncHandlerReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncHandlerReturnType#currentCapture:member"
       },
       "displayName": "currentCapture",
       "excerpt": {
        "isEmpty": false,
        "text": "currentCapture: CaptureType | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "currentCapture: "
         },
         {
          "kind": "Content",
          "text": "CaptureType | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "currentCapture: "
        },
        {
         "kind": "Content",
         "text": "CaptureType | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "currentCapture|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "currentCapture",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "CaptureType | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "CaptureType | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The most recently captured value. In other words, represents what the current value would be if this operation were synchronous and and couldn't fail. It's useful to pretend this is the actual value for an input field, for example, so that the value doesn't \"snap back\" while you're waiting for the handler to finish.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 123
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Something like ",
             "textExcerpt": {
              "startIndex": 125,
              "endIndex": 129
             }
            },
            {
             "kind": "CodeSpan",
             "code": "value={pending? currentCapture : value}"
            },
            {
             "kind": "PlainText",
             "text": " is good for checkboxes, something like ",
             "textExcerpt": {
              "startIndex": 143,
              "endIndex": 157
             }
            },
            {
             "errorLocation": {
              "startIndex": 157,
              "endIndex": 158
             },
             "errorMessage": "The code span is missing its closing backtick",
             "kind": "ErrorText",
             "messageId": "tsdoc-code-span-missing-delimiter",
             "text": "`",
             "textExcerpt": {
              "startIndex": 157,
              "endIndex": 158
             }
            },
            {
             "kind": "PlainText",
             "text": "value=",
             "textExcerpt": {
              "startIndex": 158,
              "endIndex": 160
             }
            },
            {
             "errorLocation": {
              "startIndex": 160,
              "endIndex": 161
             },
             "errorMessage": "Expecting a TSDoc tag starting with \"{@\"",
             "kind": "ErrorText",
             "messageId": "tsdoc-malformed-inline-tag",
             "text": "{",
             "textExcerpt": {
              "startIndex": 160,
              "endIndex": 161
             }
            },
            {
             "kind": "PlainText",
             "text": "(pending || hasFocus)? currentCapture : value",
             "textExcerpt": {
              "startIndex": 161,
              "endIndex": 176
             }
            },
            {
             "errorLocation": {
              "startIndex": 176,
              "endIndex": 177
             },
             "errorMessage": "The \"}\" character should be escaped using a backslash to avoid confusion with a TSDoc inline tag",
             "kind": "ErrorText",
             "messageId": "tsdoc-escape-right-brace",
             "text": "}",
             "textExcerpt": {
              "startIndex": 176,
              "endIndex": 177
             }
            },
            {
             "kind": "PlainText",
             "text": " for text fields.",
             "textExcerpt": {
              "startIndex": 177,
              "endIndex": 184
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [
         {
          "blockTag": {
           "kind": "BlockTag",
           "tagName": "@see"
          },
          "content": {
           "kind": "Section",
           "nodes": [
            {
             "kind": "Paragraph",
             "nodes": [
              {
               "kind": "SoftBreak"
              },
              {
               "kind": "SoftBreak"
              },
              {
               "kind": "PlainText",
               "text": "hasCapture",
               "textExcerpt": {
                "startIndex": 190,
                "endIndex": 191
               }
              },
              {
               "kind": "SoftBreak"
              }
             ]
            }
           ]
          },
          "kind": "Block"
         }
        ],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncHandlerReturnType#getCurrentCapture:member(1)"
       },
       "displayName": "getCurrentCapture",
       "excerpt": {
        "isEmpty": false,
        "text": "getCurrentCapture(): (CaptureType | undefined);",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getCurrentCapture(): "
         },
         {
          "kind": "Content",
          "text": "(CaptureType | undefined)"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getCurrentCapture(): "
        },
        {
         "kind": "Content",
         "text": "(CaptureType | undefined)"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getCurrentCapture|MethodSignature|1",
       "isOptional": false,
       "name": "getCurrentCapture",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "(CaptureType | undefined)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(CaptureType | undefined)"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The above, but stable, if you need the current capture without it being an explicit dependency. **STABLE**",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 40
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncHandlerReturnType#hasCapture:member"
       },
       "displayName": "hasCapture",
       "excerpt": {
        "isEmpty": false,
        "text": "hasCapture: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasCapture: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasCapture: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasCapture|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasCapture",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Because you're allowed to have ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 12
             }
            },
            {
             "kind": "CodeSpan",
             "code": "CaptureType"
            },
            {
             "kind": "PlainText",
             "text": " extend ",
             "textExcerpt": {
              "startIndex": 15,
              "endIndex": 18
             }
            },
            {
             "kind": "CodeSpan",
             "code": "undefined"
            },
            {
             "kind": "PlainText",
             "text": ", you might need this.",
             "textExcerpt": {
              "startIndex": 21,
              "endIndex": 31
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "EventType"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CaptureType"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseAsyncParameters:interface"
     },
     "containerKey": "UseAsyncParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseAsyncParameters<AP extends unknown[], SP extends unknown[] = AP> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseAsyncParameters<AP extends "
       },
       {
        "kind": "Content",
        "text": "unknown[]"
       },
       {
        "kind": "Content",
        "text": ", SP extends "
       },
       {
        "kind": "Content",
        "text": "unknown[]"
       },
       {
        "kind": "Content",
        "text": " = "
       },
       {
        "kind": "Content",
        "text": "AP"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseAsyncParameters<AP extends "
      },
      {
       "kind": "Content",
       "text": "unknown[]"
      },
      {
       "kind": "Content",
       "text": ", SP extends "
      },
      {
       "kind": "Content",
       "text": "unknown[]"
      },
      {
       "kind": "Content",
       "text": " = "
      },
      {
       "kind": "Content",
       "text": "AP"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseAsyncParameters",
     "fileUrlPath": "src/preact-extensions/use-async.tsx",
     "isExported": true,
     "name": "UseAsyncParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncParameters#capture:member"
       },
       "displayName": "capture",
       "excerpt": {
        "isEmpty": false,
        "text": "capture?: CaptureFunctionType<AP, SP>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "capture?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "async-to-sync!",
           "symbol": "CaptureFunctionType:type"
          },
          "kind": "Reference",
          "text": "CaptureFunctionType"
         },
         {
          "kind": "Content",
          "text": "<AP, SP>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "capture?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "async-to-sync!",
          "symbol": "CaptureFunctionType:type"
         },
         "kind": "Reference",
         "text": "CaptureFunctionType"
        },
        {
         "kind": "Content",
         "text": "<AP, SP>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "capture|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "capture",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "CaptureFunctionType<AP, SP>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "async-to-sync!",
           "symbol": "CaptureFunctionType:type"
          },
          "kind": "Reference",
          "text": "CaptureFunctionType"
         },
         {
          "kind": "Content",
          "text": "<AP, SP>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "When an async function is debounced due to one already running, it will run on a delay and, as a result, the original arguments that were passed to it may need to be adjusted to account for that.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 79
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "For example, during ",
             "textExcerpt": {
              "startIndex": 81,
              "endIndex": 88
             }
            },
            {
             "kind": "CodeSpan",
             "code": "onInput"
            },
            {
             "kind": "PlainText",
             "text": ", the ",
             "textExcerpt": {
              "startIndex": 91,
              "endIndex": 95
             }
            },
            {
             "kind": "CodeSpan",
             "code": "value"
            },
            {
             "kind": "PlainText",
             "text": " of that event isn't stored in the event itself, it's stored in the ",
             "textExcerpt": {
              "startIndex": 98,
              "endIndex": 130
             }
            },
            {
             "kind": "CodeSpan",
             "code": "HTMLInputElement"
            },
            {
             "kind": "PlainText",
             "text": " that raised it. So when our handler actually runs a few seconds later, it'll read the **next** ",
             "textExcerpt": {
              "startIndex": 133,
              "endIndex": 176
             }
            },
            {
             "kind": "CodeSpan",
             "code": "event.currentTarget.value"
            },
            {
             "kind": "PlainText",
             "text": ", instead of the one from a few seconds ago that actually raised the event!",
             "textExcerpt": {
              "startIndex": 183,
              "endIndex": 213
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If the arguments to your handler require referencing data in the arguments that may become \"stale\" by the time the function actually runs (generally event handlers and other things that reference the properties of existing objects), the ",
             "textExcerpt": {
              "startIndex": 215,
              "endIndex": 294
             }
            },
            {
             "kind": "CodeSpan",
             "code": "capture"
            },
            {
             "kind": "PlainText",
             "text": " parameter allows you to transform the parameters you were given when the request to run was initially made into parameters that you have guaranteed will still be good by the time the handler actually runs.",
             "textExcerpt": {
              "startIndex": 297,
              "endIndex": 368
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncParameters#debounce:member"
       },
       "displayName": "debounce",
       "excerpt": {
        "isEmpty": false,
        "text": "debounce?: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "debounce?: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "debounce?: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "debounce|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "debounce",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If provided, adds a debounce behavior *in addition* to the default \"wait until resolved\" throttling behavior.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 37
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncParameters#throttle:member"
       },
       "displayName": "throttle",
       "excerpt": {
        "isEmpty": false,
        "text": "throttle?: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "throttle?: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "throttle?: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "throttle|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "throttle",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "By default, ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 5
             }
            },
            {
             "kind": "CodeSpan",
             "code": "useAsync"
            },
            {
             "kind": "PlainText",
             "text": " will auto-throttle based on how long it takes for the operation to complete. If you would like there to be a minimum amount of time to wait before allowing a second operation, the ",
             "textExcerpt": {
              "startIndex": 8,
              "endIndex": 79
             }
            },
            {
             "kind": "CodeSpan",
             "code": "throttle"
            },
            {
             "kind": "PlainText",
             "text": " parameter can be used in addition to that behavior.",
             "textExcerpt": {
              "startIndex": 82,
              "endIndex": 101
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "CodeSpan",
             "code": "throttle"
            },
            {
             "kind": "PlainText",
             "text": " *includes* the time it takes for the async operation to finish. If ",
             "textExcerpt": {
              "startIndex": 106,
              "endIndex": 134
             }
            },
            {
             "kind": "CodeSpan",
             "code": "throttle"
            },
            {
             "kind": "PlainText",
             "text": " is 500ms, and the async function finishes in 700ms, then another one will be run immediately. If it took 100ms, then we'd wait for the remaining 400ms until allowing a second run.",
             "textExcerpt": {
              "startIndex": 137,
              "endIndex": 208
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "unknown[]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown[]"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "AP"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "unknown[]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown[]"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": false,
        "text": "AP",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "AP"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "isOptional": true,
       "name": "SP"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseAsyncReturnType:interface"
     },
     "containerKey": "UseAsyncReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseAsyncReturnType<SP extends unknown[], R> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseAsyncReturnType<SP extends "
       },
       {
        "kind": "Content",
        "text": "unknown[]"
       },
       {
        "kind": "Content",
        "text": ", R> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseAsyncReturnType<SP extends "
      },
      {
       "kind": "Content",
       "text": "unknown[]"
      },
      {
       "kind": "Content",
       "text": ", R> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseAsyncReturnType",
     "fileUrlPath": "src/preact-extensions/use-async.tsx",
     "isExported": true,
     "name": "UseAsyncReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#callCount:member"
       },
       "displayName": "callCount",
       "excerpt": {
        "isEmpty": false,
        "text": "callCount: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "callCount: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "callCount: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "callCount|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "callCount",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The number of times the handler has run. Does not include times where it was throttled or debounced away.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 39
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Useful for knowing if the handler has been called yet, or for setting a new timeout to show a spinner.",
             "textExcerpt": {
              "startIndex": 41,
              "endIndex": 82
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#debouncingAsync:member"
       },
       "displayName": "debouncingAsync",
       "excerpt": {
        "isEmpty": false,
        "text": "debouncingAsync: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "debouncingAsync: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "debouncingAsync: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "debouncingAsync|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "debouncingAsync",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "True when a second invocation of the handler has been called, and it's waiting until the first before it runs.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 43
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#debouncingSync:member"
       },
       "displayName": "debouncingSync",
       "excerpt": {
        "isEmpty": false,
        "text": "debouncingSync: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "debouncingSync: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "debouncingSync: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "debouncingSync|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "debouncingSync",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "True when we're waiting for a debounce or throttle to end (that's not due waiting for the async function to complete)",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 47
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#error:member"
       },
       "displayName": "error",
       "excerpt": {
        "isEmpty": false,
        "text": "error: unknown;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "error: "
         },
         {
          "kind": "Content",
          "text": "unknown"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "error: "
        },
        {
         "kind": "Content",
         "text": "unknown"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "error|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "error",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "unknown",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The error the handler threw. ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 11
             }
            },
            {
             "kind": "CodeSpan",
             "code": "undefined"
            },
            {
             "kind": "PlainText",
             "text": " otherwise, though note that ",
             "textExcerpt": {
              "startIndex": 14,
              "endIndex": 24
             }
            },
            {
             "kind": "CodeSpan",
             "code": "undefined"
            },
            {
             "kind": "PlainText",
             "text": " is a valid thing to throw, so check ",
             "textExcerpt": {
              "startIndex": 27,
              "endIndex": 45
             }
            },
            {
             "kind": "CodeSpan",
             "code": "hasError"
            },
            {
             "kind": "PlainText",
             "text": " too.",
             "textExcerpt": {
              "startIndex": 48,
              "endIndex": 51
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [
         {
          "blockTag": {
           "kind": "BlockTag",
           "tagName": "@see"
          },
          "content": {
           "kind": "Section",
           "nodes": [
            {
             "kind": "Paragraph",
             "nodes": [
              {
               "kind": "SoftBreak"
              },
              {
               "kind": "SoftBreak"
              },
              {
               "kind": "PlainText",
               "text": "hasError",
               "textExcerpt": {
                "startIndex": 57,
                "endIndex": 58
               }
              },
              {
               "kind": "SoftBreak"
              }
             ]
            }
           ]
          },
          "kind": "Block"
         }
        ],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#flushDebouncedPromise:member"
       },
       "displayName": "flushDebouncedPromise",
       "excerpt": {
        "isEmpty": false,
        "text": "flushDebouncedPromise: () => void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "flushDebouncedPromise: "
         },
         {
          "kind": "Content",
          "text": "() => void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "flushDebouncedPromise: "
        },
        {
         "kind": "Content",
         "text": "() => void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "flushDebouncedPromise|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "flushDebouncedPromise",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => void"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If you would like any currently debounced-but-eventually-pending promises to immediately be considered by cancelling their debounce timeout, you can call this function. Normal procedure applies as if the debounced ended normally -- if there's no promise waiting in the queue, the debounced promise runs normally, otherwise, it waits its turn until the current one ends, potentially being overwritten later on if a new promise runs out *its* debounce timer before this one got a chance to run.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 171
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**Quasi-stable** (don't use during render)",
             "textExcerpt": {
              "startIndex": 173,
              "endIndex": 192
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#hasError:member"
       },
       "displayName": "hasError",
       "excerpt": {
        "isEmpty": false,
        "text": "hasError: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasError: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasError: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasError|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasError",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Whether or not the most recent handler finished with an error.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 22
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This is necessary because, technically, ",
             "textExcerpt": {
              "startIndex": 24,
              "endIndex": 36
             }
            },
            {
             "kind": "CodeSpan",
             "code": "error"
            },
            {
             "kind": "PlainText",
             "text": " can be ",
             "textExcerpt": {
              "startIndex": 39,
              "endIndex": 44
             }
            },
            {
             "kind": "CodeSpan",
             "code": "undefined"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 47,
              "endIndex": 48
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#hasResult:member"
       },
       "displayName": "hasResult",
       "excerpt": {
        "isEmpty": false,
        "text": "hasResult: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasResult: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasResult: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasResult|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasResult",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "True when the most recently-run handler completed successfully, also meaning that that it's returned a value that we currently have.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 45
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "While ",
             "textExcerpt": {
              "startIndex": 47,
              "endIndex": 49
             }
            },
            {
             "kind": "CodeSpan",
             "code": "pending"
            },
            {
             "kind": "PlainText",
             "text": " is true, **",
             "textExcerpt": {
              "startIndex": 52,
              "endIndex": 60
             }
            },
            {
             "kind": "CodeSpan",
             "code": "hasResult"
            },
            {
             "kind": "PlainText",
             "text": " and ",
             "textExcerpt": {
              "startIndex": 63,
              "endIndex": 66
             }
            },
            {
             "kind": "CodeSpan",
             "code": "hasError"
            },
            {
             "kind": "PlainText",
             "text": " may be simultaneously true**, but in all other cases they're mutually exclusive.",
             "textExcerpt": {
              "startIndex": 69,
              "endIndex": 99
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#invocationResult:member"
       },
       "displayName": "invocationResult",
       "excerpt": {
        "isEmpty": false,
        "text": "invocationResult: \"async\" | \"sync\" | \"throw\" | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "invocationResult: "
         },
         {
          "kind": "Content",
          "text": "\"async\" | \"sync\" | \"throw\" | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "invocationResult: "
        },
        {
         "kind": "Content",
         "text": "\"async\" | \"sync\" | \"throw\" | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "invocationResult|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "invocationResult",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "\"async\" | \"sync\" | \"throw\" | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "\"async\" | \"sync\" | \"throw\" | null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "What happened the last time the handler was called? * ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 21
             }
            },
            {
             "kind": "CodeSpan",
             "code": "\"async\""
            },
            {
             "kind": "PlainText",
             "text": ": A ",
             "textExcerpt": {
              "startIndex": 26,
              "endIndex": 30
             }
            },
            {
             "kind": "CodeSpan",
             "code": "Promise"
            },
            {
             "kind": "PlainText",
             "text": " was returned, and we're about to ",
             "textExcerpt": {
              "startIndex": 33,
              "endIndex": 49
             }
            },
            {
             "kind": "CodeSpan",
             "code": "await"
            },
            {
             "kind": "PlainText",
             "text": " it. * ",
             "textExcerpt": {
              "startIndex": 52,
              "endIndex": 58
             }
            },
            {
             "kind": "CodeSpan",
             "code": "\"sync\""
            },
            {
             "kind": "PlainText",
             "text": ": ",
             "textExcerpt": {
              "startIndex": 63,
              "endIndex": 65
             }
            },
            {
             "kind": "CodeSpan",
             "code": "undefined"
            },
            {
             "kind": "PlainText",
             "text": " was returned, so it finished immediately. * ",
             "textExcerpt": {
              "startIndex": 68,
              "endIndex": 85
             }
            },
            {
             "kind": "CodeSpan",
             "code": "\"throw\""
            },
            {
             "kind": "PlainText",
             "text": ": An error was thrown, so it could have been either (more likely ",
             "textExcerpt": {
              "startIndex": 90,
              "endIndex": 118
             }
            },
            {
             "kind": "CodeSpan",
             "code": "\"sync\""
            },
            {
             "kind": "PlainText",
             "text": ", though). * ",
             "textExcerpt": {
              "startIndex": 123,
              "endIndex": 131
             }
            },
            {
             "kind": "CodeSpan",
             "code": "null"
            },
            {
             "kind": "PlainText",
             "text": ": Nothing's happened yet.",
             "textExcerpt": {
              "startIndex": 134,
              "endIndex": 144
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#pending:member"
       },
       "displayName": "pending",
       "excerpt": {
        "isEmpty": false,
        "text": "pending: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "pending: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "pending: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "pending|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "pending",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "When the async handler is currently executing, this is true. When it finishes, this becomes false.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 35
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#rejectCount:member"
       },
       "displayName": "rejectCount",
       "excerpt": {
        "isEmpty": false,
        "text": "rejectCount: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rejectCount: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rejectCount: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rejectCount|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rejectCount",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The number of times the handler has failed to complete, similarly to ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 25
             }
            },
            {
             "kind": "CodeSpan",
             "code": "resolveCount"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 28,
              "endIndex": 29
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#resolveCount:member"
       },
       "displayName": "resolveCount",
       "excerpt": {
        "isEmpty": false,
        "text": "resolveCount: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "resolveCount: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "resolveCount: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "resolveCount|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "resolveCount",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The number of times the handler has completed successfully, similarly to ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 23
             }
            },
            {
             "kind": "CodeSpan",
             "code": "settleCount"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 26,
              "endIndex": 27
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#result:member"
       },
       "displayName": "result",
       "excerpt": {
        "isEmpty": false,
        "text": "result: R | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "result: "
         },
         {
          "kind": "Content",
          "text": "R | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "result: "
        },
        {
         "kind": "Content",
         "text": "R | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "result|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "result",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "R | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "R | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Represents the value most recently returned from a successful handler invocation, or undefined if no handler has successfully returned yet.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 41
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If the handler rejects after having succeeded previously, then ",
             "textExcerpt": {
              "startIndex": 43,
              "endIndex": 62
             }
            },
            {
             "kind": "CodeSpan",
             "code": "result"
            },
            {
             "kind": "PlainText",
             "text": " will still keep its value; it won't be \"erased\" due to the error. This means that ",
             "textExcerpt": {
              "startIndex": 65,
              "endIndex": 104
             }
            },
            {
             "kind": "CodeSpan",
             "code": "result"
            },
            {
             "kind": "PlainText",
             "text": " and ",
             "textExcerpt": {
              "startIndex": 107,
              "endIndex": 110
             }
            },
            {
             "kind": "CodeSpan",
             "code": "error"
            },
            {
             "kind": "PlainText",
             "text": " can both be populated at the same time.",
             "textExcerpt": {
              "startIndex": 113,
              "endIndex": 130
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [
         {
          "blockTag": {
           "kind": "BlockTag",
           "tagName": "@see"
          },
          "content": {
           "kind": "Section",
           "nodes": [
            {
             "kind": "Paragraph",
             "nodes": [
              {
               "kind": "SoftBreak"
              },
              {
               "kind": "SoftBreak"
              },
              {
               "kind": "PlainText",
               "text": "hasResult for if ",
               "textExcerpt": {
                "startIndex": 136,
                "endIndex": 142
               }
              },
              {
               "kind": "CodeSpan",
               "code": "result"
              },
              {
               "kind": "PlainText",
               "text": " being ",
               "textExcerpt": {
                "startIndex": 145,
                "endIndex": 148
               }
              },
              {
               "kind": "CodeSpan",
               "code": "undefined"
              },
              {
               "kind": "PlainText",
               "text": " means it's unfinished or the function itself returned ",
               "textExcerpt": {
                "startIndex": 151,
                "endIndex": 170
               }
              },
              {
               "kind": "CodeSpan",
               "code": "undefined"
              },
              {
               "kind": "PlainText",
               "text": ".",
               "textExcerpt": {
                "startIndex": 173,
                "endIndex": 174
               }
              },
              {
               "kind": "SoftBreak"
              }
             ]
            }
           ]
          },
          "kind": "Block"
         }
        ],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#settleCount:member"
       },
       "displayName": "settleCount",
       "excerpt": {
        "isEmpty": false,
        "text": "settleCount: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "settleCount: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "settleCount: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "settleCount|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "settleCount",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The number of times the handler has settled (resolved or rejected), similarly to ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 29
             }
            },
            {
             "kind": "CodeSpan",
             "code": "callCount"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 32,
              "endIndex": 33
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Useful for knowing if the handler has completed even once yet, or just for when the handler has finished",
             "textExcerpt": {
              "startIndex": 35,
              "endIndex": 73
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseAsyncReturnType#syncHandler:member"
       },
       "displayName": "syncHandler",
       "excerpt": {
        "isEmpty": false,
        "text": "syncHandler: SyncFunctionType<SP, void>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "syncHandler: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "SyncFunctionType:type"
          },
          "kind": "Reference",
          "text": "SyncFunctionType"
         },
         {
          "kind": "Content",
          "text": "<SP, void>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "syncHandler: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "SyncFunctionType:type"
         },
         "kind": "Reference",
         "text": "SyncFunctionType"
        },
        {
         "kind": "Content",
         "text": "<SP, void>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "syncHandler|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "syncHandler",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "SyncFunctionType<SP, void>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "SyncFunctionType:type"
          },
          "kind": "Reference",
          "text": "SyncFunctionType"
         },
         {
          "kind": "Content",
          "text": "<SP, void>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The transformed version of the async handler provided, now synchronous and/or throttled and/or debounced",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 32
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**Quasi-stable** (don't use during render)",
             "textExcerpt": {
              "startIndex": 34,
              "endIndex": 53
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "unknown[]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown[]"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SP"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useBackdropDismiss:function(1)"
     },
     "kind": "Function",
     "containerKey": "useBackdropDismiss|Function|1",
     "displayName": "useBackdropDismiss",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useBackdropDismiss<PopupElement extends Element>({ backdropDismissParameters: { open, onClose: onCloseUnstable, ...void1 }, refElementPopupReturn: { getElement, ...void3 }, ...void2 }: UseBackdropDismissParameters<PopupElement>): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useBackdropDismiss<PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseBackdropDismissParameters#backdropDismissParameters"
        },
        "kind": "Reference",
        "text": "backdropDismissParameters"
       },
       {
        "kind": "Content",
        "text": ": { open, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#onClose"
        },
        "kind": "Reference",
        "text": "onClose"
       },
       {
        "kind": "Content",
        "text": ": onCloseUnstable, ...void1 }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseBackdropDismissParameters#refElementPopupReturn"
        },
        "kind": "Reference",
        "text": "refElementPopupReturn"
       },
       {
        "kind": "Content",
        "text": ": { getElement, ...void3 }, ...void2 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseBackdropDismissParameters:interface"
        },
        "kind": "Reference",
        "text": "UseBackdropDismissParameters"
       },
       {
        "kind": "Content",
        "text": "<PopupElement>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useBackdropDismiss",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ backdropDismissParameters: { open, onClose: onCloseUnstable, ...void1 }, refElementPopupReturn: { getElement, ...void3 }, ...void2 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseBackdropDismissParameters<PopupElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseBackdropDismissParameters:interface"
          },
          "kind": "Reference",
          "text": "UseBackdropDismissParameters"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 11,
         "startIndex": 9
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 12
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Handles events for a backdrop on a modal dialog -- the kind where the user expects the modal to close when they click/tap outside of it.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 55
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "param0",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useBackdropDismiss<PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseBackdropDismissParameters#backdropDismissParameters"
       },
       "kind": "Reference",
       "text": "backdropDismissParameters"
      },
      {
       "kind": "Content",
       "text": ": { open, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#onClose"
       },
       "kind": "Reference",
       "text": "onClose"
      },
      {
       "kind": "Content",
       "text": ": onCloseUnstable, ...void1 }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseBackdropDismissParameters#refElementPopupReturn"
       },
       "kind": "Reference",
       "text": "refElementPopupReturn"
      },
      {
       "kind": "Content",
       "text": ": { getElement, ...void3 }, ...void2 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseBackdropDismissParameters:interface"
       },
       "kind": "Reference",
       "text": "UseBackdropDismissParameters"
      },
      {
       "kind": "Content",
       "text": "<PopupElement>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseBackdropDismissParameters:interface"
     },
     "containerKey": "UseBackdropDismissParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseBackdropDismissParameters<PopupElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseBackdropDismissParameters<PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseBackdropDismissParameters<PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseBackdropDismissParameters",
     "fileUrlPath": "src/component-detail/use-dismiss.tsx",
     "isExported": true,
     "name": "UseBackdropDismissParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseBackdropDismissParameters#backdropDismissParameters:member"
       },
       "displayName": "backdropDismissParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "backdropDismissParameters: {\n        open: boolean;\n        onClose: EnhancedEventHandler<MouseEvent, {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "backdropDismissParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        open: boolean;\n        onClose: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "EnhancedEventHandler:type"
          },
          "kind": "Reference",
          "text": "EnhancedEventHandler"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "MouseEvent:interface"
          },
          "kind": "Reference",
          "text": "MouseEvent"
         },
         {
          "kind": "Content",
          "text": ", {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "backdropDismissParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        open: boolean;\n        onClose: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "EnhancedEventHandler:type"
         },
         "kind": "Reference",
         "text": "EnhancedEventHandler"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "MouseEvent:interface"
         },
         "kind": "Reference",
         "text": "MouseEvent"
        },
        {
         "kind": "Content",
         "text": ", {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "backdropDismissParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "backdropDismissParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        open: boolean;\n        onClose: EnhancedEventHandler<MouseEvent, {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        open: boolean;\n        onClose: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "EnhancedEventHandler:type"
          },
          "kind": "Reference",
          "text": "EnhancedEventHandler"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "MouseEvent:interface"
          },
          "kind": "Reference",
          "text": "MouseEvent"
         },
         {
          "kind": "Content",
          "text": ", {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseBackdropDismissParameters#refElementPopupReturn:member"
       },
       "displayName": "refElementPopupReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementPopupReturn: Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementPopupReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementPopupReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementPopupReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementPopupReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useChildrenFlag:function(1)"
     },
     "kind": "Function",
     "containerKey": "useChildrenFlag|Function|1",
     "displayName": "useChildrenFlag",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useChildrenFlag<M extends ManagedChildInfo<number | string>, R>({ getChildren, initialIndex, closestFit, onClosestFit, onIndexChange, getAt, setAt, isValid }: UseChildrenFlagParameters<M, R>): UseChildrenFlagReturnType<M, R>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useChildrenFlag<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<number | string>"
       },
       {
        "kind": "Content",
        "text": ", R>({ getChildren, initialIndex, closestFit, onClosestFit, onIndexChange, getAt, setAt, isValid }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenFlagParameters:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenFlagParameters"
       },
       {
        "kind": "Content",
        "text": "<M, R>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenFlagReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenFlagReturnType"
       },
       {
        "kind": "Content",
        "text": "<M, R>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useChildrenFlag",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ getChildren, initialIndex, closestFit, onClosestFit, onIndexChange, getAt, setAt, isValid }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseChildrenFlagParameters<M, R>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenFlagParameters:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenFlagParameters"
         },
         {
          "kind": "Content",
          "text": "<M, R>"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 4
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseChildrenFlagReturnType<M, R>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenFlagReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenFlagReturnType"
       },
       {
        "kind": "Content",
        "text": "<M, R>"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 7
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<number | string>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<number | string>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "An extension to useManagedChildren that handles the following common case: 1. You have a bunch of children 2. At any given time, only 1 of them is \"selected\", \"activated\", \"focusable\", whatever (or 0 of them, that's cool too, just 0 or 1 though). 3. The parent has control over who is \"selected\" via a numerical index.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 135
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "This hook allows for much easier control over selection management.",
           "textExcerpt": {
            "startIndex": 137,
            "endIndex": 157
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Note that because you may want to use multiple flags with the same children, this hook *does not* use ",
           "textExcerpt": {
            "startIndex": 159,
            "endIndex": 200
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useManagedChildren"
          },
          {
           "kind": "PlainText",
           "text": "! You need to pass it the existing children, and you must pass your invocation of ",
           "textExcerpt": {
            "startIndex": 203,
            "endIndex": 236
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useManagedChildren"
          },
          {
           "kind": "PlainText",
           "text": " the returned ",
           "textExcerpt": {
            "startIndex": 239,
            "endIndex": 244
           }
          },
          {
           "kind": "CodeSpan",
           "code": "onChildrenMountChange"
          },
          {
           "kind": "PlainText",
           "text": " handler!",
           "textExcerpt": {
            "startIndex": 247,
            "endIndex": 250
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Also because of that, the types of this function are rather odd. It's better to start off using a hook that already uses a flag, such as ",
           "textExcerpt": {
            "startIndex": 252,
            "endIndex": 311
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useRovingTabIndex"
          },
          {
           "kind": "PlainText",
           "text": ", as an example.",
           "textExcerpt": {
            "startIndex": 314,
            "endIndex": 322
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "param0",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useChildrenFlag<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<number | string>"
      },
      {
       "kind": "Content",
       "text": ", R>({ getChildren, initialIndex, closestFit, onClosestFit, onIndexChange, getAt, setAt, isValid }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenFlagParameters"
      },
      {
       "kind": "Content",
       "text": "<M, R>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenFlagReturnType"
      },
      {
       "kind": "Content",
       "text": "<M, R>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseChildrenFlagParameters:interface"
     },
     "containerKey": "UseChildrenFlagParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseChildrenFlagParameters<M extends ManagedChildInfo<any>, R> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseChildrenFlagParameters<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<any>"
       },
       {
        "kind": "Content",
        "text": ", R> "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseChildrenFlagParameters<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<any>"
      },
      {
       "kind": "Content",
       "text": ", R> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseChildrenFlagParameters",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "UseChildrenFlagParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters#closestFit:member"
       },
       "displayName": "closestFit",
       "excerpt": {
        "isEmpty": false,
        "text": "closestFit: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "closestFit: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "closestFit: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "closestFit|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "closestFit",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "When provided, if the given activatedIndex doesn't map onto any provided child (either because it's too large or that child doesn't exist), the closest child to the given activatedIndex will have its flag set instead.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 80
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Use with caution, and consider how a child having its flag set while the parent thinks it shouldn't be could cause issues.",
             "textExcerpt": {
              "startIndex": 82,
              "endIndex": 129
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters#getAt:member(1)"
       },
       "displayName": "getAt",
       "excerpt": {
        "isEmpty": false,
        "text": "getAt(index: M): boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getAt(index: "
         },
         {
          "kind": "Content",
          "text": "M"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getAt(index: "
        },
        {
         "kind": "Content",
         "text": "M"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getAt|MethodSignature|1",
       "isOptional": false,
       "name": "getAt",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "index",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "M",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "M"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters#getChildren:member(1)"
       },
       "displayName": "getChildren",
       "excerpt": {
        "isEmpty": false,
        "text": "getChildren(): ManagedChildren<M>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getChildren(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildren:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildren"
         },
         {
          "kind": "Content",
          "text": "<M>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getChildren(): "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ManagedChildren:interface"
         },
         "kind": "Reference",
         "text": "ManagedChildren"
        },
        {
         "kind": "Content",
         "text": "<M>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getChildren|MethodSignature|1",
       "isOptional": false,
       "name": "getChildren",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildren<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildren:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildren"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters#initialIndex:member"
       },
       "displayName": "initialIndex",
       "excerpt": {
        "isEmpty": false,
        "text": "initialIndex: M[\"index\"] | null | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "initialIndex: "
         },
         {
          "kind": "Content",
          "text": "M[\"index\"] | null | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "initialIndex: "
        },
        {
         "kind": "Content",
         "text": "M[\"index\"] | null | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "initialIndex|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "initialIndex",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "M[\"index\"] | null | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "M[\"index\"] | null | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Which child is considered active on mount.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 14
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "After mount, change the current active child with ",
             "textExcerpt": {
              "startIndex": 16,
              "endIndex": 33
             }
            },
            {
             "kind": "CodeSpan",
             "code": "changeIndex"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 36,
              "endIndex": 37
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters#isValid:member(1)"
       },
       "displayName": "isValid",
       "excerpt": {
        "isEmpty": false,
        "text": "isValid(index: M): boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "isValid(index: "
         },
         {
          "kind": "Content",
          "text": "M"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "isValid(index: "
        },
        {
         "kind": "Content",
         "text": "M"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "isValid|MethodSignature|1",
       "isOptional": false,
       "name": "isValid",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "index",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "M",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "M"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Must be at least quasi-stable (always stable, doesn't need to be called during render)",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 34
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters#onClosestFit:member"
       },
       "displayName": "onClosestFit",
       "excerpt": {
        "isEmpty": false,
        "text": "onClosestFit: ((newFit: number | null) => void) | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "onClosestFit: "
         },
         {
          "kind": "Content",
          "text": "((newFit: number | null) => void) | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "onClosestFit: "
        },
        {
         "kind": "Content",
         "text": "((newFit: number | null) => void) | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "onClosestFit|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "onClosestFit",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "((newFit: number | null) => void) | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "((newFit: number | null) => void) | null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters#onIndexChange:member"
       },
       "displayName": "onIndexChange",
       "excerpt": {
        "isEmpty": false,
        "text": "onIndexChange: null | OnPassiveStateChange<M[\"index\"] | null, R>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "onIndexChange: "
         },
         {
          "kind": "Content",
          "text": "null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<M[\"index\"] | null, R>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "onIndexChange: "
        },
        {
         "kind": "Content",
         "text": "null | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<M[\"index\"] | null, R>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "onIndexChange|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "onIndexChange",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "null | OnPassiveStateChange<M[\"index\"] | null, R>",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<M[\"index\"] | null, R>"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Called whenever a new index is selected.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 14
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Notably, the value can be different than what was called with changeIndex() if the requested index didn't exist or was hidden.",
             "textExcerpt": {
              "startIndex": 16,
              "endIndex": 63
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagParameters#setAt:member(1)"
       },
       "displayName": "setAt",
       "excerpt": {
        "isEmpty": false,
        "text": "setAt(index: M, value: boolean, newSelectedIndex: M[\"index\"] | null, prevSelectedIndex: M[\"index\"] | null): void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setAt(index: "
         },
         {
          "kind": "Content",
          "text": "M"
         },
         {
          "kind": "Content",
          "text": ", value: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ", newSelectedIndex: "
         },
         {
          "kind": "Content",
          "text": "M[\"index\"] | null"
         },
         {
          "kind": "Content",
          "text": ", prevSelectedIndex: "
         },
         {
          "kind": "Content",
          "text": "M[\"index\"] | null"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 11,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setAt(index: "
        },
        {
         "kind": "Content",
         "text": "M"
        },
        {
         "kind": "Content",
         "text": ", value: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ", newSelectedIndex: "
        },
        {
         "kind": "Content",
         "text": "M[\"index\"] | null"
        },
        {
         "kind": "Content",
         "text": ", prevSelectedIndex: "
        },
        {
         "kind": "Content",
         "text": "M[\"index\"] | null"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setAt|MethodSignature|1",
       "isOptional": false,
       "name": "setAt",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "index",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "M",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "M"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        },
        {
         "isOptional": false,
         "name": "value",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "boolean",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "boolean"
           }
          ],
          "tokenRange": {
           "endIndex": 4,
           "startIndex": 3
          }
         }
        },
        {
         "isOptional": false,
         "name": "newSelectedIndex",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "M[\"index\"] | null",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "M[\"index\"] | null"
           }
          ],
          "tokenRange": {
           "endIndex": 6,
           "startIndex": 5
          }
         }
        },
        {
         "isOptional": false,
         "name": "prevSelectedIndex",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "M[\"index\"] | null",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "M[\"index\"] | null"
           }
          ],
          "tokenRange": {
           "endIndex": 8,
           "startIndex": 7
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "void"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 9
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<any>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<any>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseChildrenFlagReturnType:interface"
     },
     "containerKey": "UseChildrenFlagReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseChildrenFlagReturnType<M extends ManagedChildInfo<any>, R> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseChildrenFlagReturnType<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<any>"
       },
       {
        "kind": "Content",
        "text": ", R> "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseChildrenFlagReturnType<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<any>"
      },
      {
       "kind": "Content",
       "text": ", R> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseChildrenFlagReturnType",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "UseChildrenFlagReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagReturnType#changeIndex:member"
       },
       "displayName": "changeIndex",
       "excerpt": {
        "isEmpty": false,
        "text": "changeIndex: PassiveStateUpdater<M[\"index\"] | null, R>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "changeIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<M[\"index\"] | null, R>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "changeIndex: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PassiveStateUpdater:type"
         },
         "kind": "Reference",
         "text": "PassiveStateUpdater"
        },
        {
         "kind": "Content",
         "text": "<M[\"index\"] | null, R>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "changeIndex|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "changeIndex",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PassiveStateUpdater<M[\"index\"] | null, R>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<M[\"index\"] | null, R>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**STABLE**",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 5
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Manually changes the current index that is (focused/selected/tabbable/whatever).",
             "textExcerpt": {
              "startIndex": 7,
              "endIndex": 31
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The parent can use this to notify each relevant child of what it must do in order to make this change happen.",
             "textExcerpt": {
              "startIndex": 33,
              "endIndex": 77
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The returned value will be the new index that will be used. If ",
             "textExcerpt": {
              "startIndex": 79,
              "endIndex": 106
             }
            },
            {
             "kind": "CodeSpan",
             "code": "closestFit"
            },
            {
             "kind": "PlainText",
             "text": " is false, it will always be the same as what you passed in.",
             "textExcerpt": {
              "startIndex": 109,
              "endIndex": 137
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagReturnType#getCurrentIndex:member"
       },
       "displayName": "getCurrentIndex",
       "excerpt": {
        "isEmpty": false,
        "text": "getCurrentIndex: () => M[\"index\"] | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getCurrentIndex: "
         },
         {
          "kind": "Content",
          "text": "() => M[\"index\"] | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getCurrentIndex: "
        },
        {
         "kind": "Content",
         "text": "() => M[\"index\"] | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getCurrentIndex|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "getCurrentIndex",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => M[\"index\"] | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => M[\"index\"] | null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**STABLE**",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 5
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenFlagReturnType#reevaluateClosestFit:member"
       },
       "displayName": "reevaluateClosestFit",
       "excerpt": {
        "isEmpty": false,
        "text": "reevaluateClosestFit: () => void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "reevaluateClosestFit: "
         },
         {
          "kind": "Content",
          "text": "() => void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "reevaluateClosestFit: "
        },
        {
         "kind": "Content",
         "text": "() => void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "reevaluateClosestFit|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "reevaluateClosestFit",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => void"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**STABLE**",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 5
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Call this whenever a child mounts/unmounts, or whenever calling a child's isValid() would change",
             "textExcerpt": {
              "startIndex": 7,
              "endIndex": 41
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<any>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<any>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useChildrenHaveFocus:function(1)"
     },
     "kind": "Function",
     "containerKey": "useChildrenHaveFocus|Function|1",
     "displayName": "useChildrenHaveFocus",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useChildrenHaveFocus<ChildElement extends Element>(args: UseChildrenHaveFocusParameters<ChildElement>): UseChildrenHaveFocusReturnType<ChildElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useChildrenHaveFocus<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">(args: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusParameters:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useChildrenHaveFocus",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "args",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusParameters<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseChildrenHaveFocusReturnType<ChildElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 6
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows a composite component (such as a radio group or listbox) to listen for an \"overall focusin/out\" event; this hook lets you know when focus has moved in/out of this grouping of children EVEN IF there is no actual parent DOM element.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 93
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "I.E. you can use this without needing a parent ",
           "textExcerpt": {
            "startIndex": 95,
            "endIndex": 116
           }
          },
          {
           "kind": "CodeSpan",
           "code": "<div>"
          },
          {
           "kind": "PlainText",
           "text": " to listen for a ",
           "textExcerpt": {
            "startIndex": 121,
            "endIndex": 130
           }
          },
          {
           "kind": "CodeSpan",
           "code": "focusout"
          },
          {
           "kind": "PlainText",
           "text": " event.",
           "textExcerpt": {
            "startIndex": 133,
            "endIndex": 136
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useChildrenHaveFocus<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">(args: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusParameters:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenHaveFocusParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenHaveFocusReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useChildrenHaveFocusChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useChildrenHaveFocusChild|Function|1",
     "displayName": "useChildrenHaveFocusChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useChildrenHaveFocusChild<E extends Element>({ context: { childrenHaveFocusChildContext: { setFocusCount } } }: UseChildrenHaveFocusChildParameters<E>): UseChildrenHaveFocusChildReturnType<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useChildrenHaveFocusChild<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusChildParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusContext#childrenHaveFocusChildContext"
        },
        "kind": "Reference",
        "text": "childrenHaveFocusChildContext"
       },
       {
        "kind": "Content",
        "text": ": { setFocusCount } } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusChildParameters"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useChildrenHaveFocusChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ context: { childrenHaveFocusChildContext: { setFocusCount } } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusChildParameters<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusChildParameters"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseChildrenHaveFocusChildReturnType<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 10
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useChildrenHaveFocusChild<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusChildParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusContext#childrenHaveFocusChildContext"
       },
       "kind": "Reference",
       "text": "childrenHaveFocusChildContext"
      },
      {
       "kind": "Content",
       "text": ": { setFocusCount } } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenHaveFocusChildParameters"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenHaveFocusChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseChildrenHaveFocusChildParameters:interface"
     },
     "containerKey": "UseChildrenHaveFocusChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseChildrenHaveFocusChildParameters<T extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseChildrenHaveFocusChildParameters<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseChildrenHaveFocusChildParameters<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseChildrenHaveFocusChildParameters",
     "fileUrlPath": "src/observers/use-children-have-focus.tsx",
     "isExported": true,
     "name": "UseChildrenHaveFocusChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseChildrenHaveFocusContext<T>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusContext:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusContext"
         },
         {
          "kind": "Content",
          "text": "<T>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseChildrenHaveFocusContext:interface"
         },
         "kind": "Reference",
         "text": "UseChildrenHaveFocusContext"
        },
        {
         "kind": "Content",
         "text": "<T>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusContext<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusContext:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusContext"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseChildrenHaveFocusChildReturnType:interface"
     },
     "containerKey": "UseChildrenHaveFocusChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseChildrenHaveFocusChildReturnType<E extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseChildrenHaveFocusChildReturnType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseChildrenHaveFocusChildReturnType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseChildrenHaveFocusChildReturnType",
     "fileUrlPath": "src/observers/use-children-have-focus.tsx",
     "isExported": true,
     "name": "UseChildrenHaveFocusChildReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusChildReturnType#hasCurrentFocusParameters:member"
       },
       "displayName": "hasCurrentFocusParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "hasCurrentFocusParameters: Required<Pick<UseHasCurrentFocusParameters<E>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasCurrentFocusParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Required:type"
          },
          "kind": "Reference",
          "text": "Required"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<E>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasCurrentFocusParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Required:type"
         },
         "kind": "Reference",
         "text": "Required"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseHasCurrentFocusParameters:interface"
         },
         "kind": "Reference",
         "text": "UseHasCurrentFocusParameters"
        },
        {
         "kind": "Content",
         "text": "<E>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasCurrentFocusParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasCurrentFocusParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Required<Pick<UseHasCurrentFocusParameters<E>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Required:type"
          },
          "kind": "Reference",
          "text": "Required"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<E>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseChildrenHaveFocusContext:interface"
     },
     "containerKey": "UseChildrenHaveFocusContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseChildrenHaveFocusContext<T extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseChildrenHaveFocusContext<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseChildrenHaveFocusContext<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseChildrenHaveFocusContext",
     "fileUrlPath": "src/observers/use-children-have-focus.tsx",
     "isExported": true,
     "name": "UseChildrenHaveFocusContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusContext#childrenHaveFocusChildContext:member"
       },
       "displayName": "childrenHaveFocusChildContext",
       "excerpt": {
        "isEmpty": false,
        "text": "childrenHaveFocusChildContext: {\n        setFocusCount: PassiveStateUpdater<number, FocusEventType<T>>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "childrenHaveFocusChildContext: "
         },
         {
          "kind": "Content",
          "text": "{\n        setFocusCount: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<number, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "FocusEventType:type"
          },
          "kind": "Reference",
          "text": "FocusEventType"
         },
         {
          "kind": "Content",
          "text": "<T>>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "childrenHaveFocusChildContext: "
        },
        {
         "kind": "Content",
         "text": "{\n        setFocusCount: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PassiveStateUpdater:type"
         },
         "kind": "Reference",
         "text": "PassiveStateUpdater"
        },
        {
         "kind": "Content",
         "text": "<number, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "FocusEventType:type"
         },
         "kind": "Reference",
         "text": "FocusEventType"
        },
        {
         "kind": "Content",
         "text": "<T>>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "childrenHaveFocusChildContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "childrenHaveFocusChildContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        setFocusCount: PassiveStateUpdater<number, FocusEventType<T>>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        setFocusCount: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<number, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "FocusEventType:type"
          },
          "kind": "Reference",
          "text": "FocusEventType"
         },
         {
          "kind": "Content",
          "text": "<T>>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseChildrenHaveFocusParameters:interface"
     },
     "containerKey": "UseChildrenHaveFocusParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseChildrenHaveFocusParameters<T extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseChildrenHaveFocusParameters<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseChildrenHaveFocusParameters<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseChildrenHaveFocusParameters",
     "fileUrlPath": "src/observers/use-children-have-focus.tsx",
     "isExported": true,
     "name": "UseChildrenHaveFocusParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusParameters#childrenHaveFocusParameters:member"
       },
       "displayName": "childrenHaveFocusParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "childrenHaveFocusParameters: {\n        onCompositeFocusChange: null | OnPassiveStateChange<boolean, FocusEventType<T>>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "childrenHaveFocusParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onCompositeFocusChange: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "FocusEventType:type"
          },
          "kind": "Reference",
          "text": "FocusEventType"
         },
         {
          "kind": "Content",
          "text": "<T>>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "childrenHaveFocusParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onCompositeFocusChange: null | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<boolean, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "FocusEventType:type"
         },
         "kind": "Reference",
         "text": "FocusEventType"
        },
        {
         "kind": "Content",
         "text": "<T>>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "childrenHaveFocusParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "childrenHaveFocusParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onCompositeFocusChange: null | OnPassiveStateChange<boolean, FocusEventType<T>>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onCompositeFocusChange: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "FocusEventType:type"
          },
          "kind": "Reference",
          "text": "FocusEventType"
         },
         {
          "kind": "Content",
          "text": "<T>>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseChildrenHaveFocusReturnType:interface"
     },
     "containerKey": "UseChildrenHaveFocusReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseChildrenHaveFocusReturnType<T extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseChildrenHaveFocusReturnType<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseChildrenHaveFocusReturnType<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseChildrenHaveFocusReturnType",
     "fileUrlPath": "src/observers/use-children-have-focus.tsx",
     "isExported": true,
     "name": "UseChildrenHaveFocusReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusReturnType#childrenHaveFocusReturn:member"
       },
       "displayName": "childrenHaveFocusReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "childrenHaveFocusReturn: {\n        getAnyFocused(): boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "childrenHaveFocusReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getAnyFocused(): boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "childrenHaveFocusReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getAnyFocused(): boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "childrenHaveFocusReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "childrenHaveFocusReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getAnyFocused(): boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getAnyFocused(): boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseChildrenHaveFocusContext<T>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusContext:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusContext"
         },
         {
          "kind": "Content",
          "text": "<T>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseChildrenHaveFocusContext:interface"
         },
         "kind": "Reference",
         "text": "UseChildrenHaveFocusContext"
        },
        {
         "kind": "Content",
         "text": "<T>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusContext<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusContext:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusContext"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useCompleteGridNavigation:function(1)"
     },
     "kind": "Function",
     "containerKey": "useCompleteGridNavigation|Function|1",
     "displayName": "useCompleteGridNavigation",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useCompleteGridNavigation<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>>({ gridNavigationParameters, linearNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, typeaheadNavigationParameters, sortableChildrenParameters, rearrangeableChildrenParameters, paginatedChildrenParameters, staggeredChildrenParameters, ...void1 }: UseCompleteGridNavigationParameters<ParentOrRowElement, RowElement, CellElement, RM>): UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useCompleteGridNavigation<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ gridNavigationParameters, linearNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, typeaheadNavigationParameters, sortableChildrenParameters, rearrangeableChildrenParameters, paginatedChildrenParameters, staggeredChildrenParameters, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useCompleteGridNavigation",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ gridNavigationParameters, linearNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, typeaheadNavigationParameters, sortableChildrenParameters, rearrangeableChildrenParameters, paginatedChildrenParameters, staggeredChildrenParameters, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationParameters<ParentOrRowElement, RowElement, CellElement, RM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 13
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 16
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useCompleteGridNavigation<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ gridNavigationParameters, linearNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, typeaheadNavigationParameters, sortableChildrenParameters, rearrangeableChildrenParameters, paginatedChildrenParameters, staggeredChildrenParameters, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useCompleteGridNavigationCell:function(1)"
     },
     "kind": "Function",
     "containerKey": "useCompleteGridNavigationCell|Function|1",
     "displayName": "useCompleteGridNavigationCell",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useCompleteGridNavigationCell<CellElement extends Element, CM extends UseCompleteGridNavigationCellInfo<CellElement>>({ gridNavigationCellParameters, context: { gridNavigationCellContext, managedChildContext, rovingTabIndexContext, typeaheadNavigationContext }, textContentParameters, info, ...void1 }: UseCompleteGridNavigationCellParameters<CellElement, CM>): UseCompleteGridNavigationCellReturnType<CellElement, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useCompleteGridNavigationCell<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ gridNavigationCellParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { gridNavigationCellContext, managedChildContext, rovingTabIndexContext, typeaheadNavigationContext }, textContentParameters, info, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellParameters"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useCompleteGridNavigationCell",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ gridNavigationCellParameters, context: { gridNavigationCellContext, managedChildContext, rovingTabIndexContext, typeaheadNavigationContext }, textContentParameters, info, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellParameters<CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellParameters"
         },
         {
          "kind": "Content",
          "text": "<CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseCompleteGridNavigationCellReturnType<CellElement, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useCompleteGridNavigationCell<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ gridNavigationCellParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { gridNavigationCellContext, managedChildContext, rovingTabIndexContext, typeaheadNavigationContext }, textContentParameters, info, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellParameters"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationCellInfo:interface"
     },
     "containerKey": "UseCompleteGridNavigationCellInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationCellInfo<CellElement extends Element> extends GridSingleSelectSortableChildCellInfo<CellElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationCellInfo<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationCellInfo<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationCellInfo",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationCellInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationCellParameters:interface"
     },
     "containerKey": "UseCompleteGridNavigationCellParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationCellParameters<CellElement extends Element, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends OmitStrong<UseGridNavigationSingleSelectionCellParameters<any, CellElement, CM>, \"info\" | \"context\" | \"textContentParameters\" | \"refElementReturn\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationCellParameters<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionCellParameters"
       },
       {
        "kind": "Content",
        "text": "<any, CellElement, CM>, \"info\" | \"context\" | \"textContentParameters\" | \"refElementReturn\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationCellParameters<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionCellParameters"
      },
      {
       "kind": "Content",
       "text": "<any, CellElement, CM>, \"info\" | \"context\" | \"textContentParameters\" | \"refElementReturn\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionCellParameters<any, CellElement, CM>, \"info\" | \"context\" | \"textContentParameters\" | \"refElementReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionCellParameters"
         },
         {
          "kind": "Content",
          "text": "<any, CellElement, CM>, \"info\" | \"context\" | \"textContentParameters\" | \"refElementReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationCellParameters",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationCellParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: CompleteGridNavigationCellContext<any, CellElement, CM>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteGridNavigationCellContext"
         },
         {
          "kind": "Content",
          "text": "<any, CellElement, CM>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "CompleteGridNavigationRowContext:interface"
         },
         "kind": "Reference",
         "text": "CompleteGridNavigationCellContext"
        },
        {
         "kind": "Content",
         "text": "<any, CellElement, CM>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "CompleteGridNavigationCellContext<any, CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteGridNavigationCellContext"
         },
         {
          "kind": "Content",
          "text": "<any, CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Omit<CM, Exclude<keyof UseCompleteGridNavigationCellInfo<CellElement>, \"index\" | \"untabbable\" | \"focusSelf\">>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Omit:type"
          },
          "kind": "Reference",
          "text": "Omit"
         },
         {
          "kind": "Content",
          "text": "<CM, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Exclude:type"
          },
          "kind": "Reference",
          "text": "Exclude"
         },
         {
          "kind": "Content",
          "text": "<keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>, \"index\" | \"untabbable\" | \"focusSelf\">>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Omit:type"
         },
         "kind": "Reference",
         "text": "Omit"
        },
        {
         "kind": "Content",
         "text": "<CM, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Exclude:type"
         },
         "kind": "Reference",
         "text": "Exclude"
        },
        {
         "kind": "Content",
         "text": "<keyof "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseCompleteGridNavigationCellInfo:interface"
         },
         "kind": "Reference",
         "text": "UseCompleteGridNavigationCellInfo"
        },
        {
         "kind": "Content",
         "text": "<CellElement>, \"index\" | \"untabbable\" | \"focusSelf\">>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Omit<CM, Exclude<keyof UseCompleteGridNavigationCellInfo<CellElement>, \"index\" | \"untabbable\" | \"focusSelf\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Omit:type"
          },
          "kind": "Reference",
          "text": "Omit"
         },
         {
          "kind": "Content",
          "text": "<CM, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Exclude:type"
          },
          "kind": "Reference",
          "text": "Exclude"
         },
         {
          "kind": "Content",
          "text": "<keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>, \"index\" | \"untabbable\" | \"focusSelf\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellParameters#textContentParameters:member"
       },
       "displayName": "textContentParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "textContentParameters: OmitStrong<UseGridNavigationSingleSelectionCellParameters<any, CellElement, CM>[\"textContentParameters\"], never>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "textContentParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionCellParameters"
         },
         {
          "kind": "Content",
          "text": "<any, CellElement, CM>[\"textContentParameters\"], never>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "textContentParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionCellParameters"
        },
        {
         "kind": "Content",
         "text": "<any, CellElement, CM>[\"textContentParameters\"], never>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "textContentParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "textContentParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionCellParameters<any, CellElement, CM>[\"textContentParameters\"], never>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionCellParameters"
         },
         {
          "kind": "Content",
          "text": "<any, CellElement, CM>[\"textContentParameters\"], never>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationCellReturnType:interface"
     },
     "containerKey": "UseCompleteGridNavigationCellReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationCellReturnType<CellElement extends Element, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends OmitStrong<UseGridNavigationSingleSelectionSortableCellReturnType<CellElement, CM>, \"hasCurrentFocusParameters\" | \"info\">, OmitStrong<UseRefElementReturnType<CellElement>, \"propsStable\">, UseHasCurrentFocusReturnType<CellElement>, UseManagedChildReturnType<CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationCellReturnType<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>, \"hasCurrentFocusParameters\" | \"info\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement>, \"propsStable\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseHasCurrentFocusReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseHasCurrentFocusReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 22,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationCellReturnType<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableCellReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableCellReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>, \"hasCurrentFocusParameters\" | \"info\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRefElementReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement>, \"propsStable\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasCurrentFocusReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseHasCurrentFocusReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableCellReturnType<CellElement, CM>, \"hasCurrentFocusParameters\" | \"info\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableCellReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableCellReturnType"
         },
         {
          "kind": "Content",
          "text": "<CellElement, CM>, \"hasCurrentFocusParameters\" | \"info\">"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 6
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseRefElementReturnType<CellElement>, \"propsStable\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<CellElement>, \"propsStable\">"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 11
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseHasCurrentFocusReturnType<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 16
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseManagedChildReturnType<CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 21,
         "startIndex": 19
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationCellReturnType",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationCellReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<CellElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<CellElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useCompleteGridNavigationDeclarative:function(1)"
     },
     "kind": "Function",
     "containerKey": "useCompleteGridNavigationDeclarative|Function|1",
     "displayName": "useCompleteGridNavigationDeclarative",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useCompleteGridNavigationDeclarative<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>>({ gridNavigationParameters, linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenParameters, rovingTabIndexParameters, singleSelectionDeclarativeParameters, sortableChildrenParameters, staggeredChildrenParameters, typeaheadNavigationParameters, singleSelectionParameters, }: UseCompleteGridNavigationDeclarativeParameters<ParentOrRowElement, RowElement, CellElement, RM, CM>): UseCompleteGridNavigationDeclarativeReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useCompleteGridNavigationDeclarative<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ gridNavigationParameters, linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenParameters, rovingTabIndexParameters, singleSelectionDeclarativeParameters, sortableChildrenParameters, staggeredChildrenParameters, typeaheadNavigationParameters, singleSelectionParameters, }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationDeclarativeParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationDeclarativeParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationDeclarativeReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationDeclarativeReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useCompleteGridNavigationDeclarative",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ gridNavigationParameters, linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenParameters, rovingTabIndexParameters, singleSelectionDeclarativeParameters, sortableChildrenParameters, staggeredChildrenParameters, typeaheadNavigationParameters, singleSelectionParameters, }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationDeclarativeParameters<ParentOrRowElement, RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationDeclarativeParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationDeclarativeParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 13
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseCompleteGridNavigationDeclarativeReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationDeclarativeReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationDeclarativeReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 16
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useCompleteGridNavigationDeclarative<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ gridNavigationParameters, linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenParameters, rovingTabIndexParameters, singleSelectionDeclarativeParameters, sortableChildrenParameters, staggeredChildrenParameters, typeaheadNavigationParameters, singleSelectionParameters, }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationDeclarativeParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationDeclarativeParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationDeclarativeReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationDeclarativeReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationDeclarativeParameters:interface"
     },
     "containerKey": "UseCompleteGridNavigationDeclarativeParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationDeclarativeParameters<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends OmitStrong<MakeSingleSelectionDeclarativeParameters<UseCompleteGridNavigationParameters<ParentOrRowElement, RowElement, CellElement, RM>>, \"singleSelectionReturn\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationDeclarativeParameters<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "MakeSingleSelectionDeclarativeParameters:type"
        },
        "kind": "Reference",
        "text": "MakeSingleSelectionDeclarativeParameters"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM>>, \"singleSelectionReturn\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 20,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationDeclarativeParameters<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "MakeSingleSelectionDeclarativeParameters:type"
       },
       "kind": "Reference",
       "text": "MakeSingleSelectionDeclarativeParameters"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM>>, \"singleSelectionReturn\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<MakeSingleSelectionDeclarativeParameters<UseCompleteGridNavigationParameters<ParentOrRowElement, RowElement, CellElement, RM>>, \"singleSelectionReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "MakeSingleSelectionDeclarativeParameters:type"
          },
          "kind": "Reference",
          "text": "MakeSingleSelectionDeclarativeParameters"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM>>, \"singleSelectionReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 19,
         "startIndex": 13
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationDeclarativeParameters",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationDeclarativeParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationDeclarativeReturnType:interface"
     },
     "containerKey": "UseCompleteGridNavigationDeclarativeReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationDeclarativeReturnType<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends OmitTargeted<UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"singleSelectionReturn\", \"changeSelectedIndex\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationDeclarativeReturnType<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "OmitTargeted:type"
        },
        "kind": "Reference",
        "text": "OmitTargeted"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"singleSelectionReturn\", \"changeSelectedIndex\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationDeclarativeReturnType<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "OmitTargeted:type"
       },
       "kind": "Reference",
       "text": "OmitTargeted"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"singleSelectionReturn\", \"changeSelectedIndex\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitTargeted<UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"singleSelectionReturn\", \"changeSelectedIndex\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "OmitTargeted:type"
          },
          "kind": "Reference",
          "text": "OmitTargeted"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"singleSelectionReturn\", \"changeSelectedIndex\">"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 13
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationDeclarativeReturnType",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationDeclarativeReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationParameters:interface"
     },
     "containerKey": "UseCompleteGridNavigationParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationParameters<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, M extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>> extends OmitStrong<UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement, RowElement, CellElement, M>, \"refElementReturn\" | \"managedChildrenReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\" | \"rearrangeableChildrenParameters\" | \"rovingTabIndexParameters\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationParameters<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, M>, \"refElementReturn\" | \"managedChildrenReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\" | \"rearrangeableChildrenParameters\" | \"rovingTabIndexParameters\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationParameters<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, M>, \"refElementReturn\" | \"managedChildrenReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\" | \"rearrangeableChildrenParameters\" | \"rovingTabIndexParameters\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement, RowElement, CellElement, M>, \"refElementReturn\" | \"managedChildrenReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\" | \"rearrangeableChildrenParameters\" | \"rovingTabIndexParameters\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>, \"refElementReturn\" | \"managedChildrenReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\" | \"rearrangeableChildrenParameters\" | \"rovingTabIndexParameters\">"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 10
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationParameters",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationParameters#linearNavigationParameters:member"
       },
       "displayName": "linearNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "linearNavigationParameters: OmitStrong<UseGridNavigationSingleSelectionParameters<ParentOrRowElement, RowElement, CellElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"indexMangler\" | \"indexDemangler\" | \"isValid\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "linearNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"indexMangler\" | \"indexDemangler\" | \"isValid\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "linearNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionParameters:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"indexMangler\" | \"indexDemangler\" | \"isValid\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "linearNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "linearNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionParameters<ParentOrRowElement, RowElement, CellElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"indexMangler\" | \"indexDemangler\" | \"isValid\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"indexMangler\" | \"indexDemangler\" | \"isValid\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationParameters#paginatedChildrenParameters:member"
       },
       "displayName": "paginatedChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "paginatedChildrenParameters: Pick<UsePaginatedChildrenParameters<ParentOrRowElement, RowElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "paginatedChildrenParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "paginatedChildrenParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePaginatedChildrenParameters:interface"
         },
         "kind": "Reference",
         "text": "UsePaginatedChildrenParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentOrRowElement, RowElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "paginatedChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "paginatedChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UsePaginatedChildrenParameters<ParentOrRowElement, RowElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationParameters#rearrangeableChildrenParameters:member"
       },
       "displayName": "rearrangeableChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "rearrangeableChildrenParameters: OmitStrong<UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement, RowElement, CellElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rearrangeableChildrenParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rearrangeableChildrenParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionSortableParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rearrangeableChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rearrangeableChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement, RowElement, CellElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationParameters#rovingTabIndexParameters:member"
       },
       "displayName": "rovingTabIndexParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexParameters: OmitStrong<UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement, RowElement, CellElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionSortableParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement, RowElement, CellElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationParameters#staggeredChildrenParameters:member"
       },
       "displayName": "staggeredChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "staggeredChildrenParameters: Pick<UseStaggeredChildrenParameters<RowElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "staggeredChildrenParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "staggeredChildrenParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseStaggeredChildrenParameters:interface"
         },
         "kind": "Reference",
         "text": "UseStaggeredChildrenParameters"
        },
        {
         "kind": "Content",
         "text": "<RowElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "staggeredChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "staggeredChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseStaggeredChildrenParameters<RowElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationParameters#typeaheadNavigationParameters:member"
       },
       "displayName": "typeaheadNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "typeaheadNavigationParameters: OmitStrong<UseGridNavigationSingleSelectionParameters<ParentOrRowElement, RowElement, CellElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeaheadNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "typeaheadNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionParameters:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "typeaheadNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "typeaheadNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionParameters<ParentOrRowElement, RowElement, CellElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationReturnType:interface"
     },
     "containerKey": "UseCompleteGridNavigationReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationReturnType<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends Pick<UsePaginatedChildrenReturnType, \"paginatedChildrenReturn\">, Pick<UseStaggeredChildrenReturnType, \"staggeredChildrenReturn\">, OmitStrong<UseGridNavigationSingleSelectionSortableReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationReturnType<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": ", \"paginatedChildrenReturn\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": ", \"staggeredChildrenReturn\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 28,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationReturnType<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": ", \"paginatedChildrenReturn\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": ", \"staggeredChildrenReturn\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UsePaginatedChildrenReturnType, \"paginatedChildrenReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": ", \"paginatedChildrenReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 13
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UseStaggeredChildrenReturnType, \"staggeredChildrenReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": ", \"staggeredChildrenReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 22,
         "startIndex": 18
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">"
         }
        ],
        "tokenRange": {
         "endIndex": 27,
         "startIndex": 23
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationReturnType",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationReturnType#childrenHaveFocusReturn:member"
       },
       "displayName": "childrenHaveFocusReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "childrenHaveFocusReturn: UseChildrenHaveFocusReturnType<RowElement>[\"childrenHaveFocusReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "childrenHaveFocusReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement>[\"childrenHaveFocusReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "childrenHaveFocusReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseChildrenHaveFocusReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseChildrenHaveFocusReturnType"
        },
        {
         "kind": "Content",
         "text": "<RowElement>[\"childrenHaveFocusReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "childrenHaveFocusReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "childrenHaveFocusReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusReturnType<RowElement>[\"childrenHaveFocusReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement>[\"childrenHaveFocusReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: CompleteGridNavigationRowContext<ParentOrRowElement, RowElement, CellElement, RM, CM>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteGridNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteGridNavigationRowContext"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "CompleteGridNavigationContext:interface"
         },
         "kind": "Reference",
         "text": "CompleteGridNavigationRowContext"
        },
        {
         "kind": "Content",
         "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "CompleteGridNavigationRowContext<ParentOrRowElement, RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteGridNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteGridNavigationRowContext"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationReturnType#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: UseManagedChildrenReturnType<RM>[\"managedChildrenReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<RM>[\"managedChildrenReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<RM>[\"managedChildrenReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenReturnType<RM>[\"managedChildrenReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<RM>[\"managedChildrenReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<ParentOrRowElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ParentOrRowElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ParentOrRowElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useCompleteGridNavigationRow:function(1)"
     },
     "kind": "Function",
     "containerKey": "useCompleteGridNavigationRow|Function|1",
     "displayName": "useCompleteGridNavigationRow",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useCompleteGridNavigationRow<RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>>({ info, context: contextIncomingForRowAsChildOfTable, textContentParameters, linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, sortableChildParameters, ...void1 }: UseCompleteGridNavigationRowParameters<RowElement, CellElement, RM, CM>): UseCompleteGridNavigationRowReturnType<RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useCompleteGridNavigationRow<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ info, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": contextIncomingForRowAsChildOfTable, textContentParameters, linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, sortableChildParameters, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useCompleteGridNavigationRow",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info, context: contextIncomingForRowAsChildOfTable, textContentParameters, linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, sortableChildParameters, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowParameters<RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 13
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseCompleteGridNavigationRowReturnType<RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 16
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useCompleteGridNavigationRow<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ info, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": contextIncomingForRowAsChildOfTable, textContentParameters, linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, sortableChildParameters, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationRowInfo:interface"
     },
     "containerKey": "UseCompleteGridNavigationRowInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationRowInfo<RowElement extends Element, CellElement extends Element> extends GridSingleSelectSortableChildRowInfo<RowElement, CellElement>, UsePaginatedChildrenInfo<RowElement>, UseStaggeredChildrenInfo<RowElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationRowInfo<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenInfo:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenInfo:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationRowInfo<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenInfo:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildrenInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenInfo:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildrenInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildrenInfo<RowElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildrenInfo<RowElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationRowInfo",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationRowInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationRowParameters:interface"
     },
     "containerKey": "UseCompleteGridNavigationRowParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationRowParameters<RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends OmitStrong<UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>, \"context\" | \"textContentParameters\" | \"managedChildrenReturn\" | \"refElementReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationRowParameters<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableRowParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>, \"context\" | \"textContentParameters\" | \"managedChildrenReturn\" | \"refElementReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationRowParameters<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableRowParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>, \"context\" | \"textContentParameters\" | \"managedChildrenReturn\" | \"refElementReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>, \"context\" | \"textContentParameters\" | \"managedChildrenReturn\" | \"refElementReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>, \"context\" | \"textContentParameters\" | \"managedChildrenReturn\" | \"refElementReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\">"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationRowParameters",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationRowParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: CompleteGridNavigationRowContext<any, RowElement, CellElement, RM, CM>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteGridNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteGridNavigationRowContext"
         },
         {
          "kind": "Content",
          "text": "<any, RowElement, CellElement, RM, CM>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "CompleteGridNavigationContext:interface"
         },
         "kind": "Reference",
         "text": "CompleteGridNavigationRowContext"
        },
        {
         "kind": "Content",
         "text": "<any, RowElement, CellElement, RM, CM>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "CompleteGridNavigationRowContext<any, RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteGridNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteGridNavigationRowContext"
         },
         {
          "kind": "Content",
          "text": "<any, RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: OmitStrong<RM, Exclude<keyof UseCompleteGridNavigationRowInfo<RowElement, CellElement>, \"index\" | \"untabbable\" | \"unselectable\">>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<RM, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Exclude:type"
          },
          "kind": "Reference",
          "text": "Exclude"
         },
         {
          "kind": "Content",
          "text": "<keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>, \"index\" | \"untabbable\" | \"unselectable\">>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<RM, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Exclude:type"
         },
         "kind": "Reference",
         "text": "Exclude"
        },
        {
         "kind": "Content",
         "text": "<keyof "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseCompleteGridNavigationRowInfo:interface"
         },
         "kind": "Reference",
         "text": "UseCompleteGridNavigationRowInfo"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement>, \"index\" | \"untabbable\" | \"unselectable\">>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<RM, Exclude<keyof UseCompleteGridNavigationRowInfo<RowElement, CellElement>, \"index\" | \"untabbable\" | \"unselectable\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<RM, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Exclude:type"
          },
          "kind": "Reference",
          "text": "Exclude"
         },
         {
          "kind": "Content",
          "text": "<keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>, \"index\" | \"untabbable\" | \"unselectable\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowParameters#linearNavigationParameters:member"
       },
       "displayName": "linearNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "linearNavigationParameters: OmitStrong<UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"pageNavigationSize\" | \"isValid\" | \"indexMangler\" | \"indexDemangler\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "linearNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"pageNavigationSize\" | \"isValid\" | \"indexMangler\" | \"indexDemangler\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "linearNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionSortableRowParameters"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement, RM, CM>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"pageNavigationSize\" | \"isValid\" | \"indexMangler\" | \"indexDemangler\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "linearNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "linearNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"pageNavigationSize\" | \"isValid\" | \"indexMangler\" | \"indexDemangler\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"pageNavigationSize\" | \"isValid\" | \"indexMangler\" | \"indexDemangler\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowParameters#sortableChildParameters:member"
       },
       "displayName": "sortableChildParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "sortableChildParameters: Pick<UseSortableChildInfo, \"getSortValue\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "sortableChildParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": ", \"getSortValue\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "sortableChildParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSortableChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseSortableChildInfo"
        },
        {
         "kind": "Content",
         "text": ", \"getSortValue\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "sortableChildParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "sortableChildParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseSortableChildInfo, \"getSortValue\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": ", \"getSortValue\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowParameters#textContentParameters:member"
       },
       "displayName": "textContentParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "textContentParameters: OmitStrong<UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>[\"textContentParameters\"], never>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "textContentParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>[\"textContentParameters\"], never>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "textContentParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionSortableRowParameters"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement, RM, CM>[\"textContentParameters\"], never>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "textContentParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "textContentParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>[\"textContentParameters\"], never>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>[\"textContentParameters\"], never>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowParameters#typeaheadNavigationParameters:member"
       },
       "displayName": "typeaheadNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "typeaheadNavigationParameters: OmitStrong<UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>[\"typeaheadNavigationParameters\"], \"isValid\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeaheadNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>[\"typeaheadNavigationParameters\"], \"isValid\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "typeaheadNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionSortableRowParameters"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement, RM, CM>[\"typeaheadNavigationParameters\"], \"isValid\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "typeaheadNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "typeaheadNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>[\"typeaheadNavigationParameters\"], \"isValid\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>[\"typeaheadNavigationParameters\"], \"isValid\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteGridNavigationRowReturnType:interface"
     },
     "containerKey": "UseCompleteGridNavigationRowReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteGridNavigationRowReturnType<RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement, CellElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends OmitStrong<UseGridNavigationSingleSelectionSortableRowReturnType<RowElement, CellElement, RM, CM>, \"context\" | \"gridNavigationRowParameters\" | \"managedChildrenParameters\" | \"info\" | \"pressParameters\" | \"textContentReturn\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteGridNavigationRowReturnType<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationRowInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteGridNavigationCellInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteGridNavigationCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>, \"context\" | \"gridNavigationRowParameters\" | \"managedChildrenParameters\" | \"info\" | \"pressParameters\" | \"textContentReturn\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteGridNavigationRowReturnType<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationCellInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteGridNavigationCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>, \"context\" | \"gridNavigationRowParameters\" | \"managedChildrenParameters\" | \"info\" | \"pressParameters\" | \"textContentReturn\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseGridNavigationSingleSelectionSortableRowReturnType<RowElement, CellElement, RM, CM>, \"context\" | \"gridNavigationRowParameters\" | \"managedChildrenParameters\" | \"info\" | \"pressParameters\" | \"textContentReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>, \"context\" | \"gridNavigationRowParameters\" | \"managedChildrenParameters\" | \"info\" | \"pressParameters\" | \"textContentReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseCompleteGridNavigationRowReturnType",
     "fileUrlPath": "src/component-use/use-grid-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteGridNavigationRowReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: CompleteGridNavigationCellContext<RowElement, CellElement, CM>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteGridNavigationCellContext"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "CompleteGridNavigationRowContext:interface"
         },
         "kind": "Reference",
         "text": "CompleteGridNavigationCellContext"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement, CM>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "CompleteGridNavigationCellContext<RowElement, CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteGridNavigationCellContext"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowReturnType#hasCurrentFocusReturn:member"
       },
       "displayName": "hasCurrentFocusReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "hasCurrentFocusReturn: UseHasCurrentFocusReturnType<RowElement>[\"hasCurrentFocusReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasCurrentFocusReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement>[\"hasCurrentFocusReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasCurrentFocusReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseHasCurrentFocusReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseHasCurrentFocusReturnType"
        },
        {
         "kind": "Content",
         "text": "<RowElement>[\"hasCurrentFocusReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasCurrentFocusReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasCurrentFocusReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseHasCurrentFocusReturnType<RowElement>[\"hasCurrentFocusReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement>[\"hasCurrentFocusReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowReturnType#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: UseManagedChildrenReturnType<CM>[\"managedChildrenReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<CM>[\"managedChildrenReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<CM>[\"managedChildrenReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenReturnType<CM>[\"managedChildrenReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<CM>[\"managedChildrenReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowReturnType#managedChildReturn:member"
       },
       "displayName": "managedChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildReturn: UseManagedChildReturnType<RM>[\"managedChildReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<RM>[\"managedChildReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildReturnType"
        },
        {
         "kind": "Content",
         "text": "<RM>[\"managedChildReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildReturnType<RM>[\"managedChildReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<RM>[\"managedChildReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowReturnType#paginatedChildReturn:member"
       },
       "displayName": "paginatedChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "paginatedChildReturn: UsePaginatedChildReturn<RowElement>[\"paginatedChildReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "paginatedChildReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildReturn:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildReturn"
         },
         {
          "kind": "Content",
          "text": "<RowElement>[\"paginatedChildReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "paginatedChildReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePaginatedChildReturn:interface"
         },
         "kind": "Reference",
         "text": "UsePaginatedChildReturn"
        },
        {
         "kind": "Content",
         "text": "<RowElement>[\"paginatedChildReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "paginatedChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "paginatedChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildReturn<RowElement>[\"paginatedChildReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildReturn:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildReturn"
         },
         {
          "kind": "Content",
          "text": "<RowElement>[\"paginatedChildReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowReturnType#staggeredChildReturn:member"
       },
       "displayName": "staggeredChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "staggeredChildReturn: UseStaggeredChildReturn<RowElement>[\"staggeredChildReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "staggeredChildReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildReturn:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildReturn"
         },
         {
          "kind": "Content",
          "text": "<RowElement>[\"staggeredChildReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "staggeredChildReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseStaggeredChildReturn:interface"
         },
         "kind": "Reference",
         "text": "UseStaggeredChildReturn"
        },
        {
         "kind": "Content",
         "text": "<RowElement>[\"staggeredChildReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "staggeredChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "staggeredChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildReturn<RowElement>[\"staggeredChildReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildReturn:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildReturn"
         },
         {
          "kind": "Content",
          "text": "<RowElement>[\"staggeredChildReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteGridNavigationRowReturnType#textContentReturn:member"
       },
       "displayName": "textContentReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "textContentReturn: UseGridNavigationSingleSelectionSortableRowReturnType<RowElement, CellElement, RM, CM>[\"textContentReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "textContentReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>[\"textContentReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "textContentReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement, RM, CM>[\"textContentReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "textContentReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "textContentReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionSortableRowReturnType<RowElement, CellElement, RM, CM>[\"textContentReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>[\"textContentReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationRowInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteGridNavigationCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteGridNavigationCellInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteGridNavigationCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useCompleteListNavigation:function(1)"
     },
     "kind": "Function",
     "containerKey": "useCompleteListNavigation|Function|1",
     "displayName": "useCompleteListNavigation",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useCompleteListNavigation<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>>({ linearNavigationParameters, rearrangeableChildrenParameters, sortableChildrenParameters, typeaheadNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, paginatedChildrenParameters, staggeredChildrenParameters, ...completeListNavigationParameters }: UseCompleteListNavigationParameters<ParentElement, ChildElement, M>): UseCompleteListNavigationReturnType<ParentElement, ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useCompleteListNavigation<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ linearNavigationParameters, rearrangeableChildrenParameters, sortableChildrenParameters, typeaheadNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, paginatedChildrenParameters, staggeredChildrenParameters, ...completeListNavigationParameters }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useCompleteListNavigation",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ linearNavigationParameters, rearrangeableChildrenParameters, sortableChildrenParameters, typeaheadNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, paginatedChildrenParameters, staggeredChildrenParameters, ...completeListNavigationParameters }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationParameters<ParentElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseCompleteListNavigationReturnType<ParentElement, ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "All the list-related hooks combined into one giant hook that encapsulates everything.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 26
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Unlike most others, this hook assume's it's the final one--the \"outermost\" hook in the component--so it uses ",
           "textExcerpt": {
            "startIndex": 28,
            "endIndex": 75
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useManagedChildren"
          },
          {
           "kind": "PlainText",
           "text": " and wraps everything up nicely, combining event handlers that are used in multiple sub-hooks, collecting all the necessary context-related data, and merging all known DOM props together.",
           "textExcerpt": {
            "startIndex": 78,
            "endIndex": 140
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useCompleteListNavigation<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ linearNavigationParameters, rearrangeableChildrenParameters, sortableChildrenParameters, typeaheadNavigationParameters, rovingTabIndexParameters, singleSelectionParameters, paginatedChildrenParameters, staggeredChildrenParameters, ...completeListNavigationParameters }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useCompleteListNavigationChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useCompleteListNavigationChild|Function|1",
     "displayName": "useCompleteListNavigationChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useCompleteListNavigationChild<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>>({ info: { index, focusSelf, unselectable, untabbable, ...info }, // The \"...info\" is empty if M is the same as UCLNCI<ChildElement>.\ntextContentParameters, context: { childrenHaveFocusChildContext, managedChildContext, rovingTabIndexContext, paginatedChildContext, staggeredChildContext, singleSelectionContext, typeaheadNavigationContext }, sortableChildParameters, ...void1 }: UseCompleteListNavigationChildParameters<ChildElement, M>): UseCompleteListNavigationChildReturnType<ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useCompleteListNavigationChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildParameters#info"
        },
        "kind": "Reference",
        "text": "info"
       },
       {
        "kind": "Content",
        "text": ": { index, focusSelf, unselectable, untabbable, ...info }, // The \"...info\" is empty if M is the same as UCLNCI<ChildElement>.\ntextContentParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { childrenHaveFocusChildContext, managedChildContext, rovingTabIndexContext, paginatedChildContext, staggeredChildContext, singleSelectionContext, typeaheadNavigationContext }, sortableChildParameters, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useCompleteListNavigationChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info: { index, focusSelf, unselectable, untabbable, ...info }, // The \"...info\" is empty if M is the same as UCLNCI<ChildElement>.\ntextContentParameters, context: { childrenHaveFocusChildContext, managedChildContext, rovingTabIndexContext, paginatedChildContext, staggeredChildContext, singleSelectionContext, typeaheadNavigationContext }, sortableChildParameters, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseCompleteListNavigationChildReturnType<ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 13
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useCompleteListNavigationChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildParameters#info"
       },
       "kind": "Reference",
       "text": "info"
      },
      {
       "kind": "Content",
       "text": ": { index, focusSelf, unselectable, untabbable, ...info }, // The \"...info\" is empty if M is the same as UCLNCI<ChildElement>.\ntextContentParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { childrenHaveFocusChildContext, managedChildContext, rovingTabIndexContext, paginatedChildContext, staggeredChildContext, singleSelectionContext, typeaheadNavigationContext }, sortableChildParameters, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteListNavigationChildInfo:interface"
     },
     "containerKey": "UseCompleteListNavigationChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteListNavigationChildInfo<ChildElement extends Element> extends ExtendMerge<UseListNavigationSingleSelectionSortableChildInfo<ChildElement>, ExtendMerge<UsePaginatedChildrenInfo<ChildElement>, UseStaggeredChildrenInfo<ChildElement>>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteListNavigationChildInfo<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenInfo:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenInfo:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteListNavigationChildInfo<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenInfo:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildrenInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenInfo:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildrenInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseListNavigationSingleSelectionSortableChildInfo<ChildElement>, ExtendMerge<UsePaginatedChildrenInfo<ChildElement>, UseStaggeredChildrenInfo<ChildElement>>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>>>"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseCompleteListNavigationChildInfo",
     "fileUrlPath": "src/component-use/use-list-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteListNavigationChildInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteListNavigationChildParameters:interface"
     },
     "containerKey": "UseCompleteListNavigationChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteListNavigationChildParameters<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteListNavigationChildParameters<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteListNavigationChildParameters<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseCompleteListNavigationChildParameters",
     "fileUrlPath": "src/component-use/use-list-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteListNavigationChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: CompleteListNavigationContext<any, ChildElement, M>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteListNavigationContext"
         },
         {
          "kind": "Content",
          "text": "<any, ChildElement, M>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "CompleteListNavigationContext:interface"
         },
         "kind": "Reference",
         "text": "CompleteListNavigationContext"
        },
        {
         "kind": "Content",
         "text": "<any, ChildElement, M>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "CompleteListNavigationContext<any, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteListNavigationContext"
         },
         {
          "kind": "Content",
          "text": "<any, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Omit<M, Exclude<keyof UseCompleteListNavigationChildInfo<ChildElement>, \"index\" | \"focusSelf\" | \"untabbable\" | \"unselectable\">>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Omit:type"
          },
          "kind": "Reference",
          "text": "Omit"
         },
         {
          "kind": "Content",
          "text": "<M, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Exclude:type"
          },
          "kind": "Reference",
          "text": "Exclude"
         },
         {
          "kind": "Content",
          "text": "<keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"index\" | \"focusSelf\" | \"untabbable\" | \"unselectable\">>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Omit:type"
         },
         "kind": "Reference",
         "text": "Omit"
        },
        {
         "kind": "Content",
         "text": "<M, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Exclude:type"
         },
         "kind": "Reference",
         "text": "Exclude"
        },
        {
         "kind": "Content",
         "text": "<keyof "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseCompleteListNavigationChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseCompleteListNavigationChildInfo"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>, \"index\" | \"focusSelf\" | \"untabbable\" | \"unselectable\">>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Omit<M, Exclude<keyof UseCompleteListNavigationChildInfo<ChildElement>, \"index\" | \"focusSelf\" | \"untabbable\" | \"unselectable\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Omit:type"
          },
          "kind": "Reference",
          "text": "Omit"
         },
         {
          "kind": "Content",
          "text": "<M, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Exclude:type"
          },
          "kind": "Reference",
          "text": "Exclude"
         },
         {
          "kind": "Content",
          "text": "<keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"index\" | \"focusSelf\" | \"untabbable\" | \"unselectable\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildParameters#sortableChildParameters:member"
       },
       "displayName": "sortableChildParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "sortableChildParameters: Pick<UseSortableChildInfo, \"getSortValue\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "sortableChildParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": ", \"getSortValue\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "sortableChildParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSortableChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseSortableChildInfo"
        },
        {
         "kind": "Content",
         "text": ", \"getSortValue\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "sortableChildParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "sortableChildParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseSortableChildInfo, \"getSortValue\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": ", \"getSortValue\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildParameters#textContentParameters:member"
       },
       "displayName": "textContentParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "textContentParameters: OmitStrong<UseListNavigationSingleSelectionSortableChildParameters<ChildElement, M>[\"textContentParameters\"], never>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "textContentParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>[\"textContentParameters\"], never>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "textContentParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationSingleSelectionSortableChildParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationSingleSelectionSortableChildParameters"
        },
        {
         "kind": "Content",
         "text": "<ChildElement, M>[\"textContentParameters\"], never>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "textContentParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "textContentParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationSingleSelectionSortableChildParameters<ChildElement, M>[\"textContentParameters\"], never>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>[\"textContentParameters\"], never>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**NOTE**: Unusually, the press parameters are entirely optional.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 22
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Pass ",
             "textExcerpt": {
              "startIndex": 24,
              "endIndex": 26
             }
            },
            {
             "kind": "CodeSpan",
             "code": "null"
            },
            {
             "kind": "PlainText",
             "text": " as the entire ",
             "textExcerpt": {
              "startIndex": 29,
              "endIndex": 36
             }
            },
            {
             "kind": "CodeSpan",
             "code": "pressParameters"
            },
            {
             "kind": "PlainText",
             "text": " object to disable default press behavior entirely.",
             "textExcerpt": {
              "startIndex": 39,
              "endIndex": 54
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteListNavigationChildReturnType:interface"
     },
     "containerKey": "UseCompleteListNavigationChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteListNavigationChildReturnType<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends Pick<UseListNavigationSingleSelectionSortableChildReturnType<ChildElement, M>, \"textContentReturn\" | \"rovingTabIndexChildReturn\" | \"singleSelectionChildReturn\">, OmitStrong<UseRefElementReturnType<ChildElement>, \"propsStable\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteListNavigationChildReturnType<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>, \"textContentReturn\" | \"rovingTabIndexChildReturn\" | \"singleSelectionChildReturn\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>, \"propsStable\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteListNavigationChildReturnType<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>, \"textContentReturn\" | \"rovingTabIndexChildReturn\" | \"singleSelectionChildReturn\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRefElementReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>, \"propsStable\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UseListNavigationSingleSelectionSortableChildReturnType<ChildElement, M>, \"textContentReturn\" | \"rovingTabIndexChildReturn\" | \"singleSelectionChildReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>, \"textContentReturn\" | \"rovingTabIndexChildReturn\" | \"singleSelectionChildReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 6
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseRefElementReturnType<ChildElement>, \"propsStable\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"propsStable\">"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseCompleteListNavigationChildReturnType",
     "fileUrlPath": "src/component-use/use-list-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteListNavigationChildReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildReturnType#hasCurrentFocusReturn:member"
       },
       "displayName": "hasCurrentFocusReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "hasCurrentFocusReturn: UseHasCurrentFocusReturnType<ChildElement>[\"hasCurrentFocusReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasCurrentFocusReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"hasCurrentFocusReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasCurrentFocusReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseHasCurrentFocusReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseHasCurrentFocusReturnType"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>[\"hasCurrentFocusReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasCurrentFocusReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasCurrentFocusReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseHasCurrentFocusReturnType<ChildElement>[\"hasCurrentFocusReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"hasCurrentFocusReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildReturnType#managedChildReturn:member"
       },
       "displayName": "managedChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildReturn: UseManagedChildReturnType<M>[\"managedChildReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildReturnType"
        },
        {
         "kind": "Content",
         "text": "<M>[\"managedChildReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildReturnType<M>[\"managedChildReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildReturnType#paginatedChildReturn:member"
       },
       "displayName": "paginatedChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "paginatedChildReturn: UsePaginatedChildReturn<ChildElement>[\"paginatedChildReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "paginatedChildReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildReturn:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildReturn"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"paginatedChildReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "paginatedChildReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePaginatedChildReturn:interface"
         },
         "kind": "Reference",
         "text": "UsePaginatedChildReturn"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>[\"paginatedChildReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "paginatedChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "paginatedChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildReturn<ChildElement>[\"paginatedChildReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildReturn:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildReturn"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"paginatedChildReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildReturnType#pressParameters:member"
       },
       "displayName": "pressParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "pressParameters: Pick<UsePressParameters<any>[\"pressParameters\"], \"onPressSync\" | \"excludeSpace\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "pressParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePressParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePressParameters"
         },
         {
          "kind": "Content",
          "text": "<any>[\"pressParameters\"], \"onPressSync\" | \"excludeSpace\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "pressParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePressParameters:interface"
         },
         "kind": "Reference",
         "text": "UsePressParameters"
        },
        {
         "kind": "Content",
         "text": "<any>[\"pressParameters\"], \"onPressSync\" | \"excludeSpace\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "pressParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "pressParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UsePressParameters<any>[\"pressParameters\"], \"onPressSync\" | \"excludeSpace\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePressParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePressParameters"
         },
         {
          "kind": "Content",
          "text": "<any>[\"pressParameters\"], \"onPressSync\" | \"excludeSpace\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Spread these props onto whatever element is the \"clickable\" part of this list item.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 30
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**Optional**, as it's entirely possible that this list item isn't selected with a simple press but some more complicated process, like in a grid list.",
             "textExcerpt": {
              "startIndex": 32,
              "endIndex": 92
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<ChildElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildReturnType#staggeredChildReturn:member"
       },
       "displayName": "staggeredChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "staggeredChildReturn: UseStaggeredChildReturn<ChildElement>[\"staggeredChildReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "staggeredChildReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildReturn:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildReturn"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"staggeredChildReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "staggeredChildReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseStaggeredChildReturn:interface"
         },
         "kind": "Reference",
         "text": "UseStaggeredChildReturn"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>[\"staggeredChildReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "staggeredChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "staggeredChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildReturn<ChildElement>[\"staggeredChildReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildReturn:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildReturn"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"staggeredChildReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useCompleteListNavigationDeclarative:function(1)"
     },
     "kind": "Function",
     "containerKey": "useCompleteListNavigationDeclarative|Function|1",
     "displayName": "useCompleteListNavigationDeclarative",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useCompleteListNavigationDeclarative<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>>({ linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenParameters, rovingTabIndexParameters, singleSelectionDeclarativeParameters, sortableChildrenParameters, staggeredChildrenParameters, typeaheadNavigationParameters, singleSelectionParameters }: UseCompleteListNavigationDeclarativeParameters<ParentElement, ChildElement, M>): UseCompleteListNavigationDeclarativeReturnType<ParentElement, ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useCompleteListNavigationDeclarative<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenParameters, rovingTabIndexParameters, singleSelectionDeclarativeParameters, sortableChildrenParameters, staggeredChildrenParameters, typeaheadNavigationParameters, singleSelectionParameters }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationDeclarativeParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationDeclarativeParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationDeclarativeReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationDeclarativeReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useCompleteListNavigationDeclarative",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenParameters, rovingTabIndexParameters, singleSelectionDeclarativeParameters, sortableChildrenParameters, staggeredChildrenParameters, typeaheadNavigationParameters, singleSelectionParameters }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationDeclarativeParameters<ParentElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationDeclarativeParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationDeclarativeParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseCompleteListNavigationDeclarativeReturnType<ParentElement, ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationDeclarativeReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationDeclarativeReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useCompleteListNavigationDeclarative<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenParameters, rovingTabIndexParameters, singleSelectionDeclarativeParameters, sortableChildrenParameters, staggeredChildrenParameters, typeaheadNavigationParameters, singleSelectionParameters }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationDeclarativeParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationDeclarativeParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationDeclarativeReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationDeclarativeReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteListNavigationDeclarativeParameters:interface"
     },
     "containerKey": "UseCompleteListNavigationDeclarativeParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteListNavigationDeclarativeParameters<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends OmitStrong<MakeSingleSelectionDeclarativeParameters<UseCompleteListNavigationParameters<ParentElement, ChildElement, M>>, \"singleSelectionParameters\" | \"singleSelectionReturn\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteListNavigationDeclarativeParameters<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "MakeSingleSelectionDeclarativeParameters:type"
        },
        "kind": "Reference",
        "text": "MakeSingleSelectionDeclarativeParameters"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>>, \"singleSelectionParameters\" | \"singleSelectionReturn\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteListNavigationDeclarativeParameters<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "MakeSingleSelectionDeclarativeParameters:type"
       },
       "kind": "Reference",
       "text": "MakeSingleSelectionDeclarativeParameters"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>>, \"singleSelectionParameters\" | \"singleSelectionReturn\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<MakeSingleSelectionDeclarativeParameters<UseCompleteListNavigationParameters<ParentElement, ChildElement, M>>, \"singleSelectionParameters\" | \"singleSelectionReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "MakeSingleSelectionDeclarativeParameters:type"
          },
          "kind": "Reference",
          "text": "MakeSingleSelectionDeclarativeParameters"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>>, \"singleSelectionParameters\" | \"singleSelectionReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "UseCompleteListNavigationDeclarativeParameters",
     "fileUrlPath": "src/component-use/use-list-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteListNavigationDeclarativeParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationDeclarativeParameters#singleSelectionParameters:member"
       },
       "displayName": "singleSelectionParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "singleSelectionParameters: OmitStrong<UseSingleSelectionParameters<ParentElement, ChildElement, M>[\"singleSelectionParameters\"], \"initiallySelectedIndex\" | \"onSelectedIndexChange\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "singleSelectionParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"singleSelectionParameters\"], \"initiallySelectedIndex\" | \"onSelectedIndexChange\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "singleSelectionParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionParameters:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentElement, ChildElement, M>[\"singleSelectionParameters\"], \"initiallySelectedIndex\" | \"onSelectedIndexChange\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "singleSelectionParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "singleSelectionParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseSingleSelectionParameters<ParentElement, ChildElement, M>[\"singleSelectionParameters\"], \"initiallySelectedIndex\" | \"onSelectedIndexChange\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"singleSelectionParameters\"], \"initiallySelectedIndex\" | \"onSelectedIndexChange\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteListNavigationDeclarativeReturnType:interface"
     },
     "containerKey": "UseCompleteListNavigationDeclarativeReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteListNavigationDeclarativeReturnType<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends OmitTargeted<UseCompleteListNavigationReturnType<ParentElement, ChildElement, M>, \"singleSelectionReturn\", \"changeSelectedIndex\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteListNavigationDeclarativeReturnType<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "OmitTargeted:type"
        },
        "kind": "Reference",
        "text": "OmitTargeted"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>, \"singleSelectionReturn\", \"changeSelectedIndex\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteListNavigationDeclarativeReturnType<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "OmitTargeted:type"
       },
       "kind": "Reference",
       "text": "OmitTargeted"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>, \"singleSelectionReturn\", \"changeSelectedIndex\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitTargeted<UseCompleteListNavigationReturnType<ParentElement, ChildElement, M>, \"singleSelectionReturn\", \"changeSelectedIndex\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "OmitTargeted:type"
          },
          "kind": "Reference",
          "text": "OmitTargeted"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>, \"singleSelectionReturn\", \"changeSelectedIndex\">"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "UseCompleteListNavigationDeclarativeReturnType",
     "fileUrlPath": "src/component-use/use-list-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteListNavigationDeclarativeReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteListNavigationParameters:interface"
     },
     "containerKey": "UseCompleteListNavigationParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteListNavigationParameters<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends Pick<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>, \"singleSelectionParameters\">, PickTargeted<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>, \"linearNavigationParameters\", \"getHighestIndex\" | \"isValid\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteListNavigationParameters<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>, \"singleSelectionParameters\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "PickTargeted:type"
        },
        "kind": "Reference",
        "text": "PickTargeted"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>, \"linearNavigationParameters\", \"getHighestIndex\" | \"isValid\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteListNavigationParameters<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>, \"singleSelectionParameters\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "PickTargeted:type"
       },
       "kind": "Reference",
       "text": "PickTargeted"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>, \"linearNavigationParameters\", \"getHighestIndex\" | \"isValid\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>, \"singleSelectionParameters\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>, \"singleSelectionParameters\">"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 8
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "PickTargeted<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>, \"linearNavigationParameters\", \"getHighestIndex\" | \"isValid\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "PickTargeted:type"
          },
          "kind": "Reference",
          "text": "PickTargeted"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>, \"linearNavigationParameters\", \"getHighestIndex\" | \"isValid\">"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 13
        }
       }
      }
     ],
     "displayName": "UseCompleteListNavigationParameters",
     "fileUrlPath": "src/component-use/use-list-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteListNavigationParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters#linearNavigationParameters:member"
       },
       "displayName": "linearNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "linearNavigationParameters: OmitStrong<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"isValid\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "linearNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"isValid\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "linearNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationSingleSelectionSortableParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentElement, ChildElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"isValid\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "linearNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "linearNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"isValid\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"linearNavigationParameters\"], \"getHighestIndex\" | \"isValid\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters#paginatedChildrenParameters:member"
       },
       "displayName": "paginatedChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "paginatedChildrenParameters: Pick<UsePaginatedChildrenParameters<ParentElement, ChildElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "paginatedChildrenParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "paginatedChildrenParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePaginatedChildrenParameters:interface"
         },
         "kind": "Reference",
         "text": "UsePaginatedChildrenParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentElement, ChildElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "paginatedChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "paginatedChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UsePaginatedChildrenParameters<ParentElement, ChildElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>, \"paginatedChildrenParameters\">[\"paginatedChildrenParameters\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters#rearrangeableChildrenParameters:member"
       },
       "displayName": "rearrangeableChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "rearrangeableChildrenParameters: OmitStrong<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rearrangeableChildrenParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rearrangeableChildrenParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationSingleSelectionSortableParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentElement, ChildElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rearrangeableChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rearrangeableChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"rearrangeableChildrenParameters\"], \"onRearranged\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters#rovingTabIndexParameters:member"
       },
       "displayName": "rovingTabIndexParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexParameters: OmitStrong<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationSingleSelectionSortableParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentElement, ChildElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"rovingTabIndexParameters\"], \"initiallyTabbedIndex\" | \"untabbableBehavior\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters#sortableChildrenParameters:member"
       },
       "displayName": "sortableChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "sortableChildrenParameters: UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"sortableChildrenParameters\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "sortableChildrenParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"sortableChildrenParameters\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "sortableChildrenParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationSingleSelectionSortableParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentElement, ChildElement, M>[\"sortableChildrenParameters\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "sortableChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "sortableChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"sortableChildrenParameters\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"sortableChildrenParameters\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters#staggeredChildrenParameters:member"
       },
       "displayName": "staggeredChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "staggeredChildrenParameters: Pick<UseStaggeredChildrenParameters<ChildElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "staggeredChildrenParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "staggeredChildrenParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseStaggeredChildrenParameters:interface"
         },
         "kind": "Reference",
         "text": "UseStaggeredChildrenParameters"
        },
        {
         "kind": "Content",
         "text": "<ChildElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "staggeredChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "staggeredChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseStaggeredChildrenParameters<ChildElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>, \"staggeredChildrenParameters\">[\"staggeredChildrenParameters\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationParameters#typeaheadNavigationParameters:member"
       },
       "displayName": "typeaheadNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "typeaheadNavigationParameters: OmitStrong<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeaheadNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "typeaheadNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationSingleSelectionSortableParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentElement, ChildElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "typeaheadNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "typeaheadNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationSingleSelectionSortableParameters<ParentElement, ChildElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>[\"typeaheadNavigationParameters\"], \"isValid\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseCompleteListNavigationReturnType:interface"
     },
     "containerKey": "UseCompleteListNavigationReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseCompleteListNavigationReturnType<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends Pick<UsePaginatedChildrenReturnType, \"paginatedChildrenReturn\">, Pick<UseStaggeredChildrenReturnType, \"staggeredChildrenReturn\">, OmitStrong<UseListNavigationSingleSelectionSortableReturnType<ParentElement, ChildElement, M>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseCompleteListNavigationReturnType<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseCompleteListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseCompleteListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": ", \"paginatedChildrenReturn\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": ", \"staggeredChildrenReturn\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 23,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseCompleteListNavigationReturnType<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseCompleteListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": ", \"paginatedChildrenReturn\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": ", \"staggeredChildrenReturn\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UsePaginatedChildrenReturnType, \"paginatedChildrenReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": ", \"paginatedChildrenReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 8
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UseStaggeredChildrenReturnType, \"staggeredChildrenReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": ", \"staggeredChildrenReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 13
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationSingleSelectionSortableReturnType<ParentElement, ChildElement, M>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">"
         }
        ],
        "tokenRange": {
         "endIndex": 22,
         "startIndex": 18
        }
       }
      }
     ],
     "displayName": "UseCompleteListNavigationReturnType",
     "fileUrlPath": "src/component-use/use-list-navigation-complete.tsx",
     "isExported": true,
     "name": "UseCompleteListNavigationReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationReturnType#childrenHaveFocusReturn:member"
       },
       "displayName": "childrenHaveFocusReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "childrenHaveFocusReturn: UseChildrenHaveFocusReturnType<ChildElement>[\"childrenHaveFocusReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "childrenHaveFocusReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"childrenHaveFocusReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "childrenHaveFocusReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseChildrenHaveFocusReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseChildrenHaveFocusReturnType"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>[\"childrenHaveFocusReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "childrenHaveFocusReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "childrenHaveFocusReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusReturnType<ChildElement>[\"childrenHaveFocusReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"childrenHaveFocusReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: CompleteListNavigationContext<ParentElement, ChildElement, M>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteListNavigationContext"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "CompleteListNavigationContext:interface"
         },
         "kind": "Reference",
         "text": "CompleteListNavigationContext"
        },
        {
         "kind": "Content",
         "text": "<ParentElement, ChildElement, M>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "CompleteListNavigationContext<ParentElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "CompleteListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "CompleteListNavigationContext"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationReturnType#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<M>[\"managedChildrenReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseCompleteListNavigationReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<ParentElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ParentElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ParentElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseCompleteListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseCompleteListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseCompleteListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useDismiss:function(1)"
     },
     "kind": "Function",
     "containerKey": "useDismiss|Function|1",
     "displayName": "useDismiss",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useDismiss<Listeners extends DismissListenerTypes, SourceElement extends Element | null, PopupElement extends Element>({ dismissParameters: { open: globalOpen, onClose: globalOnClose, closeOnBackdrop, closeOnEscape, closeOnLostFocus }, escapeDismissParameters: { getWindow, parentDepth } }: UseDismissParameters<Listeners>): UseDismissReturnType<SourceElement, PopupElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useDismiss<Listeners extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "DismissListenerTypes:type"
        },
        "kind": "Reference",
        "text": "DismissListenerTypes"
       },
       {
        "kind": "Content",
        "text": ", SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDismissParameters#dismissParameters"
        },
        "kind": "Reference",
        "text": "dismissParameters"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#open"
        },
        "kind": "Reference",
        "text": "open"
       },
       {
        "kind": "Content",
        "text": ": globalOpen, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#onClose"
        },
        "kind": "Reference",
        "text": "onClose"
       },
       {
        "kind": "Content",
        "text": ": globalOnClose, closeOnBackdrop, closeOnEscape, closeOnLostFocus }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDismissParameters#escapeDismissParameters"
        },
        "kind": "Reference",
        "text": "escapeDismissParameters"
       },
       {
        "kind": "Content",
        "text": ": { getWindow, parentDepth } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDismissParameters:interface"
        },
        "kind": "Reference",
        "text": "UseDismissParameters"
       },
       {
        "kind": "Content",
        "text": "<Listeners>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDismissReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseDismissReturnType"
       },
       {
        "kind": "Content",
        "text": "<SourceElement, PopupElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 22,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useDismiss",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ dismissParameters: { open: globalOpen, onClose: globalOnClose, closeOnBackdrop, closeOnEscape, closeOnLostFocus }, escapeDismissParameters: { getWindow, parentDepth } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseDismissParameters<Listeners>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseDismissParameters:interface"
          },
          "kind": "Reference",
          "text": "UseDismissParameters"
         },
         {
          "kind": "Content",
          "text": "<Listeners>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 16
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseDismissReturnType<SourceElement, PopupElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDismissReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseDismissReturnType"
       },
       {
        "kind": "Content",
        "text": "<SourceElement, PopupElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 19
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "DismissListenerTypes",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DismissListenerTypes:type"
          },
          "kind": "Reference",
          "text": "DismissListenerTypes"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Listeners"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 6
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Combines all the methods of dismissing a modal-ish or popup-ish component into one combined hook.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 34
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "This is similar to the \"complete\" series of list/grid navigation, in that it's the \"outermost\" hook of its type.",
           "textExcerpt": {
            "startIndex": 36,
            "endIndex": 83
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useDismiss<Listeners extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DismissListenerTypes:type"
       },
       "kind": "Reference",
       "text": "DismissListenerTypes"
      },
      {
       "kind": "Content",
       "text": ", SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissParameters#dismissParameters"
       },
       "kind": "Reference",
       "text": "dismissParameters"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#open"
       },
       "kind": "Reference",
       "text": "open"
      },
      {
       "kind": "Content",
       "text": ": globalOpen, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#onClose"
       },
       "kind": "Reference",
       "text": "onClose"
      },
      {
       "kind": "Content",
       "text": ": globalOnClose, closeOnBackdrop, closeOnEscape, closeOnLostFocus }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissParameters#escapeDismissParameters"
       },
       "kind": "Reference",
       "text": "escapeDismissParameters"
      },
      {
       "kind": "Content",
       "text": ": { getWindow, parentDepth } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissParameters:interface"
       },
       "kind": "Reference",
       "text": "UseDismissParameters"
      },
      {
       "kind": "Content",
       "text": "<Listeners>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseDismissReturnType"
      },
      {
       "kind": "Content",
       "text": "<SourceElement, PopupElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseDismissParameters:interface"
     },
     "containerKey": "UseDismissParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseDismissParameters<Listeners extends DismissListenerTypes> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseDismissParameters<Listeners extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "DismissListenerTypes:type"
        },
        "kind": "Reference",
        "text": "DismissListenerTypes"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseDismissParameters<Listeners extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DismissListenerTypes:type"
       },
       "kind": "Reference",
       "text": "DismissListenerTypes"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseDismissParameters",
     "fileUrlPath": "src/component-detail/use-dismiss.tsx",
     "isExported": true,
     "name": "UseDismissParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissParameters#dismissParameters:member"
       },
       "displayName": "dismissParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "dismissParameters: {\n        open: boolean;\n        onClose: (reason: Listeners) => void;\n        closeOnBackdrop: Listeners extends \"backdrop\" ? true : false;\n        closeOnEscape: Listeners extends \"escape\" ? true : false;\n        closeOnLostFocus: Listeners extends \"lost-focus\" ? true : false;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "dismissParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        open: boolean;\n        onClose: (reason: Listeners) => void;\n        closeOnBackdrop: Listeners extends \"backdrop\" ? true : false;\n        closeOnEscape: Listeners extends \"escape\" ? true : false;\n        closeOnLostFocus: Listeners extends \"lost-focus\" ? true : false;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "dismissParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        open: boolean;\n        onClose: (reason: Listeners) => void;\n        closeOnBackdrop: Listeners extends \"backdrop\" ? true : false;\n        closeOnEscape: Listeners extends \"escape\" ? true : false;\n        closeOnLostFocus: Listeners extends \"lost-focus\" ? true : false;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "dismissParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "dismissParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        open: boolean;\n        onClose: (reason: Listeners) => void;\n        closeOnBackdrop: Listeners extends \"backdrop\" ? true : false;\n        closeOnEscape: Listeners extends \"escape\" ? true : false;\n        closeOnLostFocus: Listeners extends \"lost-focus\" ? true : false;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        open: boolean;\n        onClose: (reason: Listeners) => void;\n        closeOnBackdrop: Listeners extends \"backdrop\" ? true : false;\n        closeOnEscape: Listeners extends \"escape\" ? true : false;\n        closeOnLostFocus: Listeners extends \"lost-focus\" ? true : false;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissParameters#escapeDismissParameters:member"
       },
       "displayName": "escapeDismissParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "escapeDismissParameters: Pick<UseEscapeDismissParameters<any>[\"escapeDismissParameters\"], \"getWindow\" | \"parentDepth\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "escapeDismissParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseEscapeDismissParameters:interface"
          },
          "kind": "Reference",
          "text": "UseEscapeDismissParameters"
         },
         {
          "kind": "Content",
          "text": "<any>[\"escapeDismissParameters\"], \"getWindow\" | \"parentDepth\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "escapeDismissParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseEscapeDismissParameters:interface"
         },
         "kind": "Reference",
         "text": "UseEscapeDismissParameters"
        },
        {
         "kind": "Content",
         "text": "<any>[\"escapeDismissParameters\"], \"getWindow\" | \"parentDepth\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "escapeDismissParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "escapeDismissParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseEscapeDismissParameters<any>[\"escapeDismissParameters\"], \"getWindow\" | \"parentDepth\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseEscapeDismissParameters:interface"
          },
          "kind": "Reference",
          "text": "UseEscapeDismissParameters"
         },
         {
          "kind": "Content",
          "text": "<any>[\"escapeDismissParameters\"], \"getWindow\" | \"parentDepth\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "DismissListenerTypes",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DismissListenerTypes:type"
          },
          "kind": "Reference",
          "text": "DismissListenerTypes"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Listeners"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseDismissReturnType:interface"
     },
     "containerKey": "UseDismissReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseDismissReturnType<SourceElement extends Element | null, PopupElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseDismissReturnType<SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseDismissReturnType<SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseDismissReturnType",
     "fileUrlPath": "src/component-detail/use-dismiss.tsx",
     "isExported": true,
     "name": "UseDismissReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissReturnType#propsStablePopup:member"
       },
       "displayName": "propsStablePopup",
       "excerpt": {
        "isEmpty": false,
        "text": "propsStablePopup: ElementProps<NonNullable<PopupElement>>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsStablePopup: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsStablePopup: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NonNullable:type"
         },
         "kind": "Reference",
         "text": "NonNullable"
        },
        {
         "kind": "Content",
         "text": "<PopupElement>>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsStablePopup|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsStablePopup",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<NonNullable<PopupElement>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissReturnType#propsStableSource:member"
       },
       "displayName": "propsStableSource",
       "excerpt": {
        "isEmpty": false,
        "text": "propsStableSource: ElementProps<NonNullable<SourceElement>>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsStableSource: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<SourceElement>>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsStableSource: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NonNullable:type"
         },
         "kind": "Reference",
         "text": "NonNullable"
        },
        {
         "kind": "Content",
         "text": "<SourceElement>>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsStableSource|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsStableSource",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<NonNullable<SourceElement>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<SourceElement>>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissReturnType#refElementPopupReturn:member"
       },
       "displayName": "refElementPopupReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementPopupReturn: UseRefElementReturnType<PopupElement>[\"refElementReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementPopupReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>[\"refElementReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementPopupReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<PopupElement>[\"refElementReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementPopupReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementPopupReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRefElementReturnType<PopupElement>[\"refElementReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>[\"refElementReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This one's always required though",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 11
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissReturnType#refElementSourceReturn:member"
       },
       "displayName": "refElementSourceReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementSourceReturn: UseRefElementReturnType<NonNullable<SourceElement>>[\"refElementReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementSourceReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<SourceElement>>[\"refElementReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementSourceReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NonNullable:type"
         },
         "kind": "Reference",
         "text": "NonNullable"
        },
        {
         "kind": "Content",
         "text": "<SourceElement>>[\"refElementReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementSourceReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementSourceReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRefElementReturnType<NonNullable<SourceElement>>[\"refElementReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<SourceElement>>[\"refElementReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If this dismissable component has a specific element that caused it to appear (a button, for example), provide it with these props.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 48
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "* REQUIRED for things like menus that pop up from a button and for whom losing focus counts as requesting closure. * OPTIONAL for things like dialogs that can appear out of nowhere and for whom losing focus is actively impossible (due to focus traps).",
             "textExcerpt": {
              "startIndex": 50,
              "endIndex": 143
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 4
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useDocumentClass:function(1)"
     },
     "kind": "Function",
     "containerKey": "useDocumentClass|Function|1",
     "displayName": "useDocumentClass",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useDocumentClass(className: P[0], active?: boolean, element?: HTMLElement): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useDocumentClass(className: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "P:type"
        },
        "kind": "Reference",
        "text": "P"
       },
       {
        "kind": "Content",
        "text": "[0]"
       },
       {
        "kind": "Content",
        "text": ", active?: "
       },
       {
        "kind": "Content",
        "text": "boolean"
       },
       {
        "kind": "Content",
        "text": ", element?: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElement:interface"
        },
        "kind": "Reference",
        "text": "HTMLElement"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useDocumentClass",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "className",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "P[0]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "P:type"
          },
          "kind": "Reference",
          "text": "P"
         },
         {
          "kind": "Content",
          "text": "[0]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       }
      },
      {
       "isOptional": true,
       "name": "active",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 4
        }
       }
      },
      {
       "isOptional": true,
       "name": "element",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "HTMLElement",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLElement"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 8
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useDocumentClass(className: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "P:type"
       },
       "kind": "Reference",
       "text": "P"
      },
      {
       "kind": "Content",
       "text": "[0]"
      },
      {
       "kind": "Content",
       "text": ", active?: "
      },
      {
       "kind": "Content",
       "text": "boolean"
      },
      {
       "kind": "Content",
       "text": ", element?: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElement:interface"
       },
       "kind": "Reference",
       "text": "HTMLElement"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useDraggable:function(1)"
     },
     "kind": "Function",
     "containerKey": "useDraggable|Function|1",
     "displayName": "useDraggable",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useDraggable<E extends Element>({ effectAllowed, data, dragImage, dragImageXOffset, dragImageYOffset }: UseDraggableParameters): UseDraggableReturnType<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useDraggable<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ effectAllowed, data, dragImage, dragImageXOffset, dragImageYOffset }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDraggableParameters:interface"
        },
        "kind": "Reference",
        "text": "UseDraggableParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDraggableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseDraggableReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useDraggable",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ effectAllowed, data, dragImage, dragImageXOffset, dragImageYOffset }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseDraggableParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseDraggableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseDraggableParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseDraggableReturnType<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDraggableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseDraggableReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useDraggable<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ effectAllowed, data, dragImage, dragImageXOffset, dragImageYOffset }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableParameters:interface"
       },
       "kind": "Reference",
       "text": "UseDraggableParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseDraggableReturnType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseDraggableParameters:interface"
     },
     "containerKey": "UseDraggableParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseDraggableParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseDraggableParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseDraggableParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseDraggableParameters",
     "fileUrlPath": "src/dom-helpers/use-draggable.tsx",
     "isExported": true,
     "name": "UseDraggableParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableParameters#data:member"
       },
       "displayName": "data",
       "excerpt": {
        "isEmpty": false,
        "text": "data: {\n        [mimeType: string]: string;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "data: "
         },
         {
          "kind": "Content",
          "text": "{\n        [mimeType: string]: string;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "data: "
        },
        {
         "kind": "Content",
         "text": "{\n        [mimeType: string]: string;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "data|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "data",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        [mimeType: string]: string;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        [mimeType: string]: string;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Represents a dictionary mapping of MIME types to data",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 17
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableParameters#dragImage:member"
       },
       "displayName": "dragImage",
       "excerpt": {
        "isEmpty": false,
        "text": "dragImage?: HTMLCanvasElement | HTMLImageElement | HTMLVideoElement;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "dragImage?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLCanvasElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLCanvasElement"
         },
         {
          "kind": "Content",
          "text": " | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLImageElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLImageElement"
         },
         {
          "kind": "Content",
          "text": " | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLVideoElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLVideoElement"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "dragImage?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "HTMLCanvasElement:interface"
         },
         "kind": "Reference",
         "text": "HTMLCanvasElement"
        },
        {
         "kind": "Content",
         "text": " | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "HTMLImageElement:interface"
         },
         "kind": "Reference",
         "text": "HTMLImageElement"
        },
        {
         "kind": "Content",
         "text": " | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "HTMLVideoElement:interface"
         },
         "kind": "Reference",
         "text": "HTMLVideoElement"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "dragImage|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "dragImage",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "HTMLCanvasElement | HTMLImageElement | HTMLVideoElement",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLCanvasElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLCanvasElement"
         },
         {
          "kind": "Content",
          "text": " | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLImageElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLImageElement"
         },
         {
          "kind": "Content",
          "text": " | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLVideoElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLVideoElement"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Can be used to specify a custom drag image instead of the browser default (a transparent render of the original element, generally)",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 46
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableParameters#dragImageXOffset:member"
       },
       "displayName": "dragImageXOffset",
       "excerpt": {
        "isEmpty": false,
        "text": "dragImageXOffset?: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "dragImageXOffset?: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "dragImageXOffset?: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "dragImageXOffset|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "dragImageXOffset",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableParameters#dragImageYOffset:member"
       },
       "displayName": "dragImageYOffset",
       "excerpt": {
        "isEmpty": false,
        "text": "dragImageYOffset?: number;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "dragImageYOffset?: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "dragImageYOffset?: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "dragImageYOffset|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "dragImageYOffset",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "number",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "number"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableParameters#effectAllowed:member"
       },
       "displayName": "effectAllowed",
       "excerpt": {
        "isEmpty": false,
        "text": "effectAllowed?: DataTransfer[\"effectAllowed\"] | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "effectAllowed?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DataTransfer:interface"
          },
          "kind": "Reference",
          "text": "DataTransfer"
         },
         {
          "kind": "Content",
          "text": "[\"effectAllowed\"] | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "effectAllowed?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "DataTransfer:interface"
         },
         "kind": "Reference",
         "text": "DataTransfer"
        },
        {
         "kind": "Content",
         "text": "[\"effectAllowed\"] | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "effectAllowed|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "effectAllowed",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "DataTransfer[\"effectAllowed\"] | undefined",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DataTransfer:interface"
          },
          "kind": "Reference",
          "text": "DataTransfer"
         },
         {
          "kind": "Content",
          "text": "[\"effectAllowed\"] | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Maps to the Drag and Drop API -- allows limiting the areas this element can be dropped. For example, setting this to \"copyLink\" will allow this this to be dropped onto a droppable with an effect of \"copy\" or \"link\", but not \"move\".",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 98
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseDraggableReturnType:interface"
     },
     "containerKey": "UseDraggableReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseDraggableReturnType<E extends EventTarget> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseDraggableReturnType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseDraggableReturnType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseDraggableReturnType",
     "fileUrlPath": "src/dom-helpers/use-draggable.tsx",
     "isExported": true,
     "name": "UseDraggableReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableReturnType#dragging:member"
       },
       "displayName": "dragging",
       "excerpt": {
        "isEmpty": false,
        "text": "dragging: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "dragging: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "dragging: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "dragging|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "dragging",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Returns true if the element in question is currently being dragged",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 21
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableReturnType#getDragging:member"
       },
       "displayName": "getDragging",
       "excerpt": {
        "isEmpty": false,
        "text": "getDragging: () => boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getDragging: "
         },
         {
          "kind": "Content",
          "text": "() => boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getDragging: "
        },
        {
         "kind": "Content",
         "text": "() => boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getDragging|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "getDragging",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**STABLE**",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 5
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableReturnType#getLastDropEffect:member"
       },
       "displayName": "getLastDropEffect",
       "excerpt": {
        "isEmpty": false,
        "text": "getLastDropEffect: () => (DataTransfer[\"dropEffect\"] | null);",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getLastDropEffect: "
         },
         {
          "kind": "Content",
          "text": "() => ("
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DataTransfer:interface"
          },
          "kind": "Reference",
          "text": "DataTransfer"
         },
         {
          "kind": "Content",
          "text": "[\"dropEffect\"] | null)"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getLastDropEffect: "
        },
        {
         "kind": "Content",
         "text": "() => ("
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "DataTransfer:interface"
         },
         "kind": "Reference",
         "text": "DataTransfer"
        },
        {
         "kind": "Content",
         "text": "[\"dropEffect\"] | null)"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getLastDropEffect|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "getLastDropEffect",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => (DataTransfer[\"dropEffect\"] | null)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => ("
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DataTransfer:interface"
          },
          "kind": "Reference",
          "text": "DataTransfer"
         },
         {
          "kind": "Content",
          "text": "[\"dropEffect\"] | null)"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**STABLE**",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 5
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableReturnType#lastDropEffect:member"
       },
       "displayName": "lastDropEffect",
       "excerpt": {
        "isEmpty": false,
        "text": "lastDropEffect: DataTransfer[\"dropEffect\"] | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "lastDropEffect: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DataTransfer:interface"
          },
          "kind": "Reference",
          "text": "DataTransfer"
         },
         {
          "kind": "Content",
          "text": "[\"dropEffect\"] | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "lastDropEffect: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "DataTransfer:interface"
         },
         "kind": "Reference",
         "text": "DataTransfer"
        },
        {
         "kind": "Content",
         "text": "[\"dropEffect\"] | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "lastDropEffect|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "lastDropEffect",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "DataTransfer[\"dropEffect\"] | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DataTransfer:interface"
          },
          "kind": "Reference",
          "text": "DataTransfer"
         },
         {
          "kind": "Content",
          "text": "[\"dropEffect\"] | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Once the drag ends, if it was over a valid droppable, this will be set to the ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 36
             }
            },
            {
             "kind": "CodeSpan",
             "code": "dropEffect"
            },
            {
             "kind": "PlainText",
             "text": " value it had.",
             "textExcerpt": {
              "startIndex": 39,
              "endIndex": 46
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This can be used to detect when the element has dropped, and then what should be done with it (generally deleted if the effect was \"move\")",
             "textExcerpt": {
              "startIndex": 48,
              "endIndex": 104
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDraggableReturnType#propsUnstable:member"
       },
       "displayName": "propsUnstable",
       "excerpt": {
        "isEmpty": false,
        "text": "propsUnstable: ElementProps<E>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsUnstable: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsUnstable: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<E>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsUnstable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsUnstable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "*Unstable*",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 3
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useDroppable:function(1)"
     },
     "kind": "Function",
     "containerKey": "useDroppable|Function|1",
     "displayName": "useDroppable",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useDroppable<E extends Element>({ effect }: UseDroppableParameters): UseDroppableReturnType<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useDroppable<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ effect }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDroppableParameters:interface"
        },
        "kind": "Reference",
        "text": "UseDroppableParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDroppableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseDroppableReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useDroppable",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ effect }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseDroppableParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseDroppableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseDroppableParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseDroppableReturnType<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDroppableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseDroppableReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useDroppable<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ effect }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableParameters:interface"
       },
       "kind": "Reference",
       "text": "UseDroppableParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseDroppableReturnType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseDroppableParameters:interface"
     },
     "containerKey": "UseDroppableParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseDroppableParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseDroppableParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseDroppableParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseDroppableParameters",
     "fileUrlPath": "src/dom-helpers/use-droppable.tsx",
     "isExported": true,
     "name": "UseDroppableParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableParameters#effect:member"
       },
       "displayName": "effect",
       "excerpt": {
        "isEmpty": false,
        "text": "effect: DataTransfer[\"dropEffect\"] | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "effect: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DataTransfer:interface"
          },
          "kind": "Reference",
          "text": "DataTransfer"
         },
         {
          "kind": "Content",
          "text": "[\"dropEffect\"] | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "effect: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "DataTransfer:interface"
         },
         "kind": "Reference",
         "text": "DataTransfer"
        },
        {
         "kind": "Content",
         "text": "[\"dropEffect\"] | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "effect|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "effect",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "DataTransfer[\"dropEffect\"] | undefined",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "DataTransfer:interface"
          },
          "kind": "Reference",
          "text": "DataTransfer"
         },
         {
          "kind": "Content",
          "text": "[\"dropEffect\"] | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Maps to the Drag and Drop API -- effectively means \"as close as possible, what's happening to the data when I drop it here? Am I copying it and leaving the original, am I moving it and deleting the original, or am I linking it to the original?\"",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 105
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Whatever is being dragged over this will have its own permission that's checked against this.",
             "textExcerpt": {
              "startIndex": 107,
              "endIndex": 139
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseDroppableReturnType:interface"
     },
     "containerKey": "UseDroppableReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseDroppableReturnType<E extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseDroppableReturnType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseDroppableReturnType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseDroppableReturnType",
     "fileUrlPath": "src/dom-helpers/use-droppable.tsx",
     "isExported": true,
     "name": "UseDroppableReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableReturnType#dropError:member"
       },
       "displayName": "dropError",
       "excerpt": {
        "isEmpty": false,
        "text": "dropError: unknown;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "dropError: "
         },
         {
          "kind": "Content",
          "text": "unknown"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "dropError: "
        },
        {
         "kind": "Content",
         "text": "unknown"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "dropError|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "dropError",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "unknown",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableReturnType#droppedFiles:member"
       },
       "displayName": "droppedFiles",
       "excerpt": {
        "isEmpty": false,
        "text": "droppedFiles: DropFile[] | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "droppedFiles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DropFile:interface"
          },
          "kind": "Reference",
          "text": "DropFile"
         },
         {
          "kind": "Content",
          "text": "[] | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "droppedFiles: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "DropFile:interface"
         },
         "kind": "Reference",
         "text": "DropFile"
        },
        {
         "kind": "Content",
         "text": "[] | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "droppedFiles|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "droppedFiles",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "DropFile[] | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DropFile:interface"
          },
          "kind": "Reference",
          "text": "DropFile"
         },
         {
          "kind": "Content",
          "text": "[] | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "When files are dropped over the element, their data will be given here. This will update as new drops happen.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 42
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableReturnType#droppedStrings:member"
       },
       "displayName": "droppedStrings",
       "excerpt": {
        "isEmpty": false,
        "text": "droppedStrings: {\n        [MimeType: string]: string;\n    } | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "droppedStrings: "
         },
         {
          "kind": "Content",
          "text": "{\n        [MimeType: string]: string;\n    } | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "droppedStrings: "
        },
        {
         "kind": "Content",
         "text": "{\n        [MimeType: string]: string;\n    } | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "droppedStrings|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "droppedStrings",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        [MimeType: string]: string;\n    } | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        [MimeType: string]: string;\n    } | null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "When non-file data is dropped over the element, their data will be given here. This will update as new drops happen.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 46
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableReturnType#filesForConsideration:member"
       },
       "displayName": "filesForConsideration",
       "excerpt": {
        "isEmpty": false,
        "text": "filesForConsideration: DropFileMetadata[] | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "filesForConsideration: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DropFileMetadata:interface"
          },
          "kind": "Reference",
          "text": "DropFileMetadata"
         },
         {
          "kind": "Content",
          "text": "[] | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "filesForConsideration: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "DropFileMetadata:interface"
         },
         "kind": "Reference",
         "text": "DropFileMetadata"
        },
        {
         "kind": "Content",
         "text": "[] | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "filesForConsideration|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "filesForConsideration",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "DropFileMetadata[] | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DropFileMetadata:interface"
          },
          "kind": "Reference",
          "text": "DropFileMetadata"
         },
         {
          "kind": "Content",
          "text": "[] | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "While something is being dragged over this element, this will contain any information about any files included in that drop. Otherwise, it'll be null, meaning nothing is being dragged over this element.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 70
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableReturnType#propsStable:member"
       },
       "displayName": "propsStable",
       "excerpt": {
        "isEmpty": false,
        "text": "propsStable: ElementProps<E>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsStable: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsStable: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<E>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsStable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsStable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Hook for modifying the props you were going to pass to your drop target Element.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 30
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "*Unstable*",
             "textExcerpt": {
              "startIndex": 32,
              "endIndex": 35
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDroppableReturnType#stringsForConsideration:member"
       },
       "displayName": "stringsForConsideration",
       "excerpt": {
        "isEmpty": false,
        "text": "stringsForConsideration: Set<string> | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "stringsForConsideration: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Set:interface"
          },
          "kind": "Reference",
          "text": "Set"
         },
         {
          "kind": "Content",
          "text": "<string> | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "stringsForConsideration: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Set:interface"
         },
         "kind": "Reference",
         "text": "Set"
        },
        {
         "kind": "Content",
         "text": "<string> | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "stringsForConsideration|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "stringsForConsideration",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Set<string> | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Set:interface"
          },
          "kind": "Reference",
          "text": "Set"
         },
         {
          "kind": "Content",
          "text": "<string> | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "While something is being dragged over this element, a list of available MIME types for the non-file data will be listed here. Otherwise, it'll be null, meaning nothing is being dragged over this element.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 76
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useEffectDebug:function(1)"
     },
     "kind": "Function",
     "containerKey": "useEffectDebug|Function|1",
     "displayName": "useEffectDebug",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useEffectDebug<I extends Inputs>(effect: (prev: I | undefined, changes: EffectChange<I, number>[]) => (void | (() => void)), inputs?: I, impl?: typeof useEffectNative): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useEffectDebug<I extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-hooks!",
         "symbol": "Inputs:type"
        },
        "kind": "Reference",
        "text": "Inputs"
       },
       {
        "kind": "Content",
        "text": ">(effect: "
       },
       {
        "kind": "Content",
        "text": "(prev: I | undefined, changes: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "EffectChange:interface"
        },
        "kind": "Reference",
        "text": "EffectChange"
       },
       {
        "kind": "Content",
        "text": "<I, number>[]) => (void | (() => void))"
       },
       {
        "kind": "Content",
        "text": ", inputs?: "
       },
       {
        "kind": "Content",
        "text": "I"
       },
       {
        "kind": "Content",
        "text": ", impl?: "
       },
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-hooks!",
         "symbol": "useEffect:function"
        },
        "kind": "Reference",
        "text": "useEffectNative"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useEffectDebug",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "effect",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "(prev: I | undefined, changes: EffectChange<I, number>[]) => (void | (() => void))",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(prev: I | undefined, changes: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "EffectChange:interface"
          },
          "kind": "Reference",
          "text": "EffectChange"
         },
         {
          "kind": "Content",
          "text": "<I, number>[]) => (void | (() => void))"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 3
        }
       },
       "tsdocParamBlock": {
        "parameterName": "effect",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "inputs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "I",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "I"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       },
       "tsdocParamBlock": {
        "parameterName": "inputs",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "impl",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "typeof useEffectNative",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-hooks!",
           "symbol": "useEffect:function"
          },
          "kind": "Reference",
          "text": "useEffectNative"
         }
        ],
        "tokenRange": {
         "endIndex": 11,
         "startIndex": 9
        }
       },
       "tsdocParamBlock": {
        "parameterName": "impl",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "You can choose whether to use ",
             "textExcerpt": {
              "startIndex": 94,
              "endIndex": 106
             }
            },
            {
             "kind": "CodeSpan",
             "code": "useEffect"
            },
            {
             "kind": "PlainText",
             "text": " or ",
             "textExcerpt": {
              "startIndex": 109,
              "endIndex": 112
             }
            },
            {
             "kind": "CodeSpan",
             "code": "useLayoutEffect"
            },
            {
             "kind": "PlainText",
             "text": " by passing one of them as this argument. By default, it's ",
             "textExcerpt": {
              "startIndex": 115,
              "endIndex": 142
             }
            },
            {
             "kind": "CodeSpan",
             "code": "useEffect"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 145,
              "endIndex": 146
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 12
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Inputs",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-hooks!",
           "symbol": "Inputs:type"
          },
          "kind": "Reference",
          "text": "Inputs"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "I"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Wrap the native ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 6
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": " to add arguments that allow accessing the previous value as the first argument, as well as the changes that caused the hook to be called as the second argument.",
           "textExcerpt": {
            "startIndex": 9,
            "endIndex": 69
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "effect",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "inputs",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "impl",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "You can choose whether to use ",
              "textExcerpt": {
               "startIndex": 94,
               "endIndex": 106
              }
             },
             {
              "kind": "CodeSpan",
              "code": "useEffect"
             },
             {
              "kind": "PlainText",
              "text": " or ",
              "textExcerpt": {
               "startIndex": 109,
               "endIndex": 112
              }
             },
             {
              "kind": "CodeSpan",
              "code": "useLayoutEffect"
             },
             {
              "kind": "PlainText",
              "text": " by passing one of them as this argument. By default, it's ",
              "textExcerpt": {
               "startIndex": 115,
               "endIndex": 142
              }
             },
             {
              "kind": "CodeSpan",
              "code": "useEffect"
             },
             {
              "kind": "PlainText",
              "text": ".",
              "textExcerpt": {
               "startIndex": 145,
               "endIndex": 146
              }
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 3,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useEffectDebug<I extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-hooks!",
        "symbol": "Inputs:type"
       },
       "kind": "Reference",
       "text": "Inputs"
      },
      {
       "kind": "Content",
       "text": ">(effect: "
      },
      {
       "kind": "Content",
       "text": "(prev: I | undefined, changes: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "EffectChange:interface"
       },
       "kind": "Reference",
       "text": "EffectChange"
      },
      {
       "kind": "Content",
       "text": "<I, number>[]) => (void | (() => void))"
      },
      {
       "kind": "Content",
       "text": ", inputs?: "
      },
      {
       "kind": "Content",
       "text": "I"
      },
      {
       "kind": "Content",
       "text": ", impl?: "
      },
      {
       "kind": "Content",
       "text": "typeof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-hooks!",
        "symbol": "useEffect:function"
       },
       "kind": "Reference",
       "text": "useEffectNative"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useElementSize:function(1)"
     },
     "kind": "Function",
     "containerKey": "useElementSize|Function|1",
     "displayName": "useElementSize",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useElementSize<E extends Element>({ elementSizeParameters: { getObserveBox, onSizeChange }, refElementParameters }: UseElementSizeParameters<E>): UseElementSizeReturnType<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useElementSize<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseElementSizeParameters#elementSizeParameters"
        },
        "kind": "Reference",
        "text": "elementSizeParameters"
       },
       {
        "kind": "Content",
        "text": ": { getObserveBox, onSizeChange }, refElementParameters }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseElementSizeParameters:interface"
        },
        "kind": "Reference",
        "text": "UseElementSizeParameters"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseElementSizeReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseElementSizeReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useElementSize",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ elementSizeParameters: { getObserveBox, onSizeChange }, refElementParameters }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseElementSizeParameters<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseElementSizeParameters:interface"
          },
          "kind": "Reference",
          "text": "UseElementSizeParameters"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseElementSizeReturnType<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseElementSizeReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseElementSizeReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 8
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useElementSize<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseElementSizeParameters#elementSizeParameters"
       },
       "kind": "Reference",
       "text": "elementSizeParameters"
      },
      {
       "kind": "Content",
       "text": ": { getObserveBox, onSizeChange }, refElementParameters }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseElementSizeParameters:interface"
       },
       "kind": "Reference",
       "text": "UseElementSizeParameters"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseElementSizeReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseElementSizeReturnType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseElementSizeParameters:interface"
     },
     "containerKey": "UseElementSizeParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseElementSizeParameters<T extends Element> extends UseRefElementParameters<T> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseElementSizeParameters<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementParameters"
       },
       {
        "kind": "Content",
        "text": "<T>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseElementSizeParameters<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRefElementParameters"
      },
      {
       "kind": "Content",
       "text": "<T>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRefElementParameters<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementParameters"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseElementSizeParameters",
     "fileUrlPath": "src/observers/use-element-size.tsx",
     "isExported": true,
     "name": "UseElementSizeParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseElementSizeParameters#elementSizeParameters:member"
       },
       "displayName": "elementSizeParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "elementSizeParameters: {\n        onSizeChange(sizeInfo: ElementSize, prevSize: ElementSize | undefined, entries: ResizeObserverEntry[] | UIEvent): void;\n        getObserveBox: null | (() => ResizeObserverOptions[\"box\"]);\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "elementSizeParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onSizeChange(sizeInfo: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementSize:interface"
          },
          "kind": "Reference",
          "text": "ElementSize"
         },
         {
          "kind": "Content",
          "text": ", prevSize: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementSize:interface"
          },
          "kind": "Reference",
          "text": "ElementSize"
         },
         {
          "kind": "Content",
          "text": " | undefined, entries: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "ResizeObserverEntry:interface"
          },
          "kind": "Reference",
          "text": "ResizeObserverEntry"
         },
         {
          "kind": "Content",
          "text": "[] | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "UIEvent:interface"
          },
          "kind": "Reference",
          "text": "UIEvent"
         },
         {
          "kind": "Content",
          "text": "): void;\n        getObserveBox: null | (() => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "ResizeObserverOptions:interface"
          },
          "kind": "Reference",
          "text": "ResizeObserverOptions"
         },
         {
          "kind": "Content",
          "text": "[\"box\"]);\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "elementSizeParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onSizeChange(sizeInfo: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementSize:interface"
         },
         "kind": "Reference",
         "text": "ElementSize"
        },
        {
         "kind": "Content",
         "text": ", prevSize: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementSize:interface"
         },
         "kind": "Reference",
         "text": "ElementSize"
        },
        {
         "kind": "Content",
         "text": " | undefined, entries: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "ResizeObserverEntry:interface"
         },
         "kind": "Reference",
         "text": "ResizeObserverEntry"
        },
        {
         "kind": "Content",
         "text": "[] | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "UIEvent:interface"
         },
         "kind": "Reference",
         "text": "UIEvent"
        },
        {
         "kind": "Content",
         "text": "): void;\n        getObserveBox: null | (() => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "ResizeObserverOptions:interface"
         },
         "kind": "Reference",
         "text": "ResizeObserverOptions"
        },
        {
         "kind": "Content",
         "text": "[\"box\"]);\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "elementSizeParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "elementSizeParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onSizeChange(sizeInfo: ElementSize, prevSize: ElementSize | undefined, entries: ResizeObserverEntry[] | UIEvent): void;\n        getObserveBox: null | (() => ResizeObserverOptions[\"box\"]);\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onSizeChange(sizeInfo: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementSize:interface"
          },
          "kind": "Reference",
          "text": "ElementSize"
         },
         {
          "kind": "Content",
          "text": ", prevSize: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementSize:interface"
          },
          "kind": "Reference",
          "text": "ElementSize"
         },
         {
          "kind": "Content",
          "text": " | undefined, entries: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "ResizeObserverEntry:interface"
          },
          "kind": "Reference",
          "text": "ResizeObserverEntry"
         },
         {
          "kind": "Content",
          "text": "[] | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "UIEvent:interface"
          },
          "kind": "Reference",
          "text": "UIEvent"
         },
         {
          "kind": "Content",
          "text": "): void;\n        getObserveBox: null | (() => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "ResizeObserverOptions:interface"
          },
          "kind": "Reference",
          "text": "ResizeObserverOptions"
         },
         {
          "kind": "Content",
          "text": "[\"box\"]);\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseElementSizeReturnType:interface"
     },
     "containerKey": "UseElementSizeReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseElementSizeReturnType<E extends Element> extends UseRefElementReturnType<E> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseElementSizeReturnType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseElementSizeReturnType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRefElementReturnType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRefElementReturnType<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseElementSizeReturnType",
     "fileUrlPath": "src/observers/use-element-size.tsx",
     "isExported": true,
     "name": "UseElementSizeReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseElementSizeReturnType#elementSizeReturn:member"
       },
       "displayName": "elementSizeReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "elementSizeReturn: {\n        getSize(): ElementSize | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "elementSizeReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getSize(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementSize:interface"
          },
          "kind": "Reference",
          "text": "ElementSize"
         },
         {
          "kind": "Content",
          "text": " | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "elementSizeReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getSize(): "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementSize:interface"
         },
         "kind": "Reference",
         "text": "ElementSize"
        },
        {
         "kind": "Content",
         "text": " | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "elementSizeReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "elementSizeReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getSize(): ElementSize | null;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getSize(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementSize:interface"
          },
          "kind": "Reference",
          "text": "ElementSize"
         },
         {
          "kind": "Content",
          "text": " | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useEnsureStability:function(1)"
     },
     "kind": "Function",
     "containerKey": "useEnsureStability|Function|1",
     "displayName": "useEnsureStability",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useEnsureStability<T extends any[]>(parentHookName: string, ...values: T): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useEnsureStability<T extends "
       },
       {
        "kind": "Content",
        "text": "any[]"
       },
       {
        "kind": "Content",
        "text": ">(parentHookName: "
       },
       {
        "kind": "Content",
        "text": "string"
       },
       {
        "kind": "Content",
        "text": ", ...values: "
       },
       {
        "kind": "Content",
        "text": "T"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useEnsureStability",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "parentHookName",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "string",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      },
      {
       "isOptional": false,
       "name": "values",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 7
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "any[]",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "any[]"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Debug hook.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 4
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Given a value or set of values, emits a console error if any of them change from one render to the next.",
           "textExcerpt": {
            "startIndex": 6,
            "endIndex": 51
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Eventually, when useEvent lands, we hopefully won't need this.",
           "textExcerpt": {
            "startIndex": 53,
            "endIndex": 75
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useEnsureStability<T extends "
      },
      {
       "kind": "Content",
       "text": "any[]"
      },
      {
       "kind": "Content",
       "text": ">(parentHookName: "
      },
      {
       "kind": "Content",
       "text": "string"
      },
      {
       "kind": "Content",
       "text": ", ...values: "
      },
      {
       "kind": "Content",
       "text": "T"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useEscapeDismiss:function(1)"
     },
     "kind": "Function",
     "containerKey": "useEscapeDismiss|Function|1",
     "displayName": "useEscapeDismiss",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useEscapeDismiss<PopupElement extends Element>({ escapeDismissParameters: { onClose, open, getWindow: unstableGetWindow, parentDepth, ...void1 }, refElementPopupReturn: { getElement, ...void2 } }: UseEscapeDismissParameters<PopupElement>): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useEscapeDismiss<PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseEscapeDismissParameters#escapeDismissParameters"
        },
        "kind": "Reference",
        "text": "escapeDismissParameters"
       },
       {
        "kind": "Content",
        "text": ": { onClose, open, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#getWindow"
        },
        "kind": "Reference",
        "text": "getWindow"
       },
       {
        "kind": "Content",
        "text": ": unstableGetWindow, parentDepth, ...void1 }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseEscapeDismissParameters#refElementPopupReturn"
        },
        "kind": "Reference",
        "text": "refElementPopupReturn"
       },
       {
        "kind": "Content",
        "text": ": { getElement, ...void2 } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseEscapeDismissParameters:interface"
        },
        "kind": "Reference",
        "text": "UseEscapeDismissParameters"
       },
       {
        "kind": "Content",
        "text": "<PopupElement>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useEscapeDismiss",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ escapeDismissParameters: { onClose, open, getWindow: unstableGetWindow, parentDepth, ...void1 }, refElementPopupReturn: { getElement, ...void2 } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseEscapeDismissParameters<PopupElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseEscapeDismissParameters:interface"
          },
          "kind": "Reference",
          "text": "UseEscapeDismissParameters"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 11,
         "startIndex": 9
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 12
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Adds event handlers for a modal-like soft-dismiss interaction.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 20
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "That is, any clicks or taps outside of the given component, or any time the Escape key is pressed within the component, (with various browser oddities regarding clicks on blank or inert areas handled) the component will request to close itself.",
           "textExcerpt": {
            "startIndex": 22,
            "endIndex": 109
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Of course, if you don't do anything in the ",
           "textExcerpt": {
            "startIndex": 111,
            "endIndex": 132
           }
          },
          {
           "kind": "CodeSpan",
           "code": "onClose"
          },
          {
           "kind": "PlainText",
           "text": " function, it won't be a soft dismiss anymore.",
           "textExcerpt": {
            "startIndex": 135,
            "endIndex": 155
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Handles events for pressing the ",
           "textExcerpt": {
            "startIndex": 157,
            "endIndex": 167
           }
          },
          {
           "kind": "CodeSpan",
           "code": "Escape"
          },
          {
           "kind": "PlainText",
           "text": " key to close the any currently open dialogs, tooltips, menus, popups, etc.",
           "textExcerpt": {
            "startIndex": 170,
            "endIndex": 199
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "One press of the ",
           "textExcerpt": {
            "startIndex": 201,
            "endIndex": 209
           }
          },
          {
           "kind": "CodeSpan",
           "code": "Escape"
          },
          {
           "kind": "PlainText",
           "text": " key is guaranteed to only call ",
           "textExcerpt": {
            "startIndex": 212,
            "endIndex": 225
           }
          },
          {
           "kind": "CodeSpan",
           "code": "onClose"
          },
          {
           "kind": "PlainText",
           "text": " for *only one* component, and it is called on the component deepest in the DOM tree, differentiated by passing context information between parent and child.",
           "textExcerpt": {
            "startIndex": 228,
            "endIndex": 283
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "param0",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useEscapeDismiss<PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseEscapeDismissParameters#escapeDismissParameters"
       },
       "kind": "Reference",
       "text": "escapeDismissParameters"
      },
      {
       "kind": "Content",
       "text": ": { onClose, open, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#getWindow"
       },
       "kind": "Reference",
       "text": "getWindow"
      },
      {
       "kind": "Content",
       "text": ": unstableGetWindow, parentDepth, ...void1 }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseEscapeDismissParameters#refElementPopupReturn"
       },
       "kind": "Reference",
       "text": "refElementPopupReturn"
      },
      {
       "kind": "Content",
       "text": ": { getElement, ...void2 } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseEscapeDismissParameters:interface"
       },
       "kind": "Reference",
       "text": "UseEscapeDismissParameters"
      },
      {
       "kind": "Content",
       "text": "<PopupElement>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseEscapeDismissParameters:interface"
     },
     "containerKey": "UseEscapeDismissParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseEscapeDismissParameters<PopupElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseEscapeDismissParameters<PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseEscapeDismissParameters<PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseEscapeDismissParameters",
     "fileUrlPath": "src/component-detail/use-dismiss.tsx",
     "isExported": true,
     "name": "UseEscapeDismissParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseEscapeDismissParameters#escapeDismissParameters:member"
       },
       "displayName": "escapeDismissParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "escapeDismissParameters: {\n        onClose: EnhancedEventHandler<KeyboardEvent, {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n        open: boolean;\n        getWindow(): Window;\n        parentDepth: number;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "escapeDismissParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onClose: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "EnhancedEventHandler:type"
          },
          "kind": "Reference",
          "text": "EnhancedEventHandler"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "KeyboardEvent:interface"
          },
          "kind": "Reference",
          "text": "KeyboardEvent"
         },
         {
          "kind": "Content",
          "text": ", {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n        open: boolean;\n        getWindow(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Window:interface"
          },
          "kind": "Reference",
          "text": "Window"
         },
         {
          "kind": "Content",
          "text": ";\n        parentDepth: number;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "escapeDismissParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onClose: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "EnhancedEventHandler:type"
         },
         "kind": "Reference",
         "text": "EnhancedEventHandler"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "KeyboardEvent:interface"
         },
         "kind": "Reference",
         "text": "KeyboardEvent"
        },
        {
         "kind": "Content",
         "text": ", {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n        open: boolean;\n        getWindow(): "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Window:interface"
         },
         "kind": "Reference",
         "text": "Window"
        },
        {
         "kind": "Content",
         "text": ";\n        parentDepth: number;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "escapeDismissParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "escapeDismissParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onClose: EnhancedEventHandler<KeyboardEvent, {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n        open: boolean;\n        getWindow(): Window;\n        parentDepth: number;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onClose: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "EnhancedEventHandler:type"
          },
          "kind": "Reference",
          "text": "EnhancedEventHandler"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "KeyboardEvent:interface"
          },
          "kind": "Reference",
          "text": "KeyboardEvent"
         },
         {
          "kind": "Content",
          "text": ", {\n            reason: \"escape\" | \"lost-focus\";\n        }>;\n        open: boolean;\n        getWindow(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Window:interface"
          },
          "kind": "Reference",
          "text": "Window"
         },
         {
          "kind": "Content",
          "text": ";\n        parentDepth: number;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseEscapeDismissParameters#refElementPopupReturn:member"
       },
       "displayName": "refElementPopupReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementPopupReturn: Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementPopupReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementPopupReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementPopupReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementPopupReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useFocusTrap:function(1)"
     },
     "kind": "Function",
     "containerKey": "useFocusTrap|Function|1",
     "displayName": "useFocusTrap",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useFocusTrap<SourceElement extends Element | null, PopupElement extends Element>({ focusTrapParameters: { onlyMoveFocus, trapActive, focusPopup: focusSelfUnstable, focusOpener: focusOpenerUnstable }, refElementReturn }: UseFocusTrapParameters<SourceElement, PopupElement>): UseFocusTrapReturnType<PopupElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useFocusTrap<SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseFocusTrapParameters#focusTrapParameters"
        },
        "kind": "Reference",
        "text": "focusTrapParameters"
       },
       {
        "kind": "Content",
        "text": ": { onlyMoveFocus, trapActive, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#focusPopup"
        },
        "kind": "Reference",
        "text": "focusPopup"
       },
       {
        "kind": "Content",
        "text": ": focusSelfUnstable, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#focusOpener"
        },
        "kind": "Reference",
        "text": "focusOpener"
       },
       {
        "kind": "Content",
        "text": ": focusOpenerUnstable }, refElementReturn }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseFocusTrapParameters:interface"
        },
        "kind": "Reference",
        "text": "UseFocusTrapParameters"
       },
       {
        "kind": "Content",
        "text": "<SourceElement, PopupElement>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseFocusTrapReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseFocusTrapReturnType"
       },
       {
        "kind": "Content",
        "text": "<PopupElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useFocusTrap",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ focusTrapParameters: { onlyMoveFocus, trapActive, focusPopup: focusSelfUnstable, focusOpener: focusOpenerUnstable }, refElementReturn }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseFocusTrapParameters<SourceElement, PopupElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseFocusTrapParameters:interface"
          },
          "kind": "Reference",
          "text": "UseFocusTrapParameters"
         },
         {
          "kind": "Content",
          "text": "<SourceElement, PopupElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 12
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseFocusTrapReturnType<PopupElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseFocusTrapReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseFocusTrapReturnType"
       },
       {
        "kind": "Content",
        "text": "<PopupElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 17,
       "startIndex": 15
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 4
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useFocusTrap<SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseFocusTrapParameters#focusTrapParameters"
       },
       "kind": "Reference",
       "text": "focusTrapParameters"
      },
      {
       "kind": "Content",
       "text": ": { onlyMoveFocus, trapActive, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#focusPopup"
       },
       "kind": "Reference",
       "text": "focusPopup"
      },
      {
       "kind": "Content",
       "text": ": focusSelfUnstable, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#focusOpener"
       },
       "kind": "Reference",
       "text": "focusOpener"
      },
      {
       "kind": "Content",
       "text": ": focusOpenerUnstable }, refElementReturn }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseFocusTrapParameters:interface"
       },
       "kind": "Reference",
       "text": "UseFocusTrapParameters"
      },
      {
       "kind": "Content",
       "text": "<SourceElement, PopupElement>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseFocusTrapReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseFocusTrapReturnType"
      },
      {
       "kind": "Content",
       "text": "<PopupElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseFocusTrapParameters:interface"
     },
     "containerKey": "UseFocusTrapParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseFocusTrapParameters<SourceElement extends Element | null, PopupElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseFocusTrapParameters<SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseFocusTrapParameters<SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseFocusTrapParameters",
     "fileUrlPath": "src/component-detail/use-focus-trap.tsx",
     "isExported": true,
     "name": "UseFocusTrapParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseFocusTrapParameters#focusTrapParameters:member"
       },
       "displayName": "focusTrapParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "focusTrapParameters: {\n        trapActive: boolean;\n        onlyMoveFocus: boolean;\n        focusPopup(e: PopupElement, findFirstFocusable: () => HTMLOrSVGElement | null): void;\n        focusOpener(lastFocused: SourceElement | null): void;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "focusTrapParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        trapActive: boolean;\n        onlyMoveFocus: boolean;\n        focusPopup(e: PopupElement, findFirstFocusable: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLOrSVGElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLOrSVGElement"
         },
         {
          "kind": "Content",
          "text": " | null): void;\n        focusOpener(lastFocused: SourceElement | null): void;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "focusTrapParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        trapActive: boolean;\n        onlyMoveFocus: boolean;\n        focusPopup(e: PopupElement, findFirstFocusable: () => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "HTMLOrSVGElement:interface"
         },
         "kind": "Reference",
         "text": "HTMLOrSVGElement"
        },
        {
         "kind": "Content",
         "text": " | null): void;\n        focusOpener(lastFocused: SourceElement | null): void;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "focusTrapParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "focusTrapParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        trapActive: boolean;\n        onlyMoveFocus: boolean;\n        focusPopup(e: PopupElement, findFirstFocusable: () => HTMLOrSVGElement | null): void;\n        focusOpener(lastFocused: SourceElement | null): void;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        trapActive: boolean;\n        onlyMoveFocus: boolean;\n        focusPopup(e: PopupElement, findFirstFocusable: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLOrSVGElement:interface"
          },
          "kind": "Reference",
          "text": "HTMLOrSVGElement"
         },
         {
          "kind": "Content",
          "text": " | null): void;\n        focusOpener(lastFocused: SourceElement | null): void;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseFocusTrapParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Pick<UseRefElementReturnType<NonNullable<PopupElement>>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NonNullable:type"
         },
         "kind": "Reference",
         "text": "NonNullable"
        },
        {
         "kind": "Content",
         "text": "<PopupElement>>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<NonNullable<PopupElement>>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 4
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseFocusTrapReturnType:interface"
     },
     "containerKey": "UseFocusTrapReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseFocusTrapReturnType<E extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseFocusTrapReturnType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseFocusTrapReturnType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseFocusTrapReturnType",
     "fileUrlPath": "src/component-detail/use-focus-trap.tsx",
     "isExported": true,
     "name": "UseFocusTrapReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseFocusTrapReturnType#focusTrapReturn:member"
       },
       "displayName": "focusTrapReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "focusTrapReturn: {};",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "focusTrapReturn: "
         },
         {
          "kind": "Content",
          "text": "{}"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "focusTrapReturn: "
        },
        {
         "kind": "Content",
         "text": "{}"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "focusTrapReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "focusTrapReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{}",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{}"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseFocusTrapReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<E>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<E>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useForceUpdate:function(1)"
     },
     "kind": "Function",
     "containerKey": "useForceUpdate|Function|1",
     "displayName": "useForceUpdate",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useForceUpdate(): () => void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useForceUpdate(): "
       },
       {
        "kind": "Content",
        "text": "() => void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useForceUpdate",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "() => void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "() => void"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Returns a function that will, when called, force the component that uses this hook to re-render itself.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 38
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "It's a bit smelly, so best to use sparingly.",
           "textExcerpt": {
            "startIndex": 40,
            "endIndex": 61
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useForceUpdate(): "
      },
      {
       "kind": "Content",
       "text": "() => void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGlobalHandler:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGlobalHandler|Function|1",
     "displayName": "useGlobalHandler",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGlobalHandler<T extends EventTarget, EventType extends TypedEventListenerTypes<T>, H extends TypedEventHandlerEvent<T, EventType>>(target: T, type: EventType, handler: null | ((e: H) => void), options?: Parameters<TypedAddEventListener<T>>[2], mode?: \"grouped\" | \"single\"): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGlobalHandler<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ", EventType extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "TypedEventListenerTypes:type"
        },
        "kind": "Reference",
        "text": "TypedEventListenerTypes"
       },
       {
        "kind": "Content",
        "text": "<T>"
       },
       {
        "kind": "Content",
        "text": ", H extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "TypedEventHandlerEvent:type"
        },
        "kind": "Reference",
        "text": "TypedEventHandlerEvent"
       },
       {
        "kind": "Content",
        "text": "<T, EventType>"
       },
       {
        "kind": "Content",
        "text": ">(target: "
       },
       {
        "kind": "Content",
        "text": "T"
       },
       {
        "kind": "Content",
        "text": ", type: "
       },
       {
        "kind": "Content",
        "text": "EventType"
       },
       {
        "kind": "Content",
        "text": ", handler: "
       },
       {
        "kind": "Content",
        "text": "null | ((e: H) => void)"
       },
       {
        "kind": "Content",
        "text": ", options?: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Parameters:type"
        },
        "kind": "Reference",
        "text": "Parameters"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "TypedAddEventListener:type"
        },
        "kind": "Reference",
        "text": "TypedAddEventListener"
       },
       {
        "kind": "Content",
        "text": "<T>>[2]"
       },
       {
        "kind": "Content",
        "text": ", mode?: "
       },
       {
        "kind": "Content",
        "text": "\"grouped\" | \"single\""
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 24,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGlobalHandler",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "target",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 9
        }
       },
       "tsdocParamBlock": {
        "parameterName": "target",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "A *non-Preact* node to attach the event to.",
             "textExcerpt": {
              "startIndex": 192,
              "endIndex": 212
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": false,
       "name": "type",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "EventType",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "EventType"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 11
        }
       }
      },
      {
       "isOptional": false,
       "name": "handler",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "null | ((e: H) => void)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "null | ((e: H) => void)"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 13
        }
       }
      },
      {
       "isOptional": true,
       "name": "options",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Parameters<TypedAddEventListener<T>>[2]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Parameters:type"
          },
          "kind": "Reference",
          "text": "Parameters"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "TypedAddEventListener:type"
          },
          "kind": "Reference",
          "text": "TypedAddEventListener"
         },
         {
          "kind": "Content",
          "text": "<T>>[2]"
         }
        ],
        "tokenRange": {
         "endIndex": 19,
         "startIndex": 15
        }
       }
      },
      {
       "isOptional": true,
       "name": "mode",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "\"grouped\" | \"single\"",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "\"grouped\" | \"single\""
         }
        ],
        "tokenRange": {
         "endIndex": 21,
         "startIndex": 20
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 23,
       "startIndex": 22
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "TypedEventListenerTypes<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "TypedEventListenerTypes:type"
          },
          "kind": "Reference",
          "text": "TypedEventListenerTypes"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "EventType"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "TypedEventHandlerEvent<T, EventType>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "TypedEventHandlerEvent:type"
          },
          "kind": "Reference",
          "text": "TypedEventHandlerEvent"
         },
         {
          "kind": "Content",
          "text": "<T, EventType>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "H"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows attaching an event handler to any *non-Preact* element, and removing it when the component using the hook unmounts. The callback does not need to be stable across renders.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 64
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "CodeSpan",
           "code": "\"mode\""
          },
          {
           "kind": "PlainText",
           "text": " controls if there's one handler that calls all your functions (default), or one handler added per function (",
           "textExcerpt": {
            "startIndex": 71,
            "endIndex": 112
           }
          },
          {
           "kind": "CodeSpan",
           "code": "\"single\""
          },
          {
           "kind": "PlainText",
           "text": ").",
           "textExcerpt": {
            "startIndex": 117,
            "endIndex": 119
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "The default, ",
           "textExcerpt": {
            "startIndex": 121,
            "endIndex": 126
           }
          },
          {
           "kind": "CodeSpan",
           "code": "\"grouped\""
          },
          {
           "kind": "PlainText",
           "text": ", is faster when you have, say, a button component, used hundreds of times on a page, that each installs a global event handler.",
           "textExcerpt": {
            "startIndex": 131,
            "endIndex": 183
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " *",
            "textExcerpt": {
             "startIndex": 216,
             "endIndex": 218
            }
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "target",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "A *non-Preact* node to attach the event to.",
              "textExcerpt": {
               "startIndex": 192,
               "endIndex": 212
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGlobalHandler<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": ", EventType extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "TypedEventListenerTypes:type"
       },
       "kind": "Reference",
       "text": "TypedEventListenerTypes"
      },
      {
       "kind": "Content",
       "text": "<T>"
      },
      {
       "kind": "Content",
       "text": ", H extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "TypedEventHandlerEvent:type"
       },
       "kind": "Reference",
       "text": "TypedEventHandlerEvent"
      },
      {
       "kind": "Content",
       "text": "<T, EventType>"
      },
      {
       "kind": "Content",
       "text": ">(target: "
      },
      {
       "kind": "Content",
       "text": "T"
      },
      {
       "kind": "Content",
       "text": ", type: "
      },
      {
       "kind": "Content",
       "text": "EventType"
      },
      {
       "kind": "Content",
       "text": ", handler: "
      },
      {
       "kind": "Content",
       "text": "null | ((e: H) => void)"
      },
      {
       "kind": "Content",
       "text": ", options?: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Parameters:type"
       },
       "kind": "Reference",
       "text": "Parameters"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "TypedAddEventListener:type"
       },
       "kind": "Reference",
       "text": "TypedAddEventListener"
      },
      {
       "kind": "Content",
       "text": "<T>>[2]"
      },
      {
       "kind": "Content",
       "text": ", mode?: "
      },
      {
       "kind": "Content",
       "text": "\"grouped\" | \"single\""
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigation:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigation|Function|1",
     "displayName": "useGridNavigation",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigation<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends GridChildRowInfo<RowElement, CellElement>, CM extends GridChildCellInfo<CellElement>>({ gridNavigationParameters: { onTabbableColumnChange, ...void3 }, linearNavigationParameters, rovingTabIndexParameters: { onTabbableIndexChange, untabbable, ...rovingTabIndexParameters }, managedChildrenReturn, typeaheadNavigationParameters, refElementReturn, ...void2 }: UseGridNavigationParameters<ParentOrRowElement, RowElement, CellElement, RM>): UseGridNavigationReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigation<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationParameters#gridNavigationParameters"
        },
        "kind": "Reference",
        "text": "gridNavigationParameters"
       },
       {
        "kind": "Content",
        "text": ": { onTabbableColumnChange, ...void3 }, linearNavigationParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "rovingTabIndexParameters"
        },
        "kind": "Reference",
        "text": "rovingTabIndexParameters"
       },
       {
        "kind": "Content",
        "text": ": { onTabbableIndexChange, untabbable, ...rovingTabIndexParameters }, managedChildrenReturn, typeaheadNavigationParameters, refElementReturn, ...void2 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 23,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigation",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ gridNavigationParameters: { onTabbableColumnChange, ...void3 }, linearNavigationParameters, rovingTabIndexParameters: { onTabbableIndexChange, untabbable, ...rovingTabIndexParameters }, managedChildrenReturn, typeaheadNavigationParameters, refElementReturn, ...void2 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationParameters<ParentOrRowElement, RowElement, CellElement, RM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
         }
        ],
        "tokenRange": {
         "endIndex": 19,
         "startIndex": 17
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 22,
       "startIndex": 20
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigation<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationParameters#gridNavigationParameters"
       },
       "kind": "Reference",
       "text": "gridNavigationParameters"
      },
      {
       "kind": "Content",
       "text": ": { onTabbableColumnChange, ...void3 }, linearNavigationParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "rovingTabIndexParameters"
       },
       "kind": "Reference",
       "text": "rovingTabIndexParameters"
      },
      {
       "kind": "Content",
       "text": ": { onTabbableIndexChange, untabbable, ...rovingTabIndexParameters }, managedChildrenReturn, typeaheadNavigationParameters, refElementReturn, ...void2 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigationCell:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigationCell|Function|1",
     "displayName": "useGridNavigationCell",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigationCell<CellElement extends Element, CM extends GridChildCellInfo<CellElement>>({ context: { gridNavigationCellContext: { getRowIndex, setTabbableRow, getCurrentTabbableColumn, setCurrentTabbableColumn, setTabbableCell }, rovingTabIndexContext, typeaheadNavigationContext }, info, refElementReturn, textContentParameters, gridNavigationCellParameters: { colSpan }, ...void1 }: UseGridNavigationCellParameters<any, CellElement, CM>): UseGridNavigationCellReturnType<CellElement, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigationCell<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellContext#gridNavigationCellContext"
        },
        "kind": "Reference",
        "text": "gridNavigationCellContext"
       },
       {
        "kind": "Content",
        "text": ": { getRowIndex, setTabbableRow, getCurrentTabbableColumn, setCurrentTabbableColumn, setTabbableCell }, rovingTabIndexContext, typeaheadNavigationContext }, info, refElementReturn, textContentParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellParameters#gridNavigationCellParameters"
        },
        "kind": "Reference",
        "text": "gridNavigationCellParameters"
       },
       {
        "kind": "Content",
        "text": ": { colSpan }, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellParameters"
       },
       {
        "kind": "Content",
        "text": "<any, CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigationCell",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ context: { gridNavigationCellContext: { getRowIndex, setTabbableRow, getCurrentTabbableColumn, setCurrentTabbableColumn, setTabbableCell }, rovingTabIndexContext, typeaheadNavigationContext }, info, refElementReturn, textContentParameters, gridNavigationCellParameters: { colSpan }, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellParameters<any, CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellParameters"
         },
         {
          "kind": "Content",
          "text": "<any, CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 12
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationCellReturnType<CellElement, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 17,
       "startIndex": 15
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigationCell<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellContext#gridNavigationCellContext"
       },
       "kind": "Reference",
       "text": "gridNavigationCellContext"
      },
      {
       "kind": "Content",
       "text": ": { getRowIndex, setTabbableRow, getCurrentTabbableColumn, setCurrentTabbableColumn, setTabbableCell }, rovingTabIndexContext, typeaheadNavigationContext }, info, refElementReturn, textContentParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellParameters#gridNavigationCellParameters"
       },
       "kind": "Reference",
       "text": "gridNavigationCellParameters"
      },
      {
       "kind": "Content",
       "text": ": { colSpan }, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationCellParameters"
      },
      {
       "kind": "Content",
       "text": "<any, CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationCellReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationCellContext:interface"
     },
     "containerKey": "UseGridNavigationCellContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationCellContext extends UseListNavigationContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationCellContext extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationContext:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationCellContext extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationContext:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "UseGridNavigationCellContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "UseGridNavigationCellContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellContext#gridNavigationCellContext:member"
       },
       "displayName": "gridNavigationCellContext",
       "excerpt": {
        "isEmpty": false,
        "text": "gridNavigationCellContext: {\n        allChildCellsAreUntabbable: boolean;\n        getRowIndex: () => number;\n        setTabbableRow: SetTabbableIndex;\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: PassiveStateUpdater<number | null, Event>;\n        setTabbableCell: SetTabbableIndex;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "gridNavigationCellContext: "
         },
         {
          "kind": "Content",
          "text": "{\n        allChildCellsAreUntabbable: boolean;\n        getRowIndex: () => number;\n        setTabbableRow: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ">;\n        setTabbableCell: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 11,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "gridNavigationCellContext: "
        },
        {
         "kind": "Content",
         "text": "{\n        allChildCellsAreUntabbable: boolean;\n        getRowIndex: () => number;\n        setTabbableRow: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetTabbableIndex:type"
         },
         "kind": "Reference",
         "text": "SetTabbableIndex"
        },
        {
         "kind": "Content",
         "text": ";\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PassiveStateUpdater:type"
         },
         "kind": "Reference",
         "text": "PassiveStateUpdater"
        },
        {
         "kind": "Content",
         "text": "<number | null, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Event:interface"
         },
         "kind": "Reference",
         "text": "Event"
        },
        {
         "kind": "Content",
         "text": ">;\n        setTabbableCell: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetTabbableIndex:type"
         },
         "kind": "Reference",
         "text": "SetTabbableIndex"
        },
        {
         "kind": "Content",
         "text": ";\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "gridNavigationCellContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "gridNavigationCellContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        allChildCellsAreUntabbable: boolean;\n        getRowIndex: () => number;\n        setTabbableRow: SetTabbableIndex;\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: PassiveStateUpdater<number | null, Event>;\n        setTabbableCell: SetTabbableIndex;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        allChildCellsAreUntabbable: boolean;\n        getRowIndex: () => number;\n        setTabbableRow: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ">;\n        setTabbableCell: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationCellParameters:interface"
     },
     "containerKey": "UseGridNavigationCellParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationCellParameters<RowElement extends Element, CellElement extends Element, CM extends GridChildCellInfo<CellElement>> extends UseListNavigationChildParameters<CellElement, CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationCellParameters<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildParameters"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationCellParameters<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildParameters"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildParameters<CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildParameters"
         },
         {
          "kind": "Content",
          "text": "<CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "UseGridNavigationCellParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "UseGridNavigationCellParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseGridNavigationCellContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationCellContext:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationCellContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellParameters#gridNavigationCellParameters:member"
       },
       "displayName": "gridNavigationCellParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "gridNavigationCellParameters: {\n        colSpan: number;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "gridNavigationCellParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        colSpan: number;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "gridNavigationCellParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        colSpan: number;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "gridNavigationCellParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "gridNavigationCellParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        colSpan: number;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        colSpan: number;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationCellReturnType:interface"
     },
     "containerKey": "UseGridNavigationCellReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationCellReturnType<CellElement extends Element, CM extends GridChildCellInfo<CellElement>> extends UseListNavigationChildReturnType<CellElement, CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationCellReturnType<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationCellReturnType<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildReturnType<CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseGridNavigationCellReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "UseGridNavigationCellReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationCellSingleSelectionContext:interface"
     },
     "containerKey": "UseGridNavigationCellSingleSelectionContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationCellSingleSelectionContext extends UseGridNavigationCellContext, UseSingleSelectionContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationCellSingleSelectionContext extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellContext:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionContext:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationCellSingleSelectionContext extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellContext:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationCellContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionContext:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseGridNavigationCellSingleSelectionContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseGridNavigationCellSingleSelectionContext",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationParameters:interface"
     },
     "containerKey": "UseGridNavigationParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationParameters<ParentOrChildElement extends Element, RowElement extends Element, CellElement extends Element, M extends GridChildRowInfo<RowElement, CellElement>> extends OmitStrong<UseListNavigationParameters<ParentOrChildElement, RowElement, M>, \"linearNavigationParameters\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationParameters<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, RowElement, M>, \"linearNavigationParameters\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationParameters<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, RowElement, M>, \"linearNavigationParameters\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationParameters<ParentOrChildElement, RowElement, M>, \"linearNavigationParameters\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, RowElement, M>, \"linearNavigationParameters\">"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 10
        }
       }
      }
     ],
     "displayName": "UseGridNavigationParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "UseGridNavigationParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationParameters#gridNavigationParameters:member"
       },
       "displayName": "gridNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "gridNavigationParameters: {\n        onTabbableColumnChange: OnPassiveStateChange<number | null, Event> | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "gridNavigationParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onTabbableColumnChange: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": "> | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "gridNavigationParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onTabbableColumnChange: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<number | null, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Event:interface"
         },
         "kind": "Reference",
         "text": "Event"
        },
        {
         "kind": "Content",
         "text": "> | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "gridNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "gridNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onTabbableColumnChange: OnPassiveStateChange<number | null, Event> | null;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onTabbableColumnChange: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": "> | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationParameters#linearNavigationParameters:member"
       },
       "displayName": "linearNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "linearNavigationParameters: OmitStrong<UseListNavigationParameters<ParentOrChildElement, RowElement, M>[\"linearNavigationParameters\"], \"arrowKeyDirection\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "linearNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, RowElement, M>[\"linearNavigationParameters\"], \"arrowKeyDirection\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "linearNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationParameters"
        },
        {
         "kind": "Content",
         "text": "<ParentOrChildElement, RowElement, M>[\"linearNavigationParameters\"], \"arrowKeyDirection\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "linearNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "linearNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationParameters<ParentOrChildElement, RowElement, M>[\"linearNavigationParameters\"], \"arrowKeyDirection\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, RowElement, M>[\"linearNavigationParameters\"], \"arrowKeyDirection\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationReturnType:interface"
     },
     "containerKey": "UseGridNavigationReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationReturnType<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends GridChildRowInfo<RowElement, CellElement>, CM extends GridChildCellInfo<CellElement>> extends OmitStrong<UseListNavigationReturnType<ParentOrRowElement, RowElement, RM>, \"context\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationReturnType<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, RM>, \"context\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationReturnType<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, RM>, \"context\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationReturnType<ParentOrRowElement, RowElement, RM>, \"context\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, RM>, \"context\">"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 13
        }
       }
      }
     ],
     "displayName": "UseGridNavigationReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "UseGridNavigationReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseGridNavigationRowContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationRowContext:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationRowContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationRowContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigationRow:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigationRow|Function|1",
     "displayName": "useGridNavigationRow",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigationRow<RowElement extends Element, CellElement extends Element, RM extends GridChildRowInfo<RowElement, CellElement>, CM extends GridChildCellInfo<CellElement>>({ context: { rovingTabIndexContext: contextRTI, typeaheadNavigationContext: contextTN, gridNavigationRowContext: { setTabbableRow, getCurrentTabbableColumn, setCurrentTabbableColumn } }, linearNavigationParameters, rovingTabIndexParameters: { untabbable: rowIsUntabbableAndSoAreCells, initiallyTabbedIndex, onTabbableIndexChange, ...void4 }, info: managedChildParameters, managedChildrenReturn, refElementReturn, textContentParameters, typeaheadNavigationParameters, ...void1 }: UseGridNavigationRowParameters<RowElement, CellElement, RM, CM>): UseGridNavigationRowReturnType<RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigationRow<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "RovingTabIndexChildContext#rovingTabIndexContext"
        },
        "kind": "Reference",
        "text": "rovingTabIndexContext"
       },
       {
        "kind": "Content",
        "text": ": contextRTI, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationContext#typeaheadNavigationContext"
        },
        "kind": "Reference",
        "text": "typeaheadNavigationContext"
       },
       {
        "kind": "Content",
        "text": ": contextTN, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowContext#gridNavigationRowContext"
        },
        "kind": "Reference",
        "text": "gridNavigationRowContext"
       },
       {
        "kind": "Content",
        "text": ": { setTabbableRow, getCurrentTabbableColumn, setCurrentTabbableColumn } }, linearNavigationParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowParameters#rovingTabIndexParameters"
        },
        "kind": "Reference",
        "text": "rovingTabIndexParameters"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "untabbable"
        },
        "kind": "Reference",
        "text": "untabbable"
       },
       {
        "kind": "Content",
        "text": ": rowIsUntabbableAndSoAreCells, initiallyTabbedIndex, onTabbableIndexChange, ...void4 }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "info"
        },
        "kind": "Reference",
        "text": "info"
       },
       {
        "kind": "Content",
        "text": ": managedChildParameters, managedChildrenReturn, refElementReturn, textContentParameters, typeaheadNavigationParameters, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationRowParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 31,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigationRow",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ context: { rovingTabIndexContext: contextRTI, typeaheadNavigationContext: contextTN, gridNavigationRowContext: { setTabbableRow, getCurrentTabbableColumn, setCurrentTabbableColumn } }, linearNavigationParameters, rovingTabIndexParameters: { untabbable: rowIsUntabbableAndSoAreCells, initiallyTabbedIndex, onTabbableIndexChange, ...void4 }, info: managedChildParameters, managedChildrenReturn, refElementReturn, textContentParameters, typeaheadNavigationParameters, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationRowParameters<RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 27,
         "startIndex": 25
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationRowReturnType<RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 30,
       "startIndex": 28
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigationRow<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "RovingTabIndexChildContext#rovingTabIndexContext"
       },
       "kind": "Reference",
       "text": "rovingTabIndexContext"
      },
      {
       "kind": "Content",
       "text": ": contextRTI, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationContext#typeaheadNavigationContext"
       },
       "kind": "Reference",
       "text": "typeaheadNavigationContext"
      },
      {
       "kind": "Content",
       "text": ": contextTN, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowContext#gridNavigationRowContext"
       },
       "kind": "Reference",
       "text": "gridNavigationRowContext"
      },
      {
       "kind": "Content",
       "text": ": { setTabbableRow, getCurrentTabbableColumn, setCurrentTabbableColumn } }, linearNavigationParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowParameters#rovingTabIndexParameters"
       },
       "kind": "Reference",
       "text": "rovingTabIndexParameters"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "untabbable"
       },
       "kind": "Reference",
       "text": "untabbable"
      },
      {
       "kind": "Content",
       "text": ": rowIsUntabbableAndSoAreCells, initiallyTabbedIndex, onTabbableIndexChange, ...void4 }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "info"
       },
       "kind": "Reference",
       "text": "info"
      },
      {
       "kind": "Content",
       "text": ": managedChildParameters, managedChildrenReturn, refElementReturn, textContentParameters, typeaheadNavigationParameters, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationRowParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationRowReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationRowContext:interface"
     },
     "containerKey": "UseGridNavigationRowContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationRowContext extends UseListNavigationContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationRowContext extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationContext:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationRowContext extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationContext:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "UseGridNavigationRowContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "UseGridNavigationRowContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowContext#gridNavigationRowContext:member"
       },
       "displayName": "gridNavigationRowContext",
       "excerpt": {
        "isEmpty": false,
        "text": "gridNavigationRowContext: {\n        setTabbableRow: SetTabbableIndex;\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: PassiveStateUpdater<number | null, Event>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "gridNavigationRowContext: "
         },
         {
          "kind": "Content",
          "text": "{\n        setTabbableRow: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ">;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "gridNavigationRowContext: "
        },
        {
         "kind": "Content",
         "text": "{\n        setTabbableRow: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetTabbableIndex:type"
         },
         "kind": "Reference",
         "text": "SetTabbableIndex"
        },
        {
         "kind": "Content",
         "text": ";\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PassiveStateUpdater:type"
         },
         "kind": "Reference",
         "text": "PassiveStateUpdater"
        },
        {
         "kind": "Content",
         "text": "<number | null, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Event:interface"
         },
         "kind": "Reference",
         "text": "Event"
        },
        {
         "kind": "Content",
         "text": ">;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "gridNavigationRowContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "gridNavigationRowContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        setTabbableRow: SetTabbableIndex;\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: PassiveStateUpdater<number | null, Event>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        setTabbableRow: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        getCurrentTabbableColumn: () => (number | null);\n        setCurrentTabbableColumn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ">;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationRowParameters:interface"
     },
     "containerKey": "UseGridNavigationRowParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationRowParameters<RowElement extends Element, CellElement extends Element, RM extends GridChildRowInfo<RowElement, CellElement>, CM extends GridChildCellInfo<CellElement>> extends OmitStrong<UseListNavigationChildParameters<RowElement, RM>, \"context\">, OmitStrong<UseListNavigationParameters<RowElement, CellElement, CM>, \"refElementReturn\" | \"rovingTabIndexParameters\" | \"linearNavigationParameters\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationRowParameters<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, RM>, \"context\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, CM>, \"refElementReturn\" | \"rovingTabIndexParameters\" | \"linearNavigationParameters\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationRowParameters<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, RM>, \"context\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, CM>, \"refElementReturn\" | \"rovingTabIndexParameters\" | \"linearNavigationParameters\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationChildParameters<RowElement, RM>, \"context\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, RM>, \"context\">"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 11
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationParameters<RowElement, CellElement, CM>, \"refElementReturn\" | \"rovingTabIndexParameters\" | \"linearNavigationParameters\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>, \"refElementReturn\" | \"rovingTabIndexParameters\" | \"linearNavigationParameters\">"
         }
        ],
        "tokenRange": {
         "endIndex": 20,
         "startIndex": 16
        }
       }
      }
     ],
     "displayName": "UseGridNavigationRowParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "UseGridNavigationRowParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseGridNavigationRowContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationRowContext:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationRowContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationRowContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowParameters#linearNavigationParameters:member"
       },
       "displayName": "linearNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "linearNavigationParameters: OmitStrong<UseListNavigationParameters<RowElement, CellElement, CM>[\"linearNavigationParameters\"], \"arrowKeyDirection\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "linearNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>[\"linearNavigationParameters\"], \"arrowKeyDirection\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "linearNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationParameters"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement, CM>[\"linearNavigationParameters\"], \"arrowKeyDirection\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "linearNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "linearNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationParameters<RowElement, CellElement, CM>[\"linearNavigationParameters\"], \"arrowKeyDirection\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>[\"linearNavigationParameters\"], \"arrowKeyDirection\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowParameters#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: Pick<UseManagedChildrenReturnType<CM>[\"managedChildrenReturn\"], \"getChildren\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<CM>[\"managedChildrenReturn\"], \"getChildren\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<CM>[\"managedChildrenReturn\"], \"getChildren\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseManagedChildrenReturnType<CM>[\"managedChildrenReturn\"], \"getChildren\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<CM>[\"managedChildrenReturn\"], \"getChildren\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowParameters#rovingTabIndexParameters:member"
       },
       "displayName": "rovingTabIndexParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexParameters: OmitStrong<UseListNavigationParameters<RowElement, CellElement, CM>[\"rovingTabIndexParameters\"], \"focusSelfParent\" | \"untabbableBehavior\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>[\"rovingTabIndexParameters\"], \"focusSelfParent\" | \"untabbableBehavior\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationParameters:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationParameters"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement, CM>[\"rovingTabIndexParameters\"], \"focusSelfParent\" | \"untabbableBehavior\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationParameters<RowElement, CellElement, CM>[\"rovingTabIndexParameters\"], \"focusSelfParent\" | \"untabbableBehavior\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>[\"rovingTabIndexParameters\"], \"focusSelfParent\" | \"untabbableBehavior\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "(These are the parameters for the row controlling the cells, not any other combination of parent/child/row/cell)",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 40
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationRowReturnType:interface"
     },
     "containerKey": "UseGridNavigationRowReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationRowReturnType<RowElement extends Element, CellElement extends Element, RM extends GridChildRowInfo<RowElement, CellElement>, CM extends GridChildCellInfo<CellElement>> extends UseListNavigationChildReturnType<RowElement, RM>, OmitStrong<UseListNavigationReturnType<RowElement, CellElement, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"rovingTabIndexReturn\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationRowReturnType<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, RM>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"rovingTabIndexReturn\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationRowReturnType<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, RM>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"rovingTabIndexReturn\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildReturnType<RowElement, RM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, RM>"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 11
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationReturnType<RowElement, CellElement, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"rovingTabIndexReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>, \"propsStableParentOrChild\" | \"propsParent\" | \"context\" | \"rovingTabIndexReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 14
        }
       }
      }
     ],
     "displayName": "UseGridNavigationRowReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx",
     "isExported": true,
     "name": "UseGridNavigationRowReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseGridNavigationCellContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseGridNavigationCellContext:interface"
         },
         "kind": "Reference",
         "text": "UseGridNavigationCellContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowReturnType#gridNavigationRowParameters:member"
       },
       "displayName": "gridNavigationRowParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "gridNavigationRowParameters: Pick<GridChildRowInfo<RowElement, CellElement>, \"focusSelf\" | \"setTabbableColumnIndex\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "gridNavigationRowParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>, \"focusSelf\" | \"setTabbableColumnIndex\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "gridNavigationRowParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "GridChildRowInfo:interface"
         },
         "kind": "Reference",
         "text": "GridChildRowInfo"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement>, \"focusSelf\" | \"setTabbableColumnIndex\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "gridNavigationRowParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "gridNavigationRowParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<GridChildRowInfo<RowElement, CellElement>, \"focusSelf\" | \"setTabbableColumnIndex\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>, \"focusSelf\" | \"setTabbableColumnIndex\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowReturnType#rovingTabIndexReturn:member"
       },
       "displayName": "rovingTabIndexReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexReturn: OmitStrong<UseListNavigationReturnType<RowElement, CellElement, CM>[\"rovingTabIndexReturn\"], \"focusSelf\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>[\"rovingTabIndexReturn\"], \"focusSelf\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OmitStrong:type"
         },
         "kind": "Reference",
         "text": "OmitStrong"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationReturnType"
        },
        {
         "kind": "Content",
         "text": "<RowElement, CellElement, CM>[\"rovingTabIndexReturn\"], \"focusSelf\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseListNavigationReturnType<RowElement, CellElement, CM>[\"rovingTabIndexReturn\"], \"focusSelf\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>[\"rovingTabIndexReturn\"], \"focusSelf\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationRowSingleSelectionContext:interface"
     },
     "containerKey": "UseGridNavigationRowSingleSelectionContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationRowSingleSelectionContext extends UseGridNavigationRowContext, UseSingleSelectionContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationRowSingleSelectionContext extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowContext:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationRowContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionContext:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationRowSingleSelectionContext extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowContext:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationRowContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionContext:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationRowContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowContext:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseGridNavigationRowSingleSelectionContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseGridNavigationRowSingleSelectionContext",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigationSingleSelection:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigationSingleSelection|Function|1",
     "displayName": "useGridNavigationSingleSelection",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigationSingleSelection<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectChildCellInfo<CellElement>>({ gridNavigationParameters, linearNavigationParameters, rovingTabIndexParameters, managedChildrenReturn, typeaheadNavigationParameters, singleSelectionParameters, refElementReturn, ...void2 }: UseGridNavigationSingleSelectionParameters<ParentOrRowElement, RowElement, CellElement, RM>): UseGridNavigationSingleSelectionReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigationSingleSelection<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ gridNavigationParameters, linearNavigationParameters, rovingTabIndexParameters, managedChildrenReturn, typeaheadNavigationParameters, singleSelectionParameters, refElementReturn, ...void2 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigationSingleSelection",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ gridNavigationParameters, linearNavigationParameters, rovingTabIndexParameters, managedChildrenReturn, typeaheadNavigationParameters, singleSelectionParameters, refElementReturn, ...void2 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionParameters<ParentOrRowElement, RowElement, CellElement, RM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 13
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationSingleSelectionReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 16
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigationSingleSelection<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ gridNavigationParameters, linearNavigationParameters, rovingTabIndexParameters, managedChildrenReturn, typeaheadNavigationParameters, singleSelectionParameters, refElementReturn, ...void2 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigationSingleSelectionCell:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigationSingleSelectionCell|Function|1",
     "displayName": "useGridNavigationSingleSelectionCell",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigationSingleSelectionCell<CellElement extends Element, CM extends GridSingleSelectChildCellInfo<CellElement>>(p: UseGridNavigationSingleSelectionCellParameters<any, CellElement, CM>): UseGridNavigationSingleSelectionCellReturnType<CellElement, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigationSingleSelectionCell<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">(p: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionCellParameters"
       },
       {
        "kind": "Content",
        "text": "<any, CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigationSingleSelectionCell",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "p",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionCellParameters<any, CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionCellParameters"
         },
         {
          "kind": "Content",
          "text": "<any, CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationSingleSelectionCellReturnType<CellElement, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigationSingleSelectionCell<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">(p: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionCellParameters"
      },
      {
       "kind": "Content",
       "text": "<any, CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionCellReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionCellReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionCellParameters:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionCellParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionCellParameters<RowElement extends Element, CellElement extends Element, CM extends GridSingleSelectChildCellInfo<CellElement>> extends UseGridNavigationCellParameters<RowElement, CellElement, CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionCellParameters<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionCellParameters<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationCellParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellParameters<RowElement, CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionCellParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionCellParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionCellReturnType:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionCellReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionCellReturnType<CellElement extends Element, CM extends GridSingleSelectChildCellInfo<CellElement>> extends UseGridNavigationCellReturnType<CellElement, CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionCellReturnType<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionCellReturnType<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationCellReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellReturnType<CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellReturnType"
         },
         {
          "kind": "Content",
          "text": "<CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionCellReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionCellReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionParameters:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionParameters<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectChildRowInfo<RowElement, CellElement>> extends ExtendMerge<UseGridNavigationParameters<ParentOrRowElement, RowElement, CellElement, RM>, OmitStrong<UseSingleSelectionParameters<ParentOrRowElement, RowElement, RM>, \"rovingTabIndexReturn\">> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionParameters<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, RM>, \"rovingTabIndexReturn\">>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionParameters<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, RM>, \"rovingTabIndexReturn\">>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseGridNavigationParameters<ParentOrRowElement, RowElement, CellElement, RM>, OmitStrong<UseSingleSelectionParameters<ParentOrRowElement, RowElement, RM>, \"rovingTabIndexReturn\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, RM>, \"rovingTabIndexReturn\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 10
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionReturnType:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionReturnType<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectChildCellInfo<CellElement>> extends ExtendMerge<UseGridNavigationReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>, UseSingleSelectionReturnType<RowElement, RM>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionReturnType<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, RM>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 20,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionReturnType<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, RM>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseGridNavigationReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>, UseSingleSelectionReturnType<RowElement, RM>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, RM>>"
         }
        ],
        "tokenRange": {
         "endIndex": 19,
         "startIndex": 13
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigationSingleSelectionRow:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigationSingleSelectionRow|Function|1",
     "displayName": "useGridNavigationSingleSelectionRow",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigationSingleSelectionRow<RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectChildCellInfo<CellElement>>({ info: mcp1, linearNavigationParameters, managedChildrenReturn, refElementReturn, rovingTabIndexParameters, textContentParameters, typeaheadNavigationParameters, context: { gridNavigationRowContext, rovingTabIndexContext, singleSelectionContext, typeaheadNavigationContext }, ...void1 }: UseGridNavigationSingleSelectionRowParameters<RowElement, CellElement, RM, CM>): UseGridNavigationSingleSelectionRowReturnType<RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigationSingleSelectionRow<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "info"
        },
        "kind": "Reference",
        "text": "info"
       },
       {
        "kind": "Content",
        "text": ": mcp1, linearNavigationParameters, managedChildrenReturn, refElementReturn, rovingTabIndexParameters, textContentParameters, typeaheadNavigationParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { gridNavigationRowContext, rovingTabIndexContext, singleSelectionContext, typeaheadNavigationContext }, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionRowParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionRowParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigationSingleSelectionRow",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info: mcp1, linearNavigationParameters, managedChildrenReturn, refElementReturn, rovingTabIndexParameters, textContentParameters, typeaheadNavigationParameters, context: { gridNavigationRowContext, rovingTabIndexContext, singleSelectionContext, typeaheadNavigationContext }, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionRowParameters<RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 15
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationSingleSelectionRowReturnType<RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 20,
       "startIndex": 18
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigationSingleSelectionRow<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "info"
       },
       "kind": "Reference",
       "text": "info"
      },
      {
       "kind": "Content",
       "text": ": mcp1, linearNavigationParameters, managedChildrenReturn, refElementReturn, rovingTabIndexParameters, textContentParameters, typeaheadNavigationParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { gridNavigationRowContext, rovingTabIndexContext, singleSelectionContext, typeaheadNavigationContext }, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionRowParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionRowParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionRowReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionRowReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionRowParameters:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionRowParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionRowParameters<RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectChildCellInfo<CellElement>> extends ExtendMerge<UseGridNavigationRowParameters<RowElement, CellElement, RM, CM>, UseSingleSelectionChildParameters<RowElement, RM>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionRowParameters<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationRowParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, RM>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionRowParameters<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationRowParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, RM>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseGridNavigationRowParameters<RowElement, CellElement, RM, CM>, UseSingleSelectionChildParameters<RowElement, RM>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, RM>>"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionRowParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionRowParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionRowReturnType:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionRowReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionRowReturnType<RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectChildCellInfo<CellElement>> extends ExtendMerge<UseGridNavigationRowReturnType<RowElement, CellElement, RM, CM>, UseSingleSelectionChildReturnType<RowElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionRowReturnType<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionRowReturnType<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationRowReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationRowReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseGridNavigationRowReturnType<RowElement, CellElement, RM, CM>, UseSingleSelectionChildReturnType<RowElement>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationRowReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationRowReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement>>"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionRowReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionRowReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigationSingleSelectionSortable:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigationSingleSelectionSortable|Function|1",
     "displayName": "useGridNavigationSingleSelectionSortable",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigationSingleSelectionSortable<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectSortableChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectSortableChildCellInfo<CellElement>>({ rearrangeableChildrenParameters, sortableChildrenParameters, linearNavigationParameters, managedChildrenReturn, ...gridNavigationSingleSelectionParameters }: UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement, RowElement, CellElement, RM>): UseGridNavigationSingleSelectionSortableReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigationSingleSelectionSortable<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">({ rearrangeableChildrenParameters, sortableChildrenParameters, linearNavigationParameters, managedChildrenReturn, ...gridNavigationSingleSelectionParameters }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigationSingleSelectionSortable",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ rearrangeableChildrenParameters, sortableChildrenParameters, linearNavigationParameters, managedChildrenReturn, ...gridNavigationSingleSelectionParameters }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement, RowElement, CellElement, RM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 13
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationSingleSelectionSortableReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 16
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigationSingleSelectionSortable<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">({ rearrangeableChildrenParameters, sortableChildrenParameters, linearNavigationParameters, managedChildrenReturn, ...gridNavigationSingleSelectionParameters }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigationSingleSelectionSortableCell:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigationSingleSelectionSortableCell|Function|1",
     "displayName": "useGridNavigationSingleSelectionSortableCell",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigationSingleSelectionSortableCell<CellElement extends Element, CM extends GridSingleSelectSortableChildCellInfo<CellElement>>(p: UseGridNavigationSingleSelectionSortableCellParameters<any, CellElement, CM>): UseGridNavigationSingleSelectionSortableCellReturnType<CellElement, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigationSingleSelectionSortableCell<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">(p: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableCellParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableCellParameters"
       },
       {
        "kind": "Content",
        "text": "<any, CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigationSingleSelectionSortableCell",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "p",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionSortableCellParameters<any, CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableCellParameters"
         },
         {
          "kind": "Content",
          "text": "<any, CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationSingleSelectionSortableCellReturnType<CellElement, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigationSingleSelectionSortableCell<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">(p: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableCellParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableCellParameters"
      },
      {
       "kind": "Content",
       "text": "<any, CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableCellReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableCellReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionSortableCellParameters:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionSortableCellParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionSortableCellParameters<RowElement extends Element, CellElement extends Element, CM extends GridSingleSelectSortableChildCellInfo<CellElement>> extends UseGridNavigationCellParameters<RowElement, CellElement, CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionSortableCellParameters<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionSortableCellParameters<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationCellParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellParameters<RowElement, CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionSortableCellParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionSortableCellParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionSortableCellReturnType:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionSortableCellReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionSortableCellReturnType<CellElement extends Element, CM extends GridSingleSelectSortableChildCellInfo<CellElement>> extends UseGridNavigationCellReturnType<CellElement, CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionSortableCellReturnType<CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationCellReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationCellReturnType"
       },
       {
        "kind": "Content",
        "text": "<CellElement, CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionSortableCellReturnType<CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationCellReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationCellReturnType"
      },
      {
       "kind": "Content",
       "text": "<CellElement, CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationCellReturnType<CellElement, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationCellReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationCellReturnType"
         },
         {
          "kind": "Content",
          "text": "<CellElement, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionSortableCellReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionSortableCellReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionSortableParameters:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionSortableParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, M extends GridSingleSelectChildRowInfo<RowElement, CellElement>> extends ExtendMerge<OmitTargeted<UseGridNavigationSingleSelectionParameters<ParentOrRowElement, RowElement, CellElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, UseSortableChildrenParameters<M>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "OmitTargeted:type"
        },
        "kind": "Reference",
        "text": "OmitTargeted"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "<M>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionSortableParameters<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "OmitTargeted:type"
       },
       "kind": "Reference",
       "text": "OmitTargeted"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "<M>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<OmitTargeted<UseGridNavigationSingleSelectionParameters<ParentOrRowElement, RowElement, CellElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, UseSortableChildrenParameters<M>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "OmitTargeted:type"
          },
          "kind": "Reference",
          "text": "OmitTargeted"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<M>>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 10
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionSortableParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionSortableParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionSortableReturnType:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionSortableReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionSortableReturnType<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectSortableChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectSortableChildCellInfo<CellElement>> extends UseGridNavigationSingleSelectionReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>, UseSortableChildrenReturnType<RM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionSortableReturnType<ParentOrRowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<RM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionSortableReturnType<ParentOrRowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": "<RM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionReturnType<ParentOrRowElement, RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrRowElement, RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 13
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSortableChildrenReturnType<RM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<RM>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 16
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionSortableReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionSortableReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrRowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useGridNavigationSingleSelectionSortableRow:function(1)"
     },
     "kind": "Function",
     "containerKey": "useGridNavigationSingleSelectionSortableRow|Function|1",
     "displayName": "useGridNavigationSingleSelectionSortableRow",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useGridNavigationSingleSelectionSortableRow<RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectSortableChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectSortableChildCellInfo<CellElement>>(p: UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>): UseGridNavigationSingleSelectionSortableRowReturnType<RowElement, CellElement, RM, CM>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useGridNavigationSingleSelectionSortableRow<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": ">(p: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableRowParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 17,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useGridNavigationSingleSelectionSortableRow",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "p",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionSortableRowParameters<RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionSortableRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 11
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseGridNavigationSingleSelectionSortableRowReturnType<RowElement, CellElement, RM, CM>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 14
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useGridNavigationSingleSelectionSortableRow<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": ">(p: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableRowParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionSortableRowReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionSortableRowParameters:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionSortableRowParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionSortableRowParameters<RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectChildCellInfo<CellElement>> extends UseGridNavigationSingleSelectionRowParameters<RowElement, CellElement, RM, CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionSortableRowParameters<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionRowParameters:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionRowParameters"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionSortableRowParameters<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionRowParameters:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionRowParameters"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionRowParameters<RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionRowParameters:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionRowParameters"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionSortableRowParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionSortableRowParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseGridNavigationSingleSelectionSortableRowReturnType:interface"
     },
     "containerKey": "UseGridNavigationSingleSelectionSortableRowReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseGridNavigationSingleSelectionSortableRowReturnType<RowElement extends Element, CellElement extends Element, RM extends GridSingleSelectSortableChildRowInfo<RowElement, CellElement>, CM extends GridSingleSelectChildCellInfo<CellElement>> extends UseGridNavigationSingleSelectionRowReturnType<RowElement, CellElement, RM, CM> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseGridNavigationSingleSelectionSortableRowReturnType<RowElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", CellElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", RM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectSortableChildRowInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectSortableChildRowInfo"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement>"
       },
       {
        "kind": "Content",
        "text": ", CM extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "GridSingleSelectChildCellInfo:interface"
        },
        "kind": "Reference",
        "text": "GridSingleSelectChildCellInfo"
       },
       {
        "kind": "Content",
        "text": "<CellElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseGridNavigationSingleSelectionRowReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseGridNavigationSingleSelectionRowReturnType"
       },
       {
        "kind": "Content",
        "text": "<RowElement, CellElement, RM, CM>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseGridNavigationSingleSelectionSortableRowReturnType<RowElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", CellElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", RM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectSortableChildRowInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectSortableChildRowInfo"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement>"
      },
      {
       "kind": "Content",
       "text": ", CM extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "GridSingleSelectChildCellInfo:interface"
       },
       "kind": "Reference",
       "text": "GridSingleSelectChildCellInfo"
      },
      {
       "kind": "Content",
       "text": "<CellElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseGridNavigationSingleSelectionRowReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseGridNavigationSingleSelectionRowReturnType"
      },
      {
       "kind": "Content",
       "text": "<RowElement, CellElement, RM, CM>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseGridNavigationSingleSelectionRowReturnType<RowElement, CellElement, RM, CM>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseGridNavigationSingleSelectionRowReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseGridNavigationSingleSelectionRowReturnType"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement, RM, CM>"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseGridNavigationSingleSelectionSortableRowReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-grid-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseGridNavigationSingleSelectionSortableRowReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RowElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CellElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectSortableChildRowInfo<RowElement, CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectSortableChildRowInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectSortableChildRowInfo"
         },
         {
          "kind": "Content",
          "text": "<RowElement, CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "RM"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "GridSingleSelectChildCellInfo<CellElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GridSingleSelectChildCellInfo:interface"
          },
          "kind": "Reference",
          "text": "GridSingleSelectChildCellInfo"
         },
         {
          "kind": "Content",
          "text": "<CellElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "CM"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useHasCurrentFocus:function(1)"
     },
     "kind": "Function",
     "containerKey": "useHasCurrentFocus|Function|1",
     "displayName": "useHasCurrentFocus",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useHasCurrentFocus<T extends Element>(args: UseHasCurrentFocusParameters<T>): UseHasCurrentFocusReturnType<T>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useHasCurrentFocus<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">(args: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseHasCurrentFocusParameters:interface"
        },
        "kind": "Reference",
        "text": "UseHasCurrentFocusParameters"
       },
       {
        "kind": "Content",
        "text": "<T>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseHasCurrentFocusReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseHasCurrentFocusReturnType"
       },
       {
        "kind": "Content",
        "text": "<T>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useHasCurrentFocus",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "args",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseHasCurrentFocusParameters<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseHasCurrentFocusReturnType<T>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseHasCurrentFocusReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseHasCurrentFocusReturnType"
       },
       {
        "kind": "Content",
        "text": "<T>"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 6
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useHasCurrentFocus<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">(args: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasCurrentFocusParameters:interface"
       },
       "kind": "Reference",
       "text": "UseHasCurrentFocusParameters"
      },
      {
       "kind": "Content",
       "text": "<T>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasCurrentFocusReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseHasCurrentFocusReturnType"
      },
      {
       "kind": "Content",
       "text": "<T>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseHasCurrentFocusParameters:interface"
     },
     "containerKey": "UseHasCurrentFocusParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseHasCurrentFocusParameters<T extends Node> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseHasCurrentFocusParameters<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Node:interface"
        },
        "kind": "Reference",
        "text": "Node"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseHasCurrentFocusParameters<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Node:interface"
       },
       "kind": "Reference",
       "text": "Node"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseHasCurrentFocusParameters",
     "fileUrlPath": "src/observers/use-has-current-focus.tsx",
     "isExported": true,
     "name": "UseHasCurrentFocusParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasCurrentFocusParameters#hasCurrentFocusParameters:member"
       },
       "displayName": "hasCurrentFocusParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "hasCurrentFocusParameters: {\n        onCurrentFocusedChanged?: Nullable<OnPassiveStateChange<boolean, FocusEventType<T>>>;\n        onCurrentFocusedInnerChanged?: Nullable<OnPassiveStateChange<boolean, FocusEventType<T>>>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasCurrentFocusParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onCurrentFocusedChanged?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "FocusEventType:type"
          },
          "kind": "Reference",
          "text": "FocusEventType"
         },
         {
          "kind": "Content",
          "text": "<T>>>;\n        onCurrentFocusedInnerChanged?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "FocusEventType:type"
          },
          "kind": "Reference",
          "text": "FocusEventType"
         },
         {
          "kind": "Content",
          "text": "<T>>>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasCurrentFocusParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onCurrentFocusedChanged?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<boolean, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "FocusEventType:type"
         },
         "kind": "Reference",
         "text": "FocusEventType"
        },
        {
         "kind": "Content",
         "text": "<T>>>;\n        onCurrentFocusedInnerChanged?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<boolean, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "FocusEventType:type"
         },
         "kind": "Reference",
         "text": "FocusEventType"
        },
        {
         "kind": "Content",
         "text": "<T>>>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasCurrentFocusParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasCurrentFocusParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onCurrentFocusedChanged?: Nullable<OnPassiveStateChange<boolean, FocusEventType<T>>>;\n        onCurrentFocusedInnerChanged?: Nullable<OnPassiveStateChange<boolean, FocusEventType<T>>>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onCurrentFocusedChanged?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "FocusEventType:type"
          },
          "kind": "Reference",
          "text": "FocusEventType"
         },
         {
          "kind": "Content",
          "text": "<T>>>;\n        onCurrentFocusedInnerChanged?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "FocusEventType:type"
          },
          "kind": "Reference",
          "text": "FocusEventType"
         },
         {
          "kind": "Content",
          "text": "<T>>>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasCurrentFocusParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Required<Pick<UseRefElementReturnType<T>[\"refElementReturn\"], \"getElement\">>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Required:type"
          },
          "kind": "Reference",
          "text": "Required"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<T>[\"refElementReturn\"], \"getElement\">>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Required:type"
         },
         "kind": "Reference",
         "text": "Required"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<T>[\"refElementReturn\"], \"getElement\">>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Required<Pick<UseRefElementReturnType<T>[\"refElementReturn\"], \"getElement\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Required:type"
          },
          "kind": "Reference",
          "text": "Required"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<T>[\"refElementReturn\"], \"getElement\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Node",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Node:interface"
          },
          "kind": "Reference",
          "text": "Node"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseHasCurrentFocusReturnType:interface"
     },
     "containerKey": "UseHasCurrentFocusReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseHasCurrentFocusReturnType<E extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseHasCurrentFocusReturnType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseHasCurrentFocusReturnType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseHasCurrentFocusReturnType",
     "fileUrlPath": "src/observers/use-has-current-focus.tsx",
     "isExported": true,
     "name": "UseHasCurrentFocusReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasCurrentFocusReturnType#hasCurrentFocusReturn:member"
       },
       "displayName": "hasCurrentFocusReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "hasCurrentFocusReturn: {\n        propsStable: ElementProps<E>;\n        getCurrentFocused(): boolean;\n        getCurrentFocusedInner(): boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasCurrentFocusReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        propsStable: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>;\n        getCurrentFocused(): boolean;\n        getCurrentFocusedInner(): boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasCurrentFocusReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        propsStable: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<E>;\n        getCurrentFocused(): boolean;\n        getCurrentFocusedInner(): boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasCurrentFocusReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasCurrentFocusReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        propsStable: ElementProps<E>;\n        getCurrentFocused(): boolean;\n        getCurrentFocusedInner(): boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        propsStable: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>;\n        getCurrentFocused(): boolean;\n        getCurrentFocusedInner(): boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useHasLastFocus:function(1)"
     },
     "kind": "Function",
     "containerKey": "useHasLastFocus|Function|1",
     "displayName": "useHasLastFocus",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useHasLastFocus<T extends Node>(args: UseHasLastFocusParameters<T>): UseHasLastFocusReturnType;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useHasLastFocus<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Node:interface"
        },
        "kind": "Reference",
        "text": "Node"
       },
       {
        "kind": "Content",
        "text": ">(args: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseHasLastFocusParameters:interface"
        },
        "kind": "Reference",
        "text": "UseHasLastFocusParameters"
       },
       {
        "kind": "Content",
        "text": "<T>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseHasLastFocusReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseHasLastFocusReturnType"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useHasLastFocus",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "args",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseHasLastFocusParameters<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasLastFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseHasLastFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseHasLastFocusReturnType",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseHasLastFocusReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseHasLastFocusReturnType"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 6
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Node",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Node:interface"
          },
          "kind": "Reference",
          "text": "Node"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useHasLastFocus<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Node:interface"
       },
       "kind": "Reference",
       "text": "Node"
      },
      {
       "kind": "Content",
       "text": ">(args: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasLastFocusParameters:interface"
       },
       "kind": "Reference",
       "text": "UseHasLastFocusParameters"
      },
      {
       "kind": "Content",
       "text": "<T>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasLastFocusReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseHasLastFocusReturnType"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseHasLastFocusParameters:interface"
     },
     "containerKey": "UseHasLastFocusParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseHasLastFocusParameters<T extends Node> extends UseActiveElementParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseHasLastFocusParameters<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Node:interface"
        },
        "kind": "Reference",
        "text": "Node"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseActiveElementParameters:interface"
        },
        "kind": "Reference",
        "text": "UseActiveElementParameters"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseHasLastFocusParameters<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Node:interface"
       },
       "kind": "Reference",
       "text": "Node"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseActiveElementParameters:interface"
       },
       "kind": "Reference",
       "text": "UseActiveElementParameters"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseActiveElementParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseActiveElementParameters:interface"
          },
          "kind": "Reference",
          "text": "UseActiveElementParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseHasLastFocusParameters",
     "fileUrlPath": "src/observers/use-has-last-focus.tsx",
     "isExported": true,
     "name": "UseHasLastFocusParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasLastFocusParameters#hasLastFocusParameters:member"
       },
       "displayName": "hasLastFocusParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "hasLastFocusParameters: {\n        onLastFocusedChanged?: Nullable<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n        onLastFocusedInnerChanged?: Nullable<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasLastFocusParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onLastFocusedChanged?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n        onLastFocusedInnerChanged?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasLastFocusParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onLastFocusedChanged?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n        onLastFocusedInnerChanged?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasLastFocusParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasLastFocusParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onLastFocusedChanged?: Nullable<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n        onLastFocusedInnerChanged?: Nullable<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onLastFocusedChanged?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n        onLastFocusedInnerChanged?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<((focused: boolean, prevFocused: boolean | undefined) => void)>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasLastFocusParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Pick<UseRefElementReturnType<T>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<T>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<T>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<T>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<T>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Node",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Node:interface"
          },
          "kind": "Reference",
          "text": "Node"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseHasLastFocusReturnType:interface"
     },
     "containerKey": "UseHasLastFocusReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseHasLastFocusReturnType extends UseActiveElementReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseHasLastFocusReturnType extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseActiveElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseActiveElementReturnType"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseHasLastFocusReturnType extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseActiveElementReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseActiveElementReturnType"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseActiveElementReturnType",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseActiveElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseActiveElementReturnType"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "UseHasLastFocusReturnType",
     "fileUrlPath": "src/observers/use-has-last-focus.tsx",
     "isExported": true,
     "name": "UseHasLastFocusReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseHasLastFocusReturnType#hasLastFocusReturn:member"
       },
       "displayName": "hasLastFocusReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "hasLastFocusReturn: {\n        getLastFocused(): boolean;\n        getLastFocusedInner(): boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasLastFocusReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getLastFocused(): boolean;\n        getLastFocusedInner(): boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasLastFocusReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getLastFocused(): boolean;\n        getLastFocusedInner(): boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasLastFocusReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasLastFocusReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getLastFocused(): boolean;\n        getLastFocusedInner(): boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getLastFocused(): boolean;\n        getLastFocusedInner(): boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useHideScroll:function(1)"
     },
     "kind": "Function",
     "containerKey": "useHideScroll|Function|1",
     "displayName": "useHideScroll",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useHideScroll(hideScroll: boolean): {\n    getScrollbarWidth: () => number | null;\n    getScrollbarHeight: () => number | null;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useHideScroll(hideScroll: "
       },
       {
        "kind": "Content",
        "text": "boolean"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "{\n    getScrollbarWidth: () => number | null;\n    getScrollbarHeight: () => number | null;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useHideScroll",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "hideScroll",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "tsdocParamBlock": {
        "parameterName": "hideScroll",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "{\n    getScrollbarWidth: () => number | null;\n    getScrollbarHeight: () => number | null;\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "{\n    getScrollbarWidth: () => number | null;\n    getScrollbarHeight: () => number | null;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows for hiding the scroll bar of the root HTML element without shifting the layout of the page more than adding a fow pixels of padding to the root element if necessary.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 64
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "hideScroll",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useHideScroll(hideScroll: "
      },
      {
       "kind": "Content",
       "text": "boolean"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "{\n    getScrollbarWidth: () => number | null;\n    getScrollbarHeight: () => number | null;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useImperativeProps:function(1)"
     },
     "kind": "Function",
     "containerKey": "useImperativeProps|Function|1",
     "displayName": "useImperativeProps",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useImperativeProps<E extends Element>({ refElementReturn: { getElement } }: UseImperativePropsParameters<E>): {\n    imperativeHandle: ImperativeHandle<E>;\n    props: ElementProps<E>;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useImperativeProps<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseImperativePropsParameters#refElementReturn"
        },
        "kind": "Reference",
        "text": "refElementReturn"
       },
       {
        "kind": "Content",
        "text": ": { getElement } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseImperativePropsParameters:interface"
        },
        "kind": "Reference",
        "text": "UseImperativePropsParameters"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "{\n    imperativeHandle: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ImperativeHandle:interface"
        },
        "kind": "Reference",
        "text": "ImperativeHandle"
       },
       {
        "kind": "Content",
        "text": "<E>;\n    props: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<E>;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useImperativeProps",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ refElementReturn: { getElement } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseImperativePropsParameters<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseImperativePropsParameters:interface"
          },
          "kind": "Reference",
          "text": "UseImperativePropsParameters"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "{\n    imperativeHandle: ImperativeHandle<E>;\n    props: ElementProps<E>;\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "{\n    imperativeHandle: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ImperativeHandle:interface"
        },
        "kind": "Reference",
        "text": "ImperativeHandle"
       },
       {
        "kind": "Content",
        "text": "<E>;\n    props: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<E>;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 8
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useImperativeProps<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseImperativePropsParameters#refElementReturn"
       },
       "kind": "Reference",
       "text": "refElementReturn"
      },
      {
       "kind": "Content",
       "text": ": { getElement } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseImperativePropsParameters:interface"
       },
       "kind": "Reference",
       "text": "UseImperativePropsParameters"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "{\n    imperativeHandle: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ImperativeHandle:interface"
       },
       "kind": "Reference",
       "text": "ImperativeHandle"
      },
      {
       "kind": "Content",
       "text": "<E>;\n    props: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<E>;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseImperativePropsParameters:interface"
     },
     "containerKey": "UseImperativePropsParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseImperativePropsParameters<E extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseImperativePropsParameters<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseImperativePropsParameters<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseImperativePropsParameters",
     "fileUrlPath": "src/dom-helpers/use-imperative-props.tsx",
     "isExported": true,
     "name": "UseImperativePropsParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseImperativePropsParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Pick<UseRefElementReturnType<E>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<E>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<E>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<E>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<E>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useInterval:function(1)"
     },
     "kind": "Function",
     "containerKey": "useInterval|Function|1",
     "displayName": "useInterval",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useInterval({ interval, callback }: UseIntervalParameters): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useInterval({ interval, callback }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseIntervalParameters:interface"
        },
        "kind": "Reference",
        "text": "UseIntervalParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useInterval",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ interval, callback }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseIntervalParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseIntervalParameters:interface"
          },
          "kind": "Reference",
          "text": "UseIntervalParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useInterval({ interval, callback }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseIntervalParameters:interface"
       },
       "kind": "Reference",
       "text": "UseIntervalParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseIntervalParameters:interface"
     },
     "containerKey": "UseIntervalParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseIntervalParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseIntervalParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseIntervalParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseIntervalParameters",
     "fileUrlPath": "src/timing/use-interval.tsx",
     "isExported": true,
     "name": "UseIntervalParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseIntervalParameters#callback:member"
       },
       "displayName": "callback",
       "excerpt": {
        "isEmpty": false,
        "text": "callback: () => void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "callback: "
         },
         {
          "kind": "Content",
          "text": "() => void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "callback: "
        },
        {
         "kind": "Content",
         "text": "() => void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "callback|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "callback",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => void"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Called ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 2
             }
            },
            {
             "kind": "CodeSpan",
             "code": "timeout"
            },
            {
             "kind": "PlainText",
             "text": " ms after mount, or the last change to ",
             "textExcerpt": {
              "startIndex": 5,
              "endIndex": 23
             }
            },
            {
             "kind": "CodeSpan",
             "code": "triggerIndex"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 26,
              "endIndex": 27
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseIntervalParameters#interval:member"
       },
       "displayName": "interval",
       "excerpt": {
        "isEmpty": false,
        "text": "interval: Nullable<number>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "interval: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "interval: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "interval|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "interval",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Nullable<number>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The number of ms to wait before invoking ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 16
             }
            },
            {
             "kind": "CodeSpan",
             "code": "callback"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 19,
              "endIndex": 20
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useLayoutEffectDebug:function(1)"
     },
     "kind": "Function",
     "containerKey": "useLayoutEffectDebug|Function|1",
     "displayName": "useLayoutEffectDebug",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useLayoutEffectDebug<I extends Inputs>(effect: (prev: I | undefined, changes: EffectChange<I, number>[]) => (void | (() => void)), inputs?: I): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useLayoutEffectDebug<I extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-hooks!",
         "symbol": "Inputs:type"
        },
        "kind": "Reference",
        "text": "Inputs"
       },
       {
        "kind": "Content",
        "text": ">(effect: "
       },
       {
        "kind": "Content",
        "text": "(prev: I | undefined, changes: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "EffectChange:interface"
        },
        "kind": "Reference",
        "text": "EffectChange"
       },
       {
        "kind": "Content",
        "text": "<I, number>[]) => (void | (() => void))"
       },
       {
        "kind": "Content",
        "text": ", inputs?: "
       },
       {
        "kind": "Content",
        "text": "I"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useLayoutEffectDebug",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "effect",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "(prev: I | undefined, changes: EffectChange<I, number>[]) => (void | (() => void))",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(prev: I | undefined, changes: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "EffectChange:interface"
          },
          "kind": "Reference",
          "text": "EffectChange"
         },
         {
          "kind": "Content",
          "text": "<I, number>[]) => (void | (() => void))"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 3
        }
       },
       "tsdocParamBlock": {
        "parameterName": "effect",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "inputs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "I",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "I"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       },
       "tsdocParamBlock": {
        "parameterName": "inputs",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Inputs",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-hooks!",
           "symbol": "Inputs:type"
          },
          "kind": "Reference",
          "text": "Inputs"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "I"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Wrap the native ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 6
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useLayoutEffect"
          },
          {
           "kind": "PlainText",
           "text": " to add arguments that allow accessing the previous value as the first argument, as well as the changes that caused the hook to be called as the second argument.",
           "textExcerpt": {
            "startIndex": 9,
            "endIndex": 69
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "effect",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "inputs",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 2,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useLayoutEffectDebug<I extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-hooks!",
        "symbol": "Inputs:type"
       },
       "kind": "Reference",
       "text": "Inputs"
      },
      {
       "kind": "Content",
       "text": ">(effect: "
      },
      {
       "kind": "Content",
       "text": "(prev: I | undefined, changes: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "EffectChange:interface"
       },
       "kind": "Reference",
       "text": "EffectChange"
      },
      {
       "kind": "Content",
       "text": "<I, number>[]) => (void | (() => void))"
      },
      {
       "kind": "Content",
       "text": ", inputs?: "
      },
      {
       "kind": "Content",
       "text": "I"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useLinearNavigation:function(1)"
     },
     "kind": "Function",
     "containerKey": "useLinearNavigation|Function|1",
     "displayName": "useLinearNavigation",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useLinearNavigation<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseLinearNavigationChildInfo<ChildElement>>({ rovingTabIndexReturn, linearNavigationParameters }: UseLinearNavigationParameters<ParentOrChildElement, ChildElement, M>): UseLinearNavigationReturnType<ParentOrChildElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useLinearNavigation<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLinearNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseLinearNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ rovingTabIndexReturn, linearNavigationParameters }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLinearNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseLinearNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLinearNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseLinearNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useLinearNavigation",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ rovingTabIndexReturn, linearNavigationParameters }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseLinearNavigationParameters<ParentOrChildElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLinearNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseLinearNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseLinearNavigationReturnType<ParentOrChildElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLinearNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseLinearNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseLinearNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLinearNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseLinearNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "When used in tandem with ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 10
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useRovingTabIndex"
          },
          {
           "kind": "PlainText",
           "text": ", allows control of the tabbable index with the arrow keys.",
           "textExcerpt": {
            "startIndex": 13,
            "endIndex": 35
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [
       {
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@see"
        },
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "PlainText",
             "text": "useListNavigation, which packages everything up together.",
             "textExcerpt": {
              "startIndex": 41,
              "endIndex": 54
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "kind": "Block"
       }
      ],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useLinearNavigation<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseLinearNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ rovingTabIndexReturn, linearNavigationParameters }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseLinearNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseLinearNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseLinearNavigationChildInfo:interface"
     },
     "containerKey": "UseLinearNavigationChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseLinearNavigationChildInfo<ChildElement extends Element> extends ManagedChildInfo<number> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseLinearNavigationChildInfo<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<number>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseLinearNavigationChildInfo<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<number>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<number>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<number>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseLinearNavigationChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-linear-navigation.tsx",
     "isExported": true,
     "name": "UseLinearNavigationChildInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseLinearNavigationParameters:interface"
     },
     "containerKey": "UseLinearNavigationParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseLinearNavigationParameters<ParentOrChildElement extends Element, ChildElement extends Element, _M extends UseLinearNavigationChildInfo<ChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseLinearNavigationParameters<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", _M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLinearNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseLinearNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseLinearNavigationParameters<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", _M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseLinearNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseLinearNavigationParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-linear-navigation.tsx",
     "isExported": true,
     "name": "UseLinearNavigationParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationParameters#linearNavigationParameters:member"
       },
       "displayName": "linearNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "linearNavigationParameters: {\n        isValid(i: number): boolean;\n        pageNavigationSize: number;\n        navigatePastStart: \"passthrough\" | \"wrap\" | (() => void);\n        navigatePastEnd: \"passthrough\" | \"wrap\" | (() => void);\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        getHighestIndex(): number;\n        arrowKeyDirection: \"horizontal\" | \"vertical\" | \"either\" | \"none\";\n        disableHomeEndKeys: boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "linearNavigationParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        isValid(i: number): boolean;\n        pageNavigationSize: number;\n        navigatePastStart: \"passthrough\" | \"wrap\" | (() => void);\n        navigatePastEnd: \"passthrough\" | \"wrap\" | (() => void);\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        getHighestIndex(): number;\n        arrowKeyDirection: \"horizontal\" | \"vertical\" | \"either\" | \"none\";\n        disableHomeEndKeys: boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "linearNavigationParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        isValid(i: number): boolean;\n        pageNavigationSize: number;\n        navigatePastStart: \"passthrough\" | \"wrap\" | (() => void);\n        navigatePastEnd: \"passthrough\" | \"wrap\" | (() => void);\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        getHighestIndex(): number;\n        arrowKeyDirection: \"horizontal\" | \"vertical\" | \"either\" | \"none\";\n        disableHomeEndKeys: boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "linearNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "linearNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        isValid(i: number): boolean;\n        pageNavigationSize: number;\n        navigatePastStart: \"passthrough\" | \"wrap\" | (() => void);\n        navigatePastEnd: \"passthrough\" | \"wrap\" | (() => void);\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        getHighestIndex(): number;\n        arrowKeyDirection: \"horizontal\" | \"vertical\" | \"either\" | \"none\";\n        disableHomeEndKeys: boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        isValid(i: number): boolean;\n        pageNavigationSize: number;\n        navigatePastStart: \"passthrough\" | \"wrap\" | (() => void);\n        navigatePastEnd: \"passthrough\" | \"wrap\" | (() => void);\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        getHighestIndex(): number;\n        arrowKeyDirection: \"horizontal\" | \"vertical\" | \"either\" | \"none\";\n        disableHomeEndKeys: boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationParameters#rovingTabIndexReturn:member"
       },
       "displayName": "rovingTabIndexReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexReturn: Pick<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement, UseRovingTabIndexChildInfo<ChildElement>>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexReturnType"
        },
        {
         "kind": "Content",
         "text": "<ParentOrChildElement, ChildElement, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexChildInfo"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement, UseRovingTabIndexChildInfo<ChildElement>>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseLinearNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLinearNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseLinearNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Arguments passed to the parent ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 10
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useLinearNavigation"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseLinearNavigationReturnType:interface"
     },
     "containerKey": "UseLinearNavigationReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseLinearNavigationReturnType<ParentOrChildElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseLinearNavigationReturnType<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseLinearNavigationReturnType<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseLinearNavigationReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-linear-navigation.tsx",
     "isExported": true,
     "name": "UseLinearNavigationReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationReturnType#linearNavigationReturn:member"
       },
       "displayName": "linearNavigationReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "linearNavigationReturn: {};",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "linearNavigationReturn: "
         },
         {
          "kind": "Content",
          "text": "{}"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "linearNavigationReturn: "
        },
        {
         "kind": "Content",
         "text": "{}"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "linearNavigationReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "linearNavigationReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{}",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{}"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationReturnType#propsStable:member"
       },
       "displayName": "propsStable",
       "excerpt": {
        "isEmpty": false,
        "text": "propsStable: ElementProps<ParentOrChildElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsStable: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsStable: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ParentOrChildElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsStable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsStable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ParentOrChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useListNavigation:function(1)"
     },
     "kind": "Function",
     "containerKey": "useListNavigation|Function|1",
     "displayName": "useListNavigation",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useListNavigation<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationChildInfo<ChildElement>>({ linearNavigationParameters, typeaheadNavigationParameters, rovingTabIndexParameters, managedChildrenReturn, refElementReturn, ...void1 }: UseListNavigationParameters<ParentOrChildElement, ChildElement, M>): UseListNavigationReturnType<ParentOrChildElement, ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useListNavigation<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ linearNavigationParameters, typeaheadNavigationParameters, rovingTabIndexParameters, managedChildrenReturn, refElementReturn, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useListNavigation",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ linearNavigationParameters, typeaheadNavigationParameters, rovingTabIndexParameters, managedChildrenReturn, refElementReturn, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationParameters<ParentOrChildElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseListNavigationReturnType<ParentOrChildElement, ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Implements proper keyboard navigation for components like listboxes, button groups, menus, etc.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 27
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "In the document order, there will be only one \"focused\" or \"tabbable\" element, making it act more like one complete unit in comparison to everything around it. Navigating forwards/backwards can be done with the arrow keys, Home/End keys, or any text for typeahead to focus the next item that matches.",
           "textExcerpt": {
            "startIndex": 29,
            "endIndex": 142
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useListNavigation<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ linearNavigationParameters, typeaheadNavigationParameters, rovingTabIndexParameters, managedChildrenReturn, refElementReturn, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useListNavigationChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useListNavigationChild|Function|1",
     "displayName": "useListNavigationChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useListNavigationChild<ChildElement extends Element, M extends UseListNavigationChildInfo<ChildElement>>({ info, context, refElementReturn, textContentParameters, ...void2 }: UseListNavigationChildParameters<ChildElement, M>): UseListNavigationChildReturnType<ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useListNavigationChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ info, context, refElementReturn, textContentParameters, ...void2 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useListNavigationChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info, context, refElementReturn, textContentParameters, ...void2 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseListNavigationChildReturnType<ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useListNavigationChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ info, context, refElementReturn, textContentParameters, ...void2 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationChildInfo:interface"
     },
     "containerKey": "UseListNavigationChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationChildInfo<TabbableChildElement extends Element> extends UseRovingTabIndexChildInfo<TabbableChildElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationChildInfo<TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationChildInfo<TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseListNavigationChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-partial.tsx",
     "isExported": true,
     "name": "UseListNavigationChildInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationChildParameters:interface"
     },
     "containerKey": "UseListNavigationChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationChildParameters<ChildElement extends Element, M extends UseListNavigationChildInfo<ChildElement>> extends ExtendMerge<UseRovingTabIndexChildParameters<ChildElement, M>, UseTypeaheadNavigationChildParameters<ChildElement, M>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationChildParameters<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationChildParameters<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseRovingTabIndexChildParameters<ChildElement, M>, UseTypeaheadNavigationChildParameters<ChildElement, M>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseListNavigationChildParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-partial.tsx",
     "isExported": true,
     "name": "UseListNavigationChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseListNavigationContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationContext:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationChildReturnType:interface"
     },
     "containerKey": "UseListNavigationChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationChildReturnType<ChildElement extends Element, M extends UseListNavigationChildInfo<ChildElement>> extends UseRovingTabIndexChildReturnType<ChildElement, M>, UseTypeaheadNavigationChildReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationChildReturnType<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationChildReturnType<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationChildReturnType"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildReturnType<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationChildReturnType",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationChildReturnType"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 9
        }
       }
      }
     ],
     "displayName": "UseListNavigationChildReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-partial.tsx",
     "isExported": true,
     "name": "UseListNavigationChildReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationContext:interface"
     },
     "containerKey": "UseListNavigationContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationContext extends RovingTabIndexChildContext, UseTypeaheadNavigationContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationContext extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "RovingTabIndexChildContext:interface"
        },
        "kind": "Reference",
        "text": "RovingTabIndexChildContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationContext:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationContext extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "RovingTabIndexChildContext:interface"
       },
       "kind": "Reference",
       "text": "RovingTabIndexChildContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationContext:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "RovingTabIndexChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RovingTabIndexChildContext:interface"
          },
          "kind": "Reference",
          "text": "RovingTabIndexChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseListNavigationContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-partial.tsx",
     "isExported": true,
     "name": "UseListNavigationContext",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationParameters:interface"
     },
     "containerKey": "UseListNavigationParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationParameters<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationChildInfo<ChildElement>> extends UseRovingTabIndexParameters<ParentOrChildElement, ChildElement, M>, OmitStrong<UseTypeaheadNavigationParameters<ChildElement, M>, \"rovingTabIndexReturn\">, OmitStrong<UseLinearNavigationParameters<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationParameters<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>, \"rovingTabIndexReturn\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLinearNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseLinearNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationParameters<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>, \"rovingTabIndexReturn\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseLinearNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexParameters<ParentOrChildElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseTypeaheadNavigationParameters<ChildElement, M>, \"rovingTabIndexReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>, \"rovingTabIndexReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 11
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseLinearNavigationParameters<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLinearNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseLinearNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 20,
         "startIndex": 16
        }
       }
      }
     ],
     "displayName": "UseListNavigationParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-partial.tsx",
     "isExported": true,
     "name": "UseListNavigationParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": []
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "fromUserInteraction",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "Whether the user interacted with this child as a means of navigating to it. In that was the case, the child is also focused. Otherwise, focus moves as the browser determines.",
              "textExcerpt": {
               "startIndex": 7,
               "endIndex": 73
              }
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationReturnType:interface"
     },
     "containerKey": "UseListNavigationReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationReturnType<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationChildInfo<ChildElement>> extends OmitStrong<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement, M>, \"props\">, OmitStrong<UseTypeaheadNavigationReturnType<ParentOrChildElement>, \"propsStable\">, OmitStrong<UseLinearNavigationReturnType<ParentOrChildElement>, \"propsStable\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationReturnType<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>, \"props\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement>, \"propsStable\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLinearNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseLinearNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement>, \"propsStable\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 23,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationReturnType<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>, \"props\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement>, \"propsStable\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLinearNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseLinearNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement>, \"propsStable\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement, M>, \"props\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>, \"props\">"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 8
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseTypeaheadNavigationReturnType<ParentOrChildElement>, \"propsStable\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>, \"propsStable\">"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 13
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseLinearNavigationReturnType<ParentOrChildElement>, \"propsStable\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLinearNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseLinearNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>, \"propsStable\">"
         }
        ],
        "tokenRange": {
         "endIndex": 22,
         "startIndex": 18
        }
       }
      }
     ],
     "displayName": "UseListNavigationReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-partial.tsx",
     "isExported": true,
     "name": "UseListNavigationReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseListNavigationContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseListNavigationContext:interface"
         },
         "kind": "Reference",
         "text": "UseListNavigationContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationReturnType#propsParent:member"
       },
       "displayName": "propsParent",
       "excerpt": {
        "isEmpty": false,
        "text": "propsParent: ElementProps<ParentOrChildElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsParent: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsParent: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ParentOrChildElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsParent|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsParent",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ParentOrChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationReturnType#propsStableParentOrChild:member"
       },
       "displayName": "propsStableParentOrChild",
       "excerpt": {
        "isEmpty": false,
        "text": "propsStableParentOrChild: ElementProps<ParentOrChildElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsStableParentOrChild: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsStableParentOrChild: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ParentOrChildElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsStableParentOrChild|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsStableParentOrChild",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ParentOrChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useListNavigationSingleSelection:function(1)"
     },
     "kind": "Function",
     "containerKey": "useListNavigationSingleSelection|Function|1",
     "displayName": "useListNavigationSingleSelection",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useListNavigationSingleSelection<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationSingleSelectionChildInfo<ChildElement>>({ linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, singleSelectionParameters, managedChildrenReturn, refElementReturn, ...void3 }: UseListNavigationSingleSelectionParameters<ParentOrChildElement, ChildElement, M>): UseListNavigationSingleSelectionReturnType<ParentOrChildElement, ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useListNavigationSingleSelection<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, singleSelectionParameters, managedChildrenReturn, refElementReturn, ...void3 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useListNavigationSingleSelection",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, singleSelectionParameters, managedChildrenReturn, refElementReturn, ...void3 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionParameters<ParentOrChildElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseListNavigationSingleSelectionReturnType<ParentOrChildElement, ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useListNavigationSingleSelection<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, singleSelectionParameters, managedChildrenReturn, refElementReturn, ...void3 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useListNavigationSingleSelectionChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useListNavigationSingleSelectionChild|Function|1",
     "displayName": "useListNavigationSingleSelectionChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useListNavigationSingleSelectionChild<ChildElement extends Element, M extends UseListNavigationSingleSelectionChildInfo<ChildElement>>({ info, context, refElementReturn, textContentParameters, ...void1 }: UseListNavigationSingleSelectionChildParameters<ChildElement, M>): UseListNavigationSingleSelectionChildReturnType<ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useListNavigationSingleSelectionChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ info, context, refElementReturn, textContentParameters, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useListNavigationSingleSelectionChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info, context, refElementReturn, textContentParameters, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseListNavigationSingleSelectionChildReturnType<ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useListNavigationSingleSelectionChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ info, context, refElementReturn, textContentParameters, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionChildContext:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionChildContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionChildContext extends UseListNavigationContext, UseSingleSelectionContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionChildContext extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationContext:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationContext"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionContext:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionContext"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionChildContext extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationContext:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationContext"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionContext:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionContext"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionChildContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionChildContext",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionChildInfo<TabbableChildElement extends Element> extends ExtendMerge<UseListNavigationChildInfo<TabbableChildElement>, UseSingleSelectionChildInfo<TabbableChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionChildInfo<TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionChildInfo<TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseListNavigationChildInfo<TabbableChildElement>, UseSingleSelectionChildInfo<TabbableChildElement>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionChildInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionChildParameters:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionChildParameters<ChildElement extends Element, M extends UseListNavigationSingleSelectionChildInfo<ChildElement>> extends ExtendMerge<UseListNavigationChildParameters<ChildElement, M>, UseSingleSelectionChildParameters<ChildElement, M>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionChildParameters<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionChildParameters<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseListNavigationChildParameters<ChildElement, M>, UseSingleSelectionChildParameters<ChildElement, M>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionChildParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionChildParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionChildReturnType:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionChildReturnType<ChildElement extends Element, M extends UseListNavigationSingleSelectionChildInfo<ChildElement>> extends ExtendMerge<UseListNavigationChildReturnType<ChildElement, M>, UseSingleSelectionChildReturnType<ChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionChildReturnType<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionChildReturnType<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseListNavigationChildReturnType<ChildElement, M>, UseSingleSelectionChildReturnType<ChildElement>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionChildReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionChildReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionParameters:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionParameters<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationSingleSelectionChildInfo<ChildElement>> extends ExtendMerge<UseListNavigationParameters<ParentOrChildElement, ChildElement, M>, OmitStrong<UseSingleSelectionParameters<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionParameters<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 17,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionParameters<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseListNavigationParameters<ParentOrChildElement, ChildElement, M>, OmitStrong<UseSingleSelectionParameters<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 16,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionReturnType:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionReturnType<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationSingleSelectionChildInfo<ChildElement>> extends ExtendMerge<UseListNavigationReturnType<ParentOrChildElement, ChildElement, M>, UseSingleSelectionReturnType<ChildElement, M>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionReturnType<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionReturnType<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<UseListNavigationReturnType<ParentOrChildElement, ChildElement, M>, UseSingleSelectionReturnType<ChildElement, M>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>>"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useListNavigationSingleSelectionSortable:function(1)"
     },
     "kind": "Function",
     "containerKey": "useListNavigationSingleSelectionSortable|Function|1",
     "displayName": "useListNavigationSingleSelectionSortable",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useListNavigationSingleSelectionSortable<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationSingleSelectionSortableChildInfo<ChildElement>>({ linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, singleSelectionParameters, managedChildrenReturn, rearrangeableChildrenParameters, sortableChildrenParameters, refElementReturn, ...void3 }: UseListNavigationSingleSelectionSortableParameters<ParentOrChildElement, ChildElement, M>): UseListNavigationSingleSelectionSortableReturnType<ParentOrChildElement, ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useListNavigationSingleSelectionSortable<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, singleSelectionParameters, managedChildrenReturn, rearrangeableChildrenParameters, sortableChildrenParameters, refElementReturn, ...void3 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useListNavigationSingleSelectionSortable",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, singleSelectionParameters, managedChildrenReturn, rearrangeableChildrenParameters, sortableChildrenParameters, refElementReturn, ...void3 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionSortableParameters<ParentOrChildElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseListNavigationSingleSelectionSortableReturnType<ParentOrChildElement, ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionSortableChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useListNavigationSingleSelectionSortable<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ linearNavigationParameters, rovingTabIndexParameters, typeaheadNavigationParameters, singleSelectionParameters, managedChildrenReturn, rearrangeableChildrenParameters, sortableChildrenParameters, refElementReturn, ...void3 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useListNavigationSingleSelectionSortableChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useListNavigationSingleSelectionSortableChild|Function|1",
     "displayName": "useListNavigationSingleSelectionSortableChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useListNavigationSingleSelectionSortableChild<ChildElement extends Element, M extends UseListNavigationSingleSelectionSortableChildInfo<ChildElement>>({ info, context, refElementReturn, textContentParameters, ...void1 }: UseListNavigationSingleSelectionSortableChildParameters<ChildElement, M>): UseListNavigationSingleSelectionSortableChildReturnType<ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useListNavigationSingleSelectionSortableChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ info, context, refElementReturn, textContentParameters, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useListNavigationSingleSelectionSortableChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info, context, refElementReturn, textContentParameters, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionSortableChildParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseListNavigationSingleSelectionSortableChildReturnType<ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionSortableChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useListNavigationSingleSelectionSortableChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ info, context, refElementReturn, textContentParameters, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionSortableChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionSortableChildInfo<TabbableChildElement extends Element> extends UseListNavigationSingleSelectionChildInfo<TabbableChildElement>, UseSortableChildInfo ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionSortableChildInfo<TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionSortableChildInfo<TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSortableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionSortableChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionSortableChildInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionSortableChildParameters:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionSortableChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionSortableChildParameters<ChildElement extends Element, M extends UseListNavigationSingleSelectionSortableChildInfo<ChildElement>> extends UseListNavigationSingleSelectionChildParameters<ChildElement, M> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionSortableChildParameters<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionSortableChildParameters<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionSortableChildParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionSortableChildParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionSortableChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionSortableChildReturnType:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionSortableChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionSortableChildReturnType<ChildElement extends Element, M extends UseListNavigationSingleSelectionSortableChildInfo<ChildElement>> extends UseListNavigationSingleSelectionChildReturnType<ChildElement, M> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionSortableChildReturnType<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionSortableChildReturnType<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildReturnType<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionSortableChildReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionSortableChildReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionSortableChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionSortableParameters:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionSortableParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionSortableParameters<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationSingleSelectionChildInfo<ChildElement>> extends ExtendMerge<OmitTargeted<UseListNavigationSingleSelectionParameters<ParentOrChildElement, ChildElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, UseSortableChildrenParameters<M>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionSortableParameters<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ExtendMerge:type"
        },
        "kind": "Reference",
        "text": "ExtendMerge"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "OmitTargeted:type"
        },
        "kind": "Reference",
        "text": "OmitTargeted"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "<M>>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 17,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionSortableParameters<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ExtendMerge:type"
       },
       "kind": "Reference",
       "text": "ExtendMerge"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "OmitTargeted:type"
       },
       "kind": "Reference",
       "text": "OmitTargeted"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "<M>>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ExtendMerge<OmitTargeted<UseListNavigationSingleSelectionParameters<ParentOrChildElement, ChildElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, UseSortableChildrenParameters<M>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ExtendMerge:type"
          },
          "kind": "Reference",
          "text": "ExtendMerge"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "OmitTargeted:type"
          },
          "kind": "Reference",
          "text": "OmitTargeted"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>, \"linearNavigationParameters\", \"indexDemangler\" | \"indexMangler\">, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<M>>"
         }
        ],
        "tokenRange": {
         "endIndex": 16,
         "startIndex": 8
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionSortableParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionSortableParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseListNavigationSingleSelectionSortableReturnType:interface"
     },
     "containerKey": "UseListNavigationSingleSelectionSortableReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseListNavigationSingleSelectionSortableReturnType<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationSingleSelectionSortableChildInfo<ChildElement>> extends UseListNavigationSingleSelectionReturnType<ParentOrChildElement, ChildElement, M>, UseSortableChildrenReturnType<M> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseListNavigationSingleSelectionSortableReturnType<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseListNavigationSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseListNavigationSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseListNavigationSingleSelectionSortableReturnType<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseListNavigationSingleSelectionReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseListNavigationSingleSelectionReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionReturnType<ParentOrChildElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseSortableChildrenReturnType<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseListNavigationSingleSelectionSortableReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-list-navigation-single-selection-sortable.tsx",
     "isExported": true,
     "name": "UseListNavigationSingleSelectionSortableReturnType",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseListNavigationSingleSelectionSortableChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseListNavigationSingleSelectionSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseListNavigationSingleSelectionSortableChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useLocalHandler:function(1)"
     },
     "kind": "Function",
     "containerKey": "useLocalHandler|Function|1",
     "displayName": "useLocalHandler",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useLocalHandler<ElementType extends (HTMLElementTagNameMap[keyof HTMLElementTagNameMap] | SVGElementTagNameMap[keyof SVGElementTagNameMap])>(): <EventType extends \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onToggle\" | \"onFocus\" | \"onFocusCapture\" | \"onfocusin\" | \"onfocusinCapture\" | \"onfocusout\" | \"onfocusoutCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChange\" | \"onChangeCapture\" | \"onInput\" | \"onInputCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onSearch\" | \"onSearchCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onReset\" | \"onResetCapture\" | \"onFormData\" | \"onFormDataCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDblClick\" | \"onDblClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseEnterCapture\" | \"onMouseLeave\" | \"onMouseLeaveCapture\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\">(type: EventType, handler: NonNullable<JSX.DOMAttributes<ElementType>[EventType]>) => {\n    useLocalEventHandlerProps: (props: ElementProps<ElementType>) => ElementProps<ElementType>;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useLocalHandler<ElementType extends "
       },
       {
        "kind": "Content",
        "text": "("
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElementTagNameMap:interface"
        },
        "kind": "Reference",
        "text": "HTMLElementTagNameMap"
       },
       {
        "kind": "Content",
        "text": "[keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "HTMLElementTagNameMap:interface"
        },
        "kind": "Reference",
        "text": "HTMLElementTagNameMap"
       },
       {
        "kind": "Content",
        "text": "] | "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "SVGElementTagNameMap:interface"
        },
        "kind": "Reference",
        "text": "SVGElementTagNameMap"
       },
       {
        "kind": "Content",
        "text": "[keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "SVGElementTagNameMap:interface"
        },
        "kind": "Reference",
        "text": "SVGElementTagNameMap"
       },
       {
        "kind": "Content",
        "text": "])"
       },
       {
        "kind": "Content",
        "text": ">(): "
       },
       {
        "kind": "Content",
        "text": "<EventType extends \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onToggle\" | \"onFocus\" | \"onFocusCapture\" | \"onfocusin\" | \"onfocusinCapture\" | \"onfocusout\" | \"onfocusoutCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChange\" | \"onChangeCapture\" | \"onInput\" | \"onInputCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onSearch\" | \"onSearchCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onReset\" | \"onResetCapture\" | \"onFormData\" | \"onFormDataCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDblClick\" | \"onDblClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseEnterCapture\" | \"onMouseLeave\" | \"onMouseLeaveCapture\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\">(type: EventType, handler: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "NonNullable:type"
        },
        "kind": "Reference",
        "text": "NonNullable"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.DOMAttributes:interface"
        },
        "kind": "Reference",
        "text": "JSX.DOMAttributes"
       },
       {
        "kind": "Content",
        "text": "<ElementType>[EventType]>) => {\n    useLocalEventHandlerProps: (props: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<ElementType>) => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<ElementType>;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useLocalHandler",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "<EventType extends \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onToggle\" | \"onFocus\" | \"onFocusCapture\" | \"onfocusin\" | \"onfocusinCapture\" | \"onfocusout\" | \"onfocusoutCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChange\" | \"onChangeCapture\" | \"onInput\" | \"onInputCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onSearch\" | \"onSearchCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onReset\" | \"onResetCapture\" | \"onFormData\" | \"onFormDataCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDblClick\" | \"onDblClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseEnterCapture\" | \"onMouseLeave\" | \"onMouseLeaveCapture\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\">(type: EventType, handler: NonNullable<JSX.DOMAttributes<ElementType>[EventType]>) => {\n    useLocalEventHandlerProps: (props: ElementProps<ElementType>) => ElementProps<ElementType>;\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "<EventType extends \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onToggle\" | \"onFocus\" | \"onFocusCapture\" | \"onfocusin\" | \"onfocusinCapture\" | \"onfocusout\" | \"onfocusoutCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChange\" | \"onChangeCapture\" | \"onInput\" | \"onInputCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onSearch\" | \"onSearchCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onReset\" | \"onResetCapture\" | \"onFormData\" | \"onFormDataCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDblClick\" | \"onDblClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseEnterCapture\" | \"onMouseLeave\" | \"onMouseLeaveCapture\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\">(type: EventType, handler: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "NonNullable:type"
        },
        "kind": "Reference",
        "text": "NonNullable"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.DOMAttributes:interface"
        },
        "kind": "Reference",
        "text": "JSX.DOMAttributes"
       },
       {
        "kind": "Content",
        "text": "<ElementType>[EventType]>) => {\n    useLocalEventHandlerProps: (props: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<ElementType>) => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<ElementType>;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 20,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "(HTMLElementTagNameMap[keyof HTMLElementTagNameMap] | SVGElementTagNameMap[keyof SVGElementTagNameMap])",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "("
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLElementTagNameMap:interface"
          },
          "kind": "Reference",
          "text": "HTMLElementTagNameMap"
         },
         {
          "kind": "Content",
          "text": "[keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "HTMLElementTagNameMap:interface"
          },
          "kind": "Reference",
          "text": "HTMLElementTagNameMap"
         },
         {
          "kind": "Content",
          "text": "] | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "SVGElementTagNameMap:interface"
          },
          "kind": "Reference",
          "text": "SVGElementTagNameMap"
         },
         {
          "kind": "Content",
          "text": "[keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "SVGElementTagNameMap:interface"
          },
          "kind": "Reference",
          "text": "SVGElementTagNameMap"
         },
         {
          "kind": "Content",
          "text": "])"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ElementType"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "An alternative way to add an event handler to an element. Useful primarily when integrating 3rd party libraries that expect a generic \"add event handler\" function.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 55
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Returns a function that allows you to modify a set of props to apply this handler.",
           "textExcerpt": {
            "startIndex": 57,
            "endIndex": 89
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "For typing reasons, this function is split into two. Usage is like the following:",
           "textExcerpt": {
            "startIndex": 91,
            "endIndex": 121
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "code": "const { useLocalEventHandlerProps } = useLocalEventHandler<HTMLDivElement>()(\"onMouseDown\", e => {  });\nconst divProps = useLocalEventHandlerProps(props);\n",
         "kind": "FencedCode",
         "language": ""
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useLocalHandler<ElementType extends "
      },
      {
       "kind": "Content",
       "text": "("
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElementTagNameMap:interface"
       },
       "kind": "Reference",
       "text": "HTMLElementTagNameMap"
      },
      {
       "kind": "Content",
       "text": "[keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "HTMLElementTagNameMap:interface"
       },
       "kind": "Reference",
       "text": "HTMLElementTagNameMap"
      },
      {
       "kind": "Content",
       "text": "] | "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "SVGElementTagNameMap:interface"
       },
       "kind": "Reference",
       "text": "SVGElementTagNameMap"
      },
      {
       "kind": "Content",
       "text": "[keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "SVGElementTagNameMap:interface"
       },
       "kind": "Reference",
       "text": "SVGElementTagNameMap"
      },
      {
       "kind": "Content",
       "text": "])"
      },
      {
       "kind": "Content",
       "text": ">(): "
      },
      {
       "kind": "Content",
       "text": "<EventType extends \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onToggle\" | \"onFocus\" | \"onFocusCapture\" | \"onfocusin\" | \"onfocusinCapture\" | \"onfocusout\" | \"onfocusoutCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChange\" | \"onChangeCapture\" | \"onInput\" | \"onInputCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onSearch\" | \"onSearchCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onReset\" | \"onResetCapture\" | \"onFormData\" | \"onFormDataCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDblClick\" | \"onDblClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseEnterCapture\" | \"onMouseLeave\" | \"onMouseLeaveCapture\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\">(type: EventType, handler: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "NonNullable:type"
       },
       "kind": "Reference",
       "text": "NonNullable"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.DOMAttributes:interface"
       },
       "kind": "Reference",
       "text": "JSX.DOMAttributes"
      },
      {
       "kind": "Content",
       "text": "<ElementType>[EventType]>) => {\n    useLocalEventHandlerProps: (props: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<ElementType>) => "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<ElementType>;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useLogicalDirection:function(1)"
     },
     "kind": "Function",
     "containerKey": "useLogicalDirection|Function|1",
     "displayName": "useLogicalDirection",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useLogicalDirection({}: UseLogicalDirectionParameters): UseLogicalDirectionReturnType;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useLogicalDirection({}: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLogicalDirectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseLogicalDirectionParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLogicalDirectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseLogicalDirectionReturnType"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useLogicalDirection",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{}",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseLogicalDirectionParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLogicalDirectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseLogicalDirectionParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseLogicalDirectionReturnType",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLogicalDirectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseLogicalDirectionReturnType"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Inspects the element's style and determines the logical direction that text flows.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 26
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Certain CSS properties, like ",
           "textExcerpt": {
            "startIndex": 28,
            "endIndex": 37
           }
          },
          {
           "kind": "CodeSpan",
           "code": "block-size"
          },
          {
           "kind": "PlainText",
           "text": ", respect the current writing mode and text direction. But ",
           "textExcerpt": {
            "startIndex": 42,
            "endIndex": 63
           }
          },
          {
           "kind": "CodeSpan",
           "code": "transform"
          },
          {
           "kind": "PlainText",
           "text": ", ",
           "textExcerpt": {
            "startIndex": 66,
            "endIndex": 68
           }
          },
          {
           "kind": "CodeSpan",
           "code": "clip"
          },
          {
           "kind": "PlainText",
           "text": ", etc. don't.",
           "textExcerpt": {
            "startIndex": 71,
            "endIndex": 80
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "This is provided so that CSS properties can consistently use those logical properties.",
           "textExcerpt": {
            "startIndex": 82,
            "endIndex": 108
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "See https://drafts.csswg.org/css-writing-modes/#logical-to-physical",
           "textExcerpt": {
            "startIndex": 110,
            "endIndex": 134
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " An object containing the following functions: * ",
            "textExcerpt": {
             "startIndex": 138,
             "endIndex": 154
            }
           },
           {
            "kind": "CodeSpan",
            "code": "getLogicalDirection"
           },
           {
            "kind": "PlainText",
            "text": ": retrieves a ",
            "textExcerpt": {
             "startIndex": 157,
             "endIndex": 163
            }
           },
           {
            "kind": "CodeSpan",
            "code": "LogicalDirectionInfo"
           },
           {
            "kind": "PlainText",
            "text": " representing the current state of the element. (Function is constant between renders) * ",
            "textExcerpt": {
             "startIndex": 166,
             "endIndex": 196
            }
           },
           {
            "kind": "CodeSpan",
            "code": "convertElementSize"
           },
           {
            "kind": "PlainText",
            "text": ": When used in conjunction with ",
            "textExcerpt": {
             "startIndex": 199,
             "endIndex": 211
            }
           },
           {
            "kind": "CodeSpan",
            "code": "useElementSize"
           },
           {
            "kind": "PlainText",
            "text": ", allows you to retrieve the logical size of an element instead of the physical size. * ",
            "textExcerpt": {
             "startIndex": 214,
             "endIndex": 249
            }
           },
           {
            "kind": "CodeSpan",
            "code": "convertToLogicalOrientation"
           },
           {
            "kind": "PlainText",
            "text": ": Based on the current direction, converts \"horizontal\" or \"vertical\" to \"inline\" or \"block\". * ",
            "textExcerpt": {
             "startIndex": 252,
             "endIndex": 292
            }
           },
           {
            "kind": "CodeSpan",
            "code": "convertToPhysicalOrientation"
           },
           {
            "kind": "PlainText",
            "text": ": Based on the current direction, converts \"inline\" or \"block\" to \"horizontal\" or \"vertical\".",
            "textExcerpt": {
             "startIndex": 295,
             "endIndex": 332
            }
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useLogicalDirection({}: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLogicalDirectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseLogicalDirectionParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLogicalDirectionReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseLogicalDirectionReturnType"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseLogicalDirectionParameters:interface"
     },
     "containerKey": "UseLogicalDirectionParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseLogicalDirectionParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseLogicalDirectionParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseLogicalDirectionParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseLogicalDirectionParameters",
     "fileUrlPath": "src/observers/use-logical-direction.tsx",
     "isExported": true,
     "name": "UseLogicalDirectionParameters",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseLogicalDirectionReturnType:interface"
     },
     "containerKey": "UseLogicalDirectionReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseLogicalDirectionReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseLogicalDirectionReturnType "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseLogicalDirectionReturnType "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseLogicalDirectionReturnType",
     "fileUrlPath": "src/observers/use-logical-direction.tsx",
     "isExported": true,
     "name": "UseLogicalDirectionReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLogicalDirectionReturnType#logicalDirectionReturn:member"
       },
       "displayName": "logicalDirectionReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "logicalDirectionReturn: {\n        getLogicalDirectionInfo: (computedStyles: CSSStyleDeclaration) => LogicalDirectionInfo | null;\n        convertToLogicalSize: (computedStyles: CSSStyleDeclaration, elementSize: ElementSize, direction?: LogicalDirectionInfo | null | undefined) => LogicalElementSize | null;\n        convertToLogicalOrientation: (computedStyles: CSSStyleDeclaration, elementOrientation: PhysicalOrientation, direction?: LogicalDirectionInfo | null | undefined) => \"inline\" | \"block\";\n        convertToPhysicalOrientation: (computedStyles: CSSStyleDeclaration, elementOrientation: LogicalOrientation, direction?: LogicalDirectionInfo | null | undefined) => \"horizontal\" | \"vertical\";\n        convertToLogicalSide: (computedStyles: CSSStyleDeclaration, side: \"top\" | \"bottom\" | \"left\" | \"right\", direction?: LogicalDirectionInfo | null | undefined) => \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\";\n        convertToPhysicalSide: (computedStyles: CSSStyleDeclaration, side: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\", direction?: LogicalDirectionInfo | null | undefined) => \"top\" | \"bottom\" | \"left\" | \"right\";\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "logicalDirectionReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getLogicalDirectionInfo: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ") => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null;\n        convertToLogicalSize: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", elementSize: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementSize:interface"
          },
          "kind": "Reference",
          "text": "ElementSize"
         },
         {
          "kind": "Content",
          "text": ", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalElementSize:interface"
          },
          "kind": "Reference",
          "text": "LogicalElementSize"
         },
         {
          "kind": "Content",
          "text": " | null;\n        convertToLogicalOrientation: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", elementOrientation: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalOrientation:type"
          },
          "kind": "Reference",
          "text": "PhysicalOrientation"
         },
         {
          "kind": "Content",
          "text": ", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => \"inline\" | \"block\";\n        convertToPhysicalOrientation: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", elementOrientation: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalOrientation:type"
          },
          "kind": "Reference",
          "text": "LogicalOrientation"
         },
         {
          "kind": "Content",
          "text": ", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => \"horizontal\" | \"vertical\";\n        convertToLogicalSide: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", side: \"top\" | \"bottom\" | \"left\" | \"right\", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\";\n        convertToPhysicalSide: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", side: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => \"top\" | \"bottom\" | \"left\" | \"right\";\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 35,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "logicalDirectionReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getLogicalDirectionInfo: (computedStyles: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "CSSStyleDeclaration:interface"
         },
         "kind": "Reference",
         "text": "CSSStyleDeclaration"
        },
        {
         "kind": "Content",
         "text": ") => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "LogicalDirectionInfo:interface"
         },
         "kind": "Reference",
         "text": "LogicalDirectionInfo"
        },
        {
         "kind": "Content",
         "text": " | null;\n        convertToLogicalSize: (computedStyles: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "CSSStyleDeclaration:interface"
         },
         "kind": "Reference",
         "text": "CSSStyleDeclaration"
        },
        {
         "kind": "Content",
         "text": ", elementSize: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementSize:interface"
         },
         "kind": "Reference",
         "text": "ElementSize"
        },
        {
         "kind": "Content",
         "text": ", direction?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "LogicalDirectionInfo:interface"
         },
         "kind": "Reference",
         "text": "LogicalDirectionInfo"
        },
        {
         "kind": "Content",
         "text": " | null | undefined) => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "LogicalElementSize:interface"
         },
         "kind": "Reference",
         "text": "LogicalElementSize"
        },
        {
         "kind": "Content",
         "text": " | null;\n        convertToLogicalOrientation: (computedStyles: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "CSSStyleDeclaration:interface"
         },
         "kind": "Reference",
         "text": "CSSStyleDeclaration"
        },
        {
         "kind": "Content",
         "text": ", elementOrientation: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PhysicalOrientation:type"
         },
         "kind": "Reference",
         "text": "PhysicalOrientation"
        },
        {
         "kind": "Content",
         "text": ", direction?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "LogicalDirectionInfo:interface"
         },
         "kind": "Reference",
         "text": "LogicalDirectionInfo"
        },
        {
         "kind": "Content",
         "text": " | null | undefined) => \"inline\" | \"block\";\n        convertToPhysicalOrientation: (computedStyles: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "CSSStyleDeclaration:interface"
         },
         "kind": "Reference",
         "text": "CSSStyleDeclaration"
        },
        {
         "kind": "Content",
         "text": ", elementOrientation: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "LogicalOrientation:type"
         },
         "kind": "Reference",
         "text": "LogicalOrientation"
        },
        {
         "kind": "Content",
         "text": ", direction?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "LogicalDirectionInfo:interface"
         },
         "kind": "Reference",
         "text": "LogicalDirectionInfo"
        },
        {
         "kind": "Content",
         "text": " | null | undefined) => \"horizontal\" | \"vertical\";\n        convertToLogicalSide: (computedStyles: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "CSSStyleDeclaration:interface"
         },
         "kind": "Reference",
         "text": "CSSStyleDeclaration"
        },
        {
         "kind": "Content",
         "text": ", side: \"top\" | \"bottom\" | \"left\" | \"right\", direction?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "LogicalDirectionInfo:interface"
         },
         "kind": "Reference",
         "text": "LogicalDirectionInfo"
        },
        {
         "kind": "Content",
         "text": " | null | undefined) => \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\";\n        convertToPhysicalSide: (computedStyles: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "CSSStyleDeclaration:interface"
         },
         "kind": "Reference",
         "text": "CSSStyleDeclaration"
        },
        {
         "kind": "Content",
         "text": ", side: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\", direction?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "LogicalDirectionInfo:interface"
         },
         "kind": "Reference",
         "text": "LogicalDirectionInfo"
        },
        {
         "kind": "Content",
         "text": " | null | undefined) => \"top\" | \"bottom\" | \"left\" | \"right\";\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "logicalDirectionReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "logicalDirectionReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getLogicalDirectionInfo: (computedStyles: CSSStyleDeclaration) => LogicalDirectionInfo | null;\n        convertToLogicalSize: (computedStyles: CSSStyleDeclaration, elementSize: ElementSize, direction?: LogicalDirectionInfo | null | undefined) => LogicalElementSize | null;\n        convertToLogicalOrientation: (computedStyles: CSSStyleDeclaration, elementOrientation: PhysicalOrientation, direction?: LogicalDirectionInfo | null | undefined) => \"inline\" | \"block\";\n        convertToPhysicalOrientation: (computedStyles: CSSStyleDeclaration, elementOrientation: LogicalOrientation, direction?: LogicalDirectionInfo | null | undefined) => \"horizontal\" | \"vertical\";\n        convertToLogicalSide: (computedStyles: CSSStyleDeclaration, side: \"top\" | \"bottom\" | \"left\" | \"right\", direction?: LogicalDirectionInfo | null | undefined) => \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\";\n        convertToPhysicalSide: (computedStyles: CSSStyleDeclaration, side: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\", direction?: LogicalDirectionInfo | null | undefined) => \"top\" | \"bottom\" | \"left\" | \"right\";\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getLogicalDirectionInfo: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ") => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null;\n        convertToLogicalSize: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", elementSize: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementSize:interface"
          },
          "kind": "Reference",
          "text": "ElementSize"
         },
         {
          "kind": "Content",
          "text": ", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalElementSize:interface"
          },
          "kind": "Reference",
          "text": "LogicalElementSize"
         },
         {
          "kind": "Content",
          "text": " | null;\n        convertToLogicalOrientation: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", elementOrientation: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PhysicalOrientation:type"
          },
          "kind": "Reference",
          "text": "PhysicalOrientation"
         },
         {
          "kind": "Content",
          "text": ", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => \"inline\" | \"block\";\n        convertToPhysicalOrientation: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", elementOrientation: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalOrientation:type"
          },
          "kind": "Reference",
          "text": "LogicalOrientation"
         },
         {
          "kind": "Content",
          "text": ", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => \"horizontal\" | \"vertical\";\n        convertToLogicalSide: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", side: \"top\" | \"bottom\" | \"left\" | \"right\", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\";\n        convertToPhysicalSide: (computedStyles: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "CSSStyleDeclaration:interface"
          },
          "kind": "Reference",
          "text": "CSSStyleDeclaration"
         },
         {
          "kind": "Content",
          "text": ", side: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\", direction?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "LogicalDirectionInfo:interface"
          },
          "kind": "Reference",
          "text": "LogicalDirectionInfo"
         },
         {
          "kind": "Content",
          "text": " | null | undefined) => \"top\" | \"bottom\" | \"left\" | \"right\";\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 34,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**STABLE**",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 5
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useLostFocusDismiss:function(1)"
     },
     "kind": "Function",
     "containerKey": "useLostFocusDismiss|Function|1",
     "displayName": "useLostFocusDismiss",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useLostFocusDismiss<SourceElement extends Element | null, PopupElement extends Element>({ refElementPopupReturn: { getElement: getPopupElement, ...void3 }, refElementSourceReturn, lostFocusDismiss: { open, onClose }, ...void1 }: UseLostFocusDismissParameters<SourceElement, PopupElement>): UseLostFocusDismissReturnType<SourceElement, PopupElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useLostFocusDismiss<SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLostFocusDismissParameters#refElementPopupReturn"
        },
        "kind": "Reference",
        "text": "refElementPopupReturn"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "getElement"
        },
        "kind": "Reference",
        "text": "getElement"
       },
       {
        "kind": "Content",
        "text": ": getPopupElement, ...void3 }, refElementSourceReturn, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLostFocusDismissParameters#lostFocusDismiss"
        },
        "kind": "Reference",
        "text": "lostFocusDismiss"
       },
       {
        "kind": "Content",
        "text": ": { open, onClose }, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLostFocusDismissParameters:interface"
        },
        "kind": "Reference",
        "text": "UseLostFocusDismissParameters"
       },
       {
        "kind": "Content",
        "text": "<SourceElement, PopupElement>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLostFocusDismissReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseLostFocusDismissReturnType"
       },
       {
        "kind": "Content",
        "text": "<SourceElement, PopupElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useLostFocusDismiss",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ refElementPopupReturn: { getElement: getPopupElement, ...void3 }, refElementSourceReturn, lostFocusDismiss: { open, onClose }, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseLostFocusDismissParameters<SourceElement, PopupElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLostFocusDismissParameters:interface"
          },
          "kind": "Reference",
          "text": "UseLostFocusDismissParameters"
         },
         {
          "kind": "Content",
          "text": "<SourceElement, PopupElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 12
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseLostFocusDismissReturnType<SourceElement, PopupElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseLostFocusDismissReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseLostFocusDismissReturnType"
       },
       {
        "kind": "Content",
        "text": "<SourceElement, PopupElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 17,
       "startIndex": 15
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 4
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Handles events for dismiss events for things like popup menus or transient dialogs -- things where moving focus to a new area of the page means this component should close itself.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 63
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "param0",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useLostFocusDismiss<SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLostFocusDismissParameters#refElementPopupReturn"
       },
       "kind": "Reference",
       "text": "refElementPopupReturn"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "getElement"
       },
       "kind": "Reference",
       "text": "getElement"
      },
      {
       "kind": "Content",
       "text": ": getPopupElement, ...void3 }, refElementSourceReturn, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLostFocusDismissParameters#lostFocusDismiss"
       },
       "kind": "Reference",
       "text": "lostFocusDismiss"
      },
      {
       "kind": "Content",
       "text": ": { open, onClose }, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLostFocusDismissParameters:interface"
       },
       "kind": "Reference",
       "text": "UseLostFocusDismissParameters"
      },
      {
       "kind": "Content",
       "text": "<SourceElement, PopupElement>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLostFocusDismissReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseLostFocusDismissReturnType"
      },
      {
       "kind": "Content",
       "text": "<SourceElement, PopupElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseLostFocusDismissParameters:interface"
     },
     "containerKey": "UseLostFocusDismissParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseLostFocusDismissParameters<SourceElement extends Element | null, PopupElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseLostFocusDismissParameters<SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseLostFocusDismissParameters<SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseLostFocusDismissParameters",
     "fileUrlPath": "src/component-detail/use-dismiss.tsx",
     "isExported": true,
     "name": "UseLostFocusDismissParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLostFocusDismissParameters#lostFocusDismiss:member"
       },
       "displayName": "lostFocusDismiss",
       "excerpt": {
        "isEmpty": false,
        "text": "lostFocusDismiss: {\n        open: boolean;\n        onClose(): void;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "lostFocusDismiss: "
         },
         {
          "kind": "Content",
          "text": "{\n        open: boolean;\n        onClose(): void;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "lostFocusDismiss: "
        },
        {
         "kind": "Content",
         "text": "{\n        open: boolean;\n        onClose(): void;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "lostFocusDismiss|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "lostFocusDismiss",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        open: boolean;\n        onClose(): void;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        open: boolean;\n        onClose(): void;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLostFocusDismissParameters#refElementPopupReturn:member"
       },
       "displayName": "refElementPopupReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementPopupReturn: Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementPopupReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementPopupReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementPopupReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementPopupReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<PopupElement>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLostFocusDismissParameters#refElementSourceReturn:member"
       },
       "displayName": "refElementSourceReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementSourceReturn: Nullable<Pick<UseRefElementReturnType<NonNullable<SourceElement>>[\"refElementReturn\"], \"getElement\">>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementSourceReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<SourceElement>>[\"refElementReturn\"], \"getElement\">>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementSourceReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NonNullable:type"
         },
         "kind": "Reference",
         "text": "NonNullable"
        },
        {
         "kind": "Content",
         "text": "<SourceElement>>[\"refElementReturn\"], \"getElement\">>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementSourceReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementSourceReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Nullable<Pick<UseRefElementReturnType<NonNullable<SourceElement>>[\"refElementReturn\"], \"getElement\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<SourceElement>>[\"refElementReturn\"], \"getElement\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 4
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseLostFocusDismissReturnType:interface"
     },
     "containerKey": "UseLostFocusDismissReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseLostFocusDismissReturnType<_SourceElement extends Element | null, _PopupElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseLostFocusDismissReturnType<_SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", _PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseLostFocusDismissReturnType<_SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", _PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseLostFocusDismissReturnType",
     "fileUrlPath": "src/component-detail/use-dismiss.tsx",
     "isExported": true,
     "name": "UseLostFocusDismissReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseLostFocusDismissReturnType#activeElementParameters:member"
       },
       "displayName": "activeElementParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "activeElementParameters: Pick<UseActiveElementParameters[\"activeElementParameters\"], \"onLastActiveElementChange\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "activeElementParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseActiveElementParameters:interface"
          },
          "kind": "Reference",
          "text": "UseActiveElementParameters"
         },
         {
          "kind": "Content",
          "text": "[\"activeElementParameters\"], \"onLastActiveElementChange\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "activeElementParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseActiveElementParameters:interface"
         },
         "kind": "Reference",
         "text": "UseActiveElementParameters"
        },
        {
         "kind": "Content",
         "text": "[\"activeElementParameters\"], \"onLastActiveElementChange\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "activeElementParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "activeElementParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseActiveElementParameters[\"activeElementParameters\"], \"onLastActiveElementChange\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseActiveElementParameters:interface"
          },
          "kind": "Reference",
          "text": "UseActiveElementParameters"
         },
         {
          "kind": "Content",
          "text": "[\"activeElementParameters\"], \"onLastActiveElementChange\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 4
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_PopupElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useManagedChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useManagedChild|Function|1",
     "displayName": "useManagedChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useManagedChild<M extends ManagedChildInfo<number | string>>({ context, info }: UseManagedChildParameters<M>): UseManagedChildReturnType<M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useManagedChild<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<number | string>"
       },
       {
        "kind": "Content",
        "text": ">({ context, info }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildParameters"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useManagedChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ context, info }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildParameters<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildParameters"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 4
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseManagedChildReturnType<M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 7
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<number | string>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<number | string>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useManagedChild<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<number | string>"
      },
      {
       "kind": "Content",
       "text": ">({ context, info }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildParameters"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseManagedChildParameters:interface"
     },
     "containerKey": "UseManagedChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseManagedChildParameters<M extends ManagedChildInfo<any>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseManagedChildParameters<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<any>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseManagedChildParameters<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<any>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseManagedChildParameters",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "UseManagedChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseManagedChildrenContext<M> | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenContext:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenContext"
         },
         {
          "kind": "Content",
          "text": "<M> | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenContext:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenContext"
        },
        {
         "kind": "Content",
         "text": "<M> | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenContext<M> | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenContext:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenContext"
         },
         {
          "kind": "Content",
          "text": "<M> | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "In general, this shouldn't be null, but for convenience's sake you are allowed to, which disables all behavior, and also means ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 50
             }
            },
            {
             "kind": "CodeSpan",
             "code": "getChildren"
            },
            {
             "kind": "PlainText",
             "text": " will be ",
             "textExcerpt": {
              "startIndex": 53,
              "endIndex": 58
             }
            },
            {
             "kind": "CodeSpan",
             "code": "undefined"
            },
            {
             "kind": "PlainText",
             "text": "!",
             "textExcerpt": {
              "startIndex": 61,
              "endIndex": 62
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: M;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "kind": "Content",
          "text": "M"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "kind": "Content",
         "text": "M"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "M",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "M"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The exact data that's available from the parent/each sibling element via ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 26
             }
            },
            {
             "kind": "CodeSpan",
             "code": "getAt"
            },
            {
             "kind": "PlainText",
             "text": " or the other methods on ",
             "textExcerpt": {
              "startIndex": 29,
              "endIndex": 40
             }
            },
            {
             "kind": "CodeSpan",
             "code": "ManagedChildren"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 43,
              "endIndex": 44
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<any>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<any>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useManagedChildren:function(1)"
     },
     "kind": "Function",
     "containerKey": "useManagedChildren|Function|1",
     "displayName": "useManagedChildren",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useManagedChildren<M extends ManagedChildInfo<string | number>>(parentParameters: UseManagedChildrenParameters<M>): UseManagedChildrenReturnType<M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useManagedChildren<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<string | number>"
       },
       {
        "kind": "Content",
        "text": ">(parentParameters: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useManagedChildren",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "parentParameters",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenParameters<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 4
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseManagedChildrenReturnType<M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 7
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<string | number>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<string | number>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows a parent component to access information about certain child components once they have rendered.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 30
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "This hook is designed to be lightweight, in that the parent keeps no state and runs no effects. Each child *does* run an effect, but with no state changes unless you explicitly request them.",
           "textExcerpt": {
            "startIndex": 32,
            "endIndex": 105
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useManagedChildren<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<string | number>"
      },
      {
       "kind": "Content",
       "text": ">(parentParameters: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseManagedChildrenContext:interface"
     },
     "containerKey": "UseManagedChildrenContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseManagedChildrenContext<M extends ManagedChildInfo<any>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseManagedChildrenContext<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<any>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseManagedChildrenContext<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<any>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseManagedChildrenContext",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "UseManagedChildrenContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenContext#managedChildContext:member"
       },
       "displayName": "managedChildContext",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildContext: {\n        getChildren(): ManagedChildren<M>;\n        managedChildrenArray: InternalChildInfo<M>;\n        remoteULEChildMounted: (index: M[\"index\"], mounted: boolean) => void;\n        remoteULEChildChanged: (index: M[\"index\"]) => (() => void);\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildContext: "
         },
         {
          "kind": "Content",
          "text": "{\n        getChildren(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildren:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildren"
         },
         {
          "kind": "Content",
          "text": "<M>;\n        managedChildrenArray: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "InternalChildInfo:interface"
          },
          "kind": "Reference",
          "text": "InternalChildInfo"
         },
         {
          "kind": "Content",
          "text": "<M>;\n        remoteULEChildMounted: (index: M[\"index\"], mounted: boolean) => void;\n        remoteULEChildChanged: (index: M[\"index\"]) => (() => void);\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildContext: "
        },
        {
         "kind": "Content",
         "text": "{\n        getChildren(): "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ManagedChildren:interface"
         },
         "kind": "Reference",
         "text": "ManagedChildren"
        },
        {
         "kind": "Content",
         "text": "<M>;\n        managedChildrenArray: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "InternalChildInfo:interface"
         },
         "kind": "Reference",
         "text": "InternalChildInfo"
        },
        {
         "kind": "Content",
         "text": "<M>;\n        remoteULEChildMounted: (index: M[\"index\"], mounted: boolean) => void;\n        remoteULEChildChanged: (index: M[\"index\"]) => (() => void);\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getChildren(): ManagedChildren<M>;\n        managedChildrenArray: InternalChildInfo<M>;\n        remoteULEChildMounted: (index: M[\"index\"], mounted: boolean) => void;\n        remoteULEChildChanged: (index: M[\"index\"]) => (() => void);\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getChildren(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildren:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildren"
         },
         {
          "kind": "Content",
          "text": "<M>;\n        managedChildrenArray: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "InternalChildInfo:interface"
          },
          "kind": "Reference",
          "text": "InternalChildInfo"
         },
         {
          "kind": "Content",
          "text": "<M>;\n        remoteULEChildMounted: (index: M[\"index\"], mounted: boolean) => void;\n        remoteULEChildChanged: (index: M[\"index\"]) => (() => void);\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<any>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<any>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseManagedChildrenParameters:interface"
     },
     "containerKey": "UseManagedChildrenParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseManagedChildrenParameters<M extends ManagedChildInfo<any>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseManagedChildrenParameters<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<any>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseManagedChildrenParameters<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<any>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseManagedChildrenParameters",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "UseManagedChildrenParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenParameters#managedChildrenParameters:member"
       },
       "displayName": "managedChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenParameters: {\n        onAfterChildLayoutEffect?: Nullable<OnAfterChildLayoutEffect<M[\"index\"]>>;\n        onChildrenMountChange?: Nullable<OnChildrenMountChange<M[\"index\"]>>;\n        onChildrenCountChange?: Nullable<((count: number) => void)>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onAfterChildLayoutEffect?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnAfterChildLayoutEffect:type"
          },
          "kind": "Reference",
          "text": "OnAfterChildLayoutEffect"
         },
         {
          "kind": "Content",
          "text": "<M[\"index\"]>>;\n        onChildrenMountChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnChildrenMountChange:type"
          },
          "kind": "Reference",
          "text": "OnChildrenMountChange"
         },
         {
          "kind": "Content",
          "text": "<M[\"index\"]>>;\n        onChildrenCountChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<((count: number) => void)>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onAfterChildLayoutEffect?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnAfterChildLayoutEffect:type"
         },
         "kind": "Reference",
         "text": "OnAfterChildLayoutEffect"
        },
        {
         "kind": "Content",
         "text": "<M[\"index\"]>>;\n        onChildrenMountChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnChildrenMountChange:type"
         },
         "kind": "Reference",
         "text": "OnChildrenMountChange"
        },
        {
         "kind": "Content",
         "text": "<M[\"index\"]>>;\n        onChildrenCountChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<((count: number) => void)>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onAfterChildLayoutEffect?: Nullable<OnAfterChildLayoutEffect<M[\"index\"]>>;\n        onChildrenMountChange?: Nullable<OnChildrenMountChange<M[\"index\"]>>;\n        onChildrenCountChange?: Nullable<((count: number) => void)>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onAfterChildLayoutEffect?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnAfterChildLayoutEffect:type"
          },
          "kind": "Reference",
          "text": "OnAfterChildLayoutEffect"
         },
         {
          "kind": "Content",
          "text": "<M[\"index\"]>>;\n        onChildrenMountChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnChildrenMountChange:type"
          },
          "kind": "Reference",
          "text": "OnChildrenMountChange"
         },
         {
          "kind": "Content",
          "text": "<M[\"index\"]>>;\n        onChildrenCountChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<((count: number) => void)>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<any>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<any>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseManagedChildrenReturnType:interface"
     },
     "containerKey": "UseManagedChildrenReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseManagedChildrenReturnType<M extends ManagedChildInfo<any>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseManagedChildrenReturnType<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<any>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseManagedChildrenReturnType<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<any>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseManagedChildrenReturnType",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "UseManagedChildrenReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseManagedChildrenContext<M>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenContext:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenContext"
         },
         {
          "kind": "Content",
          "text": "<M>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenContext:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenContext"
        },
        {
         "kind": "Content",
         "text": "<M>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenContext<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenContext:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenContext"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildrenReturnType#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: {\n        getChildren(): ManagedChildren<M>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getChildren(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildren:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildren"
         },
         {
          "kind": "Content",
          "text": "<M>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getChildren(): "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ManagedChildren:interface"
         },
         "kind": "Reference",
         "text": "ManagedChildren"
        },
        {
         "kind": "Content",
         "text": "<M>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getChildren(): ManagedChildren<M>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getChildren(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildren:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildren"
         },
         {
          "kind": "Content",
          "text": "<M>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Returns information about the child that rendered itself with the requested key.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 24
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "**STABLE** (even though it's not a function, the identity of this object never changes)",
             "textExcerpt": {
              "startIndex": 26,
              "endIndex": 62
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<any>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<any>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseManagedChildReturnType:interface"
     },
     "containerKey": "UseManagedChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseManagedChildReturnType<M extends ManagedChildInfo<any>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseManagedChildReturnType<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<any>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseManagedChildReturnType<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<any>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseManagedChildReturnType",
     "fileUrlPath": "src/preact-extensions/use-managed-children.tsx",
     "isExported": true,
     "name": "UseManagedChildReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildReturnType#managedChildReturn:member"
       },
       "displayName": "managedChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildReturn: {\n        getChildren(): ManagedChildren<M>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getChildren(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildren:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildren"
         },
         {
          "kind": "Content",
          "text": "<M>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getChildren(): "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ManagedChildren:interface"
         },
         "kind": "Reference",
         "text": "ManagedChildren"
        },
        {
         "kind": "Content",
         "text": "<M>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getChildren(): ManagedChildren<M>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getChildren(): "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildren:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildren"
         },
         {
          "kind": "Content",
          "text": "<M>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<any>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<any>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useMediaQuery:function(1)"
     },
     "kind": "Function",
     "containerKey": "useMediaQuery|Function|1",
     "displayName": "useMediaQuery",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useMediaQuery(query: string | null | undefined, defaultGuess?: boolean): UseMediaQueryReturnType;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useMediaQuery(query: "
       },
       {
        "kind": "Content",
        "text": "string | null | undefined"
       },
       {
        "kind": "Content",
        "text": ", defaultGuess?: "
       },
       {
        "kind": "Content",
        "text": "boolean"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseMediaQueryReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseMediaQueryReturnType"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useMediaQuery",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "query",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "string | null | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string | null | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "tsdocParamBlock": {
        "parameterName": "query",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Must be in parens, e.g. ",
             "textExcerpt": {
              "startIndex": 182,
              "endIndex": 196
             }
            },
            {
             "kind": "CodeSpan",
             "code": "(max-width: 600px)"
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "defaultGuess",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "tsdocParamBlock": {
        "parameterName": "defaultGuess",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Optional. If you pass the same value that's measured after rendering, no re-render will occur.",
             "textExcerpt": {
              "startIndex": 215,
              "endIndex": 251
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseMediaQueryReturnType",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseMediaQueryReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseMediaQueryReturnType"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows a component to use the boolean result of a media query as part of its render.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 34
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Please note that there is a re-render penalty incurred by using this hook -- it will always cause any component that uses it to re-render one extra time on mount as it stores the result of the media query. This can be mitigated with the ",
           "textExcerpt": {
            "startIndex": 36,
            "endIndex": 132
           }
          },
          {
           "kind": "CodeSpan",
           "code": "defaultGuess"
          },
          {
           "kind": "PlainText",
           "text": " parameter -- if you guess correctly (",
           "textExcerpt": {
            "startIndex": 135,
            "endIndex": 150
           }
          },
          {
           "kind": "CodeSpan",
           "code": "true"
          },
          {
           "kind": "PlainText",
           "text": "/",
           "textExcerpt": {
            "startIndex": 153,
            "endIndex": 154
           }
          },
          {
           "kind": "CodeSpan",
           "code": "false"
          },
          {
           "kind": "PlainText",
           "text": "), then there's no penalty. Hooray.",
           "textExcerpt": {
            "startIndex": 157,
            "endIndex": 173
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " ",
            "textExcerpt": {
             "startIndex": 255,
             "endIndex": 256
            }
           },
           {
            "kind": "CodeSpan",
            "code": "UseMediaQueryReturnType"
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "query",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "Must be in parens, e.g. ",
              "textExcerpt": {
               "startIndex": 182,
               "endIndex": 196
              }
             },
             {
              "kind": "CodeSpan",
              "code": "(max-width: 600px)"
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "defaultGuess",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "Optional. If you pass the same value that's measured after rendering, no re-render will occur.",
              "textExcerpt": {
               "startIndex": 215,
               "endIndex": 251
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 2,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useMediaQuery(query: "
      },
      {
       "kind": "Content",
       "text": "string | null | undefined"
      },
      {
       "kind": "Content",
       "text": ", defaultGuess?: "
      },
      {
       "kind": "Content",
       "text": "boolean"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseMediaQueryReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseMediaQueryReturnType"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseMediaQueryReturnType:interface"
     },
     "containerKey": "UseMediaQueryReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseMediaQueryReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseMediaQueryReturnType "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseMediaQueryReturnType "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseMediaQueryReturnType",
     "fileUrlPath": "src/observers/use-media-query.tsx",
     "isExported": true,
     "name": "UseMediaQueryReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseMediaQueryReturnType#getMatches:member(1)"
       },
       "displayName": "getMatches",
       "excerpt": {
        "isEmpty": false,
        "text": "getMatches(): boolean | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getMatches(): "
         },
         {
          "kind": "Content",
          "text": "boolean | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getMatches(): "
        },
        {
         "kind": "Content",
         "text": "boolean | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getMatches|MethodSignature|1",
       "isOptional": false,
       "name": "getMatches",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean | null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseMediaQueryReturnType#matches:member"
       },
       "displayName": "matches",
       "excerpt": {
        "isEmpty": false,
        "text": "matches: boolean | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "matches: "
         },
         {
          "kind": "Content",
          "text": "boolean | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "matches: "
        },
        {
         "kind": "Content",
         "text": "boolean | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "matches|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "matches",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean | null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useMemoObject:function(1)"
     },
     "kind": "Function",
     "containerKey": "useMemoObject|Function|1",
     "displayName": "useMemoObject",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useMemoObject<T extends {}>(t: T): T;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useMemoObject<T extends "
       },
       {
        "kind": "Content",
        "text": "{}"
       },
       {
        "kind": "Content",
        "text": ">(t: "
       },
       {
        "kind": "Content",
        "text": "T"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "T"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useMemoObject",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "t",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "T",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "T"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "{}",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{}"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useMemoObject<T extends "
      },
      {
       "kind": "Content",
       "text": "{}"
      },
      {
       "kind": "Content",
       "text": ">(t: "
      },
      {
       "kind": "Content",
       "text": "T"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "T"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useMergedClasses:function(1)"
     },
     "kind": "Function",
     "containerKey": "useMergedClasses|Function|1",
     "displayName": "useMergedClasses",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useMergedClasses(lhsClass: C, lhsClassName: C, rhsClass: C, rhsClassName: C): string | undefined;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useMergedClasses(lhsClass: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "C:type"
        },
        "kind": "Reference",
        "text": "C"
       },
       {
        "kind": "Content",
        "text": ", lhsClassName: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "C:type"
        },
        "kind": "Reference",
        "text": "C"
       },
       {
        "kind": "Content",
        "text": ", rhsClass: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "C:type"
        },
        "kind": "Reference",
        "text": "C"
       },
       {
        "kind": "Content",
        "text": ", rhsClassName: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "C:type"
        },
        "kind": "Reference",
        "text": "C"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "string | undefined"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useMergedClasses",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "lhsClass",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "C",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "C:type"
          },
          "kind": "Reference",
          "text": "C"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      },
      {
       "isOptional": false,
       "name": "lhsClassName",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "C",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "C:type"
          },
          "kind": "Reference",
          "text": "C"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      },
      {
       "isOptional": false,
       "name": "rhsClass",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "C",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "C:type"
          },
          "kind": "Reference",
          "text": "C"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       }
      },
      {
       "isOptional": false,
       "name": "rhsClassName",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "C",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "C:type"
          },
          "kind": "Reference",
          "text": "C"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "string | undefined",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "string | undefined"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Given two sets of props, merges their ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 15
           }
          },
          {
           "kind": "CodeSpan",
           "code": "class"
          },
          {
           "kind": "PlainText",
           "text": " and ",
           "textExcerpt": {
            "startIndex": 18,
            "endIndex": 21
           }
          },
          {
           "kind": "CodeSpan",
           "code": "className"
          },
          {
           "kind": "PlainText",
           "text": " properties. Duplicate classes are removed (order doesn't matter anyway).",
           "textExcerpt": {
            "startIndex": 24,
            "endIndex": 48
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " A string representing all combined classes from both arguments.",
            "textExcerpt": {
             "startIndex": 88,
             "endIndex": 107
            }
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "lhs",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "Classes of the first component",
              "textExcerpt": {
               "startIndex": 57,
               "endIndex": 66
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "rhs",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "Classes of the second component",
              "textExcerpt": {
               "startIndex": 75,
               "endIndex": 84
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 2,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useMergedClasses(lhsClass: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "C:type"
       },
       "kind": "Reference",
       "text": "C"
      },
      {
       "kind": "Content",
       "text": ", lhsClassName: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "C:type"
       },
       "kind": "Reference",
       "text": "C"
      },
      {
       "kind": "Content",
       "text": ", rhsClass: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "C:type"
       },
       "kind": "Reference",
       "text": "C"
      },
      {
       "kind": "Content",
       "text": ", rhsClassName: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "C:type"
       },
       "kind": "Reference",
       "text": "C"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "string | undefined"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useMergedProps:function(1)"
     },
     "kind": "Function",
     "containerKey": "useMergedProps|Function|1",
     "displayName": "useMergedProps",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useMergedProps<E extends EventTarget>(...allProps: ElementProps<E>[]): ElementProps<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useMergedProps<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ">(...allProps: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<E>[]"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useMergedProps",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "allProps",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<E>[]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>[]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "ElementProps<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 6
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Given two sets of props, merges them and returns the result.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 23
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "The hook is aware of and can intelligently merge ",
           "textExcerpt": {
            "startIndex": 25,
            "endIndex": 43
           }
          },
          {
           "kind": "CodeSpan",
           "code": "className"
          },
          {
           "kind": "PlainText",
           "text": ", ",
           "textExcerpt": {
            "startIndex": 46,
            "endIndex": 48
           }
          },
          {
           "kind": "CodeSpan",
           "code": "class"
          },
          {
           "kind": "PlainText",
           "text": ", ",
           "textExcerpt": {
            "startIndex": 51,
            "endIndex": 53
           }
          },
          {
           "kind": "CodeSpan",
           "code": "style"
          },
          {
           "kind": "PlainText",
           "text": ", ",
           "textExcerpt": {
            "startIndex": 56,
            "endIndex": 58
           }
          },
          {
           "kind": "CodeSpan",
           "code": "ref"
          },
          {
           "kind": "PlainText",
           "text": ", and all event handlers.",
           "textExcerpt": {
            "startIndex": 61,
            "endIndex": 71
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "lhs2",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "rhs2",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 2,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useMergedProps<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": ">(...allProps: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<E>[]"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useMergedRefs:function(1)"
     },
     "kind": "Function",
     "containerKey": "useMergedRefs|Function|1",
     "displayName": "useMergedRefs",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useMergedRefs<E extends EventTarget>(rhs: ElementProps<E>[\"ref\"], lhs: ElementProps<E>[\"ref\"]): RefObject<E> | import(\"preact\").RefCallback<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useMergedRefs<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ">(rhs: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<E>[\"ref\"]"
       },
       {
        "kind": "Content",
        "text": ", lhs: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<E>[\"ref\"]"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "RefObject:type"
        },
        "kind": "Reference",
        "text": "RefObject"
       },
       {
        "kind": "Content",
        "text": "<E> | import(\"preact\")."
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "RefCallback:type"
        },
        "kind": "Reference",
        "text": "RefCallback"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useMergedRefs",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "rhs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<E>[\"ref\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>[\"ref\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "tsdocParamBlock": {
        "parameterName": "rhs",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": false,
       "name": "lhs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<E>[\"ref\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>[\"ref\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       },
       "tsdocParamBlock": {
        "parameterName": "lhs",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "RefObject<E> | import(\"preact\").RefCallback<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "RefObject:type"
        },
        "kind": "Reference",
        "text": "RefObject"
       },
       {
        "kind": "Content",
        "text": "<E> | import(\"preact\")."
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "RefCallback:type"
        },
        "kind": "Reference",
        "text": "RefCallback"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Combines two refs into one. This allows a component to both use its own ref *and* forward a ref that was given to it.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 51
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "lhs",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "rhs",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 2,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useMergedRefs<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": ">(rhs: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<E>[\"ref\"]"
      },
      {
       "kind": "Content",
       "text": ", lhs: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<E>[\"ref\"]"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "RefObject:type"
       },
       "kind": "Reference",
       "text": "RefObject"
      },
      {
       "kind": "Content",
       "text": "<E> | import(\"preact\")."
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "RefCallback:type"
       },
       "kind": "Reference",
       "text": "RefCallback"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useMergedStyles:function(1)"
     },
     "kind": "Function",
     "containerKey": "useMergedStyles|Function|1",
     "displayName": "useMergedStyles",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useMergedStyles(lhs: ElementProps<EventTarget>[\"style\"], rhs: ElementProps<EventTarget>[\"style\"]): ElementProps<EventTarget>[\"style\"];",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useMergedStyles(lhs: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ">[\"style\"]"
       },
       {
        "kind": "Content",
        "text": ", rhs: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ">[\"style\"]"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ">[\"style\"]"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useMergedStyles",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "lhs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<EventTarget>[\"style\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         },
         {
          "kind": "Content",
          "text": ">[\"style\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       }
      },
      {
       "isOptional": false,
       "name": "rhs",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<EventTarget>[\"style\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         },
         {
          "kind": "Content",
          "text": ">[\"style\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "ElementProps<EventTarget>[\"style\"]",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ElementProps:type"
        },
        "kind": "Reference",
        "text": "ElementProps"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ">[\"style\"]"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Merges two style objects, returning the result.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 15
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " A CSS object containing the properties of both objects.",
            "textExcerpt": {
             "startIndex": 73,
             "endIndex": 92
            }
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "style",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The user-given style prop for this component",
              "textExcerpt": {
               "startIndex": 24,
               "endIndex": 39
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "obj",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The CSS properties you want added to the user-given style",
              "textExcerpt": {
               "startIndex": 48,
               "endIndex": 69
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 2,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useMergedStyles(lhs: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": ">[\"style\"]"
      },
      {
       "kind": "Content",
       "text": ", rhs: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": ">[\"style\"]"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ElementProps:type"
       },
       "kind": "Reference",
       "text": "ElementProps"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": ">[\"style\"]"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useModal:function(1)"
     },
     "kind": "Function",
     "containerKey": "useModal|Function|1",
     "displayName": "useModal",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useModal<Listeners extends DismissListenerTypes, FocusContainerElement extends Element | null, SourceElement extends Element | null, PopupElement extends Element>({ dismissParameters, escapeDismissParameters, focusTrapParameters: { trapActive, ...focusTrapParameters } }: UseModalParameters<Listeners>): UseModalReturnType<FocusContainerElement, SourceElement, PopupElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useModal<Listeners extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "DismissListenerTypes:type"
        },
        "kind": "Reference",
        "text": "DismissListenerTypes"
       },
       {
        "kind": "Content",
        "text": ", FocusContainerElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ dismissParameters, escapeDismissParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseModalParameters#focusTrapParameters"
        },
        "kind": "Reference",
        "text": "focusTrapParameters"
       },
       {
        "kind": "Content",
        "text": ": { trapActive, ...focusTrapParameters } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseModalParameters:interface"
        },
        "kind": "Reference",
        "text": "UseModalParameters"
       },
       {
        "kind": "Content",
        "text": "<Listeners>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseModalReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseModalReturnType"
       },
       {
        "kind": "Content",
        "text": "<FocusContainerElement, SourceElement, PopupElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useModal",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ dismissParameters, escapeDismissParameters, focusTrapParameters: { trapActive, ...focusTrapParameters } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseModalParameters<Listeners>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseModalParameters:interface"
          },
          "kind": "Reference",
          "text": "UseModalParameters"
         },
         {
          "kind": "Content",
          "text": "<Listeners>"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 13
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseModalReturnType<FocusContainerElement, SourceElement, PopupElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseModalReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseModalReturnType"
       },
       {
        "kind": "Content",
        "text": "<FocusContainerElement, SourceElement, PopupElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 16
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "DismissListenerTypes",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DismissListenerTypes:type"
          },
          "kind": "Reference",
          "text": "DismissListenerTypes"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Listeners"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "FocusContainerElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 9
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Combines dismissal hooks and focus trap hooks into one.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 18
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Another in the \"complete\" series, alongside list/grid navigation and dismissal itself.",
           "textExcerpt": {
            "startIndex": 20,
            "endIndex": 47
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Use for dialogs, menus, etc. Anything that can be dismissed and might trap focus, basically.",
           "textExcerpt": {
            "startIndex": 49,
            "endIndex": 83
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "param0",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useModal<Listeners extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DismissListenerTypes:type"
       },
       "kind": "Reference",
       "text": "DismissListenerTypes"
      },
      {
       "kind": "Content",
       "text": ", FocusContainerElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ dismissParameters, escapeDismissParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseModalParameters#focusTrapParameters"
       },
       "kind": "Reference",
       "text": "focusTrapParameters"
      },
      {
       "kind": "Content",
       "text": ": { trapActive, ...focusTrapParameters } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseModalParameters:interface"
       },
       "kind": "Reference",
       "text": "UseModalParameters"
      },
      {
       "kind": "Content",
       "text": "<Listeners>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseModalReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseModalReturnType"
      },
      {
       "kind": "Content",
       "text": "<FocusContainerElement, SourceElement, PopupElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseModalParameters:interface"
     },
     "containerKey": "UseModalParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseModalParameters<Listeners extends DismissListenerTypes> extends UseDismissParameters<Listeners> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseModalParameters<Listeners extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "DismissListenerTypes:type"
        },
        "kind": "Reference",
        "text": "DismissListenerTypes"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDismissParameters:interface"
        },
        "kind": "Reference",
        "text": "UseDismissParameters"
       },
       {
        "kind": "Content",
        "text": "<Listeners>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseModalParameters<Listeners extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "DismissListenerTypes:type"
       },
       "kind": "Reference",
       "text": "DismissListenerTypes"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissParameters:interface"
       },
       "kind": "Reference",
       "text": "UseDismissParameters"
      },
      {
       "kind": "Content",
       "text": "<Listeners>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseDismissParameters<Listeners>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseDismissParameters:interface"
          },
          "kind": "Reference",
          "text": "UseDismissParameters"
         },
         {
          "kind": "Content",
          "text": "<Listeners>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseModalParameters",
     "fileUrlPath": "src/component-use/use-modal.tsx",
     "isExported": true,
     "name": "UseModalParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseModalParameters#focusTrapParameters:member"
       },
       "displayName": "focusTrapParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "focusTrapParameters: UseFocusTrapParameters<any, any>[\"focusTrapParameters\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "focusTrapParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseFocusTrapParameters:interface"
          },
          "kind": "Reference",
          "text": "UseFocusTrapParameters"
         },
         {
          "kind": "Content",
          "text": "<any, any>[\"focusTrapParameters\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "focusTrapParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseFocusTrapParameters:interface"
         },
         "kind": "Reference",
         "text": "UseFocusTrapParameters"
        },
        {
         "kind": "Content",
         "text": "<any, any>[\"focusTrapParameters\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "focusTrapParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "focusTrapParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseFocusTrapParameters<any, any>[\"focusTrapParameters\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseFocusTrapParameters:interface"
          },
          "kind": "Reference",
          "text": "UseFocusTrapParameters"
         },
         {
          "kind": "Content",
          "text": "<any, any>[\"focusTrapParameters\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "DismissListenerTypes",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "DismissListenerTypes:type"
          },
          "kind": "Reference",
          "text": "DismissListenerTypes"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Listeners"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseModalReturnType:interface"
     },
     "containerKey": "UseModalReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseModalReturnType<FocusContainerElement extends Element | null, SourceElement extends Element | null, PopupElement extends Element> extends UseDismissReturnType<SourceElement, PopupElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseModalReturnType<FocusContainerElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", SourceElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null"
       },
       {
        "kind": "Content",
        "text": ", PopupElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseDismissReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseDismissReturnType"
       },
       {
        "kind": "Content",
        "text": "<SourceElement, PopupElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseModalReturnType<FocusContainerElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", SourceElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null"
      },
      {
       "kind": "Content",
       "text": ", PopupElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseDismissReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseDismissReturnType"
      },
      {
       "kind": "Content",
       "text": "<SourceElement, PopupElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseDismissReturnType<SourceElement, PopupElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseDismissReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseDismissReturnType"
         },
         {
          "kind": "Content",
          "text": "<SourceElement, PopupElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 11,
         "startIndex": 9
        }
       }
      }
     ],
     "displayName": "UseModalReturnType",
     "fileUrlPath": "src/component-use/use-modal.tsx",
     "isExported": true,
     "name": "UseModalReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseModalReturnType#focusTrapReturn:member"
       },
       "displayName": "focusTrapReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "focusTrapReturn: UseFocusTrapReturnType<NonNullable<FocusContainerElement>>[\"focusTrapReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "focusTrapReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseFocusTrapReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseFocusTrapReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<FocusContainerElement>>[\"focusTrapReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "focusTrapReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseFocusTrapReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseFocusTrapReturnType"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NonNullable:type"
         },
         "kind": "Reference",
         "text": "NonNullable"
        },
        {
         "kind": "Content",
         "text": "<FocusContainerElement>>[\"focusTrapReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "focusTrapReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "focusTrapReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseFocusTrapReturnType<NonNullable<FocusContainerElement>>[\"focusTrapReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseFocusTrapReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseFocusTrapReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<FocusContainerElement>>[\"focusTrapReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseModalReturnType#propsFocusContainer:member"
       },
       "displayName": "propsFocusContainer",
       "excerpt": {
        "isEmpty": false,
        "text": "propsFocusContainer: ElementProps<NonNullable<FocusContainerElement>>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsFocusContainer: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<FocusContainerElement>>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsFocusContainer: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NonNullable:type"
         },
         "kind": "Reference",
         "text": "NonNullable"
        },
        {
         "kind": "Content",
         "text": "<FocusContainerElement>>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsFocusContainer|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsFocusContainer",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<NonNullable<FocusContainerElement>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<FocusContainerElement>>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "FocusContainerElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 4
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "SourceElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "PopupElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useMutationObserver:function(1)"
     },
     "kind": "Function",
     "containerKey": "useMutationObserver|Function|1",
     "displayName": "useMutationObserver",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useMutationObserver<E extends Element>({ refElementParameters, mutationObserverParameters: { attributeFilter, subtree, onChildList, characterDataOldValue, onCharacterData, onAttributes, attributeOldValue } }: UseMutationObserverParameters<E>): {\n    refElementReturn: {\n        getElement(): E | null;\n    };\n    mutationObserverReturn: {};\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useMutationObserver<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ refElementParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseMutationObserverParameters#mutationObserverParameters"
        },
        "kind": "Reference",
        "text": "mutationObserverParameters"
       },
       {
        "kind": "Content",
        "text": ": { attributeFilter, subtree, onChildList, characterDataOldValue, onCharacterData, onAttributes, attributeOldValue } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseMutationObserverParameters:interface"
        },
        "kind": "Reference",
        "text": "UseMutationObserverParameters"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "{\n    refElementReturn: {\n        getElement(): E | null;\n    };\n    mutationObserverReturn: {};\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useMutationObserver",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ refElementParameters, mutationObserverParameters: { attributeFilter, subtree, onChildList, characterDataOldValue, onCharacterData, onAttributes, attributeOldValue } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseMutationObserverParameters<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseMutationObserverParameters:interface"
          },
          "kind": "Reference",
          "text": "UseMutationObserverParameters"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "{\n    refElementReturn: {\n        getElement(): E | null;\n    };\n    mutationObserverReturn: {};\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "{\n    refElementReturn: {\n        getElement(): E | null;\n    };\n    mutationObserverReturn: {};\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 8
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useMutationObserver<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ refElementParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseMutationObserverParameters#mutationObserverParameters"
       },
       "kind": "Reference",
       "text": "mutationObserverParameters"
      },
      {
       "kind": "Content",
       "text": ": { attributeFilter, subtree, onChildList, characterDataOldValue, onCharacterData, onAttributes, attributeOldValue } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseMutationObserverParameters:interface"
       },
       "kind": "Reference",
       "text": "UseMutationObserverParameters"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "{\n    refElementReturn: {\n        getElement(): E | null;\n    };\n    mutationObserverReturn: {};\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseMutationObserverParameters:interface"
     },
     "containerKey": "UseMutationObserverParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseMutationObserverParameters<E extends Element> extends UseRefElementParameters<E> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseMutationObserverParameters<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementParameters"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseMutationObserverParameters<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRefElementParameters"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRefElementParameters<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementParameters"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseMutationObserverParameters",
     "fileUrlPath": "src/observers/use-mutation-observer.tsx",
     "isExported": true,
     "name": "UseMutationObserverParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseMutationObserverParameters#mutationObserverParameters:member"
       },
       "displayName": "mutationObserverParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "mutationObserverParameters: {\n        onChildList: null | ((info: {\n            addedNodes: NodeList;\n            removedNodes: NodeList;\n        }) => void);\n        onAttributes: null | ((info: {\n            attributeName: string | null;\n            attributeNamespace: string | null;\n            oldValue?: string | null;\n        }) => void);\n        onCharacterData: null | ((info: MutationRecord) => void);\n        subtree: boolean;\n        characterDataOldValue: boolean;\n        attributeOldValue: boolean;\n        attributeFilter: string | string[];\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "mutationObserverParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onChildList: null | ((info: {\n            addedNodes: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NodeList:interface"
          },
          "kind": "Reference",
          "text": "NodeList"
         },
         {
          "kind": "Content",
          "text": ";\n            removedNodes: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NodeList:interface"
          },
          "kind": "Reference",
          "text": "NodeList"
         },
         {
          "kind": "Content",
          "text": ";\n        }) => void);\n        onAttributes: null | ((info: {\n            attributeName: string | null;\n            attributeNamespace: string | null;\n            oldValue?: string | null;\n        }) => void);\n        onCharacterData: null | ((info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "MutationRecord:interface"
          },
          "kind": "Reference",
          "text": "MutationRecord"
         },
         {
          "kind": "Content",
          "text": ") => void);\n        subtree: boolean;\n        characterDataOldValue: boolean;\n        attributeOldValue: boolean;\n        attributeFilter: string | string[];\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "mutationObserverParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onChildList: null | ((info: {\n            addedNodes: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NodeList:interface"
         },
         "kind": "Reference",
         "text": "NodeList"
        },
        {
         "kind": "Content",
         "text": ";\n            removedNodes: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "NodeList:interface"
         },
         "kind": "Reference",
         "text": "NodeList"
        },
        {
         "kind": "Content",
         "text": ";\n        }) => void);\n        onAttributes: null | ((info: {\n            attributeName: string | null;\n            attributeNamespace: string | null;\n            oldValue?: string | null;\n        }) => void);\n        onCharacterData: null | ((info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "MutationRecord:interface"
         },
         "kind": "Reference",
         "text": "MutationRecord"
        },
        {
         "kind": "Content",
         "text": ") => void);\n        subtree: boolean;\n        characterDataOldValue: boolean;\n        attributeOldValue: boolean;\n        attributeFilter: string | string[];\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "mutationObserverParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "mutationObserverParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onChildList: null | ((info: {\n            addedNodes: NodeList;\n            removedNodes: NodeList;\n        }) => void);\n        onAttributes: null | ((info: {\n            attributeName: string | null;\n            attributeNamespace: string | null;\n            oldValue?: string | null;\n        }) => void);\n        onCharacterData: null | ((info: MutationRecord) => void);\n        subtree: boolean;\n        characterDataOldValue: boolean;\n        attributeOldValue: boolean;\n        attributeFilter: string | string[];\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onChildList: null | ((info: {\n            addedNodes: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NodeList:interface"
          },
          "kind": "Reference",
          "text": "NodeList"
         },
         {
          "kind": "Content",
          "text": ";\n            removedNodes: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NodeList:interface"
          },
          "kind": "Reference",
          "text": "NodeList"
         },
         {
          "kind": "Content",
          "text": ";\n        }) => void);\n        onAttributes: null | ((info: {\n            attributeName: string | null;\n            attributeNamespace: string | null;\n            oldValue?: string | null;\n        }) => void);\n        onCharacterData: null | ((info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "MutationRecord:interface"
          },
          "kind": "Reference",
          "text": "MutationRecord"
         },
         {
          "kind": "Content",
          "text": ") => void);\n        subtree: boolean;\n        characterDataOldValue: boolean;\n        attributeOldValue: boolean;\n        attributeFilter: string | string[];\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "usePaginatedChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "usePaginatedChild|Function|1",
     "displayName": "usePaginatedChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function usePaginatedChild<ChildElement extends Element>({ info: { index }, context: { paginatedChildContext: { parentIsPaginated, getDefaultPaginationVisible } } }: UsePaginatedChildParameters): UsePaginatedChildReturn<ChildElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function usePaginatedChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildParameters#info"
        },
        "kind": "Reference",
        "text": "info"
       },
       {
        "kind": "Content",
        "text": ": { index }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildContext#paginatedChildContext"
        },
        "kind": "Reference",
        "text": "paginatedChildContext"
       },
       {
        "kind": "Content",
        "text": ": { parentIsPaginated, getDefaultPaginationVisible } } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildReturn:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildReturn"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "usePaginatedChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info: { index }, context: { paginatedChildContext: { parentIsPaginated, getDefaultPaginationVisible } } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 9
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UsePaginatedChildReturn<ChildElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildReturn:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildReturn"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function usePaginatedChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildParameters#info"
       },
       "kind": "Reference",
       "text": "info"
      },
      {
       "kind": "Content",
       "text": ": { index }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildContext#paginatedChildContext"
       },
       "kind": "Reference",
       "text": "paginatedChildContext"
      },
      {
       "kind": "Content",
       "text": ": { parentIsPaginated, getDefaultPaginationVisible } } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildReturn:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildReturn"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePaginatedChildContext:interface"
     },
     "containerKey": "UsePaginatedChildContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePaginatedChildContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePaginatedChildContext "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePaginatedChildContext "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePaginatedChildContext",
     "fileUrlPath": "src/component-detail/use-paginated-children.tsx",
     "isExported": true,
     "name": "UsePaginatedChildContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildContext#paginatedChildContext:member"
       },
       "displayName": "paginatedChildContext",
       "excerpt": {
        "isEmpty": false,
        "text": "paginatedChildContext: {\n        parentIsPaginated: boolean;\n        getDefaultPaginationVisible(i: number): boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "paginatedChildContext: "
         },
         {
          "kind": "Content",
          "text": "{\n        parentIsPaginated: boolean;\n        getDefaultPaginationVisible(i: number): boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "paginatedChildContext: "
        },
        {
         "kind": "Content",
         "text": "{\n        parentIsPaginated: boolean;\n        getDefaultPaginationVisible(i: number): boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "paginatedChildContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "paginatedChildContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        parentIsPaginated: boolean;\n        getDefaultPaginationVisible(i: number): boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        parentIsPaginated: boolean;\n        getDefaultPaginationVisible(i: number): boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePaginatedChildParameters:interface"
     },
     "containerKey": "UsePaginatedChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePaginatedChildParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePaginatedChildParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePaginatedChildParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePaginatedChildParameters",
     "fileUrlPath": "src/component-detail/use-paginated-children.tsx",
     "isExported": true,
     "name": "UsePaginatedChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UsePaginatedChildContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildContext:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePaginatedChildContext:interface"
         },
         "kind": "Reference",
         "text": "UsePaginatedChildContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildContext:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: {\n        index: number;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "kind": "Content",
          "text": "{\n        index: number;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "kind": "Content",
         "text": "{\n        index: number;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        index: number;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        index: number;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "usePaginatedChildren:function(1)"
     },
     "kind": "Function",
     "containerKey": "usePaginatedChildren|Function|1",
     "displayName": "usePaginatedChildren",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function usePaginatedChildren<ParentElement extends Element, TabbableChildElement extends Element, M extends UsePaginatedChildrenInfo<TabbableChildElement>>({ managedChildrenReturn: { getChildren }, linearNavigationParameters: { indexDemangler }, paginatedChildrenParameters: { paginationMax, paginationMin }, rovingTabIndexReturn: { getTabbableIndex, setTabbableIndex }, refElementReturn: { getElement } }: UsePaginatedChildrenParameters<ParentElement, TabbableChildElement, M>): UsePaginatedChildrenReturnType;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function usePaginatedChildren<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenInfo:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenParameters#managedChildrenReturn"
        },
        "kind": "Reference",
        "text": "managedChildrenReturn"
       },
       {
        "kind": "Content",
        "text": ": { getChildren }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenParameters#linearNavigationParameters"
        },
        "kind": "Reference",
        "text": "linearNavigationParameters"
       },
       {
        "kind": "Content",
        "text": ": { indexDemangler }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenParameters#paginatedChildrenParameters"
        },
        "kind": "Reference",
        "text": "paginatedChildrenParameters"
       },
       {
        "kind": "Content",
        "text": ": { paginationMax, paginationMin }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenParameters#rovingTabIndexReturn"
        },
        "kind": "Reference",
        "text": "rovingTabIndexReturn"
       },
       {
        "kind": "Content",
        "text": ": { getTabbableIndex, setTabbableIndex }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenParameters#refElementReturn"
        },
        "kind": "Reference",
        "text": "refElementReturn"
       },
       {
        "kind": "Content",
        "text": ": { getElement } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, TabbableChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 23,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "usePaginatedChildren",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ managedChildrenReturn: { getChildren }, linearNavigationParameters: { indexDemangler }, paginatedChildrenParameters: { paginationMax, paginationMin }, rovingTabIndexReturn: { getTabbableIndex, setTabbableIndex }, refElementReturn: { getElement } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildrenParameters<ParentElement, TabbableChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, TabbableChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 20,
         "startIndex": 18
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UsePaginatedChildrenReturnType",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenReturnType"
       }
      ],
      "tokenRange": {
       "endIndex": 22,
       "startIndex": 21
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildrenInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function usePaginatedChildren<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenInfo:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildrenInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#managedChildrenReturn"
       },
       "kind": "Reference",
       "text": "managedChildrenReturn"
      },
      {
       "kind": "Content",
       "text": ": { getChildren }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#linearNavigationParameters"
       },
       "kind": "Reference",
       "text": "linearNavigationParameters"
      },
      {
       "kind": "Content",
       "text": ": { indexDemangler }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#paginatedChildrenParameters"
       },
       "kind": "Reference",
       "text": "paginatedChildrenParameters"
      },
      {
       "kind": "Content",
       "text": ": { paginationMax, paginationMin }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#rovingTabIndexReturn"
       },
       "kind": "Reference",
       "text": "rovingTabIndexReturn"
      },
      {
       "kind": "Content",
       "text": ": { getTabbableIndex, setTabbableIndex }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#refElementReturn"
       },
       "kind": "Reference",
       "text": "refElementReturn"
      },
      {
       "kind": "Content",
       "text": ": { getElement } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, TabbableChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePaginatedChildrenInfo:interface"
     },
     "containerKey": "UsePaginatedChildrenInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePaginatedChildrenInfo<TabbableChildElement extends Element> extends UseRovingTabIndexChildInfo<TabbableChildElement> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePaginatedChildrenInfo<TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePaginatedChildrenInfo<TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UsePaginatedChildrenInfo",
     "fileUrlPath": "src/component-detail/use-paginated-children.tsx",
     "isExported": true,
     "name": "UsePaginatedChildrenInfo",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenInfo#setChildCountIfPaginated:member(1)"
       },
       "displayName": "setChildCountIfPaginated",
       "excerpt": {
        "isEmpty": false,
        "text": "setChildCountIfPaginated(count: number): void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setChildCountIfPaginated(count: "
         },
         {
          "kind": "Content",
          "text": "number"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setChildCountIfPaginated(count: "
        },
        {
         "kind": "Content",
         "text": "number"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setChildCountIfPaginated|MethodSignature|1",
       "isOptional": false,
       "name": "setChildCountIfPaginated",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "count",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "number",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "number"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "void"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenInfo#setPaginationVisible:member(1)"
       },
       "displayName": "setPaginationVisible",
       "excerpt": {
        "isEmpty": false,
        "text": "setPaginationVisible(visible: boolean): void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setPaginationVisible(visible: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setPaginationVisible(visible: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setPaginationVisible|MethodSignature|1",
       "isOptional": false,
       "name": "setPaginationVisible",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "visible",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "boolean",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "boolean"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "void"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePaginatedChildrenParameters:interface"
     },
     "containerKey": "UsePaginatedChildrenParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePaginatedChildrenParameters<ParentElement extends Element, TabbableChildElement extends Element, M extends UsePaginatedChildrenInfo<TabbableChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePaginatedChildrenParameters<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePaginatedChildrenInfo:interface"
        },
        "kind": "Reference",
        "text": "UsePaginatedChildrenInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePaginatedChildrenParameters<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenInfo:interface"
       },
       "kind": "Reference",
       "text": "UsePaginatedChildrenInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePaginatedChildrenParameters",
     "fileUrlPath": "src/component-detail/use-paginated-children.tsx",
     "isExported": true,
     "name": "UsePaginatedChildrenParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#linearNavigationParameters:member"
       },
       "displayName": "linearNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "linearNavigationParameters: Pick<UseLinearNavigationParameters<any, TabbableChildElement, M>[\"linearNavigationParameters\"], \"indexDemangler\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "linearNavigationParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLinearNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseLinearNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<any, TabbableChildElement, M>[\"linearNavigationParameters\"], \"indexDemangler\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "linearNavigationParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseLinearNavigationParameters:interface"
         },
         "kind": "Reference",
         "text": "UseLinearNavigationParameters"
        },
        {
         "kind": "Content",
         "text": "<any, TabbableChildElement, M>[\"linearNavigationParameters\"], \"indexDemangler\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "linearNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "linearNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseLinearNavigationParameters<any, TabbableChildElement, M>[\"linearNavigationParameters\"], \"indexDemangler\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseLinearNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseLinearNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<any, TabbableChildElement, M>[\"linearNavigationParameters\"], \"indexDemangler\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<M>[\"managedChildrenReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#paginatedChildrenParameters:member"
       },
       "displayName": "paginatedChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "paginatedChildrenParameters: {\n        paginationMin: Nullable<number>;\n        paginationMax: Nullable<number>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "paginatedChildrenParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        paginationMin: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n        paginationMax: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "paginatedChildrenParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        paginationMin: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>;\n        paginationMax: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "paginatedChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "paginatedChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        paginationMin: Nullable<number>;\n        paginationMax: Nullable<number>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        paginationMin: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n        paginationMax: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Pick<UseRefElementReturnType<ParentElement>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentElement>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<ParentElement>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<ParentElement>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentElement>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenParameters#rovingTabIndexReturn:member"
       },
       "displayName": "rovingTabIndexReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexReturn: Pick<UseRovingTabIndexReturnType<any, TabbableChildElement, M>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<any, TabbableChildElement, M>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexReturnType"
        },
        {
         "kind": "Content",
         "text": "<any, TabbableChildElement, M>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRovingTabIndexReturnType<any, TabbableChildElement, M>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<any, TabbableChildElement, M>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildrenInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePaginatedChildrenReturnType:interface"
     },
     "containerKey": "UsePaginatedChildrenReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePaginatedChildrenReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePaginatedChildrenReturnType "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePaginatedChildrenReturnType "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePaginatedChildrenReturnType",
     "fileUrlPath": "src/component-detail/use-paginated-children.tsx",
     "isExported": true,
     "name": "UsePaginatedChildrenReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UsePaginatedChildContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildContext:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePaginatedChildContext:interface"
         },
         "kind": "Reference",
         "text": "UsePaginatedChildContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UsePaginatedChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildContext:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenReturnType#managedChildrenParameters:member"
       },
       "displayName": "managedChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenParameters: {\n        onChildrenCountChange: (count: number) => void;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onChildrenCountChange: (count: number) => void;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onChildrenCountChange: (count: number) => void;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onChildrenCountChange: (count: number) => void;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onChildrenCountChange: (count: number) => void;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildrenReturnType#paginatedChildrenReturn:member"
       },
       "displayName": "paginatedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "paginatedChildrenReturn: {\n        refreshPagination: (min: Nullable<number>, max: Nullable<number>) => void;\n        childCount: Nullable<number>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "paginatedChildrenReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        refreshPagination: (min: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>, max: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>) => void;\n        childCount: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "paginatedChildrenReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        refreshPagination: (min: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>, max: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>) => void;\n        childCount: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "paginatedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "paginatedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        refreshPagination: (min: Nullable<number>, max: Nullable<number>) => void;\n        childCount: Nullable<number>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        refreshPagination: (min: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>, max: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>) => void;\n        childCount: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePaginatedChildReturn:interface"
     },
     "containerKey": "UsePaginatedChildReturn|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePaginatedChildReturn<ChildElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePaginatedChildReturn<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePaginatedChildReturn<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePaginatedChildReturn",
     "fileUrlPath": "src/component-detail/use-paginated-children.tsx",
     "isExported": true,
     "name": "UsePaginatedChildReturn",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildReturn#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Pick<UsePaginatedChildrenInfo<ChildElement>, \"setPaginationVisible\" | \"setChildCountIfPaginated\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"setPaginationVisible\" | \"setChildCountIfPaginated\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePaginatedChildrenInfo:interface"
         },
         "kind": "Reference",
         "text": "UsePaginatedChildrenInfo"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>, \"setPaginationVisible\" | \"setChildCountIfPaginated\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UsePaginatedChildrenInfo<ChildElement>, \"setPaginationVisible\" | \"setChildCountIfPaginated\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePaginatedChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UsePaginatedChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"setPaginationVisible\" | \"setChildCountIfPaginated\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildReturn#paginatedChildReturn:member"
       },
       "displayName": "paginatedChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "paginatedChildReturn: {\n        paginatedVisible: boolean;\n        isPaginated: boolean;\n        hideBecausePaginated: boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "paginatedChildReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        paginatedVisible: boolean;\n        isPaginated: boolean;\n        hideBecausePaginated: boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "paginatedChildReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        paginatedVisible: boolean;\n        isPaginated: boolean;\n        hideBecausePaginated: boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "paginatedChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "paginatedChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        paginatedVisible: boolean;\n        isPaginated: boolean;\n        hideBecausePaginated: boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        paginatedVisible: boolean;\n        isPaginated: boolean;\n        hideBecausePaginated: boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePaginatedChildReturn#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<ChildElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "usePassiveState:function(1)"
     },
     "kind": "Function",
     "containerKey": "usePassiveState|Function|1",
     "displayName": "usePassiveState",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function usePassiveState<T, R>(onChange: Nullable<OnPassiveStateChange<T, R>>, getInitialValue?: () => T, customDebounceRendering?: typeof debounceRendering): readonly [getStateStable: () => T, setStateStable: PassiveStateUpdater<T, R>];",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function usePassiveState<T, R>(onChange: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "Nullable:type"
        },
        "kind": "Reference",
        "text": "Nullable"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OnPassiveStateChange:type"
        },
        "kind": "Reference",
        "text": "OnPassiveStateChange"
       },
       {
        "kind": "Content",
        "text": "<T, R>>"
       },
       {
        "kind": "Content",
        "text": ", getInitialValue?: "
       },
       {
        "kind": "Content",
        "text": "() => T"
       },
       {
        "kind": "Content",
        "text": ", customDebounceRendering?: "
       },
       {
        "kind": "Content",
        "text": "typeof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "debounceRendering:function"
        },
        "kind": "Reference",
        "text": "debounceRendering"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "readonly [getStateStable: () => T, setStateStable: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PassiveStateUpdater:type"
        },
        "kind": "Reference",
        "text": "PassiveStateUpdater"
       },
       {
        "kind": "Content",
        "text": "<T, R>]"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "usePassiveState",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "onChange",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Nullable<OnPassiveStateChange<T, R>>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<T, R>>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "tsdocParamBlock": {
        "parameterName": "onChange",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The \"effect\" function to run when the value changes. Effectively the same as ",
             "textExcerpt": {
              "startIndex": 510,
              "endIndex": 539
             }
            },
            {
             "kind": "CodeSpan",
             "code": "useEffect"
            },
            {
             "kind": "PlainText",
             "text": "'s \"effect\" function. MUST BE STABLE, either because it has no dependencies, or because it's from useStableCallback, but this will mean you cannot use getState or setState during render.",
             "textExcerpt": {
              "startIndex": 542,
              "endIndex": 609
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "getInitialValue",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "() => T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => T"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 6
        }
       },
       "tsdocParamBlock": {
        "parameterName": "getInitialValue",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If provided, the effect will be invoked once with this value on mount. MUST BE STABLE, either because it has no dependencies, or because it's from useStableCallback, but this will mean you cannot use getState or setState during render.",
             "textExcerpt": {
              "startIndex": 618,
              "endIndex": 703
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "customDebounceRendering",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "typeof debounceRendering",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "debounceRendering:function"
          },
          "kind": "Reference",
          "text": "debounceRendering"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 8
        }
       },
       "tsdocParamBlock": {
        "parameterName": "customDebounceRendering",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "By default, changes to passive state are delayed by one tick so that we only check for changes in a similar way to Preact. You can override this to, for example, always run immediately instead.",
             "textExcerpt": {
              "startIndex": 712,
              "endIndex": 786
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "readonly [getStateStable: () => T, setStateStable: PassiveStateUpdater<T, R>]",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "readonly [getStateStable: () => T, setStateStable: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PassiveStateUpdater:type"
        },
        "kind": "Reference",
        "text": "PassiveStateUpdater"
       },
       {
        "kind": "Content",
        "text": "<T, R>]"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "R"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Similar to ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 4
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useState"
          },
          {
           "kind": "PlainText",
           "text": ", but for values that aren't \"render-important\" &ndash; updates don't cause a re-render and so the value shouldn't be used during render (though it certainly can, at least by re-rendering again).",
           "textExcerpt": {
            "startIndex": 7,
            "endIndex": 88
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "To compensate for this, you should pass a ",
           "textExcerpt": {
            "startIndex": 90,
            "endIndex": 107
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": "-esque callback that is run whenever the value changes. Just like ",
           "textExcerpt": {
            "startIndex": 110,
            "endIndex": 134
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": ", this callback can return a cleanup function that's run before the value changes. If you would like to re-render when the value changes (or, say, when the value meets some criteria), this is where you'll want to put in a call to a ",
           "textExcerpt": {
            "startIndex": 137,
            "endIndex": 237
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setState"
          },
          {
           "kind": "PlainText",
           "text": " function.",
           "textExcerpt": {
            "startIndex": 240,
            "endIndex": 243
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "To summarize, it's like a ",
           "textExcerpt": {
            "startIndex": 245,
            "endIndex": 258
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useState"
          },
          {
           "kind": "PlainText",
           "text": "-",
           "textExcerpt": {
            "startIndex": 261,
            "endIndex": 262
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": " mashup:",
           "textExcerpt": {
            "startIndex": 265,
            "endIndex": 268
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "1. It's like ",
           "textExcerpt": {
            "startIndex": 270,
            "endIndex": 279
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useState"
          },
          {
           "kind": "PlainText",
           "text": ", except this version of ",
           "textExcerpt": {
            "startIndex": 282,
            "endIndex": 292
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setState"
          },
          {
           "kind": "PlainText",
           "text": " doesn't re-render the whole component 2. It's like ",
           "textExcerpt": {
            "startIndex": 295,
            "endIndex": 319
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useState"
          },
          {
           "kind": "PlainText",
           "text": ", except you can run a function when the value changes that optionally returns a cleanup function 3. It's like ",
           "textExcerpt": {
            "startIndex": 322,
            "endIndex": 365
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": ", except you trigger the effect function \"remotely\" instead of it running after rendering 4. It's like ",
           "textExcerpt": {
            "startIndex": 368,
            "endIndex": 407
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": ", except the single \"dependency\" is based on your calls to ",
           "textExcerpt": {
            "startIndex": 410,
            "endIndex": 434
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setState"
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Note that while calling ",
           "textExcerpt": {
            "startIndex": 439,
            "endIndex": 447
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setState"
          },
          {
           "kind": "PlainText",
           "text": " doesn't cause any re-renders, you can do that within your ",
           "textExcerpt": {
            "startIndex": 450,
            "endIndex": 476
           }
          },
          {
           "kind": "CodeSpan",
           "code": "onChange"
          },
          {
           "kind": "PlainText",
           "text": " function, called whenever the value changes via that ",
           "textExcerpt": {
            "startIndex": 479,
            "endIndex": 497
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setState"
          },
          {
           "kind": "PlainText",
           "text": ".",
           "textExcerpt": {
            "startIndex": 500,
            "endIndex": 501
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "onChange",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The \"effect\" function to run when the value changes. Effectively the same as ",
              "textExcerpt": {
               "startIndex": 510,
               "endIndex": 539
              }
             },
             {
              "kind": "CodeSpan",
              "code": "useEffect"
             },
             {
              "kind": "PlainText",
              "text": "'s \"effect\" function. MUST BE STABLE, either because it has no dependencies, or because it's from useStableCallback, but this will mean you cannot use getState or setState during render.",
              "textExcerpt": {
               "startIndex": 542,
               "endIndex": 609
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "getInitialValue",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "If provided, the effect will be invoked once with this value on mount. MUST BE STABLE, either because it has no dependencies, or because it's from useStableCallback, but this will mean you cannot use getState or setState during render.",
              "textExcerpt": {
               "startIndex": 618,
               "endIndex": 703
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "customDebounceRendering",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "By default, changes to passive state are delayed by one tick so that we only check for changes in a similar way to Preact. You can override this to, for example, always run immediately instead.",
              "textExcerpt": {
               "startIndex": 712,
               "endIndex": 786
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 3,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function usePassiveState<T, R>(onChange: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "Nullable:type"
       },
       "kind": "Reference",
       "text": "Nullable"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OnPassiveStateChange:type"
       },
       "kind": "Reference",
       "text": "OnPassiveStateChange"
      },
      {
       "kind": "Content",
       "text": "<T, R>>"
      },
      {
       "kind": "Content",
       "text": ", getInitialValue?: "
      },
      {
       "kind": "Content",
       "text": "() => T"
      },
      {
       "kind": "Content",
       "text": ", customDebounceRendering?: "
      },
      {
       "kind": "Content",
       "text": "typeof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "debounceRendering:function"
       },
       "kind": "Reference",
       "text": "debounceRendering"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "readonly [getStateStable: () => T, setStateStable: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PassiveStateUpdater:type"
       },
       "kind": "Reference",
       "text": "PassiveStateUpdater"
      },
      {
       "kind": "Content",
       "text": "<T, R>]"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "usePersistentState:function(1)"
     },
     "kind": "Function",
     "containerKey": "usePersistentState|Function|1",
     "displayName": "usePersistentState",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function usePersistentState<Key extends keyof PersistentStates, T = PersistentStates[Key]>(key: Key | null, initialValue: T, fromString?: ((value: string) => T), toString?: ((value: T) => string), storage?: Storage): [T, StateUpdater<T>, () => T];",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function usePersistentState<Key extends "
       },
       {
        "kind": "Content",
        "text": "keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": ", T = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PersistentStates:interface"
        },
        "kind": "Reference",
        "text": "PersistentStates"
       },
       {
        "kind": "Content",
        "text": "[Key]"
       },
       {
        "kind": "Content",
        "text": ">(key: "
       },
       {
        "kind": "Content",
        "text": "Key | null"
       },
       {
        "kind": "Content",
        "text": ", initialValue: "
       },
       {
        "kind": "Content",
        "text": "T"
       },
       {
        "kind": "Content",
        "text": ", fromString?: "
       },
       {
        "kind": "Content",
        "text": "((value: string) => T)"
       },
       {
        "kind": "Content",
        "text": ", toString?: "
       },
       {
        "kind": "Content",
        "text": "((value: T) => string)"
       },
       {
        "kind": "Content",
        "text": ", storage?: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Storage:interface"
        },
        "kind": "Reference",
        "text": "Storage"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "[T, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-hooks!",
         "symbol": "StateUpdater:type"
        },
        "kind": "Reference",
        "text": "StateUpdater"
       },
       {
        "kind": "Content",
        "text": "<T>, () => T]"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "usePersistentState",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "key",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Key | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "Key | null"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       },
       "tsdocParamBlock": {
        "parameterName": "key",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": false,
       "name": "initialValue",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 9
        }
       },
       "tsdocParamBlock": {
        "parameterName": "initialValue",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "fromString",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "((value: string) => T)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "((value: string) => T)"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 11
        }
       },
       "tsdocParamBlock": {
        "parameterName": "fromString",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "toString",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "((value: T) => string)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "((value: T) => string)"
         }
        ],
        "tokenRange": {
         "endIndex": 14,
         "startIndex": 13
        }
       },
       "tsdocParamBlock": {
        "parameterName": "toString",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      },
      {
       "isOptional": true,
       "name": "storage",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "Storage",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Storage:interface"
          },
          "kind": "Reference",
          "text": "Storage"
         }
        ],
        "tokenRange": {
         "endIndex": 16,
         "startIndex": 15
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "[T, StateUpdater<T>, () => T]",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "[T, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-hooks!",
         "symbol": "StateUpdater:type"
        },
        "kind": "Reference",
        "text": "StateUpdater"
       },
       {
        "kind": "Content",
        "text": "<T>, () => T]"
       }
      ],
      "tokenRange": {
       "endIndex": 20,
       "startIndex": 17
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "keyof PersistentStates",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PersistentStates:interface"
          },
          "kind": "Reference",
          "text": "PersistentStates"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Key"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": false,
        "text": "PersistentStates[Key]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PersistentStates:interface"
          },
          "kind": "Reference",
          "text": "PersistentStates"
         },
         {
          "kind": "Content",
          "text": "[Key]"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 4
        }
       },
       "isOptional": true,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Use module augmentation to get the correct types for this function.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 22
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "errorLocation": {
            "startIndex": 27,
            "endIndex": 28
           },
           "errorMessage": "Error parsing code fence: The language specifier cannot contain backtick characters",
           "kind": "ErrorText",
           "messageId": "tsdoc-code-fence-specifier-syntax",
           "text": "```",
           "textExcerpt": {
            "startIndex": 24,
            "endIndex": 27
           }
          },
          {
           "kind": "CodeSpan",
           "code": " declare module 'preact-prop-helpers' { interface PersistentStates { numberState: number; stringState: string; } } "
          },
          {
           "errorLocation": {
            "startIndex": 66,
            "endIndex": 69
           },
           "errorMessage": "The opening backtick for a code fence must appear at the start of the line",
           "kind": "ErrorText",
           "messageId": "tsdoc-code-fence-opening-indent",
           "text": "```",
           "textExcerpt": {
            "startIndex": 66,
            "endIndex": 69
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "key",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "initialValue",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "fromString",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "toString",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 4,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function usePersistentState<Key extends "
      },
      {
       "kind": "Content",
       "text": "keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PersistentStates:interface"
       },
       "kind": "Reference",
       "text": "PersistentStates"
      },
      {
       "kind": "Content",
       "text": ", T = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PersistentStates:interface"
       },
       "kind": "Reference",
       "text": "PersistentStates"
      },
      {
       "kind": "Content",
       "text": "[Key]"
      },
      {
       "kind": "Content",
       "text": ">(key: "
      },
      {
       "kind": "Content",
       "text": "Key | null"
      },
      {
       "kind": "Content",
       "text": ", initialValue: "
      },
      {
       "kind": "Content",
       "text": "T"
      },
      {
       "kind": "Content",
       "text": ", fromString?: "
      },
      {
       "kind": "Content",
       "text": "((value: string) => T)"
      },
      {
       "kind": "Content",
       "text": ", toString?: "
      },
      {
       "kind": "Content",
       "text": "((value: T) => string)"
      },
      {
       "kind": "Content",
       "text": ", storage?: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Storage:interface"
       },
       "kind": "Reference",
       "text": "Storage"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "[T, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-hooks!",
        "symbol": "StateUpdater:type"
       },
       "kind": "Reference",
       "text": "StateUpdater"
      },
      {
       "kind": "Content",
       "text": "<T>, () => T]"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "usePortalChildren:function(1)"
     },
     "kind": "Function",
     "containerKey": "usePortalChildren|Function|1",
     "displayName": "usePortalChildren",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function usePortalChildren({ target }: UsePortalChildrenParameters): {\n    children: import(\"preact\").VNode<any> | null;\n    pushChild: PushPortalChild;\n    updateChild: UpdatePortalChild;\n    removeChild: RemovePortalChild;\n    portalElement: Element | null;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function usePortalChildren({ target }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePortalChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UsePortalChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "{\n    children: import(\"preact\")."
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "VNode:interface"
        },
        "kind": "Reference",
        "text": "VNode"
       },
       {
        "kind": "Content",
        "text": "<any> | null;\n    pushChild: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PushPortalChild:type"
        },
        "kind": "Reference",
        "text": "PushPortalChild"
       },
       {
        "kind": "Content",
        "text": ";\n    updateChild: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UpdatePortalChild:type"
        },
        "kind": "Reference",
        "text": "UpdatePortalChild"
       },
       {
        "kind": "Content",
        "text": ";\n    removeChild: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "RemovePortalChild:type"
        },
        "kind": "Reference",
        "text": "RemovePortalChild"
       },
       {
        "kind": "Content",
        "text": ";\n    portalElement: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "usePortalChildren",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ target }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UsePortalChildrenParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePortalChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePortalChildrenParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "{\n    children: import(\"preact\").VNode<any> | null;\n    pushChild: PushPortalChild;\n    updateChild: UpdatePortalChild;\n    removeChild: RemovePortalChild;\n    portalElement: Element | null;\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "{\n    children: import(\"preact\")."
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "VNode:interface"
        },
        "kind": "Reference",
        "text": "VNode"
       },
       {
        "kind": "Content",
        "text": "<any> | null;\n    pushChild: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "PushPortalChild:type"
        },
        "kind": "Reference",
        "text": "PushPortalChild"
       },
       {
        "kind": "Content",
        "text": ";\n    updateChild: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UpdatePortalChild:type"
        },
        "kind": "Reference",
        "text": "UpdatePortalChild"
       },
       {
        "kind": "Content",
        "text": ";\n    removeChild: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "RemovePortalChild:type"
        },
        "kind": "Reference",
        "text": "RemovePortalChild"
       },
       {
        "kind": "Content",
        "text": ";\n    portalElement: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": " | null;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Very basic hook for a root-level component to use to allow any children within the whole app to push children to a portal somewhere.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 50
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Returns the portal (as ",
           "textExcerpt": {
            "startIndex": 52,
            "endIndex": 61
           }
          },
          {
           "kind": "CodeSpan",
           "code": "children"
          },
          {
           "kind": "PlainText",
           "text": ", and functions to add, remove, or update a child to the portaled area)",
           "textExcerpt": {
            "startIndex": 64,
            "endIndex": 94
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "TODO: Can't push a child until after the very first ",
           "textExcerpt": {
            "startIndex": 96,
            "endIndex": 119
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useLayoutEffect"
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "param0",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function usePortalChildren({ target }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePortalChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UsePortalChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "{\n    children: import(\"preact\")."
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "VNode:interface"
       },
       "kind": "Reference",
       "text": "VNode"
      },
      {
       "kind": "Content",
       "text": "<any> | null;\n    pushChild: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "PushPortalChild:type"
       },
       "kind": "Reference",
       "text": "PushPortalChild"
      },
      {
       "kind": "Content",
       "text": ";\n    updateChild: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UpdatePortalChild:type"
       },
       "kind": "Reference",
       "text": "UpdatePortalChild"
      },
      {
       "kind": "Content",
       "text": ";\n    removeChild: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "RemovePortalChild:type"
       },
       "kind": "Reference",
       "text": "RemovePortalChild"
      },
      {
       "kind": "Content",
       "text": ";\n    portalElement: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": " | null;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePortalChildrenParameters:interface"
     },
     "containerKey": "UsePortalChildrenParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePortalChildrenParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePortalChildrenParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePortalChildrenParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePortalChildrenParameters",
     "fileUrlPath": "src/dom-helpers/use-portal-children.tsx",
     "isExported": true,
     "name": "UsePortalChildrenParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePortalChildrenParameters#target:member"
       },
       "displayName": "target",
       "excerpt": {
        "isEmpty": false,
        "text": "target: string | Element | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "target: "
         },
         {
          "kind": "Content",
          "text": "string | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "target: "
        },
        {
         "kind": "Content",
         "text": "string | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Element:interface"
         },
         "kind": "Reference",
         "text": "Element"
        },
        {
         "kind": "Content",
         "text": " | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "target|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "target",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "string | Element | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePortalChildrenReturnType:interface"
     },
     "containerKey": "UsePortalChildrenReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePortalChildrenReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePortalChildrenReturnType "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePortalChildrenReturnType "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePortalChildrenReturnType",
     "fileUrlPath": "src/dom-helpers/use-portal-children.tsx",
     "isExported": true,
     "name": "UsePortalChildrenReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePortalChildrenReturnType#children:member"
       },
       "displayName": "children",
       "excerpt": {
        "isEmpty": false,
        "text": "children: VNode;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "children: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "VNode:type"
          },
          "kind": "Reference",
          "text": "VNode"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "children: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "VNode:type"
         },
         "kind": "Reference",
         "text": "VNode"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "children|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "children",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "VNode",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "VNode:type"
          },
          "kind": "Reference",
          "text": "VNode"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePortalChildrenReturnType#portalElement:member"
       },
       "displayName": "portalElement",
       "excerpt": {
        "isEmpty": false,
        "text": "portalElement: Element | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "portalElement: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "portalElement: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Element:interface"
         },
         "kind": "Reference",
         "text": "Element"
        },
        {
         "kind": "Content",
         "text": " | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "portalElement|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "portalElement",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Element | null",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         },
         {
          "kind": "Content",
          "text": " | null"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePortalChildrenReturnType#pushChild:member"
       },
       "displayName": "pushChild",
       "excerpt": {
        "isEmpty": false,
        "text": "pushChild: PushPortalChild;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "pushChild: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PushPortalChild:type"
          },
          "kind": "Reference",
          "text": "PushPortalChild"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "pushChild: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PushPortalChild:type"
         },
         "kind": "Reference",
         "text": "PushPortalChild"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "pushChild|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "pushChild",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "PushPortalChild",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PushPortalChild:type"
          },
          "kind": "Reference",
          "text": "PushPortalChild"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePortalChildrenReturnType#removeChild:member"
       },
       "displayName": "removeChild",
       "excerpt": {
        "isEmpty": false,
        "text": "removeChild: RemovePortalChild;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "removeChild: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RemovePortalChild:type"
          },
          "kind": "Reference",
          "text": "RemovePortalChild"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "removeChild: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "RemovePortalChild:type"
         },
         "kind": "Reference",
         "text": "RemovePortalChild"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "removeChild|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "removeChild",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "RemovePortalChild",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RemovePortalChild:type"
          },
          "kind": "Reference",
          "text": "RemovePortalChild"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePortalChildrenReturnType#updateChild:member"
       },
       "displayName": "updateChild",
       "excerpt": {
        "isEmpty": false,
        "text": "updateChild: UpdatePortalChild;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "updateChild: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UpdatePortalChild:type"
          },
          "kind": "Reference",
          "text": "UpdatePortalChild"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "updateChild: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UpdatePortalChild:type"
         },
         "kind": "Reference",
         "text": "UpdatePortalChild"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "updateChild|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "updateChild",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UpdatePortalChild",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UpdatePortalChild:type"
          },
          "kind": "Reference",
          "text": "UpdatePortalChild"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "usePress:function(1)"
     },
     "kind": "Function",
     "containerKey": "usePress|Function|1",
     "displayName": "usePress",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function usePress<E extends Element>(args: UsePressParameters<E>): UsePressReturnType<E>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function usePress<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">(args: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePressParameters:interface"
        },
        "kind": "Reference",
        "text": "UsePressParameters"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePressReturnType:interface"
        },
        "kind": "Reference",
        "text": "UsePressReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "usePress",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "args",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UsePressParameters<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePressParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePressParameters"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UsePressReturnType<E>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UsePressReturnType:interface"
        },
        "kind": "Reference",
        "text": "UsePressReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 6
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Adds the necessary event handlers to create a \"press\"-like event for any element, whether it's a native &lt;button",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 45
           }
          },
          {
           "errorLocation": {
            "startIndex": 45,
            "endIndex": 46
           },
           "errorMessage": "The \">\" character should be escaped using a backslash to avoid confusion with an HTML tag",
           "kind": "ErrorText",
           "messageId": "tsdoc-escape-greater-than",
           "text": ">",
           "textExcerpt": {
            "startIndex": 45,
            "endIndex": 46
           }
          },
          {
           "kind": "PlainText",
           "text": " or regular &lt;div",
           "textExcerpt": {
            "startIndex": 46,
            "endIndex": 55
           }
          },
          {
           "errorLocation": {
            "startIndex": 55,
            "endIndex": 56
           },
           "errorMessage": "The \">\" character should be escaped using a backslash to avoid confusion with an HTML tag",
           "kind": "ErrorText",
           "messageId": "tsdoc-escape-greater-than",
           "text": ">",
           "textExcerpt": {
            "startIndex": 55,
            "endIndex": 56
           }
          },
          {
           "kind": "PlainText",
           "text": ", and allows for a \"long press\" that can be used to, e.g., show a tooltip *instead* of activating a press.",
           "textExcerpt": {
            "startIndex": 56,
            "endIndex": 107
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Notably, the following cases are covered: * The target element is properly focused, even on iOS Safari (*especially* on iOS Safari) * Double-clicks won't select text, it just presses the button twice. * Text selection that happens to end/start with this element won't invoke a press. * The ",
           "textExcerpt": {
            "startIndex": 109,
            "endIndex": 223
           }
          },
          {
           "kind": "CodeSpan",
           "code": "enter"
          },
          {
           "kind": "PlainText",
           "text": " key immediately invokes a press (by default just once until pressed again), while the ",
           "textExcerpt": {
            "startIndex": 226,
            "endIndex": 258
           }
          },
          {
           "kind": "CodeSpan",
           "code": "space"
          },
          {
           "kind": "PlainText",
           "text": " key invokes it when released, if focus hasn't moved away from the button. * Haptic feedback (on, like, the one browser combination that supports it &mdash; this can be disabled app-wide with ",
           "textExcerpt": {
            "startIndex": 261,
            "endIndex": 337
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setButtonVibrate"
          },
          {
           "kind": "PlainText",
           "text": ")",
           "textExcerpt": {
            "startIndex": 340,
            "endIndex": 341
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "In addition, returns a \"more accurate\" CSS ",
           "textExcerpt": {
            "startIndex": 343,
            "endIndex": 360
           }
          },
          {
           "kind": "CodeSpan",
           "code": "active"
          },
          {
           "kind": "PlainText",
           "text": " and ",
           "textExcerpt": {
            "startIndex": 363,
            "endIndex": 366
           }
          },
          {
           "kind": "CodeSpan",
           "code": "hover"
          },
          {
           "kind": "PlainText",
           "text": "; more accurate in that ",
           "textExcerpt": {
            "startIndex": 369,
            "endIndex": 379
           }
          },
          {
           "kind": "CodeSpan",
           "code": "hover"
          },
          {
           "kind": "PlainText",
           "text": " won't mess up mobile devices that see ",
           "textExcerpt": {
            "startIndex": 382,
            "endIndex": 399
           }
          },
          {
           "kind": "CodeSpan",
           "code": "hover"
          },
          {
           "kind": "PlainText",
           "text": " and mess up your click events, and in that ",
           "textExcerpt": {
            "startIndex": 402,
            "endIndex": 422
           }
          },
          {
           "kind": "CodeSpan",
           "code": "active"
          },
          {
           "kind": "PlainText",
           "text": " accurately displays when a press would occur or not.",
           "textExcerpt": {
            "startIndex": 425,
            "endIndex": 444
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "onClickSync",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "exclude",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "Whether the polyfill shouldn't apply (can specify for specific interactions)",
              "textExcerpt": {
               "startIndex": 461,
               "endIndex": 484
              }
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 2,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function usePress<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">(args: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePressParameters:interface"
       },
       "kind": "Reference",
       "text": "UsePressParameters"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePressReturnType:interface"
       },
       "kind": "Reference",
       "text": "UsePressReturnType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePressParameters:interface"
     },
     "containerKey": "UsePressParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePressParameters<E extends EventTarget> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePressParameters<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePressParameters<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePressParameters",
     "fileUrlPath": "src/component-use/use-press.tsx",
     "isExported": true,
     "name": "UsePressParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePressParameters#pressParameters:member"
       },
       "displayName": "pressParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "pressParameters: {\n        onPressingChange?: Nullable<OnPassiveStateChange<boolean, PressChangeEventReason<E>>>;\n        onPressSync: Nullable<((e: PressEventReason<E>) => void)>;\n        excludeSpace?(): boolean;\n        excludeEnter?(): boolean;\n        excludePointer?(): boolean;\n        focusSelf(element: E): void;\n        allowRepeatPresses?: Nullable<boolean>;\n        longPressThreshold?: Nullable<number>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "pressParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        onPressingChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PressChangeEventReason:type"
          },
          "kind": "Reference",
          "text": "PressChangeEventReason"
         },
         {
          "kind": "Content",
          "text": "<E>>>;\n        onPressSync: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<((e: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PressEventReason:type"
          },
          "kind": "Reference",
          "text": "PressEventReason"
         },
         {
          "kind": "Content",
          "text": "<E>) => void)>;\n        excludeSpace?(): boolean;\n        excludeEnter?(): boolean;\n        excludePointer?(): boolean;\n        focusSelf(element: E): void;\n        allowRepeatPresses?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<boolean>;\n        longPressThreshold?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 17,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "pressParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        onPressingChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<boolean, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PressChangeEventReason:type"
         },
         "kind": "Reference",
         "text": "PressChangeEventReason"
        },
        {
         "kind": "Content",
         "text": "<E>>>;\n        onPressSync: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<((e: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PressEventReason:type"
         },
         "kind": "Reference",
         "text": "PressEventReason"
        },
        {
         "kind": "Content",
         "text": "<E>) => void)>;\n        excludeSpace?(): boolean;\n        excludeEnter?(): boolean;\n        excludePointer?(): boolean;\n        focusSelf(element: E): void;\n        allowRepeatPresses?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<boolean>;\n        longPressThreshold?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "pressParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "pressParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onPressingChange?: Nullable<OnPassiveStateChange<boolean, PressChangeEventReason<E>>>;\n        onPressSync: Nullable<((e: PressEventReason<E>) => void)>;\n        excludeSpace?(): boolean;\n        excludeEnter?(): boolean;\n        excludePointer?(): boolean;\n        focusSelf(element: E): void;\n        allowRepeatPresses?: Nullable<boolean>;\n        longPressThreshold?: Nullable<number>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onPressingChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<boolean, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PressChangeEventReason:type"
          },
          "kind": "Reference",
          "text": "PressChangeEventReason"
         },
         {
          "kind": "Content",
          "text": "<E>>>;\n        onPressSync: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<((e: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PressEventReason:type"
          },
          "kind": "Reference",
          "text": "PressEventReason"
         },
         {
          "kind": "Content",
          "text": "<E>) => void)>;\n        excludeSpace?(): boolean;\n        excludeEnter?(): boolean;\n        excludePointer?(): boolean;\n        focusSelf(element: E): void;\n        allowRepeatPresses?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<boolean>;\n        longPressThreshold?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 16,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePressParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Required<Pick<UseRefElementReturnType<E>[\"refElementReturn\"], \"getElement\">>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Required:type"
          },
          "kind": "Reference",
          "text": "Required"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<E>[\"refElementReturn\"], \"getElement\">>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Required:type"
         },
         "kind": "Reference",
         "text": "Required"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<E>[\"refElementReturn\"], \"getElement\">>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Required<Pick<UseRefElementReturnType<E>[\"refElementReturn\"], \"getElement\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Required:type"
          },
          "kind": "Reference",
          "text": "Required"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<E>[\"refElementReturn\"], \"getElement\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UsePressReturnType:interface"
     },
     "containerKey": "UsePressReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UsePressReturnType<E extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UsePressReturnType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UsePressReturnType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UsePressReturnType",
     "fileUrlPath": "src/component-use/use-press.tsx",
     "isExported": true,
     "name": "UsePressReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePressReturnType#pressReturn:member"
       },
       "displayName": "pressReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "pressReturn: {\n        pressing: boolean;\n        getIsPressing(): boolean;\n        longPress: boolean | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "pressReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        pressing: boolean;\n        getIsPressing(): boolean;\n        longPress: boolean | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "pressReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        pressing: boolean;\n        getIsPressing(): boolean;\n        longPress: boolean | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "pressReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "pressReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        pressing: boolean;\n        getIsPressing(): boolean;\n        longPress: boolean | null;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        pressing: boolean;\n        getIsPressing(): boolean;\n        longPress: boolean | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UsePressReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<E>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<E>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useRandomDualIds:function(1)"
     },
     "kind": "Function",
     "containerKey": "useRandomDualIds|Function|1",
     "displayName": "useRandomDualIds",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useRandomDualIds<InputElement extends Element, LabelElement extends Element>({ randomIdInputParameters, randomIdLabelParameters, }: UseRandomDualIdsParameters): UseRandomDualIdsReturnType<InputElement, LabelElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useRandomDualIds<InputElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", LabelElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ randomIdInputParameters, randomIdLabelParameters, }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRandomDualIdsParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRandomDualIdsParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRandomDualIdsReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRandomDualIdsReturnType"
       },
       {
        "kind": "Content",
        "text": "<InputElement, LabelElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 10,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useRandomDualIds",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ randomIdInputParameters, randomIdLabelParameters, }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRandomDualIdsParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomDualIdsParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRandomDualIdsParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseRandomDualIdsReturnType<InputElement, LabelElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRandomDualIdsReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRandomDualIdsReturnType"
       },
       {
        "kind": "Content",
        "text": "<InputElement, LabelElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 7
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "InputElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "LabelElement"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "While ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 2
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useRandomId"
          },
          {
           "kind": "PlainText",
           "text": " allows the referencer to use the source's ID, sometimes you also want the reverse too (e.g. I ",
           "textExcerpt": {
            "startIndex": 5,
            "endIndex": 47
           }
          },
          {
           "kind": "CodeSpan",
           "code": "aria-label"
          },
          {
           "kind": "PlainText",
           "text": " you, you ",
           "textExcerpt": {
            "startIndex": 52,
            "endIndex": 58
           }
          },
          {
           "kind": "CodeSpan",
           "code": "aria-controls"
          },
          {
           "kind": "PlainText",
           "text": " me. That sort of thing).",
           "textExcerpt": {
            "startIndex": 63,
            "endIndex": 76
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useRandomDualIds<InputElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", LabelElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ randomIdInputParameters, randomIdLabelParameters, }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomDualIdsParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRandomDualIdsParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomDualIdsReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRandomDualIdsReturnType"
      },
      {
       "kind": "Content",
       "text": "<InputElement, LabelElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRandomDualIdsParameters:interface"
     },
     "containerKey": "UseRandomDualIdsParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRandomDualIdsParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRandomDualIdsParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRandomDualIdsParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRandomDualIdsParameters",
     "fileUrlPath": "src/component-use/use-random-dual-ids.tsx",
     "isExported": true,
     "name": "UseRandomDualIdsParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomDualIdsParameters#randomIdInputParameters:member"
       },
       "displayName": "randomIdInputParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "randomIdInputParameters: UseRandomIdParameters[\"randomIdParameters\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "randomIdInputParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdParameters"
         },
         {
          "kind": "Content",
          "text": "[\"randomIdParameters\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "randomIdInputParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRandomIdParameters:interface"
         },
         "kind": "Reference",
         "text": "UseRandomIdParameters"
        },
        {
         "kind": "Content",
         "text": "[\"randomIdParameters\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "randomIdInputParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "randomIdInputParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRandomIdParameters[\"randomIdParameters\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdParameters"
         },
         {
          "kind": "Content",
          "text": "[\"randomIdParameters\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomDualIdsParameters#randomIdLabelParameters:member"
       },
       "displayName": "randomIdLabelParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "randomIdLabelParameters: UseRandomIdParameters[\"randomIdParameters\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "randomIdLabelParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdParameters"
         },
         {
          "kind": "Content",
          "text": "[\"randomIdParameters\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "randomIdLabelParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRandomIdParameters:interface"
         },
         "kind": "Reference",
         "text": "UseRandomIdParameters"
        },
        {
         "kind": "Content",
         "text": "[\"randomIdParameters\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "randomIdLabelParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "randomIdLabelParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRandomIdParameters[\"randomIdParameters\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdParameters"
         },
         {
          "kind": "Content",
          "text": "[\"randomIdParameters\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRandomDualIdsReturnType:interface"
     },
     "containerKey": "UseRandomDualIdsReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRandomDualIdsReturnType<InputElement extends Element, LabelElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRandomDualIdsReturnType<InputElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", LabelElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRandomDualIdsReturnType<InputElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", LabelElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRandomDualIdsReturnType",
     "fileUrlPath": "src/component-use/use-random-dual-ids.tsx",
     "isExported": true,
     "name": "UseRandomDualIdsReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomDualIdsReturnType#propsInput:member"
       },
       "displayName": "propsInput",
       "excerpt": {
        "isEmpty": false,
        "text": "propsInput: ElementProps<InputElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsInput: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<InputElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsInput: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<InputElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsInput|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsInput",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<InputElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<InputElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomDualIdsReturnType#propsLabel:member"
       },
       "displayName": "propsLabel",
       "excerpt": {
        "isEmpty": false,
        "text": "propsLabel: ElementProps<LabelElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsLabel: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<LabelElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsLabel: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<LabelElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsLabel|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsLabel",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<LabelElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<LabelElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomDualIdsReturnType#randomIdInputReturn:member"
       },
       "displayName": "randomIdInputReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "randomIdInputReturn: UseRandomIdReturnType<InputElement, LabelElement>[\"randomIdReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "randomIdInputReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdReturnType"
         },
         {
          "kind": "Content",
          "text": "<InputElement, LabelElement>[\"randomIdReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "randomIdInputReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRandomIdReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRandomIdReturnType"
        },
        {
         "kind": "Content",
         "text": "<InputElement, LabelElement>[\"randomIdReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "randomIdInputReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "randomIdInputReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRandomIdReturnType<InputElement, LabelElement>[\"randomIdReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdReturnType"
         },
         {
          "kind": "Content",
          "text": "<InputElement, LabelElement>[\"randomIdReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomDualIdsReturnType#randomIdLabelReturn:member"
       },
       "displayName": "randomIdLabelReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "randomIdLabelReturn: UseRandomIdReturnType<LabelElement, InputElement>[\"randomIdReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "randomIdLabelReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdReturnType"
         },
         {
          "kind": "Content",
          "text": "<LabelElement, InputElement>[\"randomIdReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "randomIdLabelReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRandomIdReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRandomIdReturnType"
        },
        {
         "kind": "Content",
         "text": "<LabelElement, InputElement>[\"randomIdReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "randomIdLabelReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "randomIdLabelReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRandomIdReturnType<LabelElement, InputElement>[\"randomIdReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdReturnType"
         },
         {
          "kind": "Content",
          "text": "<LabelElement, InputElement>[\"randomIdReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "InputElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "LabelElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useRandomId:function(1)"
     },
     "kind": "Function",
     "containerKey": "useRandomId|Function|1",
     "displayName": "useRandomId",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useRandomId<S extends Element, T extends Element>({ randomIdParameters: { prefix, otherReferencerProp } }: UseRandomIdParameters): UseRandomIdReturnType<S, T>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useRandomId<S extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRandomIdParameters#randomIdParameters"
        },
        "kind": "Reference",
        "text": "randomIdParameters"
       },
       {
        "kind": "Content",
        "text": ": { prefix, otherReferencerProp } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRandomIdParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRandomIdParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRandomIdReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRandomIdReturnType"
       },
       {
        "kind": "Content",
        "text": "<S, T>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useRandomId",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ randomIdParameters: { prefix, otherReferencerProp } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRandomIdParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRandomIdParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRandomIdParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseRandomIdReturnType<S, T>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRandomIdReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRandomIdReturnType"
       },
       {
        "kind": "Content",
        "text": "<S, T>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "S"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useRandomId<S extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomIdParameters#randomIdParameters"
       },
       "kind": "Reference",
       "text": "randomIdParameters"
      },
      {
       "kind": "Content",
       "text": ": { prefix, otherReferencerProp } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomIdParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRandomIdParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomIdReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRandomIdReturnType"
      },
      {
       "kind": "Content",
       "text": "<S, T>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRandomIdParameters:interface"
     },
     "containerKey": "UseRandomIdParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRandomIdParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRandomIdParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRandomIdParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRandomIdParameters",
     "fileUrlPath": "src/component-use/use-random-id.tsx",
     "isExported": true,
     "name": "UseRandomIdParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomIdParameters#randomIdParameters:member"
       },
       "displayName": "randomIdParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "randomIdParameters: {\n        prefix: string;\n        otherReferencerProp: keyof ElementProps<any> | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "randomIdParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        prefix: string;\n        otherReferencerProp: keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<any> | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "randomIdParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        prefix: string;\n        otherReferencerProp: keyof "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<any> | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "randomIdParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "randomIdParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        prefix: string;\n        otherReferencerProp: keyof ElementProps<any> | null;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        prefix: string;\n        otherReferencerProp: keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<any> | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRandomIdReturnType:interface"
     },
     "containerKey": "UseRandomIdReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRandomIdReturnType<S extends Element, T extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRandomIdReturnType<S extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRandomIdReturnType<S extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRandomIdReturnType",
     "fileUrlPath": "src/component-use/use-random-id.tsx",
     "isExported": true,
     "name": "UseRandomIdReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomIdReturnType#propsReferencer:member"
       },
       "displayName": "propsReferencer",
       "excerpt": {
        "isEmpty": false,
        "text": "propsReferencer: ElementProps<T>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsReferencer: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<T>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsReferencer: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<T>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsReferencer|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsReferencer",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomIdReturnType#propsSource:member"
       },
       "displayName": "propsSource",
       "excerpt": {
        "isEmpty": false,
        "text": "propsSource: ElementProps<S>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsSource: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<S>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsSource: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<S>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsSource|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsSource",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<S>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<S>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRandomIdReturnType#randomIdReturn:member"
       },
       "displayName": "randomIdReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "randomIdReturn: {\n        id: string;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "randomIdReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        id: string;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "randomIdReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        id: string;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "randomIdReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "randomIdReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        id: string;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        id: string;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "S"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRearrangeableChildInfo:interface"
     },
     "containerKey": "UseRearrangeableChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRearrangeableChildInfo extends ManagedChildInfo<number> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRearrangeableChildInfo extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<number>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRearrangeableChildInfo extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<number>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "ManagedChildInfo<number>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<number>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "UseRearrangeableChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "isExported": true,
     "name": "UseRearrangeableChildInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useRearrangeableChildren:function(1)"
     },
     "kind": "Function",
     "containerKey": "useRearrangeableChildren|Function|1",
     "displayName": "useRearrangeableChildren",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useRearrangeableChildren<M extends UseSortableChildInfo>({ rearrangeableChildrenParameters: { getIndex, onRearranged }, managedChildrenReturn: { getChildren } }: UseRearrangeableChildrenParameters<M>): UseRearrangeableChildrenReturnType<M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useRearrangeableChildren<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildrenParameters#rearrangeableChildrenParameters"
        },
        "kind": "Reference",
        "text": "rearrangeableChildrenParameters"
       },
       {
        "kind": "Content",
        "text": ": { getIndex, onRearranged }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildrenParameters#managedChildrenReturn"
        },
        "kind": "Reference",
        "text": "managedChildrenReturn"
       },
       {
        "kind": "Content",
        "text": ": { getChildren } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useRearrangeableChildren",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ rearrangeableChildrenParameters: { getIndex, onRearranged }, managedChildrenReturn: { getChildren } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildrenParameters<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseRearrangeableChildrenReturnType<M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 10
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseSortableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Hook that allows for the **direct descendant** children of this component to be re-ordered and sorted.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 38
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "*This is **separate** from \"managed\" children, which can be any level of child needed! Sortable/rearrangeable children must be **direct descendants** of the parent that uses this hook!*",
           "textExcerpt": {
            "startIndex": 40,
            "endIndex": 110
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "It's recommended to use this in conjunction with ",
           "textExcerpt": {
            "startIndex": 112,
            "endIndex": 130
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useListNavigation"
          },
          {
           "kind": "PlainText",
           "text": "; it takes the same ",
           "textExcerpt": {
            "startIndex": 133,
            "endIndex": 143
           }
          },
          {
           "kind": "CodeSpan",
           "code": "indexMangler"
          },
          {
           "kind": "PlainText",
           "text": " and ",
           "textExcerpt": {
            "startIndex": 146,
            "endIndex": 149
           }
          },
          {
           "kind": "CodeSpan",
           "code": "indexDemangler"
          },
          {
           "kind": "PlainText",
           "text": " functions that this hook returns. ",
           "textExcerpt": {
            "startIndex": 152,
            "endIndex": 164
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useListNavigation"
          },
          {
           "kind": "PlainText",
           "text": " does not directly use this hook because, as mentioned, this hook imposes serious restrictions on child structure, while ",
           "textExcerpt": {
            "startIndex": 167,
            "endIndex": 207
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useListNavigation"
          },
          {
           "kind": "PlainText",
           "text": " allows anything.",
           "textExcerpt": {
            "startIndex": 210,
            "endIndex": 215
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Besides the prop-modifying hook that's returned, the ",
           "textExcerpt": {
            "startIndex": 217,
            "endIndex": 236
           }
          },
          {
           "kind": "CodeSpan",
           "code": "sort"
          },
          {
           "kind": "PlainText",
           "text": " function that's returned will sort all children according to their value from the ",
           "textExcerpt": {
            "startIndex": 239,
            "endIndex": 268
           }
          },
          {
           "kind": "CodeSpan",
           "code": "getValue"
          },
          {
           "kind": "PlainText",
           "text": " argument you pass in.",
           "textExcerpt": {
            "startIndex": 271,
            "endIndex": 280
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "If you want to perform some re-ordering operation that's *not* a sort, you can manually re-map each child's position using ",
           "textExcerpt": {
            "startIndex": 282,
            "endIndex": 333
           }
          },
          {
           "kind": "CodeSpan",
           "code": "mangleMap"
          },
          {
           "kind": "PlainText",
           "text": " and ",
           "textExcerpt": {
            "startIndex": 336,
            "endIndex": 339
           }
          },
          {
           "kind": "CodeSpan",
           "code": "demangleMap"
          },
          {
           "kind": "PlainText",
           "text": ", which convert between sorted and unsorted index positions.",
           "textExcerpt": {
            "startIndex": 342,
            "endIndex": 360
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Again, unlike some other hooks, **these children must be direct descendants**. This is because the prop-modifying hook inspects the given children, then re-creates them with new ",
           "textExcerpt": {
            "startIndex": 362,
            "endIndex": 426
           }
          },
          {
           "kind": "CodeSpan",
           "code": "key"
          },
          {
           "kind": "PlainText",
           "text": "s. Because keys are given special treatment and a child has no way of modifying its own key there's no other time or place this can happen other than exactly within the parent component's render function.",
           "textExcerpt": {
            "startIndex": 429,
            "endIndex": 506
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useRearrangeableChildren<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenParameters#rearrangeableChildrenParameters"
       },
       "kind": "Reference",
       "text": "rearrangeableChildrenParameters"
      },
      {
       "kind": "Content",
       "text": ": { getIndex, onRearranged }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenParameters#managedChildrenReturn"
       },
       "kind": "Reference",
       "text": "managedChildrenReturn"
      },
      {
       "kind": "Content",
       "text": ": { getChildren } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRearrangeableChildrenParameters:interface"
     },
     "containerKey": "UseRearrangeableChildrenParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRearrangeableChildrenParameters<M extends UseRearrangeableChildInfo> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRearrangeableChildrenParameters<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildInfo"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRearrangeableChildrenParameters<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildInfo"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRearrangeableChildrenParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "isExported": true,
     "name": "UseRearrangeableChildrenParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenParameters#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: Pick<UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"], \"getChildren\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"], \"getChildren\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<M>[\"managedChildrenReturn\"], \"getChildren\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"], \"getChildren\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"], \"getChildren\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenParameters#rearrangeableChildrenParameters:member"
       },
       "displayName": "rearrangeableChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "rearrangeableChildrenParameters: {\n        getIndex: GetIndex;\n        onRearranged: null | (() => void);\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rearrangeableChildrenParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        getIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GetIndex:type"
          },
          "kind": "Reference",
          "text": "GetIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        onRearranged: null | (() => void);\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rearrangeableChildrenParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        getIndex: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "GetIndex:type"
         },
         "kind": "Reference",
         "text": "GetIndex"
        },
        {
         "kind": "Content",
         "text": ";\n        onRearranged: null | (() => void);\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rearrangeableChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rearrangeableChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getIndex: GetIndex;\n        onRearranged: null | (() => void);\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "GetIndex:type"
          },
          "kind": "Reference",
          "text": "GetIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        onRearranged: null | (() => void);\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Must return, e.g., the row index of this child (Usually just an ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 30
             }
            },
            {
             "kind": "CodeSpan",
             "code": "index"
            },
            {
             "kind": "PlainText",
             "text": " prop)",
             "textExcerpt": {
              "startIndex": 33,
              "endIndex": 36
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "All of these functions **MUST** be stable across renders.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 22
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRearrangeableChildrenReturnType:interface"
     },
     "containerKey": "UseRearrangeableChildrenReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRearrangeableChildrenReturnType<M extends UseRearrangeableChildInfo> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRearrangeableChildrenReturnType<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildInfo"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRearrangeableChildrenReturnType<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildInfo"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRearrangeableChildrenReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "isExported": true,
     "name": "UseRearrangeableChildrenReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenReturnType#rearrangeableChildrenReturn:member"
       },
       "displayName": "rearrangeableChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "rearrangeableChildrenReturn: {\n        rearrange: (originalRows: M[], rowsInOrder: M[]) => void;\n        shuffle: () => Promise<void> | void;\n        reverse: () => Promise<void> | void;\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        useRearrangedChildren: (children: VNode[]) => VNode[];\n        toJsonArray(transform?: (info: M) => object): object;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rearrangeableChildrenReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        rearrange: (originalRows: M[], rowsInOrder: M[]) => void;\n        shuffle: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<void> | void;\n        reverse: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<void> | void;\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        useRearrangedChildren: (children: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "VNode:type"
          },
          "kind": "Reference",
          "text": "VNode"
         },
         {
          "kind": "Content",
          "text": "[]) => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "VNode:type"
          },
          "kind": "Reference",
          "text": "VNode"
         },
         {
          "kind": "Content",
          "text": "[];\n        toJsonArray(transform?: (info: M) => object): object;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 11,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rearrangeableChildrenReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        rearrange: (originalRows: M[], rowsInOrder: M[]) => void;\n        shuffle: () => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Promise:interface"
         },
         "kind": "Reference",
         "text": "Promise"
        },
        {
         "kind": "Content",
         "text": "<void> | void;\n        reverse: () => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Promise:interface"
         },
         "kind": "Reference",
         "text": "Promise"
        },
        {
         "kind": "Content",
         "text": "<void> | void;\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        useRearrangedChildren: (children: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "VNode:type"
         },
         "kind": "Reference",
         "text": "VNode"
        },
        {
         "kind": "Content",
         "text": "[]) => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "VNode:type"
         },
         "kind": "Reference",
         "text": "VNode"
        },
        {
         "kind": "Content",
         "text": "[];\n        toJsonArray(transform?: (info: M) => object): object;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rearrangeableChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rearrangeableChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        rearrange: (originalRows: M[], rowsInOrder: M[]) => void;\n        shuffle: () => Promise<void> | void;\n        reverse: () => Promise<void> | void;\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        useRearrangedChildren: (children: VNode[]) => VNode[];\n        toJsonArray(transform?: (info: M) => object): object;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        rearrange: (originalRows: M[], rowsInOrder: M[]) => void;\n        shuffle: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<void> | void;\n        reverse: () => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<void> | void;\n        indexMangler: (n: number) => number;\n        indexDemangler: (n: number) => number;\n        useRearrangedChildren: (children: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "VNode:type"
          },
          "kind": "Reference",
          "text": "VNode"
         },
         {
          "kind": "Content",
          "text": "[]) => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "VNode:type"
          },
          "kind": "Reference",
          "text": "VNode"
         },
         {
          "kind": "Content",
          "text": "[];\n        toJsonArray(transform?: (info: M) => object): object;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useRefElement:function(1)"
     },
     "kind": "Function",
     "containerKey": "useRefElement|Function|1",
     "displayName": "useRefElement",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useRefElement<T extends EventTarget>(args: UseRefElementParameters<T>): UseRefElementReturnType<T>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useRefElement<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": ">(args: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementParameters"
       },
       {
        "kind": "Content",
        "text": "<T>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementReturnType"
       },
       {
        "kind": "Content",
        "text": "<T>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 9,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useRefElement",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "args",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRefElementParameters<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementParameters"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseRefElementReturnType<T>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementReturnType"
       },
       {
        "kind": "Content",
        "text": "<T>"
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 6
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows accessing the element a ref references as soon as it does so. *This hook itself returns a hook*--useRefElementProps modifies the props that you were going to pass to an HTMLElement, adding a RefCallback and merging it with any existing ref that existed on the props.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 99
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Don't forget to provide the Element as the type argument!",
           "textExcerpt": {
            "startIndex": 101,
            "endIndex": 123
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " The element, and the sub-hook that makes it retrievable.",
            "textExcerpt": {
             "startIndex": 127,
             "endIndex": 149
            }
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useRefElement<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": ">(args: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRefElementParameters"
      },
      {
       "kind": "Content",
       "text": "<T>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRefElementReturnType"
      },
      {
       "kind": "Content",
       "text": "<T>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRefElementParameters:interface"
     },
     "containerKey": "UseRefElementParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRefElementParameters<T> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRefElementParameters<T> "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRefElementParameters<T> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRefElementParameters",
     "fileUrlPath": "src/dom-helpers/use-ref-element.tsx",
     "isExported": true,
     "name": "UseRefElementParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementParameters#refElementParameters:member"
       },
       "displayName": "refElementParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementParameters?: {\n        onElementChange?: OnPassiveStateChange<T | null, never>;\n        onMount?: (element: T) => void;\n        onUnmount?: (element: T) => void;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementParameters?: "
         },
         {
          "kind": "Content",
          "text": "{\n        onElementChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<T | null, never>;\n        onMount?: (element: T) => void;\n        onUnmount?: (element: T) => void;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementParameters?: "
        },
        {
         "kind": "Content",
         "text": "{\n        onElementChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<T | null, never>;\n        onMount?: (element: T) => void;\n        onUnmount?: (element: T) => void;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        onElementChange?: OnPassiveStateChange<T | null, never>;\n        onMount?: (element: T) => void;\n        onUnmount?: (element: T) => void;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        onElementChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<T | null, never>;\n        onMount?: (element: T) => void;\n        onUnmount?: (element: T) => void;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "For the sake of convenience, this one is optional, since using this hook is so common, but using its parameter options is so uncommon, and it's absense isn't usually because it was forgotten, it's because it doesn't matter.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 89
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRefElementReturnType:interface"
     },
     "containerKey": "UseRefElementReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRefElementReturnType<T extends EventTarget> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRefElementReturnType<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "EventTarget:interface"
        },
        "kind": "Reference",
        "text": "EventTarget"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRefElementReturnType<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "EventTarget:interface"
       },
       "kind": "Reference",
       "text": "EventTarget"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRefElementReturnType",
     "fileUrlPath": "src/dom-helpers/use-ref-element.tsx",
     "isExported": true,
     "name": "UseRefElementReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementReturnType#propsStable:member"
       },
       "displayName": "propsStable",
       "excerpt": {
        "isEmpty": false,
        "text": "propsStable: ElementProps<T>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsStable: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<T>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsStable: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<T>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsStable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsStable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementReturnType#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: {\n        getElement(): T | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getElement(): T | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getElement(): T | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getElement(): T | null;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getElement(): T | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "EventTarget",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "EventTarget:interface"
          },
          "kind": "Reference",
          "text": "EventTarget"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useRovingTabIndex:function(1)"
     },
     "kind": "Function",
     "containerKey": "useRovingTabIndex|Function|1",
     "displayName": "useRovingTabIndex",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useRovingTabIndex<ParentElement extends Element, ChildElement extends Element, M extends UseRovingTabIndexChildInfo<ChildElement>>({ managedChildrenReturn: { getChildren }, rovingTabIndexParameters: { focusSelfParent: focusSelfParentUnstable, untabbable, untabbableBehavior, initiallyTabbedIndex, onTabbableIndexChange }, refElementReturn: { getElement }, ...void1 }: UseRovingTabIndexParameters<ParentElement, ChildElement, M>): UseRovingTabIndexReturnType<ParentElement, ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useRovingTabIndex<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexParameters#managedChildrenReturn"
        },
        "kind": "Reference",
        "text": "managedChildrenReturn"
       },
       {
        "kind": "Content",
        "text": ": { getChildren }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexParameters#rovingTabIndexParameters"
        },
        "kind": "Reference",
        "text": "rovingTabIndexParameters"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#focusSelfParent"
        },
        "kind": "Reference",
        "text": "focusSelfParent"
       },
       {
        "kind": "Content",
        "text": ": focusSelfParentUnstable, untabbable, untabbableBehavior, initiallyTabbedIndex, onTabbableIndexChange }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexParameters#refElementReturn"
        },
        "kind": "Reference",
        "text": "refElementReturn"
       },
       {
        "kind": "Content",
        "text": ": { getElement }, ...void1 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 22,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useRovingTabIndex",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ managedChildrenReturn: { getChildren }, rovingTabIndexParameters: { focusSelfParent: focusSelfParentUnstable, untabbable, untabbableBehavior, initiallyTabbedIndex, onTabbableIndexChange }, refElementReturn: { getElement }, ...void1 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexParameters<ParentElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 16
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseRovingTabIndexReturnType<ParentElement, ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentElement, ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 19
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Implements a roving tabindex system where only one \"focusable\" component in a set is able to receive a tab focus. *Which* of those elements receives focus is determined by you, but it's recommended to offload that logic then to another hook, like ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 93
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useLinearNavigation"
          },
          {
           "kind": "PlainText",
           "text": ", which lets you change the tabbable element with the arrow keys, ",
           "textExcerpt": {
            "startIndex": 96,
            "endIndex": 121
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useTypeaheadNavigation"
          },
          {
           "kind": "PlainText",
           "text": ", which lets you change the tabbable index with typeahead, or ",
           "textExcerpt": {
            "startIndex": 124,
            "endIndex": 147
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useListNavigation"
          },
          {
           "kind": "PlainText",
           "text": " if you just want everything bundled together.",
           "textExcerpt": {
            "startIndex": 150,
            "endIndex": 165
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Note that the child hook returned by this function must be used by every child that uses this roving tabindex logic. The prop-modifying hook *that* hook returns should then be used on the child's element, as well as any other elements you'd like to be explicitly made untabbable too.",
           "textExcerpt": {
            "startIndex": 167,
            "endIndex": 275
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "CodeSpan",
           "code": "shouldFocusOnChange"
          },
          {
           "kind": "PlainText",
           "text": " should return true if focus is contained within whatever element contains the roving tab index. Generally as simple as the following:",
           "textExcerpt": {
            "startIndex": 280,
            "endIndex": 324
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "code": "const [focusedInner, setFocusedInner] = useState(false);\nconst { useHasFocusProps } = useHasFocus<ParentElement>({ setFocusedInner });\nconst focusOnChange = (focusedInner != false);\n",
         "kind": "FencedCode",
         "language": ""
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "PlainText",
           "text": "It's not included here because ",
           "textExcerpt": {
            "startIndex": 390,
            "endIndex": 402
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useRovingTabIndex"
          },
          {
           "kind": "PlainText",
           "text": " doesn't know anything about the container element, only children elements. And just as well! Children should be allowed at the root, regardless of if it's the whole app or just a given component.",
           "textExcerpt": {
            "startIndex": 405,
            "endIndex": 480
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useRovingTabIndex<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexParameters#managedChildrenReturn"
       },
       "kind": "Reference",
       "text": "managedChildrenReturn"
      },
      {
       "kind": "Content",
       "text": ": { getChildren }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexParameters#rovingTabIndexParameters"
       },
       "kind": "Reference",
       "text": "rovingTabIndexParameters"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#focusSelfParent"
       },
       "kind": "Reference",
       "text": "focusSelfParent"
      },
      {
       "kind": "Content",
       "text": ": focusSelfParentUnstable, untabbable, untabbableBehavior, initiallyTabbedIndex, onTabbableIndexChange }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexParameters#refElementReturn"
       },
       "kind": "Reference",
       "text": "refElementReturn"
      },
      {
       "kind": "Content",
       "text": ": { getElement }, ...void1 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useRovingTabIndexChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useRovingTabIndexChild|Function|1",
     "displayName": "useRovingTabIndexChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useRovingTabIndexChild<ChildElement extends Element, M extends UseRovingTabIndexChildInfo<ChildElement>>({ info: { index, untabbable: iAmUntabbable, ...void2 }, context: { rovingTabIndexContext: { giveParentFocusedElement, untabbable: parentIsUntabbable, untabbableBehavior, reevaluateClosestFit, setTabbableIndex, getInitiallyTabbedIndex, parentFocusSelf } }, refElementReturn: { getElement }, ...void3 }: UseRovingTabIndexChildParameters<ChildElement, M>): UseRovingTabIndexChildReturnType<ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useRovingTabIndexChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildParameters#info"
        },
        "kind": "Reference",
        "text": "info"
       },
       {
        "kind": "Content",
        "text": ": { index, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "untabbable"
        },
        "kind": "Reference",
        "text": "untabbable"
       },
       {
        "kind": "Content",
        "text": ": iAmUntabbable, ...void2 }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "RovingTabIndexChildContext#rovingTabIndexContext"
        },
        "kind": "Reference",
        "text": "rovingTabIndexContext"
       },
       {
        "kind": "Content",
        "text": ": { giveParentFocusedElement, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#untabbable"
        },
        "kind": "Reference",
        "text": "untabbable"
       },
       {
        "kind": "Content",
        "text": ": parentIsUntabbable, untabbableBehavior, reevaluateClosestFit, setTabbableIndex, getInitiallyTabbedIndex, parentFocusSelf } }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "refElementReturn"
        },
        "kind": "Reference",
        "text": "refElementReturn"
       },
       {
        "kind": "Content",
        "text": ": { getElement }, ...void3 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 24,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useRovingTabIndexChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info: { index, untabbable: iAmUntabbable, ...void2 }, context: { rovingTabIndexContext: { giveParentFocusedElement, untabbable: parentIsUntabbable, untabbableBehavior, reevaluateClosestFit, setTabbableIndex, getInitiallyTabbedIndex, parentFocusSelf } }, refElementReturn: { getElement }, ...void3 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 20,
         "startIndex": 18
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseRovingTabIndexChildReturnType<ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 23,
       "startIndex": 21
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useRovingTabIndexChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildParameters#info"
       },
       "kind": "Reference",
       "text": "info"
      },
      {
       "kind": "Content",
       "text": ": { index, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "untabbable"
       },
       "kind": "Reference",
       "text": "untabbable"
      },
      {
       "kind": "Content",
       "text": ": iAmUntabbable, ...void2 }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "RovingTabIndexChildContext#rovingTabIndexContext"
       },
       "kind": "Reference",
       "text": "rovingTabIndexContext"
      },
      {
       "kind": "Content",
       "text": ": { giveParentFocusedElement, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#untabbable"
       },
       "kind": "Reference",
       "text": "untabbable"
      },
      {
       "kind": "Content",
       "text": ": parentIsUntabbable, untabbableBehavior, reevaluateClosestFit, setTabbableIndex, getInitiallyTabbedIndex, parentFocusSelf } }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "refElementReturn"
       },
       "kind": "Reference",
       "text": "refElementReturn"
      },
      {
       "kind": "Content",
       "text": ": { getElement }, ...void3 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRovingTabIndexChildInfo:interface"
     },
     "containerKey": "UseRovingTabIndexChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRovingTabIndexChildInfo<TabbableChildElement extends Element> extends Pick<ManagedChildInfo<number>, \"index\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRovingTabIndexChildInfo<TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "ManagedChildInfo:interface"
        },
        "kind": "Reference",
        "text": "ManagedChildInfo"
       },
       {
        "kind": "Content",
        "text": "<number>, \"index\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRovingTabIndexChildInfo<TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "ManagedChildInfo:interface"
       },
       "kind": "Reference",
       "text": "ManagedChildInfo"
      },
      {
       "kind": "Content",
       "text": "<number>, \"index\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<ManagedChildInfo<number>, \"index\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ManagedChildInfo:interface"
          },
          "kind": "Reference",
          "text": "ManagedChildInfo"
         },
         {
          "kind": "Content",
          "text": "<number>, \"index\">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseRovingTabIndexChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-roving-tabindex.tsx",
     "isExported": true,
     "name": "UseRovingTabIndexChildInfo",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo#focusSelf:member(1)"
       },
       "displayName": "focusSelf",
       "excerpt": {
        "isEmpty": false,
        "text": "focusSelf(e: TabbableChildElement): void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "focusSelf(e: "
         },
         {
          "kind": "Content",
          "text": "TabbableChildElement"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "focusSelf(e: "
        },
        {
         "kind": "Content",
         "text": "TabbableChildElement"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "focusSelf|MethodSignature|1",
       "isOptional": false,
       "name": "focusSelf",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "e",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "TabbableChildElement",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "TabbableChildElement"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "void"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "When we navigate to a child and focus it, we need to know how that child wants to be focused. Generally, this is just getElement().focus(), but you're allowed to supply anything you want here. Grid rows, for example, don't directly focus themselves but instead call one of their cell's ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 117
             }
            },
            {
             "kind": "CodeSpan",
             "code": "focusSelf"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 120,
              "endIndex": 121
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This is used when the tabbable index changes (we auto-focus the newly tabbable element if applicable), and also by the ",
             "textExcerpt": {
              "startIndex": 123,
              "endIndex": 168
             }
            },
            {
             "kind": "CodeSpan",
             "code": "focusSelf"
            },
            {
             "kind": "PlainText",
             "text": " value returned by the parent (i.e. ",
             "textExcerpt": {
              "startIndex": 171,
              "endIndex": 188
             }
            },
            {
             "kind": "CodeSpan",
             "code": "parent.focusSelf"
            },
            {
             "kind": "PlainText",
             "text": " calls one child's ",
             "textExcerpt": {
              "startIndex": 193,
              "endIndex": 202
             }
            },
            {
             "kind": "CodeSpan",
             "code": "focusSelf"
            },
            {
             "kind": "PlainText",
             "text": ")",
             "textExcerpt": {
              "startIndex": 205,
              "endIndex": 206
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo#getElement:member(1)"
       },
       "displayName": "getElement",
       "excerpt": {
        "isEmpty": false,
        "text": "getElement(): TabbableChildElement | null;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getElement(): "
         },
         {
          "kind": "Content",
          "text": "TabbableChildElement | null"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getElement(): "
        },
        {
         "kind": "Content",
         "text": "TabbableChildElement | null"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getElement|MethodSignature|1",
       "isOptional": false,
       "name": "getElement",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "TabbableChildElement | null",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "TabbableChildElement | null"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo#getLocallyTabbable:member"
       },
       "displayName": "getLocallyTabbable",
       "excerpt": {
        "isEmpty": false,
        "text": "getLocallyTabbable: () => boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getLocallyTabbable: "
         },
         {
          "kind": "Content",
          "text": "() => boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getLocallyTabbable: "
        },
        {
         "kind": "Content",
         "text": "() => boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getLocallyTabbable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "getLocallyTabbable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo#setLocallyTabbable:member"
       },
       "displayName": "setLocallyTabbable",
       "excerpt": {
        "isEmpty": false,
        "text": "setLocallyTabbable: StateUpdater<boolean>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setLocallyTabbable: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-hooks!",
           "symbol": "StateUpdater:type"
          },
          "kind": "Reference",
          "text": "StateUpdater"
         },
         {
          "kind": "Content",
          "text": "<boolean>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setLocallyTabbable: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-hooks!",
          "symbol": "StateUpdater:type"
         },
         "kind": "Reference",
         "text": "StateUpdater"
        },
        {
         "kind": "Content",
         "text": "<boolean>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setLocallyTabbable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "setLocallyTabbable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "StateUpdater<boolean>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-hooks!",
           "symbol": "StateUpdater:type"
          },
          "kind": "Reference",
          "text": "StateUpdater"
         },
         {
          "kind": "Content",
          "text": "<boolean>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo#untabbable:member"
       },
       "displayName": "untabbable",
       "excerpt": {
        "isEmpty": false,
        "text": "untabbable: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "untabbable: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "untabbable: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "untabbable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "untabbable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If a child **exists** but **can't be tabbed to**, then set this to ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 37
             }
            },
            {
             "kind": "CodeSpan",
             "code": "true"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 40,
              "endIndex": 41
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This cannot be calculated automatically. It's *possible* to catch something like ",
             "textExcerpt": {
              "startIndex": 43,
              "endIndex": 70
             }
            },
            {
             "kind": "CodeSpan",
             "code": "display: none"
            },
            {
             "kind": "PlainText",
             "text": " with some reflow-forcing ",
             "textExcerpt": {
              "startIndex": 76,
              "endIndex": 85
             }
            },
            {
             "kind": "CodeSpan",
             "code": "getComputedStyles"
            },
            {
             "kind": "PlainText",
             "text": " or something, but if the child is untabbable because it's disabled or staggered or paginated or something we just have no way of knowing. It could be untabbable for any arbitrary reason the user decides.",
             "textExcerpt": {
              "startIndex": 88,
              "endIndex": 163
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If the child is **missing** instead (i.e. it does not exist), then there's no issue. You couldn't even supply this property because the child who would supply it is, by definition, missing. This is, to be clear, about **existing** children whomst are untabbable for any reason at all.",
             "textExcerpt": {
              "startIndex": 165,
              "endIndex": 285
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRovingTabIndexChildParameters:interface"
     },
     "containerKey": "UseRovingTabIndexChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRovingTabIndexChildParameters<TabbableChildElement extends Element, M extends UseRovingTabIndexChildInfo<TabbableChildElement>> extends Pick<UseRefElementReturnType<TabbableChildElement>, \"refElementReturn\">, OmitStrong<UseManagedChildParameters<M>, \"info\" | \"context\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRovingTabIndexChildParameters<TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRefElementReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRefElementReturnType"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>, \"refElementReturn\">"
       },
       {
        "kind": "Content",
        "text": ", "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseManagedChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseManagedChildParameters"
       },
       {
        "kind": "Content",
        "text": "<M>, \"info\" | \"context\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 16,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRovingTabIndexChildParameters<TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRefElementReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRefElementReturnType"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>, \"refElementReturn\">"
      },
      {
       "kind": "Content",
       "text": ", "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseManagedChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseManagedChildParameters"
      },
      {
       "kind": "Content",
       "text": "<M>, \"info\" | \"context\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<TabbableChildElement>, \"refElementReturn\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>, \"refElementReturn\">"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 6
        }
       }
      },
      {
       "excerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseManagedChildParameters<M>, \"info\" | \"context\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildParameters"
         },
         {
          "kind": "Content",
          "text": "<M>, \"info\" | \"context\">"
         }
        ],
        "tokenRange": {
         "endIndex": 15,
         "startIndex": 11
        }
       }
      }
     ],
     "displayName": "UseRovingTabIndexChildParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-roving-tabindex.tsx",
     "isExported": true,
     "name": "UseRovingTabIndexChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: RovingTabIndexChildContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RovingTabIndexChildContext:interface"
          },
          "kind": "Reference",
          "text": "RovingTabIndexChildContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "RovingTabIndexChildContext:interface"
         },
         "kind": "Reference",
         "text": "RovingTabIndexChildContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "RovingTabIndexChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RovingTabIndexChildContext:interface"
          },
          "kind": "Reference",
          "text": "RovingTabIndexChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The information provided by the parent hook",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 13
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Pick<UseManagedChildParameters<M>[\"info\"], UseRovingTabIndexChildInfoKeys>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildParameters"
         },
         {
          "kind": "Content",
          "text": "<M>[\"info\"], "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfoKeys:type"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfoKeys"
         },
         {
          "kind": "Content",
          "text": ">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildParameters:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildParameters"
        },
        {
         "kind": "Content",
         "text": "<M>[\"info\"], "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexChildInfoKeys:type"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexChildInfoKeys"
        },
        {
         "kind": "Content",
         "text": ">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseManagedChildParameters<M>[\"info\"], UseRovingTabIndexChildInfoKeys>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildParameters"
         },
         {
          "kind": "Content",
          "text": "<M>[\"info\"], "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfoKeys:type"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfoKeys"
         },
         {
          "kind": "Content",
          "text": ">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRovingTabIndexChildReturnType:interface"
     },
     "containerKey": "UseRovingTabIndexChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRovingTabIndexChildReturnType<ChildElement extends Element, _M extends UseRovingTabIndexChildInfo<ChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRovingTabIndexChildReturnType<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", _M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRovingTabIndexChildReturnType<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", _M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRovingTabIndexChildReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-roving-tabindex.tsx",
     "isExported": true,
     "name": "UseRovingTabIndexChildReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildReturnType#hasCurrentFocusParameters:member"
       },
       "displayName": "hasCurrentFocusParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "hasCurrentFocusParameters: Required<Pick<UseHasCurrentFocusParameters<ChildElement>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "hasCurrentFocusParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Required:type"
          },
          "kind": "Reference",
          "text": "Required"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "hasCurrentFocusParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Required:type"
         },
         "kind": "Reference",
         "text": "Required"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseHasCurrentFocusParameters:interface"
         },
         "kind": "Reference",
         "text": "UseHasCurrentFocusParameters"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "hasCurrentFocusParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "hasCurrentFocusParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Required<Pick<UseHasCurrentFocusParameters<ChildElement>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Required:type"
          },
          "kind": "Reference",
          "text": "Required"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseHasCurrentFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseHasCurrentFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"hasCurrentFocusParameters\"], \"onCurrentFocusedInnerChanged\">>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This is used to handle the case where a user clicks on an element or manually focuses it in some other way.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 44
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "We need to know if we're currently focused so that we can tell the parent to mark this child as the currently tabbable child.",
             "textExcerpt": {
              "startIndex": 46,
              "endIndex": 96
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildReturnType#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Pick<UseRovingTabIndexChildInfo<ChildElement>, \"getLocallyTabbable\" | \"setLocallyTabbable\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"getLocallyTabbable\" | \"setLocallyTabbable\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexChildInfo"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>, \"getLocallyTabbable\" | \"setLocallyTabbable\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRovingTabIndexChildInfo<ChildElement>, \"getLocallyTabbable\" | \"setLocallyTabbable\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"getLocallyTabbable\" | \"setLocallyTabbable\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<ChildElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "*Unstable*",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 3
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The props that must be applied to this child in order for this hook to work.",
             "textExcerpt": {
              "startIndex": 5,
              "endIndex": 37
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The object itself, as well as the properties within it, are unstable and should be rendered by the same component that uses this hook.",
             "textExcerpt": {
              "startIndex": 39,
              "endIndex": 89
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildReturnType#rovingTabIndexChildReturn:member"
       },
       "displayName": "rovingTabIndexChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexChildReturn: {\n        tabbable: boolean;\n        getTabbable(): boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexChildReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        tabbable: boolean;\n        getTabbable(): boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexChildReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        tabbable: boolean;\n        getTabbable(): boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        tabbable: boolean;\n        getTabbable(): boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        tabbable: boolean;\n        getTabbable(): boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Return information about the tabbable state of this child",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 17
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRovingTabIndexParameters:interface"
     },
     "containerKey": "UseRovingTabIndexParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRovingTabIndexParameters<ParentElement extends Element, TabbableChildElement extends Element, M extends UseRovingTabIndexChildInfo<TabbableChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRovingTabIndexParameters<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRovingTabIndexParameters<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRovingTabIndexParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-roving-tabindex.tsx",
     "isExported": true,
     "name": "UseRovingTabIndexParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexParameters#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: Pick<UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"], \"getChildren\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"], \"getChildren\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<M>[\"managedChildrenReturn\"], \"getChildren\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"], \"getChildren\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"], \"getChildren\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "When children mount/unmount, RTI needs access to all known children in case we unmounted the currently tabbable child",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 38
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Pick<UseRefElementReturnType<ParentElement>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentElement>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<ParentElement>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<ParentElement>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentElement>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexParameters#rovingTabIndexParameters:member"
       },
       "displayName": "rovingTabIndexParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexParameters: {\n        focusSelfParent(e: ParentElement | null): void;\n        initiallyTabbedIndex: number | null;\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        onTabbableIndexChange?: Nullable<OnPassiveStateChange<number | null, Event>>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        focusSelfParent(e: ParentElement | null): void;\n        initiallyTabbedIndex: number | null;\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        onTabbableIndexChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ">>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        focusSelfParent(e: ParentElement | null): void;\n        initiallyTabbedIndex: number | null;\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        onTabbableIndexChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<number | null, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Event:interface"
         },
         "kind": "Reference",
         "text": "Event"
        },
        {
         "kind": "Content",
         "text": ">>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        focusSelfParent(e: ParentElement | null): void;\n        initiallyTabbedIndex: number | null;\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        onTabbableIndexChange?: Nullable<OnPassiveStateChange<number | null, Event>>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        focusSelfParent(e: ParentElement | null): void;\n        initiallyTabbedIndex: number | null;\n        untabbable: boolean;\n        untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\n        onTabbableIndexChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ">>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The only parameters RTI needs directly is the initial index to be tabbable",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 25
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseRovingTabIndexReturnType:interface"
     },
     "containerKey": "UseRovingTabIndexReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseRovingTabIndexReturnType<ParentElement extends Element, TabbableChildElement extends Element, _M extends UseRovingTabIndexChildInfo<TabbableChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseRovingTabIndexReturnType<ParentElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", _M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseRovingTabIndexReturnType<ParentElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", _M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseRovingTabIndexReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-roving-tabindex.tsx",
     "isExported": true,
     "name": "UseRovingTabIndexReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: RovingTabIndexChildContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RovingTabIndexChildContext:interface"
          },
          "kind": "Reference",
          "text": "RovingTabIndexChildContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "RovingTabIndexChildContext:interface"
         },
         "kind": "Reference",
         "text": "RovingTabIndexChildContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "RovingTabIndexChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "RovingTabIndexChildContext:interface"
          },
          "kind": "Reference",
          "text": "RovingTabIndexChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "STABLE",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 1
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexReturnType#managedChildrenParameters:member"
       },
       "displayName": "managedChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenParameters: Pick<UseManagedChildrenParameters<UseRovingTabIndexChildInfo<TabbableChildElement>>[\"managedChildrenParameters\"], \"onChildrenMountChange\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>>[\"managedChildrenParameters\"], \"onChildrenMountChange\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenParameters:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenParameters"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexChildInfo"
        },
        {
         "kind": "Content",
         "text": "<TabbableChildElement>>[\"managedChildrenParameters\"], \"onChildrenMountChange\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseManagedChildrenParameters<UseRovingTabIndexChildInfo<TabbableChildElement>>[\"managedChildrenParameters\"], \"onChildrenMountChange\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>>[\"managedChildrenParameters\"], \"onChildrenMountChange\">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "RTI runs logic when its children mount/unmount themselves",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 17
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<ParentElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ParentElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ParentElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexReturnType#rovingTabIndexReturn:member"
       },
       "displayName": "rovingTabIndexReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexReturn: {\n        setTabbableIndex: SetTabbableIndex;\n        getTabbableIndex: () => number | null;\n        focusSelf: (reason?: any) => void;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        setTabbableIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        getTabbableIndex: () => number | null;\n        focusSelf: (reason?: any) => void;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        setTabbableIndex: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SetTabbableIndex:type"
         },
         "kind": "Reference",
         "text": "SetTabbableIndex"
        },
        {
         "kind": "Content",
         "text": ";\n        getTabbableIndex: () => number | null;\n        focusSelf: (reason?: any) => void;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        setTabbableIndex: SetTabbableIndex;\n        getTabbableIndex: () => number | null;\n        focusSelf: (reason?: any) => void;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        setTabbableIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SetTabbableIndex:type"
          },
          "kind": "Reference",
          "text": "SetTabbableIndex"
         },
         {
          "kind": "Content",
          "text": ";\n        getTabbableIndex: () => number | null;\n        focusSelf: (reason?: any) => void;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Return information that lets the user update/query/focus the currently tabbable child",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 25
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useSearchParamState:function(1)"
     },
     "kind": "Function",
     "containerKey": "useSearchParamState|Function|1",
     "displayName": "useSearchParamState",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useSearchParamState<Key extends keyof SearchParamStates>({ key: paramKey, defaultReason, stringToValue, initialValue, onValueChange, valueToString }: UseSearchParamStateParameters<Key, SearchParamStates[Key]>): readonly [() => SearchParamStates[Key], SetParamWithHistory<SearchParamStates[Key]>];",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useSearchParamState<Key extends "
       },
       {
        "kind": "Content",
        "text": "keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSearchParamStateParameters#key"
        },
        "kind": "Reference",
        "text": "key"
       },
       {
        "kind": "Content",
        "text": ": paramKey, defaultReason, stringToValue, initialValue, onValueChange, valueToString }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSearchParamStateParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSearchParamStateParameters"
       },
       {
        "kind": "Content",
        "text": "<Key, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "readonly [() => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key], "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SetParamWithHistory:type"
        },
        "kind": "Reference",
        "text": "SetParamWithHistory"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]>]"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useSearchParamState",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ key: paramKey, defaultReason, stringToValue, initialValue, onValueChange, valueToString }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSearchParamStateParameters<Key, SearchParamStates[Key]>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSearchParamStateParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSearchParamStateParameters"
         },
         {
          "kind": "Content",
          "text": "<Key, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SearchParamStates:interface"
          },
          "kind": "Reference",
          "text": "SearchParamStates"
         },
         {
          "kind": "Content",
          "text": "[Key]>"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "readonly [() => SearchParamStates[Key], SetParamWithHistory<SearchParamStates[Key]>]",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "readonly [() => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key], "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SetParamWithHistory:type"
        },
        "kind": "Reference",
        "text": "SetParamWithHistory"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]>]"
       }
      ],
      "tokenRange": {
       "endIndex": 18,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "keyof SearchParamStates",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SearchParamStates:interface"
          },
          "kind": "Reference",
          "text": "SearchParamStates"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Key"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Provides access to the requested Search Param's value",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 17
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Note that while this function is like usePassiveState (itself like useState and useEffect combined), the ",
           "textExcerpt": {
            "startIndex": 19,
            "endIndex": 52
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setState"
          },
          {
           "kind": "PlainText",
           "text": " return function is, due to browser limitations, not syncronous, but that's like most calls to ",
           "textExcerpt": {
            "startIndex": 55,
            "endIndex": 91
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setState"
          },
          {
           "kind": "PlainText",
           "text": " anyway I guess?",
           "textExcerpt": {
            "startIndex": 94,
            "endIndex": 101
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [
        {
         "parameterName": "paramKey",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The name of the URL search parameter to reference",
              "textExcerpt": {
               "startIndex": 110,
               "endIndex": 127
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "type",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "The type of data encode/decode (",
              "textExcerpt": {
               "startIndex": 136,
               "endIndex": 149
              }
             },
             {
              "kind": "CodeSpan",
              "code": "\"string\""
             },
             {
              "kind": "PlainText",
              "text": " | ",
              "textExcerpt": {
               "startIndex": 154,
               "endIndex": 157
              }
             },
             {
              "kind": "CodeSpan",
              "code": "\"boolean\""
             },
             {
              "kind": "PlainText",
              "text": " | ",
              "textExcerpt": {
               "startIndex": 162,
               "endIndex": 165
              }
             },
             {
              "kind": "CodeSpan",
              "code": "\"number\""
             },
             {
              "kind": "PlainText",
              "text": " | ",
              "textExcerpt": {
               "startIndex": 170,
               "endIndex": 173
              }
             },
             {
              "kind": "CodeSpan",
              "code": "\"bigint\""
             },
             {
              "kind": "PlainText",
              "text": ")",
              "textExcerpt": {
               "startIndex": 178,
               "endIndex": 179
              }
             },
             {
              "kind": "SoftBreak"
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        },
        {
         "parameterName": "onParamValueChanged",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": [
           {
            "kind": "Paragraph",
            "nodes": [
             {
              "kind": "PlainText",
              "text": "Will be called any time the requested Search Parameter's value changes.",
              "textExcerpt": {
               "startIndex": 188,
               "endIndex": 212
              }
             },
             {
              "kind": "SoftBreak"
             }
            ]
           }
          ]
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 3,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useSearchParamState<Key extends "
      },
      {
       "kind": "Content",
       "text": "keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters#key"
       },
       "kind": "Reference",
       "text": "key"
      },
      {
       "kind": "Content",
       "text": ": paramKey, defaultReason, stringToValue, initialValue, onValueChange, valueToString }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSearchParamStateParameters"
      },
      {
       "kind": "Content",
       "text": "<Key, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": "[Key]>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "readonly [() => "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": "[Key], "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SetParamWithHistory:type"
       },
       "kind": "Reference",
       "text": "SetParamWithHistory"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": "[Key]>]"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useSearchParamStateDeclarative:function(1)"
     },
     "kind": "Function",
     "containerKey": "useSearchParamStateDeclarative|Function|1",
     "displayName": "useSearchParamStateDeclarative",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useSearchParamStateDeclarative<Key extends keyof SearchParamStates>({ key, defaultReason, stringToValue, initialValue, valueToString }: OmitStrong<UseSearchParamStateParameters<Key, SearchParamStates[Key]>, \"onValueChange\">): readonly [SearchParamStates[Key], SetParamWithHistory<SearchParamStates[Key]>, () => SearchParamStates[Key]];",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useSearchParamStateDeclarative<Key extends "
       },
       {
        "kind": "Content",
        "text": "keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": ">({ key, defaultReason, stringToValue, initialValue, valueToString }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "OmitStrong:type"
        },
        "kind": "Reference",
        "text": "OmitStrong"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSearchParamStateParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSearchParamStateParameters"
       },
       {
        "kind": "Content",
        "text": "<Key, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]>, \"onValueChange\">"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "readonly ["
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key], "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SetParamWithHistory:type"
        },
        "kind": "Reference",
        "text": "SetParamWithHistory"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]>, () => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]]"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useSearchParamStateDeclarative",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ key, defaultReason, stringToValue, initialValue, valueToString }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "OmitStrong<UseSearchParamStateParameters<Key, SearchParamStates[Key]>, \"onValueChange\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OmitStrong:type"
          },
          "kind": "Reference",
          "text": "OmitStrong"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSearchParamStateParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSearchParamStateParameters"
         },
         {
          "kind": "Content",
          "text": "<Key, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SearchParamStates:interface"
          },
          "kind": "Reference",
          "text": "SearchParamStates"
         },
         {
          "kind": "Content",
          "text": "[Key]>, \"onValueChange\">"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 4
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "readonly [SearchParamStates[Key], SetParamWithHistory<SearchParamStates[Key]>, () => SearchParamStates[Key]]",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "readonly ["
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key], "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SetParamWithHistory:type"
        },
        "kind": "Reference",
        "text": "SetParamWithHistory"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]>, () => "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]]"
       }
      ],
      "tokenRange": {
       "endIndex": 20,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "keyof SearchParamStates",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SearchParamStates:interface"
          },
          "kind": "Reference",
          "text": "SearchParamStates"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Key"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useSearchParamStateDeclarative<Key extends "
      },
      {
       "kind": "Content",
       "text": "keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": ">({ key, defaultReason, stringToValue, initialValue, valueToString }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "OmitStrong:type"
       },
       "kind": "Reference",
       "text": "OmitStrong"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSearchParamStateParameters"
      },
      {
       "kind": "Content",
       "text": "<Key, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": "[Key]>, \"onValueChange\">"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "readonly ["
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": "[Key], "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SetParamWithHistory:type"
       },
       "kind": "Reference",
       "text": "SetParamWithHistory"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": "[Key]>, () => "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": "[Key]]"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSearchParamStateParameters:interface"
     },
     "containerKey": "UseSearchParamStateParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSearchParamStateParameters<Key extends keyof SearchParamStates, T = SearchParamStates[Key]> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSearchParamStateParameters<Key extends "
       },
       {
        "kind": "Content",
        "text": "keyof "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": ", T = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "SearchParamStates:interface"
        },
        "kind": "Reference",
        "text": "SearchParamStates"
       },
       {
        "kind": "Content",
        "text": "[Key]"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSearchParamStateParameters<Key extends "
      },
      {
       "kind": "Content",
       "text": "keyof "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": ", T = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "SearchParamStates:interface"
       },
       "kind": "Reference",
       "text": "SearchParamStates"
      },
      {
       "kind": "Content",
       "text": "[Key]"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseSearchParamStateParameters",
     "fileUrlPath": "src/preact-extensions/use-search-param-state.tsx",
     "isExported": true,
     "name": "UseSearchParamStateParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters#defaultReason:member"
       },
       "displayName": "defaultReason",
       "excerpt": {
        "isEmpty": false,
        "text": "defaultReason?: \"push\" | \"replace\";",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "defaultReason?: "
         },
         {
          "kind": "Content",
          "text": "\"push\" | \"replace\""
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "defaultReason?: "
        },
        {
         "kind": "Content",
         "text": "\"push\" | \"replace\""
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "defaultReason|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "defaultReason",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "\"push\" | \"replace\"",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "\"push\" | \"replace\""
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "How is the user's history modified when the state changes if not otherwise specified? \"",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 32
             }
            },
            {
             "kind": "CodeSpan",
             "code": "replace"
            },
            {
             "kind": "PlainText",
             "text": "\" is recommended unless you *really* have a good reason to clog up the back button.",
             "textExcerpt": {
              "startIndex": 35,
              "endIndex": 69
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters#initialValue:member"
       },
       "displayName": "initialValue",
       "excerpt": {
        "isEmpty": false,
        "text": "initialValue: T;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "initialValue: "
         },
         {
          "kind": "Content",
          "text": "T"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "initialValue: "
        },
        {
         "kind": "Content",
         "text": "T"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "initialValue|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "initialValue",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "If there is no valu in the URL for this state, then ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 25
             }
            },
            {
             "kind": "CodeSpan",
             "code": "initialValue"
            },
            {
             "kind": "PlainText",
             "text": " will be used instead.",
             "textExcerpt": {
              "startIndex": 28,
              "endIndex": 37
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters#key:member"
       },
       "displayName": "key",
       "excerpt": {
        "isEmpty": false,
        "text": "key: Key;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "key: "
         },
         {
          "kind": "Content",
          "text": "Key"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "key: "
        },
        {
         "kind": "Content",
         "text": "Key"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "key|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "key",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Key",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "Key"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters#onValueChange:member"
       },
       "displayName": "onValueChange",
       "excerpt": {
        "isEmpty": false,
        "text": "onValueChange?: OnParamValueChanged<T> | null | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "onValueChange?: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnParamValueChanged:type"
          },
          "kind": "Reference",
          "text": "OnParamValueChanged"
         },
         {
          "kind": "Content",
          "text": "<T> | null | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "onValueChange?: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnParamValueChanged:type"
         },
         "kind": "Reference",
         "text": "OnParamValueChanged"
        },
        {
         "kind": "Content",
         "text": "<T> | null | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "onValueChange|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "onValueChange",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "OnParamValueChanged<T> | null | undefined",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnParamValueChanged:type"
          },
          "kind": "Reference",
          "text": "OnParamValueChanged"
         },
         {
          "kind": "Content",
          "text": "<T> | null | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters#stringToValue:member"
       },
       "displayName": "stringToValue",
       "excerpt": {
        "isEmpty": false,
        "text": "stringToValue: ((value: string | null) => T | null);",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "stringToValue: "
         },
         {
          "kind": "Content",
          "text": "((value: string | null) => T | null)"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "stringToValue: "
        },
        {
         "kind": "Content",
         "text": "((value: string | null) => T | null)"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "stringToValue|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "stringToValue",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "((value: string | null) => T | null)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "((value: string | null) => T | null)"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSearchParamStateParameters#valueToString:member"
       },
       "displayName": "valueToString",
       "excerpt": {
        "isEmpty": false,
        "text": "valueToString?: ((value: T | null) => (string | null)) | undefined;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "valueToString?: "
         },
         {
          "kind": "Content",
          "text": "((value: T | null) => (string | null)) | undefined"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "valueToString?: "
        },
        {
         "kind": "Content",
         "text": "((value: T | null) => (string | null)) | undefined"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "valueToString|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "valueToString",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "((value: T | null) => (string | null)) | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "((value: T | null) => (string | null)) | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "keyof SearchParamStates",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "keyof "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SearchParamStates:interface"
          },
          "kind": "Reference",
          "text": "SearchParamStates"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "Key"
      },
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": false,
        "text": "SearchParamStates[Key]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SearchParamStates:interface"
          },
          "kind": "Reference",
          "text": "SearchParamStates"
         },
         {
          "kind": "Content",
          "text": "[Key]"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 4
        }
       },
       "isOptional": true,
       "name": "T"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useSingleSelection:function(1)"
     },
     "kind": "Function",
     "containerKey": "useSingleSelection|Function|1",
     "displayName": "useSingleSelection",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useSingleSelection<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseSingleSelectionChildInfo<ChildElement>>({ managedChildrenReturn: { getChildren }, rovingTabIndexReturn: { setTabbableIndex }, singleSelectionParameters: { onSelectedIndexChange: onSelectedIndexChange_U, initiallySelectedIndex, ariaPropName, selectionMode } }: UseSingleSelectionParameters<ParentOrChildElement, ChildElement, M>): UseSingleSelectionReturnType<ChildElement, M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useSingleSelection<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionParameters#managedChildrenReturn"
        },
        "kind": "Reference",
        "text": "managedChildrenReturn"
       },
       {
        "kind": "Content",
        "text": ": { getChildren }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionParameters#rovingTabIndexReturn"
        },
        "kind": "Reference",
        "text": "rovingTabIndexReturn"
       },
       {
        "kind": "Content",
        "text": ": { setTabbableIndex }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionParameters#singleSelectionParameters"
        },
        "kind": "Reference",
        "text": "singleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#onSelectedIndexChange"
        },
        "kind": "Reference",
        "text": "onSelectedIndexChange"
       },
       {
        "kind": "Content",
        "text": ": onSelectedIndexChange_U, initiallySelectedIndex, ariaPropName, selectionMode } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionParameters"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement, ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 22,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useSingleSelection",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ managedChildrenReturn: { getChildren }, rovingTabIndexReturn: { setTabbableIndex }, singleSelectionParameters: { onSelectedIndexChange: onSelectedIndexChange_U, initiallySelectedIndex, ariaPropName, selectionMode } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionParameters<ParentOrChildElement, ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 16
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseSingleSelectionReturnType<ChildElement, M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 19
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useSingleSelection<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters#managedChildrenReturn"
       },
       "kind": "Reference",
       "text": "managedChildrenReturn"
      },
      {
       "kind": "Content",
       "text": ": { getChildren }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters#rovingTabIndexReturn"
       },
       "kind": "Reference",
       "text": "rovingTabIndexReturn"
      },
      {
       "kind": "Content",
       "text": ": { setTabbableIndex }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters#singleSelectionParameters"
       },
       "kind": "Reference",
       "text": "singleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#onSelectedIndexChange"
       },
       "kind": "Reference",
       "text": "onSelectedIndexChange"
      },
      {
       "kind": "Content",
       "text": ": onSelectedIndexChange_U, initiallySelectedIndex, ariaPropName, selectionMode } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionParameters"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement, ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useSingleSelectionChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useSingleSelectionChild|Function|1",
     "displayName": "useSingleSelectionChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useSingleSelectionChild<ChildElement extends Element, M extends UseSingleSelectionChildInfo<ChildElement>>(args: UseSingleSelectionChildParameters<ChildElement, M>): UseSingleSelectionChildReturnType<ChildElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useSingleSelectionChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">(args: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useSingleSelectionChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "args",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionChildParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 6
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseSingleSelectionChildReturnType<ChildElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useSingleSelectionChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">(args: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSingleSelectionChildInfo:interface"
     },
     "containerKey": "UseSingleSelectionChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSingleSelectionChildInfo<E extends Element> extends UseRovingTabIndexChildInfo<E> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSingleSelectionChildInfo<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSingleSelectionChildInfo<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRovingTabIndexChildInfo<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseSingleSelectionChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "isExported": true,
     "name": "UseSingleSelectionChildInfo",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo#getSelected:member(1)"
       },
       "displayName": "getSelected",
       "excerpt": {
        "isEmpty": false,
        "text": "getSelected(): boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getSelected(): "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getSelected(): "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getSelected|MethodSignature|1",
       "isOptional": false,
       "name": "getSelected",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo#selected:member"
       },
       "displayName": "selected",
       "excerpt": {
        "isEmpty": false,
        "text": "selected: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "selected: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "selected: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "selected|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "selected",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo#setLocalSelected:member(1)"
       },
       "displayName": "setLocalSelected",
       "excerpt": {
        "isEmpty": false,
        "text": "setLocalSelected(selected: boolean, direction: number | null): void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setLocalSelected(selected: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ", direction: "
         },
         {
          "kind": "Content",
          "text": "number | null"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setLocalSelected(selected: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ", direction: "
        },
        {
         "kind": "Content",
         "text": "number | null"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setLocalSelected|MethodSignature|1",
       "isOptional": false,
       "name": "setLocalSelected",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "selected",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "boolean",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "boolean"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         },
         "tsdocParamBlock": {
          "parameterName": "selected",
          "kind": "ParamBlock",
          "content": {
           "kind": "Section",
           "nodes": [
            {
             "kind": "Paragraph",
             "nodes": [
              {
               "kind": "PlainText",
               "text": "This is the selected child (out of all of them)",
               "textExcerpt": {
                "startIndex": 68,
                "endIndex": 89
               }
              },
              {
               "kind": "SoftBreak"
              },
              {
               "kind": "SoftBreak"
              }
             ]
            }
           ]
          },
          "blockTag": {
           "kind": "BlockTag",
           "tagName": "@param"
          }
         }
        },
        {
         "isOptional": false,
         "name": "direction",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "number | null",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "number | null"
           }
          ],
          "tokenRange": {
           "endIndex": 4,
           "startIndex": 3
          }
         },
         "tsdocParamBlock": {
          "parameterName": "direction",
          "kind": "ParamBlock",
          "content": {
           "kind": "Section",
           "nodes": [
            {
             "kind": "Paragraph",
             "nodes": [
              {
               "kind": "PlainText",
               "text": "How far to the ",
               "textExcerpt": {
                "startIndex": 98,
                "endIndex": 106
               }
              },
              {
               "kind": "CodeSpan",
               "code": "selectedIndex"
              },
              {
               "kind": "PlainText",
               "text": " this child is",
               "textExcerpt": {
                "startIndex": 109,
                "endIndex": 115
               }
              },
              {
               "kind": "SoftBreak"
              }
             ]
            }
           ]
          },
          "blockTag": {
           "kind": "BlockTag",
           "tagName": "@param"
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "void"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 5
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The parent calls this to change the child's local state.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 22
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "When the ",
             "textExcerpt": {
              "startIndex": 24,
              "endIndex": 28
             }
            },
            {
             "kind": "CodeSpan",
             "code": "selectedIndex"
            },
            {
             "kind": "PlainText",
             "text": " changes, the relevant children's ",
             "textExcerpt": {
              "startIndex": 31,
              "endIndex": 43
             }
            },
            {
             "kind": "CodeSpan",
             "code": "setLocalSelected"
            },
            {
             "kind": "PlainText",
             "text": " are called (max of 2).",
             "textExcerpt": {
              "startIndex": 46,
              "endIndex": 59
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [
          {
           "parameterName": "selected",
           "kind": "ParamBlock",
           "content": {
            "kind": "Section",
            "nodes": [
             {
              "kind": "Paragraph",
              "nodes": [
               {
                "kind": "PlainText",
                "text": "This is the selected child (out of all of them)",
                "textExcerpt": {
                 "startIndex": 68,
                 "endIndex": 89
                }
               },
               {
                "kind": "SoftBreak"
               },
               {
                "kind": "SoftBreak"
               }
              ]
             }
            ]
           },
           "blockTag": {
            "kind": "BlockTag",
            "tagName": "@param"
           }
          },
          {
           "parameterName": "direction",
           "kind": "ParamBlock",
           "content": {
            "kind": "Section",
            "nodes": [
             {
              "kind": "Paragraph",
              "nodes": [
               {
                "kind": "PlainText",
                "text": "How far to the ",
                "textExcerpt": {
                 "startIndex": 98,
                 "endIndex": 106
                }
               },
               {
                "kind": "CodeSpan",
                "code": "selectedIndex"
               },
               {
                "kind": "PlainText",
                "text": " this child is",
                "textExcerpt": {
                 "startIndex": 109,
                 "endIndex": 115
                }
               },
               {
                "kind": "SoftBreak"
               }
              ]
             }
            ]
           },
           "blockTag": {
            "kind": "BlockTag",
            "tagName": "@param"
           }
          }
         ],
         "count": 2,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo#unselectable:member"
       },
       "displayName": "unselectable",
       "excerpt": {
        "isEmpty": false,
        "text": "unselectable: boolean;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unselectable: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "unselectable: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "unselectable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "unselectable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "boolean",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "boolean"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "This is similar to ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 8
             }
            },
            {
             "kind": "CodeSpan",
             "code": "untabbable"
            },
            {
             "kind": "PlainText",
             "text": " for ",
             "textExcerpt": {
              "startIndex": 11,
              "endIndex": 14
             }
            },
            {
             "kind": "CodeSpan",
             "code": "useRovingTabIndex"
            },
            {
             "kind": "PlainText",
             "text": ", but for selection.",
             "textExcerpt": {
              "startIndex": 17,
              "endIndex": 25
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Disables selecting this child. Being ",
             "textExcerpt": {
              "startIndex": 27,
              "endIndex": 38
             }
            },
            {
             "kind": "CodeSpan",
             "code": "untabbable"
            },
            {
             "kind": "PlainText",
             "text": " must imply being ",
             "textExcerpt": {
              "startIndex": 41,
              "endIndex": 48
             }
            },
            {
             "kind": "CodeSpan",
             "code": "unselectable"
            },
            {
             "kind": "PlainText",
             "text": ", but you can of course have something that's unselectable but not untabbable.",
             "textExcerpt": {
              "startIndex": 51,
              "endIndex": 79
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Anything that's selectable must be tabbable, so we DO use rovingtabindex instead of just managedchildren",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 32
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSingleSelectionChildParameters:interface"
     },
     "containerKey": "UseSingleSelectionChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSingleSelectionChildParameters<E extends Element, M extends UseSingleSelectionChildInfo<E>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSingleSelectionChildParameters<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSingleSelectionChildParameters<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseSingleSelectionChildParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "isExported": true,
     "name": "UseSingleSelectionChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseSingleSelectionContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionContext:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Pick<UseSingleSelectionChildInfo<E>, UseSingleSelectionChildInfoKeys>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<E>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfoKeys:type"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfoKeys"
         },
         {
          "kind": "Content",
          "text": ">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionChildInfo"
        },
        {
         "kind": "Content",
         "text": "<E>, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionChildInfoKeys:type"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionChildInfoKeys"
        },
        {
         "kind": "Content",
         "text": ">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseSingleSelectionChildInfo<E>, UseSingleSelectionChildInfoKeys>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<E>, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfoKeys:type"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfoKeys"
         },
         {
          "kind": "Content",
          "text": ">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionChildInfo<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSingleSelectionChildReturnType:interface"
     },
     "containerKey": "UseSingleSelectionChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSingleSelectionChildReturnType<E extends Element> extends UseChildrenHaveFocusChildReturnType<E> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSingleSelectionChildReturnType<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseChildrenHaveFocusChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseChildrenHaveFocusChildReturnType"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSingleSelectionChildReturnType<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseChildrenHaveFocusChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseChildrenHaveFocusChildReturnType"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseChildrenHaveFocusChildReturnType<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusChildReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusChildReturnType"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseSingleSelectionChildReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "isExported": true,
     "name": "UseSingleSelectionChildReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildReturnType#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Pick<UseSingleSelectionChildInfo<E>, \"getSelected\" | \"setLocalSelected\" | \"selected\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<E>, \"getSelected\" | \"setLocalSelected\" | \"selected\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionChildInfo"
        },
        {
         "kind": "Content",
         "text": "<E>, \"getSelected\" | \"setLocalSelected\" | \"selected\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseSingleSelectionChildInfo<E>, \"getSelected\" | \"setLocalSelected\" | \"selected\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<E>, \"getSelected\" | \"setLocalSelected\" | \"selected\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildReturnType#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<E>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<E>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildReturnType#singleSelectionChildReturn:member"
       },
       "displayName": "singleSelectionChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "singleSelectionChildReturn: {\n        selected: boolean;\n        getSelected(): boolean;\n        selectedOffset: Nullable<number>;\n        getSelectedOffset: () => (number | null);\n        setThisOneSelected: (event: Event) => void;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "singleSelectionChildReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        selected: boolean;\n        getSelected(): boolean;\n        selectedOffset: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n        getSelectedOffset: () => (number | null);\n        setThisOneSelected: (event: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ") => void;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "singleSelectionChildReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        selected: boolean;\n        getSelected(): boolean;\n        selectedOffset: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>;\n        getSelectedOffset: () => (number | null);\n        setThisOneSelected: (event: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Event:interface"
         },
         "kind": "Reference",
         "text": "Event"
        },
        {
         "kind": "Content",
         "text": ") => void;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "singleSelectionChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "singleSelectionChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        selected: boolean;\n        getSelected(): boolean;\n        selectedOffset: Nullable<number>;\n        getSelectedOffset: () => (number | null);\n        setThisOneSelected: (event: Event) => void;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        selected: boolean;\n        getSelected(): boolean;\n        selectedOffset: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>;\n        getSelectedOffset: () => (number | null);\n        setThisOneSelected: (event: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ") => void;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSingleSelectionContext:interface"
     },
     "containerKey": "UseSingleSelectionContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSingleSelectionContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSingleSelectionContext "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSingleSelectionContext "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseSingleSelectionContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "isExported": true,
     "name": "UseSingleSelectionContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionContext#singleSelectionContext:member"
       },
       "displayName": "singleSelectionContext",
       "excerpt": {
        "isEmpty": false,
        "text": "singleSelectionContext: Pick<UseSingleSelectionParameters<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\"> & {\n        onSelectedIndexChange: UseSingleSelectionParameters<any, any, any>[\"singleSelectionParameters\"][\"onSelectedIndexChange\"];\n        getSelectedIndex(): number | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "singleSelectionContext: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\"> & {\n        onSelectedIndexChange: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<any, any, any>[\"singleSelectionParameters\"][\"onSelectedIndexChange\"];\n        getSelectedIndex(): number | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "singleSelectionContext: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionParameters:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionParameters"
        },
        {
         "kind": "Content",
         "text": "<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\"> & {\n        onSelectedIndexChange: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionParameters:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionParameters"
        },
        {
         "kind": "Content",
         "text": "<any, any, any>[\"singleSelectionParameters\"][\"onSelectedIndexChange\"];\n        getSelectedIndex(): number | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "singleSelectionContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "singleSelectionContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseSingleSelectionParameters<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\"> & {\n        onSelectedIndexChange: UseSingleSelectionParameters<any, any, any>[\"singleSelectionParameters\"][\"onSelectedIndexChange\"];\n        getSelectedIndex(): number | null;\n    }",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<any, any, any>[\"singleSelectionParameters\"], \"ariaPropName\" | \"selectionMode\"> & {\n        onSelectedIndexChange: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionParameters"
         },
         {
          "kind": "Content",
          "text": "<any, any, any>[\"singleSelectionParameters\"][\"onSelectedIndexChange\"];\n        getSelectedIndex(): number | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useSingleSelectionDeclarative:function(1)"
     },
     "kind": "Function",
     "containerKey": "useSingleSelectionDeclarative|Function|1",
     "displayName": "useSingleSelectionDeclarative",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useSingleSelectionDeclarative<ParentOrChildElement extends Element, ChildElement extends Element, _M extends UseSingleSelectionChildInfo<ChildElement>>({ singleSelectionReturn: { changeSelectedIndex }, singleSelectionDeclarativeParameters: { selectedIndex, onSelectedIndexChange } }: UseSingleSelectionDeclarativeParameters): {\n    singleSelectionParameters: {\n        onSelectedIndexChange: EnhancedEventHandler<Event, {\n            selectedIndex: number;\n        }> | null;\n    };\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useSingleSelectionDeclarative<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", _M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionDeclarativeParameters#singleSelectionReturn"
        },
        "kind": "Reference",
        "text": "singleSelectionReturn"
       },
       {
        "kind": "Content",
        "text": ": { changeSelectedIndex }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionDeclarativeParameters#singleSelectionDeclarativeParameters"
        },
        "kind": "Reference",
        "text": "singleSelectionDeclarativeParameters"
       },
       {
        "kind": "Content",
        "text": ": { selectedIndex, onSelectedIndexChange } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionDeclarativeParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionDeclarativeParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "{\n    singleSelectionParameters: {\n        onSelectedIndexChange: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "EnhancedEventHandler:type"
        },
        "kind": "Reference",
        "text": "EnhancedEventHandler"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", {\n            selectedIndex: number;\n        }> | null;\n    };\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 20,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useSingleSelectionDeclarative",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ singleSelectionReturn: { changeSelectedIndex }, singleSelectionDeclarativeParameters: { selectedIndex, onSelectedIndexChange } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionDeclarativeParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionDeclarativeParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionDeclarativeParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 13,
         "startIndex": 12
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "{\n    singleSelectionParameters: {\n        onSelectedIndexChange: EnhancedEventHandler<Event, {\n            selectedIndex: number;\n        }> | null;\n    };\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "{\n    singleSelectionParameters: {\n        onSelectedIndexChange: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "EnhancedEventHandler:type"
        },
        "kind": "Reference",
        "text": "EnhancedEventHandler"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Event:interface"
        },
        "kind": "Reference",
        "text": "Event"
       },
       {
        "kind": "Content",
        "text": ", {\n            selectedIndex: number;\n        }> | null;\n    };\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 19,
       "startIndex": 14
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Let's face it, declarative is nicer to use than imperative, so this is a shortcut.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 34
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useSingleSelectionDeclarative<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", _M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionDeclarativeParameters#singleSelectionReturn"
       },
       "kind": "Reference",
       "text": "singleSelectionReturn"
      },
      {
       "kind": "Content",
       "text": ": { changeSelectedIndex }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionDeclarativeParameters#singleSelectionDeclarativeParameters"
       },
       "kind": "Reference",
       "text": "singleSelectionDeclarativeParameters"
      },
      {
       "kind": "Content",
       "text": ": { selectedIndex, onSelectedIndexChange } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionDeclarativeParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionDeclarativeParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "{\n    singleSelectionParameters: {\n        onSelectedIndexChange: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "EnhancedEventHandler:type"
       },
       "kind": "Reference",
       "text": "EnhancedEventHandler"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Event:interface"
       },
       "kind": "Reference",
       "text": "Event"
      },
      {
       "kind": "Content",
       "text": ", {\n            selectedIndex: number;\n        }> | null;\n    };\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSingleSelectionDeclarativeParameters:interface"
     },
     "containerKey": "UseSingleSelectionDeclarativeParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSingleSelectionDeclarativeParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSingleSelectionDeclarativeParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSingleSelectionDeclarativeParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseSingleSelectionDeclarativeParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "isExported": true,
     "name": "UseSingleSelectionDeclarativeParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionDeclarativeParameters#singleSelectionDeclarativeParameters:member"
       },
       "displayName": "singleSelectionDeclarativeParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "singleSelectionDeclarativeParameters: {\n        selectedIndex: number | null;\n        onSelectedIndexChange: null | EnhancedEventHandler<Event, {\n            selectedIndex: number;\n        }>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "singleSelectionDeclarativeParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        selectedIndex: number | null;\n        onSelectedIndexChange: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "EnhancedEventHandler:type"
          },
          "kind": "Reference",
          "text": "EnhancedEventHandler"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ", {\n            selectedIndex: number;\n        }>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "singleSelectionDeclarativeParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        selectedIndex: number | null;\n        onSelectedIndexChange: null | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "EnhancedEventHandler:type"
         },
         "kind": "Reference",
         "text": "EnhancedEventHandler"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Event:interface"
         },
         "kind": "Reference",
         "text": "Event"
        },
        {
         "kind": "Content",
         "text": ", {\n            selectedIndex: number;\n        }>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "singleSelectionDeclarativeParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "singleSelectionDeclarativeParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        selectedIndex: number | null;\n        onSelectedIndexChange: null | EnhancedEventHandler<Event, {\n            selectedIndex: number;\n        }>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        selectedIndex: number | null;\n        onSelectedIndexChange: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "EnhancedEventHandler:type"
          },
          "kind": "Reference",
          "text": "EnhancedEventHandler"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ", {\n            selectedIndex: number;\n        }>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionDeclarativeParameters#singleSelectionReturn:member"
       },
       "displayName": "singleSelectionReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "singleSelectionReturn: Pick<UseSingleSelectionReturnType<any, any>[\"singleSelectionReturn\"], \"changeSelectedIndex\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "singleSelectionReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionReturnType"
         },
         {
          "kind": "Content",
          "text": "<any, any>[\"singleSelectionReturn\"], \"changeSelectedIndex\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "singleSelectionReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionReturnType"
        },
        {
         "kind": "Content",
         "text": "<any, any>[\"singleSelectionReturn\"], \"changeSelectedIndex\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "singleSelectionReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "singleSelectionReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseSingleSelectionReturnType<any, any>[\"singleSelectionReturn\"], \"changeSelectedIndex\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionReturnType"
         },
         {
          "kind": "Content",
          "text": "<any, any>[\"singleSelectionReturn\"], \"changeSelectedIndex\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSingleSelectionParameters:interface"
     },
     "containerKey": "UseSingleSelectionParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSingleSelectionParameters<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseSingleSelectionChildInfo<ChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSingleSelectionParameters<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSingleSelectionParameters<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseSingleSelectionParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "isExported": true,
     "name": "UseSingleSelectionParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: Pick<UseManagedChildrenReturnType<UseSingleSelectionChildInfo<ChildElement>>[\"managedChildrenReturn\"], \"getChildren\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>>[\"managedChildrenReturn\"], \"getChildren\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionChildInfo"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>>[\"managedChildrenReturn\"], \"getChildren\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseManagedChildrenReturnType<UseSingleSelectionChildInfo<ChildElement>>[\"managedChildrenReturn\"], \"getChildren\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>>[\"managedChildrenReturn\"], \"getChildren\">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters#rovingTabIndexReturn:member"
       },
       "displayName": "rovingTabIndexReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexReturn: Pick<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement, M>[\"rovingTabIndexReturn\"], \"setTabbableIndex\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>[\"rovingTabIndexReturn\"], \"setTabbableIndex\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexReturnType"
        },
        {
         "kind": "Content",
         "text": "<ParentOrChildElement, ChildElement, M>[\"rovingTabIndexReturn\"], \"setTabbableIndex\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement, M>[\"rovingTabIndexReturn\"], \"setTabbableIndex\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement, ChildElement, M>[\"rovingTabIndexReturn\"], \"setTabbableIndex\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionParameters#singleSelectionParameters:member"
       },
       "displayName": "singleSelectionParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "singleSelectionParameters: {\n        initiallySelectedIndex: number | null;\n        onSelectedIndexChange: null | SelectedIndexChangeHandler;\n        selectionMode: \"focus\" | \"activation\" | \"disabled\";\n        ariaPropName: `aria-${\"pressed\" | \"selected\" | \"checked\" | `current-${\"page\" | \"step\" | \"date\" | \"time\" | \"location\" | \"true\"}`}` | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "singleSelectionParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        initiallySelectedIndex: number | null;\n        onSelectedIndexChange: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SelectedIndexChangeHandler:type"
          },
          "kind": "Reference",
          "text": "SelectedIndexChangeHandler"
         },
         {
          "kind": "Content",
          "text": ";\n        selectionMode: \"focus\" | \"activation\" | \"disabled\";\n        ariaPropName: `aria-${\"pressed\" | \"selected\" | \"checked\" | `current-${\"page\" | \"step\" | \"date\" | \"time\" | \"location\" | \"true\"}`}` | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "singleSelectionParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        initiallySelectedIndex: number | null;\n        onSelectedIndexChange: null | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "SelectedIndexChangeHandler:type"
         },
         "kind": "Reference",
         "text": "SelectedIndexChangeHandler"
        },
        {
         "kind": "Content",
         "text": ";\n        selectionMode: \"focus\" | \"activation\" | \"disabled\";\n        ariaPropName: `aria-${\"pressed\" | \"selected\" | \"checked\" | `current-${\"page\" | \"step\" | \"date\" | \"time\" | \"location\" | \"true\"}`}` | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "singleSelectionParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "singleSelectionParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        initiallySelectedIndex: number | null;\n        onSelectedIndexChange: null | SelectedIndexChangeHandler;\n        selectionMode: \"focus\" | \"activation\" | \"disabled\";\n        ariaPropName: `aria-${\"pressed\" | \"selected\" | \"checked\" | `current-${\"page\" | \"step\" | \"date\" | \"time\" | \"location\" | \"true\"}`}` | null;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        initiallySelectedIndex: number | null;\n        onSelectedIndexChange: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "SelectedIndexChangeHandler:type"
          },
          "kind": "Reference",
          "text": "SelectedIndexChangeHandler"
         },
         {
          "kind": "Content",
          "text": ";\n        selectionMode: \"focus\" | \"activation\" | \"disabled\";\n        ariaPropName: `aria-${\"pressed\" | \"selected\" | \"checked\" | `current-${\"page\" | \"step\" | \"date\" | \"time\" | \"location\" | \"true\"}`}` | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSingleSelectionReturnType:interface"
     },
     "containerKey": "UseSingleSelectionReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSingleSelectionReturnType<ChildElement extends Element, M extends UseSingleSelectionChildInfo<ChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSingleSelectionReturnType<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSingleSelectionChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSingleSelectionChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSingleSelectionReturnType<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSingleSelectionChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseSingleSelectionReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-single-selection.tsx",
     "isExported": true,
     "name": "UseSingleSelectionReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionReturnType#childrenHaveFocusParameters:member"
       },
       "displayName": "childrenHaveFocusParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "childrenHaveFocusParameters: Pick<UseChildrenHaveFocusParameters<ChildElement>[\"childrenHaveFocusParameters\"], \"onCompositeFocusChange\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "childrenHaveFocusParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"childrenHaveFocusParameters\"], \"onCompositeFocusChange\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "childrenHaveFocusParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseChildrenHaveFocusParameters:interface"
         },
         "kind": "Reference",
         "text": "UseChildrenHaveFocusParameters"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>[\"childrenHaveFocusParameters\"], \"onCompositeFocusChange\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "childrenHaveFocusParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "childrenHaveFocusParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseChildrenHaveFocusParameters<ChildElement>[\"childrenHaveFocusParameters\"], \"onCompositeFocusChange\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseChildrenHaveFocusParameters:interface"
          },
          "kind": "Reference",
          "text": "UseChildrenHaveFocusParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"childrenHaveFocusParameters\"], \"onCompositeFocusChange\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseSingleSelectionContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseSingleSelectionContext:interface"
         },
         "kind": "Reference",
         "text": "UseSingleSelectionContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionContext:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSingleSelectionReturnType#singleSelectionReturn:member"
       },
       "displayName": "singleSelectionReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "singleSelectionReturn: {\n        changeSelectedIndex: PassiveStateUpdater<number | null, Event>;\n        getSelectedIndex(): number | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "singleSelectionReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        changeSelectedIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ">;\n        getSelectedIndex(): number | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "singleSelectionReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        changeSelectedIndex: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "PassiveStateUpdater:type"
         },
         "kind": "Reference",
         "text": "PassiveStateUpdater"
        },
        {
         "kind": "Content",
         "text": "<number | null, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Event:interface"
         },
         "kind": "Reference",
         "text": "Event"
        },
        {
         "kind": "Content",
         "text": ">;\n        getSelectedIndex(): number | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "singleSelectionReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "singleSelectionReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        changeSelectedIndex: PassiveStateUpdater<number | null, Event>;\n        getSelectedIndex(): number | null;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        changeSelectedIndex: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "PassiveStateUpdater:type"
          },
          "kind": "Reference",
          "text": "PassiveStateUpdater"
         },
         {
          "kind": "Content",
          "text": "<number | null, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Event:interface"
          },
          "kind": "Reference",
          "text": "Event"
         },
         {
          "kind": "Content",
          "text": ">;\n        getSelectedIndex(): number | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseSingleSelectionChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSingleSelectionChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSingleSelectionChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSortableChildInfo:interface"
     },
     "containerKey": "UseSortableChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSortableChildInfo extends UseRearrangeableChildInfo ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSortableChildInfo extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildInfo"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSortableChildInfo extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildInfo"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "UseSortableChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "isExported": true,
     "name": "UseSortableChildInfo",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildInfo#getSortValue:member(1)"
       },
       "displayName": "getSortValue",
       "excerpt": {
        "isEmpty": false,
        "text": "getSortValue(): unknown;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "getSortValue(): "
         },
         {
          "kind": "Content",
          "text": "unknown"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "getSortValue(): "
        },
        {
         "kind": "Content",
         "text": "unknown"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "getSortValue|MethodSignature|1",
       "isOptional": false,
       "name": "getSortValue",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "unknown",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useSortableChildren:function(1)"
     },
     "kind": "Function",
     "containerKey": "useSortableChildren|Function|1",
     "displayName": "useSortableChildren",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useSortableChildren<M extends UseSortableChildInfo>({ rearrangeableChildrenParameters, sortableChildrenParameters: { compare: userCompare }, managedChildrenReturn: { getChildren } }: UseSortableChildrenParameters<M>): UseSortableChildrenReturnType<M>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useSortableChildren<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildInfo"
       },
       {
        "kind": "Content",
        "text": ">({ rearrangeableChildrenParameters, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildrenParameters#sortableChildrenParameters"
        },
        "kind": "Reference",
        "text": "sortableChildrenParameters"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "__type#compare"
        },
        "kind": "Reference",
        "text": "compare"
       },
       {
        "kind": "Content",
        "text": ": userCompare }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildrenParameters#managedChildrenReturn"
        },
        "kind": "Reference",
        "text": "managedChildrenReturn"
       },
       {
        "kind": "Content",
        "text": ": { getChildren } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useSortableChildren",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ rearrangeableChildrenParameters, sortableChildrenParameters: { compare: userCompare }, managedChildrenReturn: { getChildren } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseSortableChildrenParameters<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 11,
         "startIndex": 9
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseSortableChildrenReturnType<M>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseSortableChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseSortableChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 12
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseSortableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseSortableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseSortableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Hook that allows for the **direct descendant** children of this component to be re-ordered and sorted.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 38
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "*This is **separate** from \"managed\" children, which can be any level of child needed! Sortable/rearrangeable children must be **direct descendants** of the parent that uses this hook!*",
           "textExcerpt": {
            "startIndex": 40,
            "endIndex": 110
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "It's recommended to use this in conjunction with ",
           "textExcerpt": {
            "startIndex": 112,
            "endIndex": 130
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useListNavigation"
          },
          {
           "kind": "PlainText",
           "text": "; it takes the same ",
           "textExcerpt": {
            "startIndex": 133,
            "endIndex": 143
           }
          },
          {
           "kind": "CodeSpan",
           "code": "indexMangler"
          },
          {
           "kind": "PlainText",
           "text": " and ",
           "textExcerpt": {
            "startIndex": 146,
            "endIndex": 149
           }
          },
          {
           "kind": "CodeSpan",
           "code": "indexDemangler"
          },
          {
           "kind": "PlainText",
           "text": " functions that this hook returns. ",
           "textExcerpt": {
            "startIndex": 152,
            "endIndex": 164
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useListNavigation"
          },
          {
           "kind": "PlainText",
           "text": " does not directly use this hook because, as mentioned, this hook imposes serious restrictions on child structure, while ",
           "textExcerpt": {
            "startIndex": 167,
            "endIndex": 207
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useListNavigation"
          },
          {
           "kind": "PlainText",
           "text": " allows anything.",
           "textExcerpt": {
            "startIndex": 210,
            "endIndex": 215
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Besides the prop-modifying hook that's returned, the ",
           "textExcerpt": {
            "startIndex": 217,
            "endIndex": 236
           }
          },
          {
           "kind": "CodeSpan",
           "code": "sort"
          },
          {
           "kind": "PlainText",
           "text": " function that's returned will sort all children according to their value from the ",
           "textExcerpt": {
            "startIndex": 239,
            "endIndex": 268
           }
          },
          {
           "kind": "CodeSpan",
           "code": "getValue"
          },
          {
           "kind": "PlainText",
           "text": " argument you pass in.",
           "textExcerpt": {
            "startIndex": 271,
            "endIndex": 280
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "If you want to perform some re-ordering operation that's *not* a sort, you can manually re-map each child's position using ",
           "textExcerpt": {
            "startIndex": 282,
            "endIndex": 333
           }
          },
          {
           "kind": "CodeSpan",
           "code": "mangleMap"
          },
          {
           "kind": "PlainText",
           "text": " and ",
           "textExcerpt": {
            "startIndex": 336,
            "endIndex": 339
           }
          },
          {
           "kind": "CodeSpan",
           "code": "demangleMap"
          },
          {
           "kind": "PlainText",
           "text": ", which convert between sorted and unsorted index positions.",
           "textExcerpt": {
            "startIndex": 342,
            "endIndex": 360
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Again, unlike some other hooks, **these children must be direct descendants**. This is because the prop-modifying hook inspects the given children, then re-creates them with new ",
           "textExcerpt": {
            "startIndex": 362,
            "endIndex": 426
           }
          },
          {
           "kind": "CodeSpan",
           "code": "key"
          },
          {
           "kind": "PlainText",
           "text": "s. Because keys are given special treatment and a child has no way of modifying its own key there's no other time or place this can happen other than exactly within the parent component's render function.",
           "textExcerpt": {
            "startIndex": 429,
            "endIndex": 506
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useSortableChildren<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildInfo"
      },
      {
       "kind": "Content",
       "text": ">({ rearrangeableChildrenParameters, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenParameters#sortableChildrenParameters"
       },
       "kind": "Reference",
       "text": "sortableChildrenParameters"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "__type#compare"
       },
       "kind": "Reference",
       "text": "compare"
      },
      {
       "kind": "Content",
       "text": ": userCompare }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenParameters#managedChildrenReturn"
       },
       "kind": "Reference",
       "text": "managedChildrenReturn"
      },
      {
       "kind": "Content",
       "text": ": { getChildren } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseSortableChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSortableChildrenParameters:interface"
     },
     "containerKey": "UseSortableChildrenParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSortableChildrenParameters<M extends UseRearrangeableChildInfo> extends UseRearrangeableChildrenParameters<M> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSortableChildrenParameters<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildInfo"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSortableChildrenParameters<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildInfo"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildrenParameters<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseSortableChildrenParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "isExported": true,
     "name": "UseSortableChildrenParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenParameters#sortableChildrenParameters:member"
       },
       "displayName": "sortableChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "sortableChildrenParameters: {\n        compare: null | Compare<M>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "sortableChildrenParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        compare: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Compare:type"
          },
          "kind": "Reference",
          "text": "Compare"
         },
         {
          "kind": "Content",
          "text": "<M>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "sortableChildrenParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        compare: null | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Compare:type"
         },
         "kind": "Reference",
         "text": "Compare"
        },
        {
         "kind": "Content",
         "text": "<M>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "sortableChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "sortableChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        compare: null | Compare<M>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        compare: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Compare:type"
          },
          "kind": "Reference",
          "text": "Compare"
         },
         {
          "kind": "Content",
          "text": "<M>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "All of these functions **MUST** be stable across renders.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 22
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseSortableChildrenReturnType:interface"
     },
     "containerKey": "UseSortableChildrenReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseSortableChildrenReturnType<M extends UseRearrangeableChildInfo> extends UseRearrangeableChildrenReturnType<M> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseSortableChildrenReturnType<M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildInfo"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRearrangeableChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseRearrangeableChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": "<M>"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseSortableChildrenReturnType<M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildInfo"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRearrangeableChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseRearrangeableChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": "<M>"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildrenReturnType<M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseSortableChildrenReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-sortable-children.tsx",
     "isExported": true,
     "name": "UseSortableChildrenReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseSortableChildrenReturnType#sortableChildrenReturn:member"
       },
       "displayName": "sortableChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "sortableChildrenReturn: {\n        sort: (direction: \"ascending\" | \"descending\") => Promise<void> | void;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "sortableChildrenReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        sort: (direction: \"ascending\" | \"descending\") => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<void> | void;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "sortableChildrenReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        sort: (direction: \"ascending\" | \"descending\") => "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Promise:interface"
         },
         "kind": "Reference",
         "text": "Promise"
        },
        {
         "kind": "Content",
         "text": "<void> | void;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "sortableChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "sortableChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        sort: (direction: \"ascending\" | \"descending\") => Promise<void> | void;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        sort: (direction: \"ascending\" | \"descending\") => "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Promise:interface"
          },
          "kind": "Reference",
          "text": "Promise"
         },
         {
          "kind": "Content",
          "text": "<void> | void;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseRearrangeableChildInfo",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRearrangeableChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRearrangeableChildInfo"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useStableCallback:function(1)"
     },
     "kind": "Function",
     "containerKey": "useStableCallback|Function|1",
     "displayName": "useStableCallback",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useStableCallback<T extends Function | null | undefined>(fn: NonNullable<T>, noDeps?: [] | null | undefined): Stable<NonNullable<T>>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useStableCallback<T extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Function:interface"
        },
        "kind": "Reference",
        "text": "Function"
       },
       {
        "kind": "Content",
        "text": " | null | undefined"
       },
       {
        "kind": "Content",
        "text": ">(fn: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "NonNullable:type"
        },
        "kind": "Reference",
        "text": "NonNullable"
       },
       {
        "kind": "Content",
        "text": "<T>"
       },
       {
        "kind": "Content",
        "text": ", noDeps?: "
       },
       {
        "kind": "Content",
        "text": "[] | null | undefined"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "Stable:type"
        },
        "kind": "Reference",
        "text": "Stable"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "NonNullable:type"
        },
        "kind": "Reference",
        "text": "NonNullable"
       },
       {
        "kind": "Content",
        "text": "<T>>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useStableCallback",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "fn",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "NonNullable<T>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "NonNullable:type"
          },
          "kind": "Reference",
          "text": "NonNullable"
         },
         {
          "kind": "Content",
          "text": "<T>"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 4
        }
       }
      },
      {
       "isOptional": true,
       "name": "noDeps",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "[] | null | undefined",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "[] | null | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 7
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "Stable<NonNullable<T>>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "Stable:type"
        },
        "kind": "Reference",
        "text": "Stable"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "NonNullable:type"
        },
        "kind": "Reference",
        "text": "NonNullable"
       },
       {
        "kind": "Content",
        "text": "<T>>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 9
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Function | null | undefined",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Function:interface"
          },
          "kind": "Reference",
          "text": "Function"
         },
         {
          "kind": "Content",
          "text": " | null | undefined"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Alternate useCallback() which always returns the same (wrapped) function reference so that it can be excluded from the dependency arrays of ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 46
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": " and friends.",
           "textExcerpt": {
            "startIndex": 49,
            "endIndex": 54
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "In general, just pass the function you want to be stable (but you can't use it during render, so be careful!). Alternatively, if you need a stable callback that **can** be used during render, pass an empty dependency array and it'll act like ",
           "textExcerpt": {
            "startIndex": 56,
            "endIndex": 158
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useCallback"
          },
          {
           "kind": "PlainText",
           "text": " with an empty dependency array, but with the associated stable typing. In this case, you ***must*** ensure that it truly has no dependencies/only stable dependencies!!",
           "textExcerpt": {
            "startIndex": 161,
            "endIndex": 224
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useStableCallback<T extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Function:interface"
       },
       "kind": "Reference",
       "text": "Function"
      },
      {
       "kind": "Content",
       "text": " | null | undefined"
      },
      {
       "kind": "Content",
       "text": ">(fn: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "NonNullable:type"
       },
       "kind": "Reference",
       "text": "NonNullable"
      },
      {
       "kind": "Content",
       "text": "<T>"
      },
      {
       "kind": "Content",
       "text": ", noDeps?: "
      },
      {
       "kind": "Content",
       "text": "[] | null | undefined"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "Stable:type"
       },
       "kind": "Reference",
       "text": "Stable"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "NonNullable:type"
       },
       "kind": "Reference",
       "text": "NonNullable"
      },
      {
       "kind": "Content",
       "text": "<T>>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useStableGetter:function(1)"
     },
     "kind": "Function",
     "containerKey": "useStableGetter|Function|1",
     "displayName": "useStableGetter",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useStableGetter<T>(value: T): () => T;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useStableGetter<T>(value: "
       },
       {
        "kind": "Content",
        "text": "T"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "() => T"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useStableGetter",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "value",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "tsdocParamBlock": {
        "parameterName": "value",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "() => T",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "() => T"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Given an input value, returns a constant getter function that can be used inside of ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 31
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": " and friends without including it in the dependency array.",
           "textExcerpt": {
            "startIndex": 34,
            "endIndex": 53
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "This uses ",
           "textExcerpt": {
            "startIndex": 55,
            "endIndex": 59
           }
          },
          {
           "kind": "CodeSpan",
           "code": "options.diffed"
          },
          {
           "kind": "PlainText",
           "text": " in order to run before everything, even ref assignment. This means this getter is safe to use anywhere ***except the render phase***.",
           "textExcerpt": {
            "startIndex": 64,
            "endIndex": 117
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "value",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useStableGetter<T>(value: "
      },
      {
       "kind": "Content",
       "text": "T"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "() => T"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useStack:function(1)"
     },
     "kind": "Function",
     "containerKey": "useStack|Function|1",
     "displayName": "useStack",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useStack(): () => string | undefined;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useStack(): "
       },
       {
        "kind": "Content",
        "text": "() => string | undefined"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useStack",
     "overloadIndex": 1,
     "parameters": [],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "() => string | undefined",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "() => string | undefined"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": []
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "PlainText",
            "text": " A function that retrieves the stack at the time this hook was called (in development mode only).",
            "textExcerpt": {
             "startIndex": 2,
             "endIndex": 39
            }
           },
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useStack(): "
      },
      {
       "kind": "Content",
       "text": "() => string | undefined"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useStaggeredChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useStaggeredChild|Function|1",
     "displayName": "useStaggeredChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useStaggeredChild<ChildElement extends Element>({ info: { index }, context: { staggeredChildContext: { parentIsStaggered, childCallsThisToTellTheParentTheHighestIndex, getDefaultStaggeredVisible, childCallsThisToTellTheParentToMountTheNextOne } } }: UseStaggeredChildParameters): UseStaggeredChildReturn<ChildElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useStaggeredChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildParameters#info"
        },
        "kind": "Reference",
        "text": "info"
       },
       {
        "kind": "Content",
        "text": ": { index }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildContext#staggeredChildContext"
        },
        "kind": "Reference",
        "text": "staggeredChildContext"
       },
       {
        "kind": "Content",
        "text": ": { parentIsStaggered, childCallsThisToTellTheParentTheHighestIndex, getDefaultStaggeredVisible, childCallsThisToTellTheParentToMountTheNextOne } } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildReturn:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildReturn"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useStaggeredChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info: { index }, context: { staggeredChildContext: { parentIsStaggered, childCallsThisToTellTheParentTheHighestIndex, getDefaultStaggeredVisible, childCallsThisToTellTheParentToMountTheNextOne } } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 10,
         "startIndex": 9
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseStaggeredChildReturn<ChildElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildReturn:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildReturn"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 13,
       "startIndex": 11
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useStaggeredChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildParameters#info"
       },
       "kind": "Reference",
       "text": "info"
      },
      {
       "kind": "Content",
       "text": ": { index }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildContext#staggeredChildContext"
       },
       "kind": "Reference",
       "text": "staggeredChildContext"
      },
      {
       "kind": "Content",
       "text": ": { parentIsStaggered, childCallsThisToTellTheParentTheHighestIndex, getDefaultStaggeredVisible, childCallsThisToTellTheParentToMountTheNextOne } } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildReturn:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildReturn"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseStaggeredChildContext:interface"
     },
     "containerKey": "UseStaggeredChildContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseStaggeredChildContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseStaggeredChildContext "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseStaggeredChildContext "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseStaggeredChildContext",
     "fileUrlPath": "src/component-detail/use-staggered-children.tsx",
     "isExported": true,
     "name": "UseStaggeredChildContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildContext#staggeredChildContext:member"
       },
       "displayName": "staggeredChildContext",
       "excerpt": {
        "isEmpty": false,
        "text": "staggeredChildContext: {\n        parentIsStaggered: boolean;\n        childCallsThisToTellTheParentToMountTheNextOne(index: number): void;\n        childCallsThisToTellTheParentTheHighestIndex(index: number): void;\n        getDefaultStaggeredVisible(i: number): boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "staggeredChildContext: "
         },
         {
          "kind": "Content",
          "text": "{\n        parentIsStaggered: boolean;\n        childCallsThisToTellTheParentToMountTheNextOne(index: number): void;\n        childCallsThisToTellTheParentTheHighestIndex(index: number): void;\n        getDefaultStaggeredVisible(i: number): boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "staggeredChildContext: "
        },
        {
         "kind": "Content",
         "text": "{\n        parentIsStaggered: boolean;\n        childCallsThisToTellTheParentToMountTheNextOne(index: number): void;\n        childCallsThisToTellTheParentTheHighestIndex(index: number): void;\n        getDefaultStaggeredVisible(i: number): boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "staggeredChildContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "staggeredChildContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        parentIsStaggered: boolean;\n        childCallsThisToTellTheParentToMountTheNextOne(index: number): void;\n        childCallsThisToTellTheParentTheHighestIndex(index: number): void;\n        getDefaultStaggeredVisible(i: number): boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        parentIsStaggered: boolean;\n        childCallsThisToTellTheParentToMountTheNextOne(index: number): void;\n        childCallsThisToTellTheParentTheHighestIndex(index: number): void;\n        getDefaultStaggeredVisible(i: number): boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseStaggeredChildParameters:interface"
     },
     "containerKey": "UseStaggeredChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseStaggeredChildParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseStaggeredChildParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseStaggeredChildParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseStaggeredChildParameters",
     "fileUrlPath": "src/component-detail/use-staggered-children.tsx",
     "isExported": true,
     "name": "UseStaggeredChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseStaggeredChildContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildContext:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseStaggeredChildContext:interface"
         },
         "kind": "Reference",
         "text": "UseStaggeredChildContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildContext:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: {\n        index: number;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "kind": "Content",
          "text": "{\n        index: number;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "kind": "Content",
         "text": "{\n        index: number;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        index: number;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        index: number;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useStaggeredChildren:function(1)"
     },
     "kind": "Function",
     "containerKey": "useStaggeredChildren|Function|1",
     "displayName": "useStaggeredChildren",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useStaggeredChildren<E extends Element, M extends UseStaggeredChildrenInfo<E>>({ managedChildrenReturn: { getChildren }, staggeredChildrenParameters: { staggered } }: UseStaggeredChildrenParameters<E, M>): UseStaggeredChildrenReturnType;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useStaggeredChildren<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenInfo:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenInfo"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenParameters#managedChildrenReturn"
        },
        "kind": "Reference",
        "text": "managedChildrenReturn"
       },
       {
        "kind": "Content",
        "text": ": { getChildren }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenParameters#staggeredChildrenParameters"
        },
        "kind": "Reference",
        "text": "staggeredChildrenParameters"
       },
       {
        "kind": "Content",
        "text": ": { staggered } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenParameters:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenParameters"
       },
       {
        "kind": "Content",
        "text": "<E, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenReturnType"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 15,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useStaggeredChildren",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ managedChildrenReturn: { getChildren }, staggeredChildrenParameters: { staggered } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildrenParameters<E, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenParameters:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenParameters"
         },
         {
          "kind": "Content",
          "text": "<E, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 12,
         "startIndex": 10
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseStaggeredChildrenReturnType",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenReturnType"
       }
      ],
      "tokenRange": {
       "endIndex": 14,
       "startIndex": 13
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildrenInfo<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows children to each wait until the previous has finished rendering before itself rendering.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 28
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "E.G. Child #3 waits until #2 renders. #2 waits until #1 renders, etc.",
           "textExcerpt": {
            "startIndex": 30,
            "endIndex": 65
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Note that the child itself will still render, but you can delay rendering *its* children, or delay other complicated or heavy logic, until the child is no longer staggered.",
           "textExcerpt": {
            "startIndex": 67,
            "endIndex": 130
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useStaggeredChildren<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenInfo:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildrenInfo"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenParameters#managedChildrenReturn"
       },
       "kind": "Reference",
       "text": "managedChildrenReturn"
      },
      {
       "kind": "Content",
       "text": ": { getChildren }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenParameters#staggeredChildrenParameters"
       },
       "kind": "Reference",
       "text": "staggeredChildrenParameters"
      },
      {
       "kind": "Content",
       "text": ": { staggered } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenParameters:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildrenParameters"
      },
      {
       "kind": "Content",
       "text": "<E, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildrenReturnType"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseStaggeredChildrenInfo:interface"
     },
     "containerKey": "UseStaggeredChildrenInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseStaggeredChildrenInfo<E extends Element> extends Pick<UseRovingTabIndexChildInfo<E>, \"index\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseStaggeredChildrenInfo<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<E>, \"index\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseStaggeredChildrenInfo<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<E>, \"index\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UseRovingTabIndexChildInfo<E>, \"index\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<E>, \"index\">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseStaggeredChildrenInfo",
     "fileUrlPath": "src/component-detail/use-staggered-children.tsx",
     "isExported": true,
     "name": "UseStaggeredChildrenInfo",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenInfo#setStaggeredVisible:member(1)"
       },
       "displayName": "setStaggeredVisible",
       "excerpt": {
        "isEmpty": false,
        "text": "setStaggeredVisible(visible: boolean): void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "setStaggeredVisible(visible: "
         },
         {
          "kind": "Content",
          "text": "boolean"
         },
         {
          "kind": "Content",
          "text": "): "
         },
         {
          "kind": "Content",
          "text": "void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "setStaggeredVisible(visible: "
        },
        {
         "kind": "Content",
         "text": "boolean"
        },
        {
         "kind": "Content",
         "text": "): "
        },
        {
         "kind": "Content",
         "text": "void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "setStaggeredVisible|MethodSignature|1",
       "isOptional": false,
       "name": "setStaggeredVisible",
       "kind": "MethodSignature",
       "members": [],
       "releaseTag": 4,
       "overloadIndex": 1,
       "parameters": [
        {
         "isOptional": false,
         "name": "visible",
         "parameterTypeExcerpt": {
          "isEmpty": false,
          "text": "boolean",
          "spannedTokens": [
           {
            "kind": "Content",
            "text": "boolean"
           }
          ],
          "tokenRange": {
           "endIndex": 2,
           "startIndex": 1
          }
         }
        }
       ],
       "typeParameters": [],
       "returnTypeExcerpt": {
        "isEmpty": false,
        "text": "void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "void"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseStaggeredChildrenParameters:interface"
     },
     "containerKey": "UseStaggeredChildrenParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseStaggeredChildrenParameters<E extends Element, M extends UseStaggeredChildrenInfo<E>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseStaggeredChildrenParameters<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseStaggeredChildrenInfo:interface"
        },
        "kind": "Reference",
        "text": "UseStaggeredChildrenInfo"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseStaggeredChildrenParameters<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenInfo:interface"
       },
       "kind": "Reference",
       "text": "UseStaggeredChildrenInfo"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseStaggeredChildrenParameters",
     "fileUrlPath": "src/component-detail/use-staggered-children.tsx",
     "isExported": true,
     "name": "UseStaggeredChildrenParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenParameters#managedChildrenReturn:member"
       },
       "displayName": "managedChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "managedChildrenReturn: UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"];",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "managedChildrenReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"]"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "managedChildrenReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseManagedChildrenReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseManagedChildrenReturnType"
        },
        {
         "kind": "Content",
         "text": "<M>[\"managedChildrenReturn\"]"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "managedChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "managedChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseManagedChildrenReturnType<M>[\"managedChildrenReturn\"]",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseManagedChildrenReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseManagedChildrenReturnType"
         },
         {
          "kind": "Content",
          "text": "<M>[\"managedChildrenReturn\"]"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenParameters#staggeredChildrenParameters:member"
       },
       "displayName": "staggeredChildrenParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "staggeredChildrenParameters: {\n        staggered: boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "staggeredChildrenParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        staggered: boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "staggeredChildrenParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        staggered: boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "staggeredChildrenParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "staggeredChildrenParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        staggered: boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        staggered: boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildrenInfo<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseStaggeredChildrenReturnType:interface"
     },
     "containerKey": "UseStaggeredChildrenReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseStaggeredChildrenReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseStaggeredChildrenReturnType "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseStaggeredChildrenReturnType "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseStaggeredChildrenReturnType",
     "fileUrlPath": "src/component-detail/use-staggered-children.tsx",
     "isExported": true,
     "name": "UseStaggeredChildrenReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseStaggeredChildContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildContext:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseStaggeredChildContext:interface"
         },
         "kind": "Reference",
         "text": "UseStaggeredChildContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseStaggeredChildContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildContext:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildrenReturnType#staggeredChildrenReturn:member"
       },
       "displayName": "staggeredChildrenReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "staggeredChildrenReturn: {\n        stillStaggering: boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "staggeredChildrenReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        stillStaggering: boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "staggeredChildrenReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        stillStaggering: boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "staggeredChildrenReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "staggeredChildrenReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        stillStaggering: boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        stillStaggering: boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseStaggeredChildReturn:interface"
     },
     "containerKey": "UseStaggeredChildReturn|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseStaggeredChildReturn<ChildElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseStaggeredChildReturn<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseStaggeredChildReturn<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseStaggeredChildReturn",
     "fileUrlPath": "src/component-detail/use-staggered-children.tsx",
     "isExported": true,
     "name": "UseStaggeredChildReturn",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildReturn#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Pick<UseStaggeredChildrenInfo<ChildElement>, \"setStaggeredVisible\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"setStaggeredVisible\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseStaggeredChildrenInfo:interface"
         },
         "kind": "Reference",
         "text": "UseStaggeredChildrenInfo"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>, \"setStaggeredVisible\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseStaggeredChildrenInfo<ChildElement>, \"setStaggeredVisible\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseStaggeredChildrenInfo:interface"
          },
          "kind": "Reference",
          "text": "UseStaggeredChildrenInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>, \"setStaggeredVisible\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildReturn#props:member"
       },
       "displayName": "props",
       "excerpt": {
        "isEmpty": false,
        "text": "props: ElementProps<ChildElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "props: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "props: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "props|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "props",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseStaggeredChildReturn#staggeredChildReturn:member"
       },
       "displayName": "staggeredChildReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "staggeredChildReturn: {\n        isStaggered: boolean;\n        hideBecauseStaggered: boolean;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "staggeredChildReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        isStaggered: boolean;\n        hideBecauseStaggered: boolean;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "staggeredChildReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        isStaggered: boolean;\n        hideBecauseStaggered: boolean;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "staggeredChildReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "staggeredChildReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        isStaggered: boolean;\n        hideBecauseStaggered: boolean;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        isStaggered: boolean;\n        hideBecauseStaggered: boolean;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useState:function(1)"
     },
     "kind": "Function",
     "containerKey": "useState|Function|1",
     "displayName": "useState",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useState<T>(initialState: T | (() => T)): readonly [value: T, setValue: StateUpdater<T>, getValue: () => T];",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useState<T>(initialState: "
       },
       {
        "kind": "Content",
        "text": "T | (() => T)"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "readonly [value: T, setValue: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-hooks!",
         "symbol": "StateUpdater:type"
        },
        "kind": "Reference",
        "text": "StateUpdater"
       },
       {
        "kind": "Content",
        "text": "<T>, getValue: () => T]"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useState",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "initialState",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "T | (() => T)",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "T | (() => T)"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "tsdocParamBlock": {
        "parameterName": "initialState",
        "kind": "ParamBlock",
        "content": {
         "kind": "Section",
         "nodes": []
        },
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@param"
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "readonly [value: T, setValue: StateUpdater<T>, getValue: () => T]",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "readonly [value: T, setValue: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-hooks!",
         "symbol": "StateUpdater:type"
        },
        "kind": "Reference",
        "text": "StateUpdater"
       },
       {
        "kind": "Content",
        "text": "<T>, getValue: () => T]"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "T"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Slightly enhanced version of ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 8
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useState"
          },
          {
           "kind": "PlainText",
           "text": " that includes a getter that remains constant (i.e. you can use it in ",
           "textExcerpt": {
            "startIndex": 11,
            "endIndex": 42
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useEffect"
          },
          {
           "kind": "PlainText",
           "text": " and friends without it being a dependency).",
           "textExcerpt": {
            "startIndex": 45,
            "endIndex": 61
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "If ",
           "textExcerpt": {
            "startIndex": 63,
            "endIndex": 65
           }
          },
          {
           "kind": "CodeSpan",
           "code": "getBuildMode()"
          },
          {
           "kind": "PlainText",
           "text": " returns ",
           "textExcerpt": {
            "startIndex": 70,
            "endIndex": 73
           }
          },
          {
           "kind": "CodeSpan",
           "code": "\"development\""
          },
          {
           "kind": "PlainText",
           "text": ", then any calls to ",
           "textExcerpt": {
            "startIndex": 78,
            "endIndex": 88
           }
          },
          {
           "kind": "CodeSpan",
           "code": "setState"
          },
          {
           "kind": "PlainText",
           "text": " will also take the stack at the time the hook was called and save it to ",
           "textExcerpt": {
            "startIndex": 91,
            "endIndex": 124
           }
          },
          {
           "kind": "CodeSpan",
           "code": "window._setState_stack"
          },
          {
           "kind": "PlainText",
           "text": ". Useful if you want to trace whose state is being updated.",
           "textExcerpt": {
            "startIndex": 129,
            "endIndex": 153
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "returnsBlock": {
       "blockTag": {
        "kind": "BlockTag",
        "tagName": "@returns"
       },
       "content": {
        "kind": "Section",
        "nodes": [
         {
          "kind": "Paragraph",
          "nodes": [
           {
            "kind": "SoftBreak"
           }
          ]
         }
        ]
       },
       "kind": "Block"
      },
      "params": {
       "blocks": [
        {
         "parameterName": "initialState",
         "kind": "ParamBlock",
         "content": {
          "kind": "Section",
          "nodes": []
         },
         "blockTag": {
          "kind": "BlockTag",
          "tagName": "@param"
         }
        }
       ],
       "count": 1,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useState<T>(initialState: "
      },
      {
       "kind": "Content",
       "text": "T | (() => T)"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "readonly [value: T, setValue: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-hooks!",
        "symbol": "StateUpdater:type"
       },
       "kind": "Reference",
       "text": "StateUpdater"
      },
      {
       "kind": "Content",
       "text": "<T>, getValue: () => T]"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useTextContent:function(1)"
     },
     "kind": "Function",
     "containerKey": "useTextContent|Function|1",
     "displayName": "useTextContent",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useTextContent<E extends Element>({ refElementReturn: { getElement }, textContentParameters: { getText, onTextContentChange } }: UseTextContentParameters<E>): UseTextContentReturnType;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useTextContent<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTextContentParameters#refElementReturn"
        },
        "kind": "Reference",
        "text": "refElementReturn"
       },
       {
        "kind": "Content",
        "text": ": { getElement }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTextContentParameters#textContentParameters"
        },
        "kind": "Reference",
        "text": "textContentParameters"
       },
       {
        "kind": "Content",
        "text": ": { getText, onTextContentChange } }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTextContentParameters:interface"
        },
        "kind": "Reference",
        "text": "UseTextContentParameters"
       },
       {
        "kind": "Content",
        "text": "<E>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTextContentReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTextContentReturnType"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 12,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useTextContent",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ refElementReturn: { getElement }, textContentParameters: { getText, onTextContentChange } }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseTextContentParameters<E>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTextContentParameters:interface"
          },
          "kind": "Reference",
          "text": "UseTextContentParameters"
         },
         {
          "kind": "Content",
          "text": "<E>"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 7
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseTextContentReturnType",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTextContentReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTextContentReturnType"
       }
      ],
      "tokenRange": {
       "endIndex": 11,
       "startIndex": 10
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useTextContent<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTextContentParameters#refElementReturn"
       },
       "kind": "Reference",
       "text": "refElementReturn"
      },
      {
       "kind": "Content",
       "text": ": { getElement }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTextContentParameters#textContentParameters"
       },
       "kind": "Reference",
       "text": "textContentParameters"
      },
      {
       "kind": "Content",
       "text": ": { getText, onTextContentChange } }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTextContentParameters:interface"
       },
       "kind": "Reference",
       "text": "UseTextContentParameters"
      },
      {
       "kind": "Content",
       "text": "<E>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTextContentReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseTextContentReturnType"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTextContentParameters:interface"
     },
     "containerKey": "UseTextContentParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTextContentParameters<E extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTextContentParameters<E extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTextContentParameters<E extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseTextContentParameters",
     "fileUrlPath": "src/dom-helpers/use-text-content.tsx",
     "isExported": true,
     "name": "UseTextContentParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTextContentParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Pick<UseRefElementReturnType<E>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<E>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<E>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<E>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<E>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTextContentParameters#textContentParameters:member"
       },
       "displayName": "textContentParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "textContentParameters: {\n        getText(e: E | null): string | null;\n        onTextContentChange: OnPassiveStateChange<string | null, never>;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "textContentParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        getText(e: E | null): string | null;\n        onTextContentChange: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<string | null, never>;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "textContentParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        getText(e: E | null): string | null;\n        onTextContentChange: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "OnPassiveStateChange:type"
         },
         "kind": "Reference",
         "text": "OnPassiveStateChange"
        },
        {
         "kind": "Content",
         "text": "<string | null, never>;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "textContentParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "textContentParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getText(e: E | null): string | null;\n        onTextContentChange: OnPassiveStateChange<string | null, never>;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getText(e: E | null): string | null;\n        onTextContentChange: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "OnPassiveStateChange:type"
          },
          "kind": "Reference",
          "text": "OnPassiveStateChange"
         },
         {
          "kind": "Content",
          "text": "<string | null, never>;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "E"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTextContentReturnType:interface"
     },
     "containerKey": "UseTextContentReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTextContentReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTextContentReturnType "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTextContentReturnType "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseTextContentReturnType",
     "fileUrlPath": "src/dom-helpers/use-text-content.tsx",
     "isExported": true,
     "name": "UseTextContentReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTextContentReturnType#textContentReturn:member"
       },
       "displayName": "textContentReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "textContentReturn: {\n        getTextContent: () => string | null;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "textContentReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getTextContent: () => string | null;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "textContentReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getTextContent: () => string | null;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "textContentReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "textContentReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getTextContent: () => string | null;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getTextContent: () => string | null;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useTimeout:function(1)"
     },
     "kind": "Function",
     "containerKey": "useTimeout|Function|1",
     "displayName": "useTimeout",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useTimeout({ timeout, callback, triggerIndex }: UseTimeoutParameters): {\n    getElapsedTime: () => number;\n    getRemainingTime: () => number | null;\n};",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useTimeout({ timeout, callback, triggerIndex }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTimeoutParameters:interface"
        },
        "kind": "Reference",
        "text": "UseTimeoutParameters"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "{\n    getElapsedTime: () => number;\n    getRemainingTime: () => number | null;\n}"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useTimeout",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ timeout, callback, triggerIndex }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseTimeoutParameters",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTimeoutParameters:interface"
          },
          "kind": "Reference",
          "text": "UseTimeoutParameters"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "{\n    getElapsedTime: () => number;\n    getRemainingTime: () => number | null;\n}",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "{\n    getElapsedTime: () => number;\n    getRemainingTime: () => number | null;\n}"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useTimeout({ timeout, callback, triggerIndex }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTimeoutParameters:interface"
       },
       "kind": "Reference",
       "text": "UseTimeoutParameters"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "{\n    getElapsedTime: () => number;\n    getRemainingTime: () => number | null;\n}"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTimeoutParameters:interface"
     },
     "containerKey": "UseTimeoutParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTimeoutParameters ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTimeoutParameters "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTimeoutParameters "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseTimeoutParameters",
     "fileUrlPath": "src/timing/use-timeout.tsx",
     "isExported": true,
     "name": "UseTimeoutParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTimeoutParameters#callback:member"
       },
       "displayName": "callback",
       "excerpt": {
        "isEmpty": false,
        "text": "callback: () => void;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "callback: "
         },
         {
          "kind": "Content",
          "text": "() => void"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "callback: "
        },
        {
         "kind": "Content",
         "text": "() => void"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "callback|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "callback",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "() => void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "() => void"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Called ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 2
             }
            },
            {
             "kind": "CodeSpan",
             "code": "timeout"
            },
            {
             "kind": "PlainText",
             "text": " ms after mount, or the last change to ",
             "textExcerpt": {
              "startIndex": 5,
              "endIndex": 23
             }
            },
            {
             "kind": "CodeSpan",
             "code": "triggerIndex"
            },
            {
             "kind": "PlainText",
             "text": ".",
             "textExcerpt": {
              "startIndex": 26,
              "endIndex": 27
             }
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            }
           ]
          },
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Does *not* need to be stable. Go ahead and pass an anonymous function.",
             "textExcerpt": {
              "startIndex": 29,
              "endIndex": 58
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTimeoutParameters#timeout:member"
       },
       "displayName": "timeout",
       "excerpt": {
        "isEmpty": false,
        "text": "timeout: Nullable<number>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "timeout: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "timeout: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "Nullable:type"
         },
         "kind": "Reference",
         "text": "Nullable"
        },
        {
         "kind": "Content",
         "text": "<number>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "timeout|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "timeout",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Nullable<number>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "Nullable:type"
          },
          "kind": "Reference",
          "text": "Nullable"
         },
         {
          "kind": "Content",
          "text": "<number>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "The number of ms to wait before invoking ",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 16
             }
            },
            {
             "kind": "CodeSpan",
             "code": "callback"
            },
            {
             "kind": "PlainText",
             "text": ". If ",
             "textExcerpt": {
              "startIndex": 19,
              "endIndex": 23
             }
            },
            {
             "kind": "CodeSpan",
             "code": "null"
            },
            {
             "kind": "PlainText",
             "text": ", cancels the timeout immediately.",
             "textExcerpt": {
              "startIndex": 26,
              "endIndex": 36
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTimeoutParameters#triggerIndex:member"
       },
       "displayName": "triggerIndex",
       "excerpt": {
        "isEmpty": false,
        "text": "triggerIndex?: unknown;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "triggerIndex?: "
         },
         {
          "kind": "Content",
          "text": "unknown"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "triggerIndex?: "
        },
        {
         "kind": "Content",
         "text": "unknown"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "triggerIndex|PropertySignature",
       "isEventProperty": false,
       "isOptional": true,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "triggerIndex",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "unknown",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "unknown"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {},
       "tsdocComment": {
        "kind": "Comment",
        "summarySection": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "PlainText",
             "text": "Changes to this prop between renders can be used to clear the current timeout and create a new one.",
             "textExcerpt": {
              "startIndex": 0,
              "endIndex": 38
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "typeParams": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "seeBlocks": [],
        "params": {
         "blocks": [],
         "count": 0,
         "kind": "ParamCollection"
        },
        "modifierTagSet": {
         "nodes": []
        },
        "customBlocks": []
       }
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useTypeaheadNavigation:function(1)"
     },
     "kind": "Function",
     "containerKey": "useTypeaheadNavigation|Function|1",
     "displayName": "useTypeaheadNavigation",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useTypeaheadNavigation<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseTypeaheadNavigationChildInfo<ChildElement>>({ typeaheadNavigationParameters: { collator, typeaheadTimeout, noTypeahead, isValid, ...void3 }, rovingTabIndexReturn: { getTabbableIndex: getIndex, setTabbableIndex: setIndex, ...void1 }, ...void2 }: UseTypeaheadNavigationParameters<ChildElement, M>): UseTypeaheadNavigationReturnType<ParentOrChildElement>;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useTypeaheadNavigation<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationParameters#typeaheadNavigationParameters"
        },
        "kind": "Reference",
        "text": "typeaheadNavigationParameters"
       },
       {
        "kind": "Content",
        "text": ": { collator, typeaheadTimeout, noTypeahead, isValid, ...void3 }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationParameters#rovingTabIndexReturn"
        },
        "kind": "Reference",
        "text": "rovingTabIndexReturn"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "getTabbableIndex"
        },
        "kind": "Reference",
        "text": "getTabbableIndex"
       },
       {
        "kind": "Content",
        "text": ": getIndex, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "preact-prop-helpers!",
         "symbol": "setTabbableIndex"
        },
        "kind": "Reference",
        "text": "setTabbableIndex"
       },
       {
        "kind": "Content",
        "text": ": setIndex, ...void1 }, ...void2 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationParameters:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement>"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 22,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useTypeaheadNavigation",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ typeaheadNavigationParameters: { collator, typeaheadTimeout, noTypeahead, isValid, ...void3 }, rovingTabIndexReturn: { getTabbableIndex: getIndex, setTabbableIndex: setIndex, ...void1 }, ...void2 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationParameters:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 16
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseTypeaheadNavigationReturnType<ParentOrChildElement>",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationReturnType"
       },
       {
        "kind": "Content",
        "text": "<ParentOrChildElement>"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 19
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 5
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows for the selection of a managed child by typing the given text associated with it.",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 32
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [
       {
        "blockTag": {
         "kind": "BlockTag",
         "tagName": "@see"
        },
        "content": {
         "kind": "Section",
         "nodes": [
          {
           "kind": "Paragraph",
           "nodes": [
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "SoftBreak"
            },
            {
             "kind": "PlainText",
             "text": "useListNavigation, which packages everything up together.",
             "textExcerpt": {
              "startIndex": 38,
              "endIndex": 51
             }
            },
            {
             "kind": "SoftBreak"
            }
           ]
          }
         ]
        },
        "kind": "Block"
       }
      ],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useTypeaheadNavigation<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationParameters#typeaheadNavigationParameters"
       },
       "kind": "Reference",
       "text": "typeaheadNavigationParameters"
      },
      {
       "kind": "Content",
       "text": ": { collator, typeaheadTimeout, noTypeahead, isValid, ...void3 }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationParameters#rovingTabIndexReturn"
       },
       "kind": "Reference",
       "text": "rovingTabIndexReturn"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "getTabbableIndex"
       },
       "kind": "Reference",
       "text": "getTabbableIndex"
      },
      {
       "kind": "Content",
       "text": ": getIndex, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "preact-prop-helpers!",
        "symbol": "setTabbableIndex"
       },
       "kind": "Reference",
       "text": "setTabbableIndex"
      },
      {
       "kind": "Content",
       "text": ": setIndex, ...void1 }, ...void2 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationParameters:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationReturnType"
      },
      {
       "kind": "Content",
       "text": "<ParentOrChildElement>"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useTypeaheadNavigationChild:function(1)"
     },
     "kind": "Function",
     "containerKey": "useTypeaheadNavigationChild|Function|1",
     "displayName": "useTypeaheadNavigationChild",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useTypeaheadNavigationChild<ChildElement extends Element, M extends UseTypeaheadNavigationChildInfo<ChildElement>>({ info: { index, ...void1 }, textContentParameters: { getText, ...void5 }, context: { typeaheadNavigationContext: { sortedTypeaheadInfo, insertingComparator, excludeSpace, ...void2 } }, refElementReturn: { getElement, ...void3 }, ...void4 }: UseTypeaheadNavigationChildParameters<ChildElement, M>): UseTypeaheadNavigationChildReturnType;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useTypeaheadNavigationChild<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": ">({ "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildParameters#info"
        },
        "kind": "Reference",
        "text": "info"
       },
       {
        "kind": "Content",
        "text": ": { index, ...void1 }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildParameters#textContentParameters"
        },
        "kind": "Reference",
        "text": "textContentParameters"
       },
       {
        "kind": "Content",
        "text": ": { getText, ...void5 }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildParameters#context"
        },
        "kind": "Reference",
        "text": "context"
       },
       {
        "kind": "Content",
        "text": ": { "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationContext#typeaheadNavigationContext"
        },
        "kind": "Reference",
        "text": "typeaheadNavigationContext"
       },
       {
        "kind": "Content",
        "text": ": { sortedTypeaheadInfo, insertingComparator, excludeSpace, ...void2 } }, "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildParameters#refElementReturn"
        },
        "kind": "Reference",
        "text": "refElementReturn"
       },
       {
        "kind": "Content",
        "text": ": { getElement, ...void3 }, ...void4 }: "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildParameters:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildParameters"
       },
       {
        "kind": "Content",
        "text": "<ChildElement, M>"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildReturnType"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 21,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useTypeaheadNavigationChild",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "{ info: { index, ...void1 }, textContentParameters: { getText, ...void5 }, context: { typeaheadNavigationContext: { sortedTypeaheadInfo, insertingComparator, excludeSpace, ...void2 } }, refElementReturn: { getElement, ...void3 }, ...void4 }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationChildParameters<ChildElement, M>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, M>"
         }
        ],
        "tokenRange": {
         "endIndex": 18,
         "startIndex": 16
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "UseTypeaheadNavigationChildReturnType",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildReturnType"
       }
      ],
      "tokenRange": {
       "endIndex": 20,
       "startIndex": 19
      }
     },
     "sourceLocation": {},
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "M"
      }
     ],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useTypeaheadNavigationChild<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": ">({ "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters#info"
       },
       "kind": "Reference",
       "text": "info"
      },
      {
       "kind": "Content",
       "text": ": { index, ...void1 }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters#textContentParameters"
       },
       "kind": "Reference",
       "text": "textContentParameters"
      },
      {
       "kind": "Content",
       "text": ": { getText, ...void5 }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters#context"
       },
       "kind": "Reference",
       "text": "context"
      },
      {
       "kind": "Content",
       "text": ": { "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationContext#typeaheadNavigationContext"
       },
       "kind": "Reference",
       "text": "typeaheadNavigationContext"
      },
      {
       "kind": "Content",
       "text": ": { sortedTypeaheadInfo, insertingComparator, excludeSpace, ...void2 } }, "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters#refElementReturn"
       },
       "kind": "Reference",
       "text": "refElementReturn"
      },
      {
       "kind": "Content",
       "text": ": { getElement, ...void3 }, ...void4 }: "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationChildParameters"
      },
      {
       "kind": "Content",
       "text": "<ChildElement, M>"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationChildReturnType"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTypeaheadNavigationChildInfo:interface"
     },
     "containerKey": "UseTypeaheadNavigationChildInfo|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTypeaheadNavigationChildInfo<TabbableChildElement extends Element> extends Pick<UseRovingTabIndexChildInfo<TabbableChildElement>, \"index\"> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTypeaheadNavigationChildInfo<TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Pick:type"
        },
        "kind": "Reference",
        "text": "Pick"
       },
       {
        "kind": "Content",
        "text": "<"
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseRovingTabIndexChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseRovingTabIndexChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>, \"index\">"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 8,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTypeaheadNavigationChildInfo<TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Pick:type"
       },
       "kind": "Reference",
       "text": "Pick"
      },
      {
       "kind": "Content",
       "text": "<"
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseRovingTabIndexChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseRovingTabIndexChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>, \"index\">"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "Pick<UseRovingTabIndexChildInfo<TabbableChildElement>, \"index\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>, \"index\">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 3
        }
       }
      }
     ],
     "displayName": "UseTypeaheadNavigationChildInfo",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-typeahead-navigation.tsx",
     "isExported": true,
     "name": "UseTypeaheadNavigationChildInfo",
     "kind": "Interface",
     "members": [],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTypeaheadNavigationChildParameters:interface"
     },
     "containerKey": "UseTypeaheadNavigationChildParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTypeaheadNavigationChildParameters<ChildElement extends Element, _M extends UseTypeaheadNavigationChildInfo<ChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTypeaheadNavigationChildParameters<ChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", _M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<ChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTypeaheadNavigationChildParameters<ChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", _M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<ChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseTypeaheadNavigationChildParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-typeahead-navigation.tsx",
     "isExported": true,
     "name": "UseTypeaheadNavigationChildParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseTypeaheadNavigationContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseTypeaheadNavigationContext:interface"
         },
         "kind": "Reference",
         "text": "UseTypeaheadNavigationContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters#info:member"
       },
       "displayName": "info",
       "excerpt": {
        "isEmpty": false,
        "text": "info: Pick<UseRovingTabIndexChildParameters<ChildElement, UseRovingTabIndexChildInfo<ChildElement>>[\"info\"], \"index\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "info: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>>[\"info\"], \"index\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "info: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexChildParameters:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexChildParameters"
        },
        {
         "kind": "Content",
         "text": "<ChildElement, "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexChildInfo:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexChildInfo"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>>[\"info\"], \"index\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "info|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "info",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRovingTabIndexChildParameters<ChildElement, UseRovingTabIndexChildInfo<ChildElement>>[\"info\"], \"index\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildParameters:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement, "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>>[\"info\"], \"index\">"
         }
        ],
        "tokenRange": {
         "endIndex": 7,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters#refElementReturn:member"
       },
       "displayName": "refElementReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "refElementReturn: Pick<UseRefElementReturnType<ChildElement>[\"refElementReturn\"], \"getElement\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "refElementReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"refElementReturn\"], \"getElement\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "refElementReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRefElementReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRefElementReturnType"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>[\"refElementReturn\"], \"getElement\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "refElementReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "refElementReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRefElementReturnType<ChildElement>[\"refElementReturn\"], \"getElement\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRefElementReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRefElementReturnType"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"refElementReturn\"], \"getElement\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildParameters#textContentParameters:member"
       },
       "displayName": "textContentParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "textContentParameters: Pick<UseTextContentParameters<ChildElement>[\"textContentParameters\"], \"getText\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "textContentParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTextContentParameters:interface"
          },
          "kind": "Reference",
          "text": "UseTextContentParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"textContentParameters\"], \"getText\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "textContentParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseTextContentParameters:interface"
         },
         "kind": "Reference",
         "text": "UseTextContentParameters"
        },
        {
         "kind": "Content",
         "text": "<ChildElement>[\"textContentParameters\"], \"getText\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "textContentParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "textContentParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseTextContentParameters<ChildElement>[\"textContentParameters\"], \"getText\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTextContentParameters:interface"
          },
          "kind": "Reference",
          "text": "UseTextContentParameters"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>[\"textContentParameters\"], \"getText\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationChildInfo<ChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<ChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_M"
      }
     ],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Arguments passed to the child ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 10
           }
          },
          {
           "kind": "CodeSpan",
           "code": "useTypeaheadNavigationChild"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     }
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTypeaheadNavigationChildReturnType:interface"
     },
     "containerKey": "UseTypeaheadNavigationChildReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTypeaheadNavigationChildReturnType extends UseTextContentReturnType ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTypeaheadNavigationChildReturnType extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTextContentReturnType:interface"
        },
        "kind": "Reference",
        "text": "UseTextContentReturnType"
       },
       {
        "kind": "Content",
        "text": " "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTypeaheadNavigationChildReturnType extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTextContentReturnType:interface"
       },
       "kind": "Reference",
       "text": "UseTextContentReturnType"
      },
      {
       "kind": "Content",
       "text": " "
      }
     ],
     "extendsTypes": [
      {
       "excerpt": {
        "isEmpty": false,
        "text": "UseTextContentReturnType",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTextContentReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseTextContentReturnType"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "displayName": "UseTypeaheadNavigationChildReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-typeahead-navigation.tsx",
     "isExported": true,
     "name": "UseTypeaheadNavigationChildReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildReturnType#pressParameters:member"
       },
       "displayName": "pressParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "pressParameters: Pick<UsePressParameters<any>[\"pressParameters\"], \"excludeSpace\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "pressParameters: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePressParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePressParameters"
         },
         {
          "kind": "Content",
          "text": "<any>[\"pressParameters\"], \"excludeSpace\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "pressParameters: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UsePressParameters:interface"
         },
         "kind": "Reference",
         "text": "UsePressParameters"
        },
        {
         "kind": "Content",
         "text": "<any>[\"pressParameters\"], \"excludeSpace\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "pressParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "pressParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UsePressParameters<any>[\"pressParameters\"], \"excludeSpace\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UsePressParameters:interface"
          },
          "kind": "Reference",
          "text": "UsePressParameters"
         },
         {
          "kind": "Content",
          "text": "<any>[\"pressParameters\"], \"excludeSpace\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTypeaheadNavigationContext:interface"
     },
     "containerKey": "UseTypeaheadNavigationContext|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTypeaheadNavigationContext ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTypeaheadNavigationContext "
       }
      ],
      "tokenRange": {
       "endIndex": 1,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTypeaheadNavigationContext "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseTypeaheadNavigationContext",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-typeahead-navigation.tsx",
     "isExported": true,
     "name": "UseTypeaheadNavigationContext",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationContext#typeaheadNavigationContext:member"
       },
       "displayName": "typeaheadNavigationContext",
       "excerpt": {
        "isEmpty": false,
        "text": "typeaheadNavigationContext: {\n        excludeSpace: () => boolean;\n        sortedTypeaheadInfo: Array<TypeaheadInfo>;\n        insertingComparator: (lhs: string | null, rhs: TypeaheadInfo) => number;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeaheadNavigationContext: "
         },
         {
          "kind": "Content",
          "text": "{\n        excludeSpace: () => boolean;\n        sortedTypeaheadInfo: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Array:interface"
          },
          "kind": "Reference",
          "text": "Array"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "TypeaheadInfo:interface"
          },
          "kind": "Reference",
          "text": "TypeaheadInfo"
         },
         {
          "kind": "Content",
          "text": ">;\n        insertingComparator: (lhs: string | null, rhs: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "TypeaheadInfo:interface"
          },
          "kind": "Reference",
          "text": "TypeaheadInfo"
         },
         {
          "kind": "Content",
          "text": ") => number;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 9,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "typeaheadNavigationContext: "
        },
        {
         "kind": "Content",
         "text": "{\n        excludeSpace: () => boolean;\n        sortedTypeaheadInfo: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Array:interface"
         },
         "kind": "Reference",
         "text": "Array"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "TypeaheadInfo:interface"
         },
         "kind": "Reference",
         "text": "TypeaheadInfo"
        },
        {
         "kind": "Content",
         "text": ">;\n        insertingComparator: (lhs: string | null, rhs: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "preact-prop-helpers!",
          "symbol": "TypeaheadInfo:interface"
         },
         "kind": "Reference",
         "text": "TypeaheadInfo"
        },
        {
         "kind": "Content",
         "text": ") => number;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "typeaheadNavigationContext|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "typeaheadNavigationContext",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        excludeSpace: () => boolean;\n        sortedTypeaheadInfo: Array<TypeaheadInfo>;\n        insertingComparator: (lhs: string | null, rhs: TypeaheadInfo) => number;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        excludeSpace: () => boolean;\n        sortedTypeaheadInfo: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Array:interface"
          },
          "kind": "Reference",
          "text": "Array"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "TypeaheadInfo:interface"
          },
          "kind": "Reference",
          "text": "TypeaheadInfo"
         },
         {
          "kind": "Content",
          "text": ">;\n        insertingComparator: (lhs: string | null, rhs: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "preact-prop-helpers!",
           "symbol": "TypeaheadInfo:interface"
          },
          "kind": "Reference",
          "text": "TypeaheadInfo"
         },
         {
          "kind": "Content",
          "text": ") => number;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 8,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": []
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTypeaheadNavigationParameters:interface"
     },
     "containerKey": "UseTypeaheadNavigationParameters|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTypeaheadNavigationParameters<TabbableChildElement extends Element, _M extends UseTypeaheadNavigationChildInfo<TabbableChildElement>> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTypeaheadNavigationParameters<TabbableChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": ", _M extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact-prop-helpers!",
         "symbol": "UseTypeaheadNavigationChildInfo:interface"
        },
        "kind": "Reference",
        "text": "UseTypeaheadNavigationChildInfo"
       },
       {
        "kind": "Content",
        "text": "<TabbableChildElement>"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTypeaheadNavigationParameters<TabbableChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": ", _M extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationChildInfo:interface"
       },
       "kind": "Reference",
       "text": "UseTypeaheadNavigationChildInfo"
      },
      {
       "kind": "Content",
       "text": "<TabbableChildElement>"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseTypeaheadNavigationParameters",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-typeahead-navigation.tsx",
     "isExported": true,
     "name": "UseTypeaheadNavigationParameters",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationParameters#rovingTabIndexReturn:member"
       },
       "displayName": "rovingTabIndexReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "rovingTabIndexReturn: Pick<UseRovingTabIndexReturnType<any, TabbableChildElement, any>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "rovingTabIndexReturn: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<any, TabbableChildElement, any>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 6,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "rovingTabIndexReturn: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Pick:type"
         },
         "kind": "Reference",
         "text": "Pick"
        },
        {
         "kind": "Content",
         "text": "<"
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseRovingTabIndexReturnType:interface"
         },
         "kind": "Reference",
         "text": "UseRovingTabIndexReturnType"
        },
        {
         "kind": "Content",
         "text": "<any, TabbableChildElement, any>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "rovingTabIndexReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "rovingTabIndexReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "Pick<UseRovingTabIndexReturnType<any, TabbableChildElement, any>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Pick:type"
          },
          "kind": "Reference",
          "text": "Pick"
         },
         {
          "kind": "Content",
          "text": "<"
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseRovingTabIndexReturnType:interface"
          },
          "kind": "Reference",
          "text": "UseRovingTabIndexReturnType"
         },
         {
          "kind": "Content",
          "text": "<any, TabbableChildElement, any>[\"rovingTabIndexReturn\"], \"getTabbableIndex\" | \"setTabbableIndex\">"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationParameters#typeaheadNavigationParameters:member"
       },
       "displayName": "typeaheadNavigationParameters",
       "excerpt": {
        "isEmpty": false,
        "text": "typeaheadNavigationParameters: {\n        isValid(i: number): boolean;\n        collator: null | Intl.Collator;\n        noTypeahead: boolean;\n        typeaheadTimeout: number;\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeaheadNavigationParameters: "
         },
         {
          "kind": "Content",
          "text": "{\n        isValid(i: number): boolean;\n        collator: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Intl.Collator:interface"
          },
          "kind": "Reference",
          "text": "Intl.Collator"
         },
         {
          "kind": "Content",
          "text": ";\n        noTypeahead: boolean;\n        typeaheadTimeout: number;\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "typeaheadNavigationParameters: "
        },
        {
         "kind": "Content",
         "text": "{\n        isValid(i: number): boolean;\n        collator: null | "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": "~",
          "source": "!",
          "symbol": "Intl.Collator:interface"
         },
         "kind": "Reference",
         "text": "Intl.Collator"
        },
        {
         "kind": "Content",
         "text": ";\n        noTypeahead: boolean;\n        typeaheadTimeout: number;\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "typeaheadNavigationParameters|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "typeaheadNavigationParameters",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        isValid(i: number): boolean;\n        collator: null | Intl.Collator;\n        noTypeahead: boolean;\n        typeaheadTimeout: number;\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        isValid(i: number): boolean;\n        collator: null | "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Intl.Collator:interface"
          },
          "kind": "Reference",
          "text": "Intl.Collator"
         },
         {
          "kind": "Content",
          "text": ";\n        noTypeahead: boolean;\n        typeaheadTimeout: number;\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "TabbableChildElement"
      },
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationChildInfo<TabbableChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationChildInfo:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationChildInfo"
         },
         {
          "kind": "Content",
          "text": "<TabbableChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 5,
         "startIndex": 3
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "_M"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "UseTypeaheadNavigationReturnType:interface"
     },
     "containerKey": "UseTypeaheadNavigationReturnType|Interface",
     "excerpt": {
      "isEmpty": false,
      "text": "export interface UseTypeaheadNavigationReturnType<ParentOrChildElement extends Element> ",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export interface UseTypeaheadNavigationReturnType<ParentOrChildElement extends "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": "~",
         "source": "!",
         "symbol": "Element:interface"
        },
        "kind": "Reference",
        "text": "Element"
       },
       {
        "kind": "Content",
        "text": "> "
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export interface UseTypeaheadNavigationReturnType<ParentOrChildElement extends "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": "~",
        "source": "!",
        "symbol": "Element:interface"
       },
       "kind": "Reference",
       "text": "Element"
      },
      {
       "kind": "Content",
       "text": "> "
      }
     ],
     "extendsTypes": [],
     "displayName": "UseTypeaheadNavigationReturnType",
     "fileUrlPath": "src/component-detail/keyboard-navigation/use-typeahead-navigation.tsx",
     "isExported": true,
     "name": "UseTypeaheadNavigationReturnType",
     "kind": "Interface",
     "members": [
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationReturnType#context:member"
       },
       "displayName": "context",
       "excerpt": {
        "isEmpty": false,
        "text": "context: UseTypeaheadNavigationContext;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "context: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationContext"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "context: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "UseTypeaheadNavigationContext:interface"
         },
         "kind": "Reference",
         "text": "UseTypeaheadNavigationContext"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "context|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "context",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "UseTypeaheadNavigationContext",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "UseTypeaheadNavigationContext:interface"
          },
          "kind": "Reference",
          "text": "UseTypeaheadNavigationContext"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationReturnType#propsStable:member"
       },
       "displayName": "propsStable",
       "excerpt": {
        "isEmpty": false,
        "text": "propsStable: ElementProps<ParentOrChildElement>;",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "propsStable: "
         },
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "propsStable: "
        },
        {
         "canonicalReference": {
          "isEmpty": false,
          "navigation": ".",
          "source": "preact-prop-helpers!",
          "symbol": "ElementProps:type"
         },
         "kind": "Reference",
         "text": "ElementProps"
        },
        {
         "kind": "Content",
         "text": "<ParentOrChildElement>"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "propsStable|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "propsStable",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "ElementProps<ParentOrChildElement>",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": ".",
           "source": "preact-prop-helpers!",
           "symbol": "ElementProps:type"
          },
          "kind": "Reference",
          "text": "ElementProps"
         },
         {
          "kind": "Content",
          "text": "<ParentOrChildElement>"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact-prop-helpers!",
        "symbol": "UseTypeaheadNavigationReturnType#typeaheadNavigationReturn:member"
       },
       "displayName": "typeaheadNavigationReturn",
       "excerpt": {
        "isEmpty": false,
        "text": "typeaheadNavigationReturn: {\n        getCurrentTypeahead(): string | null;\n        typeaheadStatus: \"invalid\" | \"valid\" | \"none\";\n    };",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "typeaheadNavigationReturn: "
         },
         {
          "kind": "Content",
          "text": "{\n        getCurrentTypeahead(): string | null;\n        typeaheadStatus: \"invalid\" | \"valid\" | \"none\";\n    }"
         },
         {
          "kind": "Content",
          "text": ";"
         }
        ],
        "tokenRange": {
         "endIndex": 3,
         "startIndex": 0
        }
       },
       "excerptTokens": [
        {
         "kind": "Content",
         "text": "typeaheadNavigationReturn: "
        },
        {
         "kind": "Content",
         "text": "{\n        getCurrentTypeahead(): string | null;\n        typeaheadStatus: \"invalid\" | \"valid\" | \"none\";\n    }"
        },
        {
         "kind": "Content",
         "text": ";"
        }
       ],
       "containerKey": "typeaheadNavigationReturn|PropertySignature",
       "isEventProperty": false,
       "isOptional": false,
       "isReadonly": false,
       "kind": "PropertySignature",
       "members": [],
       "name": "typeaheadNavigationReturn",
       "releaseTag": 4,
       "propertyTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n        getCurrentTypeahead(): string | null;\n        typeaheadStatus: \"invalid\" | \"valid\" | \"none\";\n    }",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n        getCurrentTypeahead(): string | null;\n        typeaheadStatus: \"invalid\" | \"valid\" | \"none\";\n    }"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "sourceLocation": {}
      }
     ],
     "preserveMemberOrder": false,
     "sourceLocation": {},
     "releaseTag": 4,
     "typeParameters": [
      {
       "constraintExcerpt": {
        "isEmpty": false,
        "text": "Element",
        "spannedTokens": [
         {
          "canonicalReference": {
           "isEmpty": false,
           "navigation": "~",
           "source": "!",
           "symbol": "Element:interface"
          },
          "kind": "Reference",
          "text": "Element"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       },
       "defaultTypeExcerpt": {
        "isEmpty": true,
        "text": "",
        "spannedTokens": [],
        "tokenRange": {
         "endIndex": 0,
         "startIndex": 0
        }
       },
       "isOptional": false,
       "name": "ParentOrChildElement"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useUrl:function(1)"
     },
     "kind": "Function",
     "containerKey": "useUrl|Function|1",
     "displayName": "useUrl",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useUrl(onUrlChange: (url: string) => void): readonly [() => string, (newUrlOrSetter: string | ((prev: string | undefined) => string), history2: \"push\" | \"replace\") => void];",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useUrl(onUrlChange: "
       },
       {
        "kind": "Content",
        "text": "(url: string) => void"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "readonly [() => string, (newUrlOrSetter: string | ((prev: string | undefined) => string), history2: \"push\" | \"replace\") => void]"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 5,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useUrl",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "onUrlChange",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "(url: string) => void",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "(url: string) => void"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "readonly [() => string, (newUrlOrSetter: string | ((prev: string | undefined) => string), history2: \"push\" | \"replace\") => void]",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "readonly [() => string, (newUrlOrSetter: string | ((prev: string | undefined) => string), history2: \"push\" | \"replace\") => void]"
       }
      ],
      "tokenRange": {
       "endIndex": 4,
       "startIndex": 3
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "tsdocComment": {
      "kind": "Comment",
      "summarySection": {
       "kind": "Section",
       "nodes": [
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "Allows you to inspect when the entire URL changes, either because the hash changed or because the Back/Forward browser buttons were pressed (if the URL is set programmatically in a way that doesn't trigger either of those, like ",
           "textExcerpt": {
            "startIndex": 0,
            "endIndex": 83
           }
          },
          {
           "kind": "CodeSpan",
           "code": "history.replaceState"
          },
          {
           "kind": "PlainText",
           "text": ", well, 🤷 there's no way to track that).",
           "textExcerpt": {
            "startIndex": 88,
            "endIndex": 110
           }
          },
          {
           "kind": "SoftBreak"
          },
          {
           "kind": "SoftBreak"
          }
         ]
        },
        {
         "kind": "Paragraph",
         "nodes": [
          {
           "kind": "PlainText",
           "text": "In general, you'll want to inspect a specific directory of a path, or a specific query parameter value, not the entire URL.",
           "textExcerpt": {
            "startIndex": 112,
            "endIndex": 161
           }
          },
          {
           "kind": "SoftBreak"
          }
         ]
        }
       ]
      },
      "typeParams": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "seeBlocks": [],
      "params": {
       "blocks": [],
       "count": 0,
       "kind": "ParamCollection"
      },
      "modifierTagSet": {
       "nodes": []
      },
      "customBlocks": []
     },
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useUrl(onUrlChange: "
      },
      {
       "kind": "Content",
       "text": "(url: string) => void"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "readonly [() => string, (newUrlOrSetter: string | ((prev: string | undefined) => string), history2: \"push\" | \"replace\") => void]"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "useWhatCausedRender:function(1)"
     },
     "kind": "Function",
     "containerKey": "useWhatCausedRender|Function|1",
     "displayName": "useWhatCausedRender",
     "excerpt": {
      "isEmpty": false,
      "text": "export declare function useWhatCausedRender(who: string, { props, state }: {\n    props: any;\n    state: any;\n}): void;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export declare function useWhatCausedRender(who: "
       },
       {
        "kind": "Content",
        "text": "string"
       },
       {
        "kind": "Content",
        "text": ", { props, state }: "
       },
       {
        "kind": "Content",
        "text": "{\n    props: any;\n    state: any;\n}"
       },
       {
        "kind": "Content",
        "text": "): "
       },
       {
        "kind": "Content",
        "text": "void"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 7,
       "startIndex": 0
      }
     },
     "isExported": true,
     "name": "useWhatCausedRender",
     "overloadIndex": 1,
     "parameters": [
      {
       "isOptional": false,
       "name": "who",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "string",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "string"
         }
        ],
        "tokenRange": {
         "endIndex": 2,
         "startIndex": 1
        }
       }
      },
      {
       "isOptional": false,
       "name": "{ props, state }",
       "parameterTypeExcerpt": {
        "isEmpty": false,
        "text": "{\n    props: any;\n    state: any;\n}",
        "spannedTokens": [
         {
          "kind": "Content",
          "text": "{\n    props: any;\n    state: any;\n}"
         }
        ],
        "tokenRange": {
         "endIndex": 4,
         "startIndex": 3
        }
       }
      }
     ],
     "releaseTag": 4,
     "returnTypeExcerpt": {
      "isEmpty": false,
      "text": "void",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "void"
       }
      ],
      "tokenRange": {
       "endIndex": 6,
       "startIndex": 5
      }
     },
     "sourceLocation": {},
     "typeParameters": [],
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export declare function useWhatCausedRender(who: "
      },
      {
       "kind": "Content",
       "text": "string"
      },
      {
       "kind": "Content",
       "text": ", { props, state }: "
      },
      {
       "kind": "Content",
       "text": "{\n    props: any;\n    state: any;\n}"
      },
      {
       "kind": "Content",
       "text": "): "
      },
      {
       "kind": "Content",
       "text": "void"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ]
    },
    {
     "excerptTokens": [
      {
       "kind": "Content",
       "text": "export type VNode = "
      },
      {
       "canonicalReference": {
        "isEmpty": false,
        "navigation": ".",
        "source": "preact!",
        "symbol": "JSXInternal.Element:interface"
       },
       "kind": "Reference",
       "text": "JSX.Element"
      },
      {
       "kind": "Content",
       "text": ";"
      }
     ],
     "canonicalReference": {
      "isEmpty": false,
      "navigation": ".",
      "source": "preact-prop-helpers!",
      "symbol": "VNode:type"
     },
     "containerKey": "VNode|TypeAlias",
     "displayName": "VNode",
     "excerpt": {
      "isEmpty": false,
      "text": "export type VNode = JSX.Element;",
      "spannedTokens": [
       {
        "kind": "Content",
        "text": "export type VNode = "
       },
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.Element:interface"
        },
        "kind": "Reference",
        "text": "JSX.Element"
       },
       {
        "kind": "Content",
        "text": ";"
       }
      ],
      "tokenRange": {
       "endIndex": 3,
       "startIndex": 0
      }
     },
     "fileUrlPath": "src/util/types.tsx",
     "kind": "TypeAlias",
     "isExported": true,
     "members": [],
     "name": "VNode",
     "releaseTag": 4,
     "typeExcerpt": {
      "isEmpty": false,
      "text": "JSX.Element",
      "spannedTokens": [
       {
        "canonicalReference": {
         "isEmpty": false,
         "navigation": ".",
         "source": "preact!",
         "symbol": "JSXInternal.Element:interface"
        },
        "kind": "Reference",
        "text": "JSX.Element"
       }
      ],
      "tokenRange": {
       "endIndex": 2,
       "startIndex": 1
      }
     },
     "typeParameters": [],
     "sourceLocation": {}
    }
   ]
  }
 ],
 "kind": "Package",
 "tsdocComment": {
  "kind": "Comment",
  "remarksBlock": {
   "blockTag": {
    "kind": "BlockTag",
    "tagName": "@remarks"
   },
   "content": {
    "kind": "Section",
    "nodes": [
     {
      "kind": "Paragraph",
      "nodes": [
       {
        "kind": "SoftBreak"
       },
       {
        "kind": "SoftBreak"
       },
       {
        "kind": "PlainText",
        "text": "The ",
        "textExcerpt": {
         "startIndex": 20,
         "endIndex": 22
        }
       },
       {
        "kind": "CodeSpan",
        "code": "widget-lib"
       },
       {
        "kind": "PlainText",
        "text": " defines the ",
        "textExcerpt": {
         "startIndex": 27,
         "endIndex": 32
        }
       },
       {
        "kind": "LinkTag",
        "codeDestination": {
         "kind": "DeclarationReference",
         "memberReferences": [
          {
           "hasDot": false,
           "kind": "MemberReference",
           "memberIdentifier": {
            "kind": "MemberIdentifier",
            "identifier": "IWidget",
            "hasQuotes": false
           }
          }
         ]
        },
        "tagName": "@link"
       },
       {
        "kind": "PlainText",
        "text": " interface and ",
        "textExcerpt": {
         "startIndex": 38,
         "endIndex": 43
        }
       },
       {
        "kind": "LinkTag",
        "codeDestination": {
         "kind": "DeclarationReference",
         "memberReferences": [
          {
           "hasDot": false,
           "kind": "MemberReference",
           "memberIdentifier": {
            "kind": "MemberIdentifier",
            "identifier": "Widget",
            "hasQuotes": false
           }
          }
         ]
        },
        "tagName": "@link"
       },
       {
        "kind": "PlainText",
        "text": " class, which are used to build widgets.",
        "textExcerpt": {
         "startIndex": 49,
         "endIndex": 65
        }
       },
       {
        "kind": "SoftBreak"
       },
       {
        "kind": "SoftBreak"
       }
      ]
     }
    ]
   },
   "kind": "Block"
  },
  "summarySection": {
   "kind": "Section",
   "nodes": [
    {
     "kind": "Paragraph",
     "nodes": [
      {
       "kind": "PlainText",
       "text": "A selection of custom hooks for Preact.",
       "textExcerpt": {
        "startIndex": 0,
        "endIndex": 14
       }
      },
      {
       "kind": "SoftBreak"
      },
      {
       "kind": "SoftBreak"
      }
     ]
    }
   ]
  },
  "typeParams": {
   "blocks": [],
   "count": 0,
   "kind": "ParamCollection"
  },
  "seeBlocks": [],
  "params": {
   "blocks": [],
   "count": 0,
   "kind": "ParamCollection"
  },
  "modifierTagSet": {
   "nodes": [
    {
     "kind": "BlockTag",
     "tagName": "@packageDocumentation"
    }
   ]
  },
  "customBlocks": [
   {
    "blockTag": {
     "kind": "BlockTag",
     "tagName": "@docTopic"
    },
    "content": {
     "kind": "Section",
     "nodes": [
      {
       "kind": "Paragraph",
       "nodes": [
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "PlainText",
         "text": "Test Topic",
         "textExcerpt": {
          "startIndex": 71,
          "endIndex": 74
         }
        },
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "SoftBreak"
        }
       ]
      },
      {
       "kind": "Paragraph",
       "nodes": [
        {
         "kind": "PlainText",
         "text": "First paragraph for Test Topic.",
         "textExcerpt": {
          "startIndex": 76,
          "endIndex": 86
         }
        },
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "SoftBreak"
        }
       ]
      },
      {
       "kind": "Paragraph",
       "nodes": [
        {
         "kind": "PlainText",
         "text": "Second paragraph for Test Topic. This is an inline link ",
         "textExcerpt": {
          "startIndex": 88,
          "endIndex": 109
         }
        },
        {
         "kind": "LinkTag",
         "codeDestination": {
          "kind": "DeclarationReference",
          "memberReferences": [
           {
            "hasDot": false,
            "kind": "MemberReference",
            "memberIdentifier": {
             "kind": "MemberIdentifier",
             "identifier": "useListNavigation",
             "hasQuotes": false
            }
           }
          ]
         },
         "linkText": "to a hook",
         "tagName": "@link"
        },
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "SoftBreak"
        }
       ]
      }
     ]
    },
    "kind": "Block"
   },
   {
    "blockTag": {
     "kind": "BlockTag",
     "tagName": "@docTopic"
    },
    "content": {
     "kind": "Section",
     "nodes": [
      {
       "kind": "Paragraph",
       "nodes": [
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "PlainText",
         "text": "Test Topic #2",
         "textExcerpt": {
          "startIndex": 129,
          "endIndex": 135
         }
        },
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "SoftBreak"
        }
       ]
      },
      {
       "kind": "Paragraph",
       "nodes": [
        {
         "kind": "PlainText",
         "text": "Another paragraph",
         "textExcerpt": {
          "startIndex": 137,
          "endIndex": 140
         }
        },
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "SoftBreak"
        },
        {
         "kind": "SoftBreak"
        }
       ]
      }
     ]
    },
    "kind": "Block"
   }
  ]
 },
 "name": "preact-prop-helpers",
 "preserveMemberOrder": false
}