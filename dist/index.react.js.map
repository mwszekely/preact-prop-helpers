{"version":3,"file":"index.react.js","sources":["../src/util/lib-shared.tsx","../src/util/lib-react.tsx","../src/preact-extensions/use-passive-state.tsx","../src/preact-extensions/use-stable-getter.tsx","../src/preact-extensions/use-stable-callback.tsx","../src/util/mode.tsx","../src/util/use-call-count.tsx","../src/dom-helpers/use-event-handler.tsx","../src/util/assert.tsx","../src/component-detail/dismissal/use-backdrop-dismiss.tsx","../src/util/event.tsx","../src/component-detail/dismissal/use-escape-dismiss.tsx","../src/component-detail/dismissal/use-lost-focus-dismiss.tsx","../src/dom-helpers/use-merged-children.tsx","../src/dom-helpers/use-merged-classes.tsx","../src/dom-helpers/use-merged-refs.tsx","../src/dom-helpers/use-merged-styles.tsx","../src/dom-helpers/use-merged-props.tsx","../src/util/stack.tsx","../src/util/focus.tsx","../src/timing/use-timeout.tsx","../src/util/use-tag-props.tsx","../src/component-detail/keyboard-navigation/use-linear-navigation.tsx","../src/preact-extensions/use-managed-children.tsx","../src/preact-extensions/use-state.tsx","../src/component-detail/keyboard-navigation/use-roving-tabindex.tsx","../src/dom-helpers/use-text-content.tsx","../src/component-detail/keyboard-navigation/use-typeahead-navigation.tsx","../src/component-detail/keyboard-navigation/use-list-navigation-partial.tsx","../src/component-detail/keyboard-navigation/use-grid-navigation-partial.tsx","../src/component-detail/processed-children/use-paginated-children.tsx","../src/preact-extensions/use-force-update.tsx","../src/component-detail/processed-children/use-rearrangeable-children.tsx","../src/component-detail/processed-children/use-staggered-children.tsx","../src/component-detail/processed-children/use-processed-children.tsx","../src/component-detail/selection/use-multi-selection.tsx","../src/component-detail/selection/use-single-selection.tsx","../src/component-detail/selection/use-selection.tsx","../src/dom-helpers/use-ref-element.tsx","../src/observers/use-active-element.tsx","../src/component-detail/use-dismiss.tsx","../src/dom-helpers/use-document-class.tsx","../src/dom-helpers/use-blocking-element.tsx","../src/component-detail/use-focus-trap.tsx","../src/component-detail/use-grid-navigation-selection.tsx","../src/component-detail/use-list-navigation-selection.tsx","../src/observers/use-children-have-focus.tsx","../src/observers/use-has-current-focus.tsx","../src/component-use/use-grid-navigation-complete.tsx","../src/component-use/use-list-navigation-complete.tsx","../src/component-use/use-modal.tsx","../src/preact-extensions/use-async.tsx","../src/dom-helpers/use-async-handler.tsx","../src/component-use/use-press.tsx","../src/component-use/use-random-id.tsx","../src/component-use/use-random-dual-ids.tsx","../src/dom-helpers/use-draggable.tsx","../src/dom-helpers/use-droppable.tsx","../src/dom-helpers/use-hide-scroll.tsx","../src/dom-helpers/use-imperative-props.tsx","../src/util/random-id.tsx","../src/dom-helpers/use-portal-children.tsx","../src/observers/use-element-size.tsx","../src/observers/use-has-last-focus.tsx","../src/observers/use-logical-direction.tsx","../src/observers/use-media-query.tsx","../src/observers/use-mutation-observer.tsx","../src/observers/use-url.tsx","../src/preact-extensions/use-async-effect.tsx","../src/preact-extensions/use-effect-debug.tsx","../src/preact-extensions/use-layout-effect-debug.tsx","../src/preact-extensions/use-persistent-state.tsx","../src/preact-extensions/use-props-on-children.tsx","../src/preact-extensions/use-search-param-state.tsx","../src/preact-extensions/use-what-caused-render.tsx","../src/timing/use-animation-frame.tsx","../src/timing/use-interval.tsx"],"sourcesContent":["\r\n\r\n\r\n/** Opposite of NonNullable */\r\nexport type Nullable<T = null> = null | undefined | T;\r\n/** Like `Required`, but also makes types `NonNullable` besides just required. */\r\nexport type RequiredN<T> = { [P in keyof T]-?: NonNullable<T[P]>; };\r\n/** Like Omit, but with type completion */\r\nexport type OmitStrong<T, K extends keyof T> = Omit<T, K>;\r\n\r\n/** \"**Pick**, then **omit**\". Given an object, omits everything but the given props in the given sub-object, including other sub-objects. */\r\nexport type TargetedOmit<T, K extends keyof T, L extends keyof T[K]> = { [M in K]: OmitStrong<T[K], L> };\r\n/** \r\n * \"**Pick**, then **pick** again\". Given an object, omits everything but the given props in the given sub-object, including other sub-objects.\r\n * \r\n * @remarks This is particularly useful for the kind of off-brand parameter inheritence that things like grid navigation have going.\r\n */\r\nexport type TargetedPick<T, K extends keyof T, L extends keyof T[K]> = { [M in K]: Pick<T[K], L> };\r\n/** Combines two interfaces in a way that leaves them still able to be extended (via class, another interface, etc.) */\r\nexport type ExtendMerge<A, B> = { [K in (keyof A) | (keyof B)]: K extends keyof A ? (K extends keyof B ? (A[K] & B[K]) : A[K]) : K extends keyof B ? B[K] : unknown }\r\n\r\n\r\n\r\n\r\n/** These are all the event mappings that are shared between Preact/React */\r\nexport const EventMapping = {\r\n    abort: \"onAbort\",\r\n    animationend: \"onAnimationEnd\",\r\n    animationstart: \"onAnimationStart\",\r\n    animationiteration: \"onAnimationIteration\",\r\n    beforeinput: \"onBeforeInput\",\r\n    blur: \"onBlur\",\r\n    canplay: \"onCanPlay\",\r\n    canplaythrough: \"onCanPlayThrough\",\r\n    change: \"onChange\",\r\n    click: \"onClick\",\r\n    compositionend: \"onCompositionEnd\",\r\n    compositionstart: \"onCompositionStart\",\r\n    compositionupdate: \"onCompositionUpdate\",\r\n    contextmenu: \"onContextMenu\",\r\n    cut: \"onCut\",\r\n    drag: \"onDrag\",\r\n    dragend: \"onDragEnd\",\r\n    dragenter: \"onDragEnter\",\r\n    dragleave: \"onDragLeave\",\r\n    dragover: \"onDragOver\",\r\n    dragstart: \"onDragStart\",\r\n    drop: \"onDrop\",\r\n    durationchange: \"onDurationChange\",\r\n    emptied: \"onEmptied\",\r\n    ended: \"onEnded\",\r\n    error: \"onError\",\r\n    focus: \"onFocus\",\r\n    gotpointercapture: \"onGotPointerCapture\",\r\n    input: \"onInput\",\r\n    invalid: \"onInvalid\",\r\n    keydown: \"onKeyDown\",\r\n    keypress: \"onKeyPress\",\r\n    keyup: \"onKeyUp\",\r\n    load: \"onLoad\",\r\n    loadeddata: \"onLoadedData\",\r\n    loadedmetadata: \"onLoadedMetadata\",\r\n    loadstart: \"onLoadStart\",\r\n    lostpointercapture: \"onLostPointerCapture\",\r\n    mousedown: \"onMouseDown\",\r\n    mouseenter: \"onMouseEnter\",\r\n    mouseleave: \"onMouseLeave\",\r\n    mousemove: \"onMouseMove\",\r\n    mouseout: \"onMouseOut\",\r\n    mouseover: \"onMouseOver\",\r\n    mouseup: \"onMouseUp\",\r\n    paste: \"onPaste\",\r\n    pause: \"onPause\",\r\n    play: \"onPlay\",\r\n    playing: \"onPlaying\",\r\n    pointercancel: \"onPointerCancel\",\r\n    pointerdown: \"onPointerDown\",\r\n    pointerenter: \"onPointerEnter\",\r\n    pointerleave: \"onPointerLeave\",\r\n    pointermove: \"onPointerMove\",\r\n    pointerout: \"onPointerOut\",\r\n    pointerover: \"onPointerOver\",\r\n    pointerup: \"onPointerUp\",\r\n    progress: \"onProgress\",\r\n    reset: \"onReset\",\r\n    scroll: \"onScroll\",\r\n    seeked: \"onSeeked\",\r\n    seeking: \"onSeeking\",\r\n    select: \"onSelect\",\r\n    stalled: \"onStalled\",\r\n    submit: \"onSubmit\",\r\n    suspend: \"onSuspend\",\r\n    timeupdate: \"onTimeUpdate\",\r\n    touchcancel: \"onTouchCancel\",\r\n    touchend: \"onTouchEnd\",\r\n    touchmove: \"onTouchMove\",\r\n    touchstart: \"onTouchStart\",\r\n    transitionend: \"onTransitionEnd\",\r\n    volumechange: \"onVolumeChange\",\r\n    waiting: \"onWaiting\",\r\n    wheel: \"onWheel\",\r\n\r\n\r\n    fullscreenchange: null!,\r\n    animationcancel: null!,\r\n    auxclick: null!,\r\n    cancel: null!,\r\n    close: null!,\r\n    copy: null!,\r\n    cuechange: null!,\r\n    fullscreenerror: null!,\r\n    ratechange: null!,\r\n    resize: null!,\r\n    scrollend: null!,\r\n    securitypolicyviolation: null!,\r\n    selectionchange: null!,\r\n    selectstart: null!,\r\n    slotchange: null!,\r\n    transitioncancel: null!,\r\n    transitionrun: null!,\r\n    transitionstart: null!,\r\n    webkitanimationend: null!,\r\n    webkitanimationiteration: null!,\r\n    webkitanimationstart: null!,\r\n    webkittransitionend: null!,\r\n} as const;\r\n","export { Fragment, cloneElement, createContext, createElement, forwardRef, memo, useInsertionEffect as useBeforeLayoutEffect, useCallback, useContext, useDebugValue, useEffect, useId, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState } from \"react\";\r\nexport type { Dispatch, EffectCallback, DependencyList as Inputs, JSX, MutableRefObject as MutableRef, PropsWithChildren, PropsWithRef, Reducer, Ref, RefCallback, SetStateAction } from \"react\";\r\nexport { createPortal } from \"react-dom\";\r\nexport { ExtendMerge, Nullable, OmitStrong, TargetedOmit, TargetedPick } from \"./lib-shared.js\";\r\nimport { EventMapping as em } from \"./lib-shared.js\";\r\n\r\nexport type RenderableProps<P> = PropsWithChildren<PropsWithRef<P>>;\r\n\r\nexport type StateUpdater<T> = Dispatch<SetStateAction<T>>;\r\n\r\nexport function debounceRendering(f: () => void) {\r\n    // TODO?\r\n    return queueMicrotask(f);\r\n    //(options.debounceRendering ?? queueMicrotask)(f);\r\n}\r\n\r\nexport const onfocusin = \"onFocus\" satisfies keyof ElementProps<any>;\r\nexport const onfocusout = \"onBlur\" satisfies keyof ElementProps<any>;\r\n\r\n\r\nimport { CompositionEvent, Dispatch, DragEvent, FocusEvent, HTMLProps as HTMLAttributes, KeyboardEvent, MouseEvent, PointerEvent, PropsWithChildren, PropsWithRef, SetStateAction, SyntheticEvent, TouchEvent, CSSProperties as react_CSSProperties } from \"react\";\r\n\r\nexport type ElementProps<E extends EventTarget> = PropsWithRef<HTMLAttributes<E>>;\r\nexport type EventType<T extends EventTarget, E extends Event> = SyntheticEvent<T, E>;\r\nexport type FocusEventType<E extends EventTarget> = FocusEvent<E>;\r\nexport type KeyboardEventType<E extends EventTarget> = KeyboardEvent<E>;\r\nexport type MouseEventType<E extends EventTarget> = MouseEvent<E>;\r\nexport type TouchEventType<E extends EventTarget> = TouchEvent<E>;\r\nexport type PointerEventType<E extends EventTarget> = PointerEvent<E>;\r\nexport type CompositionEventType<E extends EventTarget> = CompositionEvent<E>;\r\nexport type DragEventType<E extends EventTarget> = DragEvent<E>;\r\nexport type CSSProperties = react_CSSProperties;\r\nexport type VNode = JSX.Element;\r\n\r\n\r\nexport const EventMapping: { [K in keyof HTMLElementEventMap]: (keyof JSX.IntrinsicElements[\"div\"] & `on${string}`) } = {\r\n    dblclick: \"onDoubleClick\",\r\n    focusin: \"onFocus\",\r\n    focusout: \"onBlur\",\r\n    formdata: null!,\r\n    toggle: null!,\r\n    ...em,\r\n}","\r\nimport { debounceRendering, useCallback, useLayoutEffect, useRef } from \"../util/lib.js\";\r\nimport { Nullable } from \"../util/types.js\";\r\n\r\n/** Takes a new value or a function that updates a value, unlike `OnPassiveStateChange` which reacts to those updates */\r\nexport type PassiveStateUpdater<S, R> = ((value: S | ((prevState: S | undefined) => S), reason?: R | undefined) => void); //[R] extends [never]? ((value: S | ((prevState: S | undefined) => S), reason?: R) => void) : ((value: S | ((prevState: S | undefined) => S), reason: R | undefined) => void);\r\n/** Responds to a change in a value, unlike `PassiveStateUpdater` which causes the updates */\r\nexport type OnPassiveStateChange<S, R> = ((value: S, prevValue: S | undefined, reason?: R | undefined) => (void | (() => void))); //[R] extends [never]? ((value: S, prevValue: S | undefined, reason?: R) => (void | (() => void))) : ((value: S, prevValue: S | undefined, reason: R | undefined) => (void | (() => void)));\r\n\r\n\r\n\r\n/**\r\n * Debug hook. Given a value or set of values, emits a console error if any of them change from one render to the next.\r\n * \r\n * @remarks Eventually, when useEvent lands, we hopefully won't need this.\r\n */\r\nexport function useEnsureStability<T extends any[]>(parentHookName: string, ...values: T) {\r\n    if (process.env.NODE_ENV !== 'development')\r\n        return;\r\n\r\n    const helperToEnsureStability = useRef<Array<T>>([]);\r\n    const shownError = useRef<Array<boolean>>([]);\r\n    useHelper(values.length as any, -1);\r\n    values.forEach(useHelper);\r\n    return;\r\n\r\n\r\n    function useHelper<U extends T>(value: U, i: number) {\r\n        const index = i + 1;\r\n\r\n        // Make sure that the provided functions are perfectly stable across renders\r\n        if (helperToEnsureStability.current[index] === undefined)\r\n            helperToEnsureStability.current[index] = value;\r\n\r\n        if (helperToEnsureStability.current[index] != value) {\r\n            if (!shownError.current[index]) {\r\n                /* eslint-disable no-debugger */\r\n                debugger;\r\n                console.error(`The hook ${parentHookName} requires some or all of its arguments remain stable across each render; please check the ${i}-indexed argument (${i >= 0 ? JSON.stringify(values[i]) : \"the number of supposedly stable elements\"}).`);\r\n                shownError.current[index] = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Similar to `useState`, but for values that aren't \"render-important\" &ndash; updates don't cause a re-render and so the value shouldn't be used during render (though it certainly can, at least by re-rendering again).\r\n * \r\n * @remarks To compensate for this, you should pass a `useEffect`-esque callback that is run whenever the value changes.  Just like `useEffect`, this callback can return a cleanup function that's run before the value changes.  If you would like to re-render when the value changes (or, say, when the value meets some criteria), this is where you'll want to put in a call to a `setState` function.\r\n * \r\n * To summarize, it's like a `useState`-`useEffect` mashup:\r\n * \r\n * 1. It's like `useState`, except this version of `setState` doesn't re-render the whole component\r\n * 2. It's like `useState`, except you can run a function when the value changes that optionally returns a cleanup function\r\n * 3. It's like `useEffect`, except you trigger the effect function \"remotely\" instead of it running after rendering\r\n * 4. It's like `useEffect`, except the single \"dependency\" is based on your calls to `setState`\r\n * \r\n * Note that while calling `setState` doesn't cause any re-renders, you can do that within your `onChange` function, called whenever the value changes via that `setState`.\r\n * \r\n * {@include } {@link OnPassiveStateChange}\r\n * \r\n * @param onChange - The \"effect\" function to run when the value changes. Effectively the same as `useEffect`'s \"effect\" function.  MUST BE STABLE, either because it has no dependencies, or because it's from useStableCallback, but this will mean you cannot use getState or setState during render.\r\n * @param getInitialValue - If provided, the effect will be invoked once with this value on mount. MUST BE STABLE, either because it has no dependencies, or because it's from useStableCallback, but this will mean you cannot use getState or setState during render.\r\n * @param customDebounceRendering - By default, changes to passive state are delayed by one tick so that we only check for changes in a similar way to Preact. You can override this to, for example, always run immediately instead.\r\n * @returns \r\n */\r\nexport const usePassiveState = (function usePassiveState<T, R>(onChange: Nullable<OnPassiveStateChange<T, R>>, getInitialValue?: () => T, customDebounceRendering?: typeof debounceRendering): readonly [getStateStable: () => T, setStateStable: PassiveStateUpdater<T, R>] {\r\n\r\n    //let [id, ,getId] = useState(() => generateRandomId());\r\n\r\n    const valueRef = useRef<T | typeof Unset>(Unset);\r\n    const reasonRef = useRef<R | typeof Unset>(Unset);\r\n    const warningRef = useRef(false);\r\n    const dependencyToCompareAgainst = useRef<T | (typeof Unset)>(Unset);\r\n    const cleanupCallbackRef = useRef<undefined | (() => void)>(undefined);\r\n\r\n    // Make sure that the provided functions are perfectly stable across renders\r\n    useEnsureStability(\"usePassiveState\", onChange, getInitialValue, customDebounceRendering);\r\n\r\n    // Shared between \"dependency changed\" and \"component unmounted\".\r\n    const onShouldCleanUp = useCallback(() => {\r\n        const cleanupCallback = cleanupCallbackRef.current;\r\n        if (cleanupCallback)\r\n            cleanupCallback();\r\n    }, []);\r\n\r\n    // There are a couple places where we'd like to use our initial\r\n    // value in place of having no value at all yet.\r\n    // This is the shared code for that, used on mount and whenever\r\n    // getValue is called.\r\n    const tryEnsureValue = useCallback(() => {\r\n        if (valueRef.current === Unset && getInitialValue != undefined) {\r\n            try {\r\n                const initialValue = getInitialValue();\r\n                valueRef.current = initialValue;\r\n                cleanupCallbackRef.current = (onChange?.(initialValue, undefined, undefined!) ?? undefined);\r\n            }\r\n            catch (ex) {\r\n                // Exceptions are intentional to allow bailout (without exposing the Unset symbol)\r\n            }\r\n        }\r\n    }, [/* getInitialValue and onChange intentionally omitted */]);\r\n\r\n\r\n    const getValue = useCallback(() => {\r\n        if (warningRef.current)\r\n            console.warn(\"During onChange, prefer using the (value, prevValue) arguments instead of getValue -- it's ambiguous as to if you're asking for the old or new value at this point in time for this component.\");\r\n\r\n        // The first time we call getValue, if we haven't been given a value yet,\r\n        // (and we were given an initial value to use)\r\n        // return the initial value instead of nothing.\r\n        if (valueRef.current === Unset)\r\n            tryEnsureValue();\r\n\r\n        return (valueRef.current === Unset ? undefined! : valueRef.current!) as T;\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        // Make sure we've run our effect at least once on mount.\r\n        // (If we have an initial value, of course)\r\n        tryEnsureValue();\r\n    }, []);\r\n\r\n    // The actual code the user calls to (possibly) run a new effect.\r\n    const setValue = useCallback<PassiveStateUpdater<T, R>>((arg: Parameters<PassiveStateUpdater<T, R>>[0], reason: Parameters<PassiveStateUpdater<T, R>>[1]) => {\r\n\r\n        // Regardless of anything else, figure out what our next value is about to be.\r\n        const nextValue = (arg instanceof Function ? arg(valueRef.current === Unset ? undefined : valueRef.current) : arg);\r\n\r\n        //let id = getId();\r\n        //console.log((nextValue !== valueRef.current? \"\" : \"NOT \") + \"Scheduling effect \", id, \" with value \", nextValue);\r\n\r\n        if (/*dependencyToCompareAgainst.current === Unset &&*/ nextValue !== valueRef.current) {\r\n            // This is the first request to change this value.\r\n            // Evaluate the request immediately, then queue up the onChange function\r\n\r\n            // Save our current value so that we can compare against it later\r\n            // (if we flip back to this state, then we won't send the onChange function)\r\n            dependencyToCompareAgainst.current = valueRef.current;\r\n\r\n            // It's important to update this here (as well as below) in case customDebounceRendering invokes this immediately\r\n            valueRef.current = nextValue;\r\n            reasonRef.current = reason as R;\r\n\r\n            // Schedule the actual check and invocation of onChange later to let effects settle\r\n            (customDebounceRendering ?? debounceRendering)(() => {\r\n\r\n                const nextReason = reasonRef.current! as R;\r\n                const nextDep = valueRef.current! as T;\r\n                const prevDep = dependencyToCompareAgainst.current;\r\n\r\n                //let id = getId();\r\n                //console.log(((dependencyToCompareAgainst.current != valueRef.current)? \"\" : \"NOT \") + \"Running effect \", id, \" with value \", nextDep);\r\n                if (dependencyToCompareAgainst.current != valueRef.current) {\r\n                    // TODO: This needs to happen here in order to make recursive onChanges work\r\n                    // but it feels better to have it happen after onChange...\r\n                    valueRef.current = dependencyToCompareAgainst.current = Unset;\r\n\r\n                    warningRef.current = true;\r\n\r\n                    try {\r\n                        // Call any registered cleanup function\r\n                        onShouldCleanUp();\r\n                        valueRef.current = nextDep; // Needs to happen before onChange in case onChange is recursive (e.g. focusing causing a focus causing a focus)\r\n                        cleanupCallbackRef.current = (onChange?.(nextDep, prevDep === Unset ? undefined : prevDep, nextReason) ?? undefined);\r\n                    }\r\n                    finally {\r\n                        // Allow the user to normally call getValue again\r\n                        warningRef.current = false;\r\n                    }\r\n\r\n                }\r\n\r\n                // We've finished with everything, so mark us as being on a clean slate again.\r\n                dependencyToCompareAgainst.current = Unset;\r\n\r\n            });\r\n        }\r\n\r\n        // Update the value immediately.\r\n        // This will be checked against prevDep to see if we should actually call onChange\r\n        //valueRef.current = nextValue;\r\n\r\n    }, []);\r\n\r\n    return [getValue, setValue] as const;\r\n})\r\n\r\nconst Unset = Symbol();\r\n\r\n// Easy constants for getInitialValue\r\nexport function returnTrue() { return true; }\r\nexport function returnFalse() { return false; }\r\nexport function returnNull() { return null; }\r\nexport function returnUndefined() { return undefined; }\r\nexport function returnZero() { return 0; }\r\n\r\n/** \r\n * An alternative to use for `customDebounceRendering` that causes `usePassiveState` to run changes without waiting a tick.\r\n */\r\nexport function runImmediately(f: () => void) { f(); }","import { useBeforeLayoutEffect, useCallback, useMemo, useRef } from \"../util/lib.js\";\r\nimport { useEnsureStability } from \"./use-passive-state.js\";\r\n\r\nconst Unset = Symbol(\"unset\");\r\n\r\n\r\n/**\r\n * Given an input value, returns a constant getter function that can be used \r\n * inside of `useEffect` and friends without including it in the dependency array.\r\n * \r\n * @remarks This uses `options.diffed` in order to run before everything, even\r\n * ref assignment. This means this getter is safe to use anywhere ***except the render phase***.\r\n */\r\nexport const useStableGetter = (function useStableGetter<T>(value: T) {\r\n    const ref = useRef<T>(Unset as unknown as T);\r\n    useBeforeLayoutEffect((() => { ref.current = value; }), [value]);\r\n\r\n    return useCallback(() => {\r\n        if (ref.current as unknown === Unset) {\r\n            throw new Error('Value retrieved from useStableGetter() cannot be called during render.')\r\n        }\r\n        return ref.current;\r\n    }, []);\r\n})\r\n\r\n\r\n/**\r\n * Like `useStableGetter`, but ***requires*** that everything in the object is also stable,\r\n * and in turn returns an object that itself is stable.\r\n * @param t \r\n * @returns \r\n */\r\nfunction useStableObject<T extends {}>(t: T): T {\r\n    const e = Object.entries(t);\r\n    useEnsureStability(\"useStableObject\", e.length, ...e.map(([_k, v]) => v));\r\n    return useRef(t).current;\r\n}\r\n\r\n\r\nexport function useMemoObject<T extends {}>(t: T): T {\r\n    return useMemo(() => { return t; }, Object.values(t));\r\n}\r\n\r\n","import { useCallback as useCallbackNative } from \"../util/lib.js\";\r\nimport { useEnsureStability } from \"./use-passive-state.js\";\r\nimport { useStableGetter } from \"./use-stable-getter.js\";\r\n\r\n\r\n//const _IS_STABLE_GETTER = Symbol(\"STABLE\");\r\nexport type Stable<T> = T;// & { [_STABLE]: true };\r\n\r\n/**\r\n * We keep track of which callbacks are stable with a WeakMap instead of, say, a symbol because\r\n * `useCallback` will return a function that's stable across *all* renders, meaning\r\n * we can't use our funny \"`if` only works here because it doesn't break the rules of hooks\" trick then.\r\n * \r\n * TODO: This is disabled because it doesn't provide much performance benefit and also inherently leaks memory\r\n */\r\nconst map = new WeakMap<Function, boolean>();\r\n\r\nexport function isStableGetter<T extends Function>(obj: T): obj is Stable<T> {\r\n    return false;\r\n    return (map.get(obj) ?? false);\r\n}\r\nfunction setIsStableGetter<T extends (..._args: any[]) => any>(obj: T): Stable<T> {\r\n    return obj;\r\n    map.set(obj, true);\r\n    return obj;\r\n}\r\n\r\n\r\n/**\r\n * Alternate useCallback() which always returns the same (wrapped) function reference\r\n * so that it can be excluded from the dependency arrays of `useEffect` and friends.\r\n * \r\n * @remarks In general, just pass the function you want to be stable (but you can't use it during render,\r\n * so be careful!).  Alternatively, if you need a stable callback that **can** be used\r\n * during render, pass an empty dependency array and it'll act like `useCallback` with an\r\n * empty dependency array, but with the associated stable typing. In this case, you ***must*** ensure that it\r\n * truly has no dependencies/only stable dependencies!!\r\n */\r\nexport const useStableCallback = (function useStableCallback<T extends Function | null | undefined>(fn: NonNullable<T>, noDeps?: [] | null | undefined): Stable<NonNullable<T>> {\r\n\r\n    type U = (NonNullable<T> & ((...args: any) => any));\r\n    useEnsureStability(\"useStableCallback\", noDeps == null, noDeps?.length, isStableGetter<U>(fn as U));\r\n    if (isStableGetter(fn))\r\n        return fn;\r\n\r\n    if (noDeps == null) {\r\n        const currentCallbackGetter = useStableGetter<U>(fn);\r\n        return setIsStableGetter(useCallbackNative<U>(((...args) => {\r\n            return currentCallbackGetter()(...args);\r\n        }) as U, []));\r\n\r\n    }\r\n    else {\r\n        console.assert(noDeps.length === 0);\r\n        return setIsStableGetter(useCallbackNative<U>(fn, []));\r\n    }\r\n})\r\n\r\n","export { };\r\n\r\ndeclare global {\r\n    // Sometimes there will be an error here if @types/node is included,\r\n    // and sometimes there won't...not much we can do.\r\n    /// @ts-ignore\r\n    const process: { env: { NODE_ENV: \"production\" | \"development\" } };\r\n}\r\n\r\n// Get/set the value of process?.env?.NODE_ENV delicately (also fun fact @rollup/plugin-replace works in comments!)\r\n// (i.e. in a way that doesn't throw an error)\r\n(globalThis as any)[\"process\"] ??= {};\r\n(globalThis as any)[\"process\"][\"env\"] ??= {};\r\n(globalThis as any)[\"process\"][\"env\"][\"NODE_ENV\"] = process.env.NODE_ENV; \r\n// The above statement looks redundant, but it ensures that manual\r\n// reads to `process.env.NODE_ENV` work regardless of if the bundler \r\n// replaces `process.env.NODE_ENV` with the string `\"development\"` or not.\r\n\r\n\r\n","import { useRef } from \"./lib.js\";\r\nimport \"./mode.js\";\r\n\r\n// TODO: This shouldn't be in every build, I don't think it's in core-js? I think?\r\n// And it's extremely small anyway and basically does nothing.\r\nwindow.requestIdleCallback ??= (callback) => {\r\n    return setTimeout(() => { callback({ didTimeout: false, timeRemaining: () => { return 0; }, }); }, 5);\r\n};\r\n\r\nlet timeoutHandle = null as number | null;\r\n\r\ninterface HookCallCount {\r\n    callCounts: { [K: string]: { total: number, moment: number } | undefined };\r\n}\r\n\r\ntype WindowWithHookCallCount = (Window & typeof globalThis) & {\r\n    _hookCallCount: HookCallCount;\r\n}\r\n\r\nlet i = 0;\r\n/**\r\n * Wraps a hook/component that gives it nice devtools timing visualizations, only if process.env.NODE_ENV is \"development\".\r\n * \r\n * Some functions in this library are parenthesized but not wrapped in `monitored` -- \r\n * they are so small that their duration generally rounds down to 0 (or epsilon), so using\r\n * this function usually makes no sense on them. The performance monitoring takes more time\r\n * than the function itself.\r\n * \r\n * @param hook \r\n * @returns \r\n */\r\nexport function monitored<T extends any>(hook: T): T {\r\n    const h = (hook as (...args: any) => any);\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n        return (function (...args: Parameters<((...args: any) => any)>): ReturnType<T & ((...args: any) => any)> {\r\n            const r = useRef(++i);\r\n            monitorCallCount(h);\r\n            const start = performance.mark(`${h.name}-start-${r.current}`);\r\n            const ret = h(...args);\r\n            const end = performance.mark(`${h.name}-end-${r.current}`);\r\n            performance.measure(h.name, start.name, end.name);\r\n            return ret;\r\n        }) as T;\r\n    }\r\n    else {\r\n        return hook as T;\r\n    }\r\n}\r\n\r\n/**\r\n * When called inside a hook, monitors each call of that hook and prints the results to a table once things settle.\r\n * \r\n * @remarks Re-renders and such are all collected together when the table is printed to the console with `requestIdleCallback`.\r\n */\r\nfunction monitorCallCount(hook: Function) {\r\n    if (process.env.NODE_ENV !== 'development')\r\n        return;\r\n\r\n    const name = hook.name;\r\n    if (filterAll || filters.has(name))\r\n        return;\r\n\r\n    console.assert(name.length > 0);\r\n\r\n    (window as WindowWithHookCallCount)._hookCallCount ??= { callCounts: {} };\r\n    (window as WindowWithHookCallCount)._hookCallCount.callCounts[name] ??= { moment: 0, total: 0 };\r\n    (window as WindowWithHookCallCount)._hookCallCount.callCounts[name]!.moment += 1;\r\n    (window as WindowWithHookCallCount)._hookCallCount.callCounts[name]!.total += 1;\r\n\r\n    if (timeoutHandle == null) {\r\n        timeoutHandle = requestIdleCallback(() => {\r\n            //console.log((window as WindowWithHookCallCount)._hookCallCount.callCountsMoment);\r\n            //(window as WindowWithHookCallCount)._hookCallCount.callCountsMoment = {};\r\n            const o: Array<{ readonly Hook: string; readonly Now: number; readonly Total: number; }> =\r\n                Object.entries((window as WindowWithHookCallCount)._hookCallCount.callCounts)\r\n                    .map(([hook, counts]) => { return { Hook: hook || \"?\", Now: counts?.moment || 0, Total: counts?.total || 0 } as const })\r\n                    .filter(({ Now }) => { return !!Now })\r\n                    .sort(({ Now: lhsM }, { Now: rhsM }) => {\r\n                        if (!lhsM && !rhsM)\r\n                            return 0;\r\n                        lhsM ||= Infinity;\r\n                        rhsM ||= Infinity;\r\n                        return lhsM - rhsM;\r\n                    });\r\n            console.table(o, ['Hook', 'Now', 'Total']);\r\n            Object.entries((window as WindowWithHookCallCount)._hookCallCount.callCounts).forEach(([, counts]) => { counts!.moment = 0; });\r\n            timeoutHandle = null;\r\n        });\r\n    }\r\n}\r\n\r\nlet filterAll = false;\r\nconst filters = new Set<string>();\r\n\r\nexport function hideCallCount(hook: Function | \"all\") {\r\n    filterAll = (hook === \"all\");\r\n\r\n    if (hook != \"all\")\r\n        filters.add(hook.name);\r\n}\r\n","import { useEnsureStability } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useEffect } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n/**\r\n * This is used to select *just* the typed addEventListener \r\n * and not the generic \"I'll accept any string and any handler\" one.\r\n * \r\n * TODO: This \"\"\"works\"\"\" but it's not great and implicitly relies on\r\n * lib.dom.ts always giving the two overloads in the same order, with the\r\n * typed one first. *That* probably won't change, but if more overloads\r\n * are ever added this will need adjustment.\r\n * \r\n * See https://stackoverflow.com/a/52761156 for how selecting the correct overload works.\r\n */\r\ntype FirstOverloadParameters<T> =\r\n    T extends { (...args: infer R): any; (...args: any[]): any; (...args: any[]): any; (...args: any[]): infer R } ? R :\r\n    T extends { (...args: infer R): any; (...args: any[]): any; (...args: any[]): any } ? R :\r\n    T extends { (...args: infer R): any; (...args: any[]): any } ? R :\r\n    T extends (...args: infer R) => any ? R : [];\r\n\r\n// Get just the typed version of addEventListener, if it exists\r\ntype TypedAddEventListener<T extends EventTarget> = (...args: FirstOverloadParameters<(T[\"addEventListener\"])>) => void;\r\n\r\n// Returns the first argument of \"addEventListener\" (the event type as a string)\r\ntype TypedEventListenerTypes<T extends EventTarget> = TypedAddEventListener<T> extends ((type: infer K2, ...args: any[]) => any) ? K2 : string;\r\n\r\n\r\n// TODO: This isn't quite able to narrow down the exact event type for unknown reasons.\r\n// Instead it returns a union of all available event types, which is...fine, I guess.\r\n// I don't know why `infer H` is doing that when the type should be narrowed by `T` though...\r\n// Note that the type parameter is still used, even though it doesn't narrow down the type,\r\n// because otherwise, instead of being a union of all types, it's just `any`\r\ntype TypedEventHandler<E extends EventTarget, T extends TypedEventListenerTypes<E>> = TypedAddEventListener<E> extends ((type: T, handler: infer H, ...args: any[]) => any) ? NonNullable<H> : never;\r\n//((TypedAddEventListener<E> & ((type: T, handler: (e: Event) => void, ...args: any[]) => any)) extends ((type: T, handler: (e: infer H) => any, ...args: any[]) => any) ? H : Function) /*& (T extends keyof GlobalEventHandlersEventMap? GlobalEventHandlersEventMap[T] : (e: Event) => void)*/;\r\n\r\ntype Parameters2<T extends (EventListenerObject | ((...args: any) => any))> =\r\n    T extends EventListenerObject ? Parameters<T[\"handleEvent\"]> :\r\n    T extends (...args: infer P) => any ? P : never;\r\n\r\n\r\ntype TypedEventHandlerEvent<E extends EventTarget, T extends TypedEventListenerTypes<E>> = Parameters2<TypedEventHandler<E, T>>[0];\r\n\r\n\r\n/**\r\n * Allows attaching an event handler to any *non-Preact* element, and removing it when the component using the hook unmounts. The callback does not need to be stable across renders.\r\n * \r\n * @remarks `\"mode\"` controls if there's one handler that calls all your functions (default), or one handler added per function (`\"single\"`). \r\n * \r\n * The default, `\"grouped\"`, is faster when you have, say, a button component, used hundreds of times on a page, that each installs a global event handler.\r\n * \r\n * @param target - A *non-Preact* node to attach the event to.\r\n * *\r\n */\r\nexport const useGlobalHandler = monitored(function useGlobalHandler<T extends EventTarget, EventType extends TypedEventListenerTypes<T>, H extends TypedEventHandlerEvent<T, EventType>>(target: T, type: EventType, handler: null | ((e: H) => void), options?: Parameters<TypedAddEventListener<T>>[2], mode?: \"grouped\" | \"single\"): void {\r\n    mode ||= \"grouped\";\r\n    useEnsureStability(\"useGlobalHandler\", mode);\r\n\r\n    if (mode === \"grouped\") {\r\n        // Note to self: The typing doesn't improve even if this is split up into a sub-function.\r\n        // No matter what, it seems impossible to get the handler's event object typed perfectly.\r\n        // It seems like it's guaranteed to always be a union of all available types.\r\n        // Again, no matter what combination of sub- or sub-sub-functions used.\r\n        useGlobalHandlerGrouped<T, EventType, H>(target, type, handler, options);\r\n    }\r\n    else {\r\n        useGlobalHandlerSingle<T, EventType, H>(target, type, handler, options);\r\n    }\r\n})\r\n\r\ntype GlobalHandlerInfo = { listener: EventListener; listeners: Set<EventListener>; };\r\ntype MapOfOptionsToInfo = Map<string, GlobalHandlerInfo>\r\ntype MapOfTypeToMapOfOptionsToInfo = Map<TypedEventListenerTypes<EventTarget>, MapOfOptionsToInfo>;\r\nlet mapThing = new Map<EventTarget, MapOfTypeToMapOfOptionsToInfo>();\r\n\r\nfunction doMapThing<T extends EventTarget, EventType extends TypedEventListenerTypes<T>>(op: (i: GlobalHandlerInfo, h: EventListener) => void, target: T, type: EventType, handler: null | EventListener, options: Parameters<TypedAddEventListener<T>>[2]): void {\r\n    if (handler) {\r\n\r\n        const optionsKey = JSON.stringify(options);\r\n        const byType = mapThing.get(target) || (new Map() as MapOfTypeToMapOfOptionsToInfo);\r\n        const byOptions = (byType.get(type) || (new Map() as MapOfOptionsToInfo));\r\n        const info = byOptions.get(optionsKey) || { listener: null!, listeners: new Set() };\r\n\r\n        op(info, handler);\r\n\r\n        byOptions.set(optionsKey, info);\r\n        byType.set(type, byOptions);\r\n        mapThing.set(target, byType);\r\n    }\r\n}\r\n\r\n\r\nfunction addToMapThing<T extends EventTarget, EventType extends TypedEventListenerTypes<T>>(target: T, type: EventType, handler: null | EventListener, options: Parameters<TypedAddEventListener<T>>[2]): void {\r\n    doMapThing((info, h) => {\r\n        info.listeners.add(h);\r\n        if (info.listener == null)\r\n            target.addEventListener(type, info.listener = e => info.listeners.forEach(fn => fn(e)), options);\r\n    }, target, type, handler, options);\r\n\r\n}\r\n\r\nfunction removeFromMapThing<T extends EventTarget, EventType extends TypedEventListenerTypes<T>>(target: T, type: EventType, handler: null | EventListener, options?: Parameters<TypedAddEventListener<T>>[2]): void {\r\n    doMapThing((info, h) => {\r\n        info.listeners.delete(h);\r\n        if (info.listener == null)\r\n            target.removeEventListener(type, info.listener = e => info.listeners.forEach(fn => fn(e)), options);\r\n    }, target, type, handler, options);\r\n}\r\n\r\n/**\r\n * This is way faster for large numbers of event handlers.\r\n * \r\n * For example, if every button listens for a global click, or something,\r\n * it would be nice if it was efficient at least. \r\n */\r\nfunction useGlobalHandlerGrouped<T extends EventTarget, EventType extends TypedEventListenerTypes<T>, H extends TypedEventHandlerEvent<T, EventType>>(target: T, type: EventType, handler: null | ((e: H) => void), options?: Parameters<TypedAddEventListener<T>>[2]): void {\r\n    let stableHandler: EventListener | null = useStableCallback<EventListener>((handler as any) ?? (() => { })) as (EventListener | null);\r\n    if (handler == null)\r\n        stableHandler = null;\r\n\r\n    useEffect(() => {\r\n        if (stableHandler) {\r\n            addToMapThing(target, type, stableHandler, options);\r\n            return () => removeFromMapThing(target, type, stableHandler, options);\r\n        }\r\n    }, [target, type, stableHandler]);\r\n}\r\n\r\nfunction useGlobalHandlerSingle<T extends EventTarget, EventType extends TypedEventListenerTypes<T>, H extends TypedEventHandlerEvent<T, EventType>>(target: T, type: EventType, handler: null | ((e: H) => void), options?: Parameters<TypedAddEventListener<T>>[2]): void {\r\n    let stableHandler: EventListener | null = useStableCallback<EventListener>((handler as any) ?? (() => { })) as (EventListener | null);\r\n    if (handler == null)\r\n        stableHandler = null;\r\n\r\n    useEffect(() => {\r\n        if (stableHandler) {\r\n            target.addEventListener(type, stableHandler, options);\r\n\r\n            return () => target.removeEventListener(type, stableHandler, options);\r\n        }\r\n    }, [target, type, stableHandler]);\r\n}\r\n","\r\n/**\r\n * Throws a (Typescript compiler) error if the passed object is anything but the empty object `{\\}` or `void`.\r\n * \r\n * **Does nothing at runtime -- type checking only.**\r\n *\r\n * Use this to ensure that your spread operators work correctly and cover all cases.\r\n *\r\n * @param _a - The remaining spread parameters of a given object that you expect to be empty (because you properly accounted for all the properties that exist in it, and want to ensure it stays that way)\r\n */\r\nexport function assertEmptyObject<T extends {} | void>(_a: [keyof T] extends [never] ? T : [T] extends [void]? void : `Unhandled keys in this rest spread object!`): void {}\r\n","import { useGlobalHandler } from \"../../dom-helpers/use-event-handler.js\";\r\nimport { UseRefElementReturnType } from \"../../dom-helpers/use-ref-element.js\";\r\nimport { useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { MouseEventType, Nullable, useCallback } from \"../../util/lib.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\n\r\nexport interface UseBackdropDismissParametersSelf<B extends boolean> {\r\n    \r\n    /** \r\n     * When `true`, `onDismiss` is eligible to be called. When `false`, it will not be called.\r\n     */\r\n    dismissBackdropActive: B | false;\r\n    \r\n    /**\r\n     * Called when the component is dismissed by clicking outside of the element.\r\n     * \r\n     * @nonstable\r\n     */\r\n    onDismissBackdrop: Nullable<(e: MouseEventType<any>) => void>;\r\n}\r\n\r\nexport interface UseBackdropDismissParameters<PopupElement extends Element, B extends boolean> {\r\n    backdropDismissParameters: UseBackdropDismissParametersSelf<B>;\r\n    refElementPopupReturn: Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">;\r\n}\r\n\r\n/**\r\n * Handles events for a backdrop on a modal dialog -- the kind where the user expects the modal to close when they click/tap outside of it.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useBackdropDismiss = monitored(function useBackdropDismiss<PopupElement extends Element, B extends boolean>({ backdropDismissParameters: { dismissBackdropActive: open, onDismissBackdrop: onCloseUnstable, ...void1 }, refElementPopupReturn: { getElement, ...void3 }, ...void2 }: UseBackdropDismissParameters<PopupElement, B>): void {\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    const getOpen = useStableGetter(open);\r\n    const onClose = useStableGetter(onCloseUnstable);\r\n\r\n    const onBackdropClick = useCallback(function onBackdropClick(e: MouseEventType<any>) {\r\n        if (!getOpen())\r\n            return;\r\n\r\n\r\n        // Basically, \"was this event fired on an element not contained by the modal?\"\r\n        // There are multiple ways browser react to \"interacting with nothing\", and this takes care of everything.\r\n\r\n        let element = getElement();\r\n\r\n        let foundInsideClick = false;\r\n\r\n        if (e.target && element && element.contains(e.target as Node)) {\r\n            foundInsideClick = true;\r\n        }\r\n\r\n        if (!foundInsideClick) {\r\n            onClose()?.(e);\r\n        }\r\n    }, []);\r\n\r\n    useGlobalHandler(window, \"mousedown\", open ? onBackdropClick : null, { capture: true });\r\n    useGlobalHandler(window, \"touchstart\", open ? onBackdropClick : null, { capture: true });\r\n})","\r\n/**\r\n * Quick and easy way to add extra information to an event that was fired.\r\n * \r\n * For example, \"this was a click event, but it has information about what list item was pressed too.\"\r\n * \r\n * Get that extra information from the [EventDetail] symbol.\r\n */\r\n\r\nimport { EventType, Nullable } from \"./lib.js\";\r\n\r\nexport const EventDetail = Symbol(\"event-detail\");\r\nexport type EventDetail = typeof EventDetail;\r\nexport type EnhancedEventHandler<E extends Event, Detail> = (e: TargetedEnhancedEvent<E, Detail>) => void;\r\nexport type TargetedEnhancedEvent<E extends Event | TargetedEnhancedEvent<any, any>, Detail> = E & { [EventDetail]: Detail & (E extends TargetedEnhancedEvent<any, infer D>? D : {}); };\r\n\r\nexport function getEventDetail<Detail>(e: TargetedEnhancedEvent<any, Detail>): Detail { return e[EventDetail]; }\r\n\r\nexport function enhanceEvent<E extends Event | EventType<any, any> | TargetedEnhancedEvent<any, any>, Detail extends object>(e: Nullable<E>, detail: Detail): TargetedEnhancedEvent<E & Event, Detail> {\r\n    const event = (e as TargetedEnhancedEvent<E & Event, Detail> ?? {});\r\n    event[EventDetail] ??= {} as never;\r\n    Object.assign(event[EventDetail], detail);\r\n    return event;\r\n}\r\n","import { UseRefElementReturnType } from \"../../dom-helpers/use-ref-element.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { enhanceEvent } from \"../../util/event.js\";\r\nimport { KeyboardEventType, Nullable, useEffect } from \"../../util/lib.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\n\r\n\r\nexport interface UseEscapeDismissParametersSelf<B extends boolean> {\r\n\r\n    /**\r\n     * Called when the component is dismissed by pressing the `Escape` key.\r\n     * \r\n     * @nonstable\r\n     */\r\n    onDismissEscape: Nullable<(e: KeyboardEventType<any>) => void>;\r\n\r\n    /** \r\n     * When `true`, `onDismiss` is eligible to be called. When `false`, it will not be called.\r\n     */\r\n    dismissEscapeActive: B | false;\r\n\r\n    /**\r\n     * The escape key event handler is attached onto the window, so we need to know which window.\r\n     * \r\n     * @remarks The returned `Document` should not change throughout the lifetime of the component (i.e. the element in question must not switch to another window via some means, which might not even be possible).\r\n     * \r\n     * @nonstable\r\n     */\r\n    getDocument(): Document;\r\n\r\n    /**\r\n     * Get this from context somewhere, and increment it in that context.\r\n     * \r\n     * If multiple instances of Preact are on the page, tree depth is used as a tiebreaker\r\n     */\r\n    parentDepth: number;\r\n}\r\n\r\nexport interface UseEscapeDismissParameters<PopupElement extends Element, B extends boolean> {\r\n    refElementPopupReturn: Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">;\r\n    escapeDismissParameters: UseEscapeDismissParametersSelf<B>;\r\n}\r\n\r\n\r\nconst MagicWindowKey = (\"__preact-prop-helpers-escape-key-dismiss__\") as keyof Window;\r\ninterface WindowEscapeKeyInfo {\r\n    microtaskQueued: boolean;\r\n    elementQueue: Map<Element, { onClose: () => void, depth: number, treeDepth: number }>;//(Element | null)[];\r\n}\r\n\r\nfunction getElementDepth(element: Element) {\r\n    let depth = 0;\r\n    let parent = element.parentElement;\r\n    while (parent) {\r\n        depth += 1;\r\n        parent = parent.parentElement;\r\n    }\r\n\r\n    return depth;\r\n}\r\n\r\n/**\r\n * Invokes a callback when the `Escape` key is pressed on the topmost component (a max of one invocation per `Escape` press)\r\n * \r\n * @remarks One press of the `Escape` key is guaranteed to only call `onDismiss` for *only one* component, and it is called on the component deepest in the DOM tree.\r\n * \r\n * TODO: Instead of being deepest in the DOM tree (which is usually fine), it should probably be related to what order something was made `active`.\r\n * \r\n * @compositeParams \r\n */\r\nexport const useEscapeDismiss = monitored(function useEscapeDismiss<PopupElement extends Element, B extends boolean>({ escapeDismissParameters: { onDismissEscape: onClose, dismissEscapeActive: open, getDocument: unstableGetDocument, parentDepth, ...void1 }, refElementPopupReturn: { getElement, ...void2 } }: UseEscapeDismissParameters<PopupElement, B>): void {\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    const stableOnClose = useStableGetter(onClose);\r\n    const getDocument = useStableCallback(unstableGetDocument);\r\n    const getDepth = useStableGetter(parentDepth + 1);\r\n\r\n\r\n    // When this component opens, add an event listener that finds the deepest open soft dismiss element to actually dismiss.\r\n    // Only opened components will add event handlers, and will remove them once closed.\r\n    // The reason this is so complicated is because:\r\n    // 1. We must only close one soft dismiss component at a time.  If there's a tooltip in a popup, the tooltip must be dismissed.\r\n    // 2. `keydown` events don't just work on arbitrary elements, for our purposes they must be from the `window`. So we can't rely on normal capturing or bubbling behavior on the element itself.\r\n    // 3. Event handlers added to the `window` via `addEventHandler` are called in the order of registration, which is completely at odds with #1.\r\n    //\r\n    // So all soft dismiss components listen for a keydown of Escape, \r\n    // then the first one to do so will wait for a microtask, \r\n    // then find the deepest element in the document tree to dismiss of all of those components currently open.\r\n    useEffect(() => {\r\n        const document = getDocument();\r\n        const window = document.defaultView!;\r\n        (window as any)[MagicWindowKey] ??= ({ microtaskQueued: false, elementQueue: new Map() } as WindowEscapeKeyInfo)\r\n        const info = window[MagicWindowKey] as WindowEscapeKeyInfo;\r\n\r\n        if (open) {\r\n            window.addEventListener(\"keydown\", handler, { capture: true });\r\n\r\n            return () => {\r\n                const element = getElement();\r\n                if (element && info.elementQueue)\r\n                    info.elementQueue.delete(element);\r\n                window.removeEventListener(\"keydown\", handler, { capture: true });\r\n            };\r\n        }\r\n\r\n\r\n\r\n\r\n        function handler(e: KeyboardEvent) {\r\n            if (e.key == \"Escape\") {\r\n\r\n                // We don't know which of the currently active soft dismisses will actually do something,\r\n                // but ONE of them definitely will,\r\n                // so we stop propagation to child nodes, but not to everyone on the window (stopImmediatePropagation).\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n\r\n\r\n\r\n                // This is what at least one of the elements will call\r\n                const onClose2 = () => { stableOnClose()?.(enhanceEvent(e, { reason: \"escape\" })); };\r\n                const element = getElement();\r\n                if (element) {\r\n                    const treeDepth = getElementDepth(element);\r\n                    const depth = getDepth();\r\n                    info.elementQueue.set(element, { depth, onClose: onClose2, treeDepth });\r\n                }\r\n\r\n\r\n                if (!info.microtaskQueued) {\r\n                    info.microtaskQueued = true;\r\n                    setTimeout(() => {\r\n\r\n                        const { elementQueue } = info;\r\n                        info.microtaskQueued = false;\r\n                        info.elementQueue = new Map();\r\n\r\n                        let deepestDepth = -Infinity;\r\n                        let deepestTreeDepth = -Infinity;\r\n                        let _deepestElement: Element | null = null;\r\n                        let deepestOnClose: (() => void) | null = null;\r\n\r\n                        for (const [element, { depth, onClose, treeDepth }] of elementQueue) {\r\n                            let tieBroken = false;\r\n                            if (depth == deepestDepth) {\r\n                                if (treeDepth > deepestTreeDepth) {\r\n                                    tieBroken = true;\r\n                                }\r\n                            }\r\n\r\n                            if (depth > deepestDepth || (depth == deepestDepth && tieBroken)) {\r\n                                deepestDepth = depth;\r\n                                _deepestElement = element;\r\n                                deepestTreeDepth = treeDepth;\r\n                                deepestOnClose = onClose;\r\n                            }\r\n                        }\r\n                        deepestOnClose?.();\r\n                    }, 0);\r\n                }\r\n            }\r\n        }\r\n    }, [open]);\r\n})","import { UseRefElementReturnType } from \"../../dom-helpers/use-ref-element.js\";\r\nimport { UseActiveElementParameters } from \"../../observers/use-active-element.js\";\r\nimport { OnPassiveStateChange } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { TargetedPick, useCallback } from \"../../util/lib.js\";\r\nimport { FocusEventType, Nullable } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\n\r\nexport interface UseLostFocusDismissParametersSelf<B extends boolean> {\r\n\r\n    /**\r\n     * Called when the component is dismissed by losing focus\r\n     * \r\n     * @nonstable\r\n     */\r\n    onDismissLostFocus: Nullable<(e: FocusEventType<any>) => void>;\r\n\r\n    /** \r\n     * When `true`, `onDismiss` is eligible to be called. When `false`, it will not be called.\r\n     */\r\n    dismissLostFocusActive: B | false;\r\n};\r\n\r\nexport interface UseLostFocusDismissParameters<SourceElement extends Element | null, PopupElement extends Element, B extends boolean> {\r\n    lostFocusDismissParameters: UseLostFocusDismissParametersSelf<B>;\r\n    refElementSourceReturn: Nullable<Pick<UseRefElementReturnType<NonNullable<SourceElement>>[\"refElementReturn\"], \"getElement\">>;\r\n    refElementPopupReturn: Pick<UseRefElementReturnType<PopupElement>[\"refElementReturn\"], \"getElement\">;\r\n}\r\n\r\nexport interface UseLostFocusDismissReturnType<_SourceElement extends Element | null, _PopupElement extends Element> extends TargetedPick<UseActiveElementParameters, \"activeElementParameters\", \"onLastActiveElementChange\"> {\r\n}\r\n\r\n/**\r\n * Invokes a callback when focus travels outside of the component's element.\r\n * \r\n * @remarks TODO: This is not intended for recursive structures, like dialogs that open dialogs, or menus that open menus, but does properly handle, e.g., the fact that a menu's menubutton having focus still counts as the menu having focus.\r\n * \r\n * @compositeParams \r\n */\r\nexport const useLostFocusDismiss = monitored(function useLostFocusDismiss<SourceElement extends Element | null, PopupElement extends Element, B extends boolean>({\r\n    refElementPopupReturn: { getElement: getPopupElement, ...void3 },\r\n    refElementSourceReturn,\r\n    lostFocusDismissParameters: {\r\n        dismissLostFocusActive: open,\r\n        onDismissLostFocus: onClose,\r\n        ...void4\r\n    },\r\n    ...void1\r\n}: UseLostFocusDismissParameters<SourceElement, PopupElement, B>): UseLostFocusDismissReturnType<SourceElement, PopupElement> {\r\n    const { getElement: getSourceElement, ...void2 } = (refElementSourceReturn ?? {});\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n\r\n\r\n    const stableOnClose = useStableGetter(onClose);\r\n    const getOpen = useStableGetter(open);\r\n    const onLastActiveElementChange = useCallback<OnPassiveStateChange<Element | null, FocusEventType<any>>>((newElement, _prevElement, e) => {\r\n        const open = getOpen();\r\n        const sourceElement = getSourceElement?.();\r\n        const popupElement = getPopupElement();\r\n        if (!(sourceElement?.contains(newElement) || popupElement?.contains(newElement))) {\r\n            if (open) {\r\n                console.assert(e != null);\r\n                stableOnClose()?.(e!);\r\n            }\r\n        }\r\n    }, [getSourceElement]);\r\n\r\n    return { activeElementParameters: { onLastActiveElementChange } }\r\n})\r\n","import { createElement, Fragment } from \"../util/lib.js\";\r\nimport { ElementProps } from \"../util/types.js\";\r\n\r\n/**\r\n * Combines two `children`.\r\n * \r\n * @remarks This is fairly trivial and not even technically a hook, as it doesn't use any other hooks, but is this way for consistency.\r\n * \r\n * TODO: This could accept a variable number of arguments to be consistent with useMergedProps, but I feel like it might be a performance hit.\r\n */\r\nexport const useMergedChildren = (function useMergedChildren(lhs: ElementProps<EventTarget>[\"children\"], rhs: ElementProps<EventTarget>[\"children\"]): ElementProps<EventTarget>[\"children\"] {\r\n    if (lhs == null && rhs == null) {\r\n        return undefined;\r\n    }\r\n    else if (lhs == null) {\r\n        return rhs;\r\n    }\r\n    else if (rhs == null) {\r\n        return lhs;\r\n    }\r\n    else {\r\n        return createElement(Fragment, {}, lhs, rhs);\r\n    }\r\n})\r\n","import { ElementProps } from \"../util/types.js\";\r\n\r\n/**\r\n * Merged the `class` and `className` properties of two sets of props into a single string.\r\n * \r\n * @remarks Duplicate classes are removed (order doesn't matter anyway).\r\n */\r\nexport const useMergedClasses = (function useMergedClasses(...classes: ElementProps<EventTarget>[\"className\"][]): string | undefined {\r\n\r\n    // Note: For the sake of forward compatibility, this function is labelled as\r\n    // a hook, but as it uses no other hooks it technically isn't one.\r\n    let classesSet = new Set<ElementProps<EventTarget>[\"className\"]>();\r\n    for (let c of classes) {\r\n        if (typeof c == \"string\" && c.trim())\r\n            classesSet.add(c);\r\n    }\r\n\r\n    if (classesSet.size) {\r\n        return Array.from(classesSet).join(\" \");\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n})\r\n","\r\n\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { ElementProps, MutableRef, Ref } from \"../util/types.js\";\r\n\r\n\r\nfunction processRef<T>(instance: T | null, ref: Ref<T> | null | undefined) {\r\n    if (typeof ref === \"function\") {\r\n        ref(instance);\r\n    }\r\n    else if (ref != null) {\r\n        (ref as MutableRef<T | null>).current = instance;\r\n    }\r\n    else {\r\n        /* eslint-disable no-debugger */\r\n        debugger;\r\n        console.assert(false, \"Unknown ref type found that was neither a RefCallback nor a RefObject\");\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Combines two refs into one. This allows a component to both use its own ref *and* forward a ref that was given to it.\r\n * \r\n * @remarks Or just use {@link useMergedProps}\r\n */\r\nexport const useMergedRefs = (function useMergedRefs<E extends EventTarget>(rhs: ElementProps<E>[\"ref\"], lhs: ElementProps<E>[\"ref\"]) {\r\n\r\n    // This *must* be stable in order to prevent repeated reset `null` calls after every render.\r\n    const combined = useStableCallback(function combined(current: E | null) {\r\n        processRef(current, lhs);\r\n        processRef(current, rhs);\r\n    });\r\n\r\n    if (lhs == null && rhs == null) {\r\n        return undefined!;\r\n    }\r\n    else if (lhs == null) {\r\n        if (process.env.NODE_ENV === 'development')\r\n            console.assert(typeof rhs == \"function\" || \"current\" in rhs!, \"Unknown ref type found that was neither a RefCallback nor a RefObject\");\r\n        return rhs!;\r\n    }\r\n    else if (rhs == null) {\r\n        if (process.env.NODE_ENV === 'development')\r\n            console.assert(typeof lhs == \"function\" || \"current\" in lhs!, \"Unknown ref type found that was neither a RefCallback nor a RefObject\");\r\n        return lhs!;\r\n    }\r\n    else {\r\n        return combined;\r\n    }\r\n})\r\n","\r\nimport { CSSProperties, ElementProps } from \"../util/types.js\";\r\n\r\nfunction styleStringToObject(style: string): CSSProperties {\r\n    // TODO: This sucks D:\r\n    return Object.fromEntries(style.split(\";\").map(statement => statement.split(\":\"))) as unknown as CSSProperties;\r\n}\r\n\r\n/**\r\n * Merges two style objects, returning the result.\r\n * \r\n * @param style - The user-given style prop for this component\r\n * @param obj - The CSS properties you want added to the user-given style\r\n * @returns A CSS object containing the properties of both objects.\r\n */\r\nexport const useMergedStyles = (function useMergedStyles(lhs: ElementProps<EventTarget>[\"style\"], rhs: ElementProps<EventTarget>[\"style\"]): ElementProps<EventTarget>[\"style\"] {\r\n    // Easy case, when there are no styles to merge return nothing.\r\n    if (!lhs && !rhs)\r\n        return undefined;\r\n\r\n    if (typeof lhs != typeof rhs) {\r\n        // Easy cases, when one is null and the other isn't.\r\n        if (lhs && !rhs)\r\n            return lhs;\r\n        if (!lhs && rhs)\r\n            return rhs;\r\n\r\n        // They're both non-null but different types.\r\n        // Convert the string type to an object bag type and run it again.\r\n        if (lhs && rhs) {\r\n            // (useMergedStyles isn't a true hook -- this isn't a violation)\r\n            if (typeof lhs == \"string\")\r\n                return useMergedStyles(styleStringToObject(lhs as string), rhs) as CSSProperties;\r\n            if (typeof rhs == \"string\")\r\n                return useMergedStyles(lhs, styleStringToObject(rhs as string)) as CSSProperties;\r\n        }\r\n\r\n        // Logic???\r\n        return undefined;\r\n    }\r\n\r\n    // They're both strings, just concatenate them.\r\n    if (typeof lhs == \"string\") {\r\n        return `${lhs};${rhs ?? \"\"}` as unknown as ElementProps<EventTarget>[\"style\"];\r\n    }\r\n\r\n    // They're both objects, just merge them.\r\n    return {\r\n        ...(lhs ?? {}) as CSSProperties,\r\n        ...(rhs ?? {}) as CSSProperties\r\n    } as CSSProperties\r\n})\r\n\r\n","import { useEnsureStability } from \"../preact-extensions/use-passive-state.js\";\r\nimport { ElementProps } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { useMergedChildren } from \"./use-merged-children.js\";\r\nimport { useMergedClasses } from \"./use-merged-classes.js\";\r\nimport { useMergedRefs } from \"./use-merged-refs.js\";\r\nimport { useMergedStyles } from \"./use-merged-styles.js\";\r\n\r\nlet log = console.warn;\r\n\r\n/**\r\n * When `useMergedProps` encounters a conflict, the function passed here will be called.\r\n * \r\n * @defaultValue `console.warn`\r\n */\r\nexport function enableLoggingPropConflicts(log2: typeof console[\"log\"]) {\r\n    log = log2\r\n}\r\n\r\n\r\n/**\r\n * Given two sets of props, merges them and returns the result.\r\n * \r\n * @remarks The hook is aware of and can intelligently merge `className`, `class`, `style`, `ref`, `children`, and all event handlers.\r\n * \r\n * If two sets of props both specify the same attribute, e.g. both specify two different `id`s, then an error will be printed to the console (customize this with {@link enableLoggingPropConflicts}), as this conflict needs to be arbitrated on by you.\r\n * \r\n * {@include } {@link enableLoggingPropConflicts}\r\n * \r\n * @see {@link useMergedRefs}\r\n * @see {@link useMergedStyles}\r\n * @see {@link useMergedClasses}\r\n * @see {@link useMergedChildren}\r\n * \r\n * @param allProps - A variadic number of props to merge into one\r\n * \r\n * @returns A single object with all the provided props merged into one.\r\n */\r\nexport const useMergedProps = monitored(function useMergedProps<E extends EventTarget>(...allProps: ElementProps<E>[]) {\r\n    useEnsureStability(\"useMergedProps\", allProps.length);\r\n    let ret: ElementProps<E> = {};\r\n    for (let nextProps of allProps) {\r\n        useMergedPropsHelper<E>(ret, nextProps);\r\n    }\r\n\r\n    return ret;\r\n})\r\n\r\nconst knowns = new Set<string>([\"children\", \"ref\", \"className\", \"class\", \"style\"])\r\n\r\nconst mergeUnknown = (function mergeUnknown(key: string, lhsValue: unknown, rhsValue: unknown) {\r\n\r\n    if (typeof lhsValue === \"function\" || typeof rhsValue === \"function\") {\r\n\r\n        // They're both functions that can be merged (or one's a function and the other's null).\r\n        // Not an *easy* case, but a well-defined one.\r\n        const merged = mergeFunctions(lhsValue as never, rhsValue as never);\r\n        return merged as never;\r\n    }\r\n    else {\r\n        // Uh...they're not both functions so we're here because one of them's null, right?\r\n        if (lhsValue == null && rhsValue == null) {\r\n            if (rhsValue === null && lhsValue === undefined)\r\n                return rhsValue as never;\r\n            else\r\n                return lhsValue as never;\r\n        }\r\n        if (lhsValue == null)\r\n            return rhsValue as never;\r\n        else if (rhsValue == null)\r\n            return lhsValue as never;\r\n        else if ((rhsValue as any) == lhsValue) {\r\n            // I mean, they're the same value at least\r\n            // so we don't need to do anything.\r\n            // Not really ideal though.\r\n            return rhsValue as never;\r\n        }\r\n        else {\r\n            // Ugh.\r\n            // No good strategies here, just log it if requested\r\n            log?.(`The prop \"${key}\" cannot simultaneously be the values ${lhsValue} and ${rhsValue}. One must be chosen outside of useMergedProps.`);\r\n            return rhsValue as never\r\n        }\r\n    }\r\n})\r\n\r\n/**\r\n * Helper function.\r\n * \r\n * This is one of the most commonly called functions in this and consumer libraries,\r\n * so it trades a bit of readability for speed (i.e. we don't decompose objects and just do regular property access, iterate with `for...in`, instead of `Object.entries`, etc.)\r\n */\r\nconst useMergedPropsHelper = (function useMergedPropsHelper<E extends EventTarget>(target: ElementProps<E>, mods: ElementProps<E>): void {\r\n\r\n\r\n    target.ref = useMergedRefs<E>(target.ref, mods.ref);\r\n    target.style = useMergedStyles(target.style, mods.style);\r\n    target.className = useMergedClasses(target[\"class\" as keyof ElementProps<E>], target.className, mods[\"class\" as keyof ElementProps<E>], mods.className);\r\n    target.children = useMergedChildren(target.children, mods.children);\r\n\r\n\r\n    if (target.ref === undefined) delete target.ref;\r\n    if (target.style === undefined) delete target.style;\r\n    if (target.className === undefined) delete target.className;\r\n    if (target[\"class\" as keyof ElementProps<E>] === undefined) delete target[\"class\" as keyof ElementProps<E>];\r\n    if (target.children === undefined) delete target.children;\r\n\r\n    for (const rhsKeyU in mods) {\r\n        const rhsKey = rhsKeyU as keyof typeof mods;\r\n        if (knowns.has(rhsKey))\r\n            continue;\r\n        target[rhsKey] = mergeUnknown(rhsKey, target[rhsKey], mods[rhsKey]);\r\n    }\r\n\r\n})\r\n\r\nexport const mergeFunctions = (function mergeFunctions<T extends (...args: any[]) => (void | Promise<void>), U extends (...args: any[]) => (void | Promise<void>)>(lhs: T | null | undefined, rhs: U | null | undefined) {\r\n\r\n    if (!lhs)\r\n        return rhs;\r\n    if (!rhs)\r\n        return lhs;\r\n\r\n    return (...args: Parameters<T>) => {\r\n        const lv = lhs(...args);\r\n        const rv = rhs(...args);\r\n\r\n        if (lv instanceof Promise || rv instanceof Promise)\r\n            return Promise.all([lv, rv]);\r\n    };\r\n})\r\n","import { useCallback, useMemo } from \"./lib.js\";\r\nimport \"./mode.js\";\r\n\r\nexport function generateStack() {\r\n    if (process.env.NODE_ENV === 'development' && (window as any)._generate_setState_stacks) {\r\n        try {\r\n            throw new Error();\r\n        }\r\n        catch (e) {\r\n            return (e as Error).stack\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * Returns a function that retrieves the stack at the time this hook was called (in development mode only).\r\n * \r\n * @remarks The global variable `_generate_setState_stacks` must be true, or no stack will be generated.\r\n */\r\nexport function useStack() {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n        const stack = useMemo(generateStack, []);\r\n        const getStack = useCallback(() => stack, []);\r\n        return getStack;\r\n    }\r\n    else {\r\n        return returnEmptyString;\r\n    }\r\n}\r\n\r\nfunction returnEmptyString() { return \"\" }","import { isTabbable } from \"tabbable\";\r\nimport \"./mode.js\";\r\nimport { generateStack } from \"./stack.js\";\r\n\r\n/**\r\n * If you want a single place to put a debugger for tracking focus,\r\n * here:\r\n */\r\nexport function focus(e: Element | null) {\r\n    if (process.env.NODE_ENV === 'development' && (window as any).LOG_FOCUS_CHANGES === true) {\r\n        console.log(`Focus changed to ${(e?.tagName || \"\").toLowerCase().padStart(6)}:`, e);\r\n        console.log(generateStack());\r\n    }\r\n    (e as HTMLElement)?.focus?.();\r\n}\r\n\r\n/**\r\n * When an element unmounts, default HTML behavior is to just send focus to the body, which is wildly unhelpful. It means you lose your place in the keyboard tab order.\r\n * \r\n * If you still have access to the element that's unmounting, or perhaps its parent from beforehand, this will find the next suitable element to send focus to instead of the body.\r\n * \r\n * **Important**: This function is linear on the number of DOM nodes in your document, so it's not particularly fast. Only call it once when you need its value, not every time tab focus changed or something.\r\n */\r\nexport function findBackupFocus(unmountingElement: Element | null | undefined): HTMLElement {\r\n    if (unmountingElement == null)\r\n        return (globalThis.document.body);\r\n        \r\n    let document = unmountingElement.ownerDocument;\r\n    const walker = document.createTreeWalker(document.body, NodeFilter.SHOW_ELEMENT);\r\n\r\n    let node = walker.firstChild();\r\n    let bestCandidateBefore: HTMLElement | null = null;\r\n    let bestCandidateAfter: HTMLElement | null = null;\r\n    let w = false;\r\n\r\n    while (node) {\r\n        let pos = node.compareDocumentPosition(unmountingElement);\r\n        if (pos & Node.DOCUMENT_POSITION_DISCONNECTED) {\r\n            if (!w)\r\n                console.warn(\"Can't focus anything near a disconnected element\");\r\n            w = true;\r\n        }\r\n\r\n        if (pos & Node.DOCUMENT_POSITION_PRECEDING) {\r\n            // The unmounting element is before this element we're tree-walking.\r\n            // That means the next tabbable element we find is the candidate we really want.\r\n            if (node instanceof Element) {\r\n                if (isTabbable(node)) {\r\n                    bestCandidateAfter = node as HTMLElement;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else if (pos & Node.DOCUMENT_POSITION_FOLLOWING) {\r\n            // The unmounting element is after this element we're tree-walking.\r\n            // That means the we're getting closer and closer.\r\n            // If this element is tabbable, then it's even closer than any other tabbable element we've saved up to this point.\r\n            if (node instanceof Element) {\r\n                if (isTabbable(node)) {\r\n                    bestCandidateBefore = node as HTMLElement;\r\n                }\r\n            }\r\n        }\r\n\r\n        node = walker.nextNode();\r\n    }\r\n\r\n    return bestCandidateAfter ?? bestCandidateBefore ?? document.body;\r\n}\r\n","import { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useStableGetter } from \"../preact-extensions/use-stable-getter.js\";\r\nimport { useCallback, useEffect, useRef } from \"../util/lib.js\";\r\nimport { Nullable } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport interface UseTimeoutParameters {\r\n    /**\r\n     * The number of ms to wait before invoking `callback`.  \r\n     * If `null`, cancels the timeout immediately.\r\n     */\r\n    timeout: Nullable<number>;\r\n\r\n    /**\r\n     * Changes to this prop between renders can be used to clear the current timeout and create a new one.\r\n     */\r\n    triggerIndex?: unknown;\r\n\r\n    /**\r\n     * Called `timeout` ms after mount, or the last change to `triggerIndex`.\r\n     * \r\n     * Does *not* need to be stable. Go ahead and pass an anonymous function.\r\n     */\r\n    callback: () => void;\r\n}\r\n\r\n/**\r\n * Runs a function the specified number of milliseconds after the component renders.\r\n * \r\n * @remarks This is particularly useful to function as \"useEffect on a delay\".\r\n * \r\n * @remarks\r\n * {@include } {@link UseTimeoutParameters}\r\n */\r\nexport const useTimeout = monitored(function useTimeout({ timeout, callback, triggerIndex }: UseTimeoutParameters) {\r\n\r\n    const stableCallback = useStableCallback(() => { startTimeRef.current = null; callback(); });\r\n    const getTimeout = useStableGetter(timeout);\r\n\r\n    // Set any time we start timeout.\r\n    // Unset any time the timeout completes\r\n    const startTimeRef = useRef<number | null>(null);\r\n\r\n    const timeoutIsNull = (timeout == null);\r\n\r\n    // Any time the triggerIndex changes (including on mount)\r\n    // restart the timeout.  The timeout does NOT reset\r\n    // when the duration or callback changes, only triggerIndex.\r\n    useEffect(() => {\r\n        if (!timeoutIsNull) {\r\n            const timeout = getTimeout();\r\n            console.assert(timeoutIsNull == (timeout == null));\r\n\r\n            if (timeout != null) {\r\n                startTimeRef.current = +(new Date());\r\n\r\n                const handle = setTimeout(stableCallback, timeout);\r\n                return () => clearTimeout(handle);\r\n            }\r\n        }\r\n\r\n    }, [triggerIndex, timeoutIsNull])\r\n\r\n    const getElapsedTime = useCallback(() => {\r\n        return (+(new Date())) - (+(startTimeRef.current ?? new Date()));\r\n    }, []);\r\n\r\n    const getRemainingTime = useCallback(() => {\r\n        const timeout = getTimeout();\r\n        return timeout == null ? null : Math.max(0, timeout - getElapsedTime())\r\n    }, []);\r\n\r\n    return { getElapsedTime, getRemainingTime };\r\n})\r\n","\r\n\r\nimport { useTimeout } from \"../timing/use-timeout.js\";\r\nimport { useMemo, useState } from \"./lib.js\";\r\nimport \"./mode.js\";\r\nimport { useStack } from \"./stack.js\";\r\n\r\nlet idIndex = 0;\r\n\r\nexport type TagPropPrefices =\r\n    \"use-ref-element\" |\r\n    \"staggered-children-child\" |\r\n    \"paginated-children-child\" |\r\n    \"focus-trap\" |\r\n    \"dismiss-props-stable-group\" |\r\n    \"dismiss-props-stable-popup\" |\r\n    \"dismiss-props-stable-source\" |\r\n    \"typeahead-navigation\" |\r\n    \"single-selection-child\" |\r\n    \"roving-tab-index-child\" |\r\n    \"roving-tab-index\" |\r\n    \"list-navigation-single-selection-child-tabbable\" |\r\n    \"list-navigation-single-selection-child-child\" |\r\n    \"list-navigation-single-selection-stable-parent\" |\r\n    \"list-navigation-single-selection-stable-parent-or-child\" |\r\n    \"list-navigation-stable-parent\" |\r\n    \"list-navigation-stable-parent-or-child\" |\r\n    \"linear-navigation\" |\r\n    \"use-grid-navigation-partial-row\";\r\n\r\n\r\n/**\r\n * Debug function that yells at you if your forgot to use the props a hook returns.\r\n * \r\n * @remarks Like other debug hooks, only has any effect IFF there is a global variable called `process.env.NODE_ENV` and it contains the value `\"development\"`, AND there is a global variable called `_generate_useTagProps_tags` set to true, and stacks are only generated if `_generate_setState_stacks` is true..\r\n * \r\n * @param props - The props to return a modified copy of\r\n * @param tag - Should be unique\r\n * @returns A modified copy of the given props\r\n */\r\nexport function useTagProps<P>(props: P, tag: `data-${TagPropPrefices}`): P {\r\n    if (process.env.NODE_ENV === 'development' && (window as any)._generate_useTagProps_tags) {\r\n        const [id] = useState(() => ++idIndex);\r\n\r\n        const propsIdTag = `data-props-${tag}-${id}`;\r\n\r\n        const getStack = useStack();\r\n\r\n        // Don't have multiple tags of the same type on the same props, means a hook has been called twice!\r\n        console.assert(!(props && typeof props == \"object\" && tag in props));\r\n\r\n        useTimeout({\r\n            callback: () => {\r\n                let element = document.querySelectorAll(`[${propsIdTag}]`);\r\n                if (element.length != 1) {\r\n                    console.error(\"A hook returned props that were not properly spread to any HTMLElement:\");\r\n                    console.log(getStack());\r\n                    /* eslint-disable no-debugger */\r\n                    debugger;\r\n                }\r\n            },\r\n            timeout: 250,\r\n            triggerIndex: tag\r\n        });\r\n\r\n        return useMemo(() => {\r\n            return { ...props, [propsIdTag]: true/*, [tag as never]: true*/ };\r\n        }, [props, tag]);\r\n    }\r\n    else {\r\n        return props;\r\n    }\r\n}\r\n","import { identity } from \"lodash-es\";\r\nimport { useEnsureStability } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { EventType, TargetedPick, useCallback, useRef } from \"../../util/lib.js\";\r\nimport { ElementProps, KeyboardEventType, Nullable, OmitStrong } from \"../../util/types.js\";\r\nimport { useTagProps } from \"../../util/use-tag-props.js\";\r\nimport { UsePaginatedChildrenParameters } from \"../processed-children/use-paginated-children.js\";\r\nimport { UseRearrangeableChildrenReturnType } from \"../processed-children/use-rearrangeable-children.js\";\r\nimport { UseRovingTabIndexReturnType } from \"./use-roving-tabindex.js\";\r\nexport { identity };\r\n\r\nexport interface LinearNavigationResult {\r\n    valueDemangled: number | null;\r\n    status: \"normal\" | \"past-start\" | \"past-end\"\r\n}\r\n\r\nexport interface UseLinearNavigationReturnTypeSelf { }\r\n\r\nexport interface UseLinearNavigationReturnType<ParentOrChildElement extends Element> {\r\n    linearNavigationReturn: UseLinearNavigationReturnTypeSelf;\r\n    propsStable: ElementProps<ParentOrChildElement>;\r\n}\r\n\r\n//export interface UseLinearNavigationChildInfo { }\r\n\r\n/** Arguments passed to the parent `useLinearNavigation` */\r\nexport interface UseLinearNavigationParameters<ParentOrChildElement extends Element, ChildElement extends Element> extends\r\n    TargetedPick<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement>, \"rovingTabIndexReturn\", \"getTabbableIndex\" | \"setTabbableIndex\">,\r\n    TargetedPick<UseRearrangeableChildrenReturnType<any>, \"rearrangeableChildrenReturn\", \"indexMangler\" | \"indexDemangler\">,\r\n    TargetedPick<UsePaginatedChildrenParameters<ChildElement>, \"paginatedChildrenParameters\", \"paginationMin\" | \"paginationMax\"> {\r\n    linearNavigationParameters: UseLinearNavigationParametersSelf<ChildElement>;\r\n}\r\n\r\nexport interface UseLinearNavigationParametersSelf<ChildElement extends Element> {\r\n\r\n    /**\r\n     * Called when a navigation change as a result of an arrow/home/end/page up/page down key being pressed.\r\n     * \r\n     * @stable\r\n     */\r\n    onNavigateLinear: Nullable<(newIndex: number, event: KeyboardEventType<ChildElement>) => void>;\r\n\r\n    /**\r\n     * Must return true if the child at this index can be navigated to, e.g. `(i) => !getChildren(i)?.hidden`.\r\n     * \r\n     * @stable\r\n     */\r\n    isValidForLinearNavigation(i: number): boolean;\r\n\r\n    /**\r\n     * Controls how many elements are skipped over when page up/down are pressed.\r\n     * \r\n     * ```md-literal\r\n     * * When 0 or null: Page Up/Down are disabled\r\n     * * When &gt;= 1: Page Up/Down moves that number of elements up or down\r\n     * * When 0 &lt; x &lt; 1, Page Up/Down moves by that percentage of all elements, or of 100 elements, whichever is higher. In other words, 0.1 jumps by 10 elements when there are fewer then 100 elements, and 20 elements when there are 200 elements.\r\n     * ```\r\n     */\r\n    pageNavigationSize: Nullable<number>;\r\n\r\n    /**\r\n     * What happens when `up` is pressed on the first valid child?\r\n     * \r\n     * @remarks If it's `\"wrap\"`, the focus is sent down to the last child, and the event does not propagate. \r\n     * If it's a function, it's is called, and the event does not propagate.\r\n     * If it's `\"passthrough\"`, nothing happens, **and the event is allowed to propagate**.\r\n     */\r\n    navigatePastStart: \"passthrough\" | \"wrap\" | (() => void);\r\n\r\n    /**\r\n     * What happens when `down` is pressed on the last valid child?\r\n     * \r\n     * @see {@link UseLinearNavigationParametersSelf.navigatePastStart}\r\n     */\r\n    navigatePastEnd: \"passthrough\" | \"wrap\" | (() => void);\r\n\r\n    /**\r\n     * Controls which arrow keys are used to navigate through the component.\r\n     * \r\n     * @remarks Not relative to the writing mode -- these are the literal keys that need to be pressed.\r\n     * \r\n     * Use `\"either\"` to allow navigation in either direction.\r\n     * \r\n     * Use `\"none\"` to disallow navigation with the arrow keys in any direction.\r\n     */\r\n    arrowKeyDirection: \"horizontal\" | \"vertical\" | \"either\" | \"none\";\r\n\r\n    /**\r\n     * If set to true, navigation with the home & end keys will\r\n     * be disabled, but navigation with the arrow keys will be\r\n     * unaffected.\r\n     */\r\n    disableHomeEndKeys: boolean;\r\n\r\n    /**\r\n     * When children are sorted, reversed, or otherwise out of order, `indexMangler` is given the `index` of a child and must return its \"visual\" index -- what its `index` would be at that position.\r\n     * \r\n     * @remarks This is provided by {@link useRearrangeableChildren}.\r\n     * If you use this hook as part of {@link useCompleteListNavigation} or {@link useCompleteGridNavigation}, then everything's already wired up and you don't need to worry about this. \r\n     * Otherwise, it's recommended to simply use {@link lodash-es#identity} here.\r\n     * \r\n     * @stable\r\n     */\r\n    //indexMangler: (n: number) => number;\r\n\r\n    /**\r\n     * @see {@link UseLinearNavigationParametersSelf.indexMangler}, which does the opposite of this.\r\n     * \r\n     * @stable\r\n     */\r\n    //indexDemangler: (n: number) => number;\r\n\r\n    /**\r\n     * From `useManagedChildren`. This can be higher than the *actual* highest index if you need it to be.\r\n     * \r\n     * @returns [0, n], not [0, n)\r\n     * \r\n     * @stable\r\n     */\r\n    getHighestIndex(): number;\r\n    /**\r\n     * From `useManagedChildren`. This can be lower than the *actual* lowest index if you need it to be.\r\n     * \r\n     * @see {@link UseLinearNavigationParametersSelf.getLowestIndex}\r\n     * \r\n     * @stable\r\n     */\r\n    getLowestIndex(): number;\r\n}\r\n\r\n\r\n/**\r\n * When used in tandem with `useRovingTabIndex`, allows control of\r\n * the tabbable index with the arrow keys, Page Up/Page Down, or Home/End.\r\n * \r\n * @remarks There is no child version of this hook. That being said, the props returned are stable and work equally well on the child as the parent. If you don't have a parent `HTMLElement`, you can still pass the returned props to each child individually.\r\n * \r\n * @see {@link useCompleteListNavigation}, which packages everything up together.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useLinearNavigation = (function useLinearNavigation<ParentOrChildElement extends Element, ChildElement extends Element>({\r\n    linearNavigationParameters: { getLowestIndex, getHighestIndex, isValidForLinearNavigation, navigatePastEnd, navigatePastStart, onNavigateLinear, arrowKeyDirection, disableHomeEndKeys, pageNavigationSize, ...void4 },\r\n    rovingTabIndexReturn: { getTabbableIndex, setTabbableIndex, ...void5 },\r\n    paginatedChildrenParameters: { paginationMax, paginationMin, ...void2 },\r\n    rearrangeableChildrenReturn: { indexDemangler, indexMangler, ...void3 },\r\n    ...void1\r\n}: UseLinearNavigationParameters<ParentOrChildElement, ChildElement>): UseLinearNavigationReturnType<ParentOrChildElement> {\r\n    type R = EventType<any, any>;\r\n\r\n    let getPaginatedRange = useStableGetter(paginationMax == null || paginationMin == null? null : paginationMax - paginationMin);\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n\r\n\r\n    useEnsureStability(\"useLinearNavigation\", onNavigateLinear, isValidForLinearNavigation, indexDemangler, indexMangler);\r\n\r\n    const navigateAbsolute = useCallback((requestedIndexMangled: number, searchDirection: -1 | 1, e: R, fromUserInteraction: boolean, mode: \"page\" | \"single\") => {\r\n        const highestChildIndex = getHighestIndex();\r\n        const lowestChildIndex = getLowestIndex();\r\n        const original = (getTabbableIndex() ?? 0);\r\n\r\n        const targetDemangled = indexDemangler(requestedIndexMangled);\r\n        const { status, valueDemangled } = tryNavigateToIndex({ isValid: isValidForLinearNavigation, lowestChildIndex, highestChildIndex, indexDemangler, indexMangler, searchDirection, targetDemangled });\r\n        if (status == \"past-end\") {\r\n            if (navigatePastEnd == \"wrap\") {\r\n                if (mode == \"single\")\r\n                    navigateToFirst(e, fromUserInteraction);\r\n                else {\r\n\r\n                    /* eslint-disable no-constant-condition */\r\n                    // Uncomment to allow page up/down to wrap after hitting the top/bottom once.\r\n                    // It works fine, the problem isn't that -- the problem is it just feels wrong. \r\n                    // Page Up/Down don't feel like they should wrap, even if normally requested. \r\n                    // That's the arrow keys' domain.\r\n                    if (false && (valueDemangled == getTabbableIndex()))\r\n                        navigateToFirst(e, fromUserInteraction);\r\n                    else\r\n                        navigateToLast(e, fromUserInteraction);\r\n                }\r\n                return \"stop\";\r\n            }\r\n            else if (navigatePastEnd == \"passthrough\") {\r\n                return \"passthrough\";\r\n            }\r\n            else {\r\n                navigatePastEnd();\r\n                return \"stop\";\r\n            }\r\n        }\r\n        else if (status == \"past-start\") {\r\n            if (navigatePastStart == \"wrap\") {\r\n                if (mode == \"single\") {\r\n                    navigateToLast(e, fromUserInteraction);\r\n                }\r\n                else {\r\n                    /* eslint-disable no-constant-condition */\r\n                    // See above. It works fine but just feels wrong to wrap on Page Up/Down.\r\n                    if (false && valueDemangled == getTabbableIndex())\r\n                        navigateToLast(e, fromUserInteraction);\r\n                    else\r\n                        navigateToFirst(e, fromUserInteraction);\r\n                }\r\n                return \"stop\";\r\n            }\r\n            else if (navigatePastStart == \"passthrough\") {\r\n                return \"passthrough\";\r\n            }\r\n            else {\r\n                navigatePastStart();\r\n                return \"stop\";\r\n            }\r\n        }\r\n        else {\r\n            setTabbableIndex(valueDemangled, e, fromUserInteraction);\r\n            onNavigateLinear?.(valueDemangled!, e as KeyboardEventType<ChildElement>);\r\n            return \"stop\";\r\n        }\r\n    }, []);\r\n    const navigateToFirst = useStableCallback((e: R, fromUserInteraction: boolean) => { return navigateAbsolute(getLowestIndex(), -1, e, fromUserInteraction, \"single\"); });\r\n    const navigateToLast = useStableCallback((e: R, fromUserInteraction: boolean) => { return navigateAbsolute(getHighestIndex(), 1, e, fromUserInteraction, \"single\"); });\r\n    const navigateRelative2 = useStableCallback((e: R, offset: number, fromUserInteraction: boolean, mode: \"page\" | \"single\"): \"passthrough\" | \"stop\" => {\r\n        const highestChildIndex = getHighestIndex();\r\n        const searchDirection = (Math.sign(offset) || 1) as 1 | -1;\r\n        const original = (getTabbableIndex() ?? 0);\r\n        /**\r\n         * To get the target, we need to add (or subtract) 1 to our current value,\r\n         * but it need to be relative to any sorting/rearranging that's happened.\r\n         * \r\n         * We mangle the index to get its \"visual\" position, add our offset,\r\n         * and then demangle it to get the child that corresponds to the next child \"visually\".\r\n         */\r\n        const targetMangled = indexMangler(original) + offset;\r\n        return navigateAbsolute(targetMangled, searchDirection, e, fromUserInteraction, mode);\r\n    })\r\n    const navigateToNext = useStableCallback((e: R, fromUserInteraction: boolean) => {\r\n        return navigateRelative2(e, 1, fromUserInteraction, \"single\");\r\n    });\r\n    const navigateToPrev = useStableCallback((e: R, fromUserInteraction: boolean) => {\r\n        return navigateRelative2(e, -1, fromUserInteraction, \"single\");\r\n    });\r\n    //const getDisableHomeEndKeys = useStableGetter(disableHomeEndKeys);\r\n    //const getArrowKeyDirection = useStableGetter(arrowKeyDirection);\r\n    //const getPageNavigationSize = useStableGetter(pageNavigationSize);\r\n\r\n\r\n    const stableProps = useRef<ElementProps<ParentOrChildElement>>(useTagProps({\r\n        onKeyDown: useStableCallback((e) => {\r\n            // Not handled by typeahead (i.e. assume this is a keyboard shortcut)\r\n            // TODO: ctrlKey was here too, but multi-selection uses that when in focus-selection mode.\r\n            if (e.metaKey)\r\n                return;\r\n\r\n            const allowsVerticalNavigation = (arrowKeyDirection == \"vertical\" || arrowKeyDirection == \"either\");\r\n            const allowsHorizontalNavigation = (arrowKeyDirection == \"horizontal\" || arrowKeyDirection == \"either\");\r\n\r\n\r\n            let childRange = (getHighestIndex() - getLowestIndex());\r\n            let paginatedRange = getPaginatedRange() ?? childRange;\r\n\r\n            let truePageNavigationSize = pageNavigationSize;\r\n            if (truePageNavigationSize != null && truePageNavigationSize < 1) {\r\n                truePageNavigationSize = Math.round(truePageNavigationSize * Math.max(10, paginatedRange + 1));\r\n            }\r\n\r\n            let result: \"passthrough\" | \"stop\" = \"passthrough\";\r\n\r\n            // Arrow keys only take effect for components oriented in that direction,\r\n            // so we want to make sure we only listen for left/right or up/down when appropriate.\r\n            let keyPressIsValidForOrientation = true;\r\n            switch (e.key) {\r\n                case \"ArrowUp\":\r\n                case \"ArrowDown\":\r\n                    keyPressIsValidForOrientation = (allowsVerticalNavigation);\r\n                    break;\r\n                case \"ArrowLeft\":\r\n                case \"ArrowRight\":\r\n                    keyPressIsValidForOrientation = (allowsHorizontalNavigation);\r\n                    break;\r\n            }\r\n\r\n            if (keyPressIsValidForOrientation) {\r\n                switch (e.key) {\r\n                    case \"ArrowUp\":\r\n                    case \"ArrowLeft\":\r\n                        result = navigateToPrev(e, true);\r\n                        break;\r\n\r\n                    case \"ArrowDown\":\r\n                    case \"ArrowRight\":\r\n                        result = navigateToNext(e, true);\r\n                        break;\r\n\r\n                    case \"PageUp\":\r\n                    case \"PageDown\":\r\n                        if (truePageNavigationSize == null)\r\n                            break;\r\n                        else if (truePageNavigationSize > 0) \r\n                            result = navigateRelative2(e, truePageNavigationSize * (e.key.endsWith('n') ? 1 : -1), true, \"page\");\r\n                        \r\n                        break;\r\n\r\n                    case \"Home\":\r\n                    case \"End\":\r\n                        if (!disableHomeEndKeys) {\r\n                            if (e.key.endsWith('e'))\r\n                                navigateToFirst(e, true);\r\n                            else\r\n                                navigateToLast(e, true);\r\n                            result = 'stop';\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (result && result != 'passthrough') {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        })\r\n    }, \"data-linear-navigation\"))\r\n\r\n\r\n    return {\r\n        linearNavigationReturn: {},\r\n        propsStable: stableProps.current\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\n\r\nexport interface TryNavigateToIndexParameters {\r\n    //children: ManagedChildren<number, unknown, K>;\r\n    lowestChildIndex: number;\r\n    highestChildIndex: number; // [0, n], not [0, n)\r\n    isValid(index: number): boolean;\r\n\r\n    //default: number;\r\n    targetDemangled: number;\r\n    searchDirection: 1 | -1;\r\n    indexMangler: (n: number) => number;\r\n    indexDemangler: (n: number) => number;\r\n\r\n}\r\n\r\nexport function tryNavigateToIndex({ isValid, highestChildIndex, lowestChildIndex, searchDirection, indexDemangler, indexMangler, targetDemangled }: TryNavigateToIndexParameters): LinearNavigationResult {\r\n\r\n    if (searchDirection === -1) {\r\n        let bestUpResult: LinearNavigationResult | undefined = undefined;\r\n        bestUpResult = tryNavigateUp({ isValid, indexDemangler, indexMangler, targetDemangled, lowestChildIndex });\r\n        bestUpResult ??= tryNavigateDown({ isValid, indexDemangler, indexMangler, targetDemangled, highestChildIndex });\r\n        return bestUpResult || { valueDemangled: targetDemangled, status: \"normal\" };\r\n    }\r\n    else {\r\n        let bestDownResult: LinearNavigationResult | undefined = undefined;\r\n        bestDownResult = tryNavigateDown({ isValid, indexDemangler, indexMangler, targetDemangled, highestChildIndex });\r\n        bestDownResult ??= tryNavigateUp({ isValid, indexDemangler, indexMangler, targetDemangled, lowestChildIndex });\r\n        return bestDownResult || { valueDemangled: targetDemangled, status: \"normal\" };\r\n    }\r\n}\r\n\r\nfunction tryNavigateUp({ isValid, indexDemangler, indexMangler, lowestChildIndex: lower, targetDemangled }: OmitStrong<TryNavigateToIndexParameters, \"highestChildIndex\" | \"searchDirection\">): LinearNavigationResult | undefined {\r\n\r\n    while (targetDemangled >= lower && !isValid(targetDemangled)) {\r\n        targetDemangled = indexDemangler(indexMangler(targetDemangled) - 1);\r\n    }\r\n\r\n    if (!isValid(targetDemangled)) {\r\n        return undefined;\r\n    }\r\n    if (targetDemangled < lower) {\r\n        return { valueDemangled: indexDemangler(lower), status: \"past-start\" };\r\n    }\r\n    else {\r\n        return { valueDemangled: targetDemangled, status: \"normal\" };\r\n    }\r\n}\r\n\r\nfunction tryNavigateDown({ isValid, indexDemangler, indexMangler, targetDemangled, highestChildIndex: upper }: OmitStrong<TryNavigateToIndexParameters, \"lowestChildIndex\" | \"searchDirection\">): LinearNavigationResult | undefined {\r\n\r\n    while (targetDemangled <= upper && !isValid(targetDemangled)) {\r\n        targetDemangled = indexDemangler(indexMangler(targetDemangled) + 1);\r\n    }\r\n\r\n    if (!isValid(targetDemangled)) {\r\n        return undefined;\r\n    }\r\n    if (targetDemangled > upper) {\r\n        return { valueDemangled: indexDemangler(upper), status: \"past-end\" };\r\n    }\r\n    else {\r\n        return { valueDemangled: targetDemangled, status: \"normal\" };\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { assertEmptyObject } from \"../util/assert.js\";\r\nimport { debounceRendering, useCallback, useLayoutEffect, useRef } from \"../util/lib.js\";\r\nimport { Nullable } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { OnPassiveStateChange, PassiveStateUpdater, useEnsureStability, usePassiveState } from \"./use-passive-state.js\";\r\nimport { useStableCallback } from \"./use-stable-callback.js\";\r\nimport { useMemoObject } from \"./use-stable-getter.js\";\r\n\r\n/**\r\n * Reminder of order of execution:\r\n * \r\n * * (tree mounts)\r\n * * Parent renders\r\n * * Children render\r\n * * Children receive ref (if applicable)\r\n * * Parent receives ref (if applicable)\r\n * * Children run effects\r\n * * Parent runs effects\r\n * \r\n * * (tree unmounts)\r\n * * Parent runs effect-cleanup\r\n * * Parent deletes ref (if applicable)\r\n * * Child runs effect-cleanup\r\n * * Child deletes ref (if applicable)\r\n * \r\n * Two things to note here:\r\n * * Rendering starts at the root,  but effects and refs start at the leaves.\r\n * * refs are *usually* called before effects, but only when that HTMLElement renders. Basically just a reminder that a component can be mounted without it existing in the DOM.\r\n */\r\nconst _comments = void (0);\r\n\r\nexport interface UseManagedChildrenContextSelf<M extends ManagedChildInfo<any>> {\r\n    getChildren(): ManagedChildren<M>;\r\n    managedChildrenArray: InternalChildInfo<M>;\r\n    remoteULEChildMounted: (index: M[\"index\"], mounted: boolean) => void;\r\n    //remoteULEChildChanged: (index: M[\"index\"]) => (() => void);\r\n}\r\n\r\nexport interface UseManagedChildrenContext<M extends ManagedChildInfo<any>> {\r\n    managedChildContext: UseManagedChildrenContextSelf<M>\r\n}\r\n\r\n\r\n\r\n/**\r\n * Information that children and parents use to communicate with each other.\r\n * \r\n * Other hooks will inherit from this to provide more complicated behavior.\r\n */\r\nexport interface ManagedChildInfo<T extends string | number> {\r\n    /**\r\n     * A unique value representing this child.\r\n     * \r\n     * If a `number`, then it's like the index to an array. There can be holes/gaps, even negative numbers, but children are contiguous to a degree. There can be a child \"before\" or \"after\" this one.\r\n     * \r\n     * If a `string`, then it's like a key into an object. There's no well-relationship between children. You can access a known child or all children, but nothing in between.\r\n     */\r\n    index: T;\r\n}\r\n\r\n\r\n\r\nexport type OnChildrenMountChange<T extends string | number> = ((mounted: Set<T>, unmounted: Set<T>) => void);\r\nexport type OnAfterChildLayoutEffect<T extends string | number> = ((causers: Iterable<T>) => void);\r\n\r\nexport interface UseManagedChildrenParametersSelf<M extends ManagedChildInfo<any>> {\r\n    /**\r\n     * Runs after one or more children have updated their information (index, etc.).\r\n     * \r\n     * Only one will run per tick, just like layoutEffect, but it isn't\r\n     * *guaranteed* to have actually been a change.\r\n     * \r\n     * TODO: This ended up not being needed by anything. Is it necessary? Does it cost anything?\r\n     * \r\n     * @stable\r\n     */\r\n    onAfterChildLayoutEffect?: Nullable<OnAfterChildLayoutEffect<M[\"index\"]>>;\r\n\r\n    /**\r\n     * Same as the above, but only for mount/unmount (or when a child changes its index)\r\n     * \r\n     * @stable\r\n     */\r\n    onChildrenMountChange?: Nullable<OnChildrenMountChange<M[\"index\"]>>;\r\n\r\n    /**\r\n     * \r\n     * @stable\r\n     */\r\n    onChildrenCountChange?: Nullable<((count: number) => void)>;\r\n}\r\n\r\nexport interface UseManagedChildrenParameters<M extends ManagedChildInfo<any>> {\r\n    managedChildrenParameters: UseManagedChildrenParametersSelf<M>;\r\n}\r\n\r\n/**\r\n * Basically all `use*Child` functions contain the same two parameters, plus the extras:\r\n * \r\n * `context` and `info`\r\n * \r\n * This provides them both, then you provide all the other `use*Parameters` members.\r\n */\r\nexport interface UseGenericChildParameters<C extends {} | null, M extends {}> {\r\n    context: C;\r\n    info: M;\r\n}\r\n\r\n/**\r\n * Note: Child parameter types should not inherit from this unless they actually call `useManagedChild`.\r\n * \r\n * E.G. `UseRovingTabIndexChildParameters` won't extend this, even though it has `info` and `context` parameters.\r\n * They look similar, should there be a GenericChildParameters type that provides those?\r\n */\r\nexport interface UseManagedChildParameters<M extends ManagedChildInfo<any>> extends UseGenericChildParameters<UseManagedChildrenContext<M> | null, M> {\r\n    /**\r\n     * In general, this shouldn't be null, but for convenience's sake you are allowed to, which disables all behavior, and also means `getChildren` will be `undefined`!\r\n     */\r\n    context: UseManagedChildrenContext<M> | null;\r\n\r\n    /**\r\n     * The exact data that's available from the parent/each sibling element via `getAt` or the other methods on `ManagedChildren`.\r\n     */\r\n    info: M;\r\n}\r\n\r\nexport interface UseManagedChildrenReturnTypeSelf<M extends ManagedChildInfo<any>> {\r\n    /** \r\n     * @stable\r\n     *\r\n     * Note that **both** `getChildren` and the `ManagedChildren` object it returns are stable!\r\n     * \r\n     * This is a getter instead of an object because when function calls happen out of order it's easier to just have always been passing and return getters everywhere \r\n     */\r\n    getChildren(): ManagedChildren<M>;\r\n\r\n}\r\n\r\nexport interface UseManagedChildrenReturnType<M extends ManagedChildInfo<any>> {\r\n    /**\r\n     * Returns information about the child that rendered itself with the requested key.\r\n     * \r\n     * **Everything about this object is stable**. E.G. `managedChildrenReturn` itself, `managedChildrenReturn.getChildren`,\r\n     * `managedChildrenReturn.getChildren()`, and `managedChildrenReturn.getChildren().getAt`, are all stable.\r\n     * \r\n     * @stable\r\n     */\r\n    managedChildrenReturn: UseManagedChildrenReturnTypeSelf<M>;\r\n\r\n    context: UseManagedChildrenContext<M>;\r\n}\r\n\r\nexport interface UseManagedChildReturnTypeSelf<M extends ManagedChildInfo<any>> {\r\n    /**\r\n     * Returns a proxy to all the information each child rendered with. The function, returned object, and every function within it are all stable.\r\n     * \r\n     * @stable\r\n     */\r\n    getChildren(): ManagedChildren<M>;\r\n}\r\n\r\n\r\nexport interface UseManagedChildReturnType<M extends ManagedChildInfo<any>> {\r\n    managedChildReturn: UseManagedChildReturnTypeSelf<M>;\r\n}\r\n\r\n\r\n/**\r\n * Abstraction over the managed children\r\n */\r\nexport interface ManagedChildren<M extends ManagedChildInfo<any>> {\r\n    /** \r\n     * Returns the `info` of the child at the specified index.\r\n     * \r\n     * @remarks This is the same as what's passed to `useManagedChild`.\r\n     * \r\n     * @stable\r\n     */\r\n    getAt(index: M[\"index\"]): M | undefined;\r\n    /** \r\n     * Returns the highest number corresponding to a child. Inclusive. It's `while (i <= highest)`.\r\n     * \r\n     * @stable\r\n     */\r\n    getHighestIndex(): number;\r\n    /**\r\n     * Returns the lowest number corresponding to a child, often 0. Inclusive, but hopefully that wasn't in question.\r\n     *  \r\n     * @stable\r\n     */\r\n    getLowestIndex(): number;\r\n    /**\r\n     * Executes a callback on every existing child.\r\n     *  \r\n     * @stable\r\n     */\r\n    forEach: (f: (child: M) => void) => void | \"break\";\r\n\r\n    /**\r\n     * **UNSTABLE**, \r\n     * also internal-use only, \r\n     * also TODO need a workaround for this for sortable children,\r\n     * or at least properly name it.\r\n     * \r\n     * WHAT THIS DOES:\r\n     * \r\n     * This function takes the children, slices the array containing them, \r\n     * and, *crucially*, fills in any holes in the array with a pseudo-child that just contains an index.\r\n     * \r\n     * This behavior, to be clear, is only necessary for sorting and rearranging because\r\n     * sorting and rearranging require knowing perfectly which index maps to which.\r\n     * We don't need any other missing information in the array besides the missing index.\r\n     * \r\n     * @internal\r\n     */\r\n    _arraySlice: () => M[];\r\n}\r\n\r\ninterface InternalChildInfo<M extends ManagedChildInfo<string | number>> {\r\n    arr: Array<M>;\r\n    rec: Partial<Record<M[\"index\"], M>>;\r\n    highestIndex: number;\r\n    lowestIndex: number;\r\n}\r\n\r\n/**\r\n * Allows a parent component to access information about certain\r\n * child components once they have rendered.\r\n * \r\n * @remarks This hook is designed to be lightweight, in that the parent keeps no state\r\n * and runs no effects.  Each child *does* run an effect, but with no state\r\n * changes unless you explicitly request them.\r\n *  \r\n * {@include } {@link ManagedChildren}\r\n * \r\n * @hasChild {@link useManagedChild}\r\n * \r\n * @compositeParams\r\n */\r\nexport const useManagedChildren = monitored(function useManagedChildren<M extends ManagedChildInfo<string | number>>(parentParameters: UseManagedChildrenParameters<M>): UseManagedChildrenReturnType<M> {\r\n    type IndexType = M[\"index\"];\r\n    type Info = M;\r\n\r\n    const { managedChildrenParameters: { onAfterChildLayoutEffect, onChildrenMountChange, onChildrenCountChange }, ...rest } = parentParameters;\r\n    assertEmptyObject(rest);\r\n\r\n    useEnsureStability(\"useManagedChildren\", onAfterChildLayoutEffect, onChildrenMountChange, onChildrenCountChange);\r\n\r\n    const getHighestIndex = useCallback((): number => { return managedChildrenArray.current.highestIndex; }, []);\r\n    const getLowestIndex = useCallback((): number => { return managedChildrenArray.current.lowestIndex; }, []);\r\n\r\n    // All the information we have about our children is stored in this **stable** array.\r\n    // Any mutations to this array **DO NOT** trigger any sort of a re-render.\r\n    const managedChildrenArray = useRef<InternalChildInfo<M>>({ arr: [], rec: {}, highestIndex: 0, lowestIndex: 0 });\r\n\r\n    // For indirect access to each child\r\n    // Compare getManagedChildInfo\r\n    // TODO: The primary use for this is flaggable closest fits\r\n    // which needs to search all children for that closest fit.\r\n    // It would be nice if there was something better for that.\r\n    const forEachChild = useCallback((f: (child: Info) => (void | \"break\")) => {\r\n        for (const child of managedChildrenArray.current.arr) {\r\n            if (child) {\r\n                if (f(child) == 'break')\r\n                    return;\r\n            }\r\n        }\r\n        for (const field in managedChildrenArray.current.rec) {\r\n            const child: Info | undefined = managedChildrenArray.current.rec[field as keyof Record<IndexType, Info>];\r\n            if (child)\r\n                if (f(child) == 'break')\r\n                    return;\r\n        }\r\n    }, [])\r\n\r\n    // Retrieves the information associated with the child with the given index.\r\n    // `undefined` if not child there, or it's unmounted.\r\n    const getManagedChildInfo = useCallback<ManagedChildren<M>[\"getAt\"]>((index: IndexType) => {\r\n        if (typeof index == \"number\")\r\n            return managedChildrenArray.current.arr[index as number]!;\r\n        else\r\n            return managedChildrenArray.current.rec[index as IndexType]!;\r\n    }, [])\r\n\r\n    // tl;dr this is a way to have run useLayoutEffect once after all N children\r\n    // have mounted and run *their* useLayoutEffect, but also *without* re-rendering\r\n    // ourselves because of having a `childCount` state or anything similar.\r\n    //\r\n    // When the child count ref updates, we want the parent to also run an effect\r\n    // to maybe do something with all these children that just mounted.\r\n    // The easiest way would be useEffect(..., [childCount]) but\r\n    // that would require us having a childCount state, then calling\r\n    // setChildCount and re-rendering every time children mount\r\n    // (only one re-render at a time unless children are staggered, but still)\r\n    // \r\n    // As an alternate solution, any time a child uses ULE on mount, it queues a microtask\r\n    // to emulate running ULE on the parent. Only the first child will actually queue\r\n    // the microtask (by checking hasRemoteULE first) so that the \"effect\" only\r\n    // runs once. When it's done, hasRemoteULE is reset so it can run again if\r\n    // more children mount/unmount.\r\n    const hasRemoteULEChildMounted = useRef<{ mounts: Set<IndexType>, unmounts: Set<IndexType> } | null>(null);\r\n    const remoteULEChildMounted = useCallback((index: IndexType, mounted: boolean): void => {\r\n        if (!hasRemoteULEChildMounted.current) {\r\n            hasRemoteULEChildMounted.current = {\r\n                mounts: new Set(),\r\n                unmounts: new Set(),\r\n            };\r\n            debounceRendering(() => {\r\n                if (onChildrenCountChange || onChildrenMountChange) {\r\n                    onChildrenMountChange?.(hasRemoteULEChildMounted.current!.mounts, hasRemoteULEChildMounted.current!.unmounts);\r\n                    onChildrenCountChange?.(getChildren().getHighestIndex() + 1);\r\n                    hasRemoteULEChildMounted.current = null;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (mounted) {\r\n            if (typeof index == \"number\") {\r\n                managedChildrenArray.current.highestIndex = Math.max(managedChildrenArray.current.highestIndex, index);\r\n                managedChildrenArray.current.lowestIndex = Math.min(managedChildrenArray.current.lowestIndex, index);\r\n            }\r\n        }\r\n        else {\r\n            if (typeof index == \"number\") {\r\n                delete managedChildrenArray.current.arr[index as number];\r\n                let shave = 0;\r\n                while (shave <= managedChildrenArray.current.arr.length && managedChildrenArray.current.arr[managedChildrenArray.current.arr.length - 1 - shave] == undefined) {\r\n                    ++shave;\r\n                }\r\n                managedChildrenArray.current.arr.splice(managedChildrenArray.current.arr.length - shave, shave);\r\n            }\r\n            else\r\n                delete managedChildrenArray.current.rec[index as IndexType];\r\n\r\n            if (typeof index == \"number\") {\r\n                managedChildrenArray.current.highestIndex = managedChildrenArray.current.arr.length - 1;\r\n\r\n                // TODO: length automatically adjusts to give us the highest index,\r\n                // but there's no corresponding property to get the lowest index when it changes...\r\n                // managedChildrenArray.current.lowestIndex = managedChildrenArray.current.arr.length - 1;\r\n            }\r\n        }\r\n\r\n        hasRemoteULEChildMounted?.current?.[mounted ? \"mounts\" : \"unmounts\"]?.add?.(index);\r\n    }, [/* Must remain stable */]);\r\n\r\n\r\n    const managedChildren = useMemoObject<ManagedChildren<M>>({\r\n        ...{ _: managedChildrenArray.current } as {},\r\n        forEach: forEachChild,\r\n        getAt: getManagedChildInfo,\r\n        getHighestIndex: getHighestIndex,\r\n        getLowestIndex: getLowestIndex,\r\n        _arraySlice: useCallback(() => {\r\n            let ret = managedChildrenArray.current.arr.slice();\r\n            const max = getHighestIndex();\r\n            for (let i = 0; i <= max; ++i) {\r\n                if (ret[i] == null)\r\n                    ret[i] = { index: i } as M;\r\n            }\r\n            return ret;\r\n        }, [])\r\n    });\r\n\r\n    const getChildren = useCallback(() => managedChildren, []);\r\n\r\n    return {\r\n        context: useMemoObject({\r\n            managedChildContext: useMemoObject({\r\n                managedChildrenArray: managedChildrenArray.current,\r\n                remoteULEChildMounted,\r\n                //remoteULEChildChanged,\r\n                getChildren\r\n            })\r\n        }),\r\n        managedChildrenReturn: { getChildren }\r\n    }\r\n})\r\n\r\n\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport const useManagedChild = monitored(function useManagedChild<M extends ManagedChildInfo<number | string>>({ context, info }: UseManagedChildParameters<M>): UseManagedChildReturnType<M> {\r\n    type IndexType = M[\"index\"];\r\n\r\n    const { managedChildContext: { getChildren, managedChildrenArray, remoteULEChildMounted } } = (context ?? { managedChildContext: {} });\r\n    const index = info.index;\r\n    // Any time our child props change, make that information available\r\n    // the parent if they need it.\r\n    // The parent can listen for all updates and only act on the ones it cares about,\r\n    // and multiple children updating in the same tick will all be sent at once.\r\n    useLayoutEffect(() => {\r\n        if (managedChildrenArray == null) return;\r\n\r\n        // Insert this information in-place\r\n        if (typeof index == \"number\") {\r\n            managedChildrenArray.arr[index as number] = { ...info };\r\n        }\r\n        else {\r\n            managedChildrenArray.rec[index as IndexType] = { ...info };\r\n        }\r\n        //return remoteULEChildChanged(index as IndexType);\r\n    });\r\n\r\n    // When we mount, notify the parent via queueMicrotask\r\n    // (every child does this, so everything's coordinated to only queue a single microtask per tick)\r\n    // Do the same on unmount.\r\n    // Note: It's important that this comes AFTER remoteULEChildChanged\r\n    // so that remoteULEChildMounted has access to all the info on mount.\r\n    useLayoutEffect(() => {\r\n        remoteULEChildMounted?.(index as IndexType, true);\r\n        return () => remoteULEChildMounted?.(index as IndexType, false);\r\n    }, [index]);\r\n\r\n    return {\r\n        managedChildReturn: { getChildren: getChildren! }\r\n    }\r\n})\r\n\r\n\r\nexport interface UseChildrenFlagParameters<M extends ManagedChildInfo<any>, R> {\r\n\r\n    /**\r\n     * Which child is considered active on mount.\r\n     * \r\n     * After mount, change the current active child with `changeIndex`.\r\n     */\r\n    initialIndex: M[\"index\"] | null | undefined;\r\n\r\n    /**\r\n     * When provided, if the given activatedIndex doesn't map onto any\r\n     * provided child (either because it's too large or that child\r\n     * doesn't exist), the closest child to the given activatedIndex\r\n     * will have its flag set instead.\r\n     * \r\n     * Use with caution, and consider how a child having its flag set\r\n     * while the parent thinks it shouldn't be could cause issues.\r\n     */\r\n    closestFit: boolean;\r\n\r\n    onClosestFit: ((newFit: number | null) => void) | null;\r\n\r\n    getChildren(): ManagedChildren<M>;\r\n\r\n\r\n    /**\r\n     * Called whenever a new index is selected.\r\n     * \r\n     * Notably, the value can be different than what was called with changeIndex()\r\n     * if the requested index didn't exist or was hidden.\r\n     * \r\n     * @stable\r\n     */\r\n    onIndexChange: null | OnPassiveStateChange<M[\"index\"] | null, R>;\r\n\r\n    /** @stable */\r\n    setAt(index: M, value: boolean, newSelectedIndex: M[\"index\"] | null, prevSelectedIndex: M[\"index\"] | null): void;\r\n    /** @stable */\r\n    getAt(index: M): boolean;\r\n\r\n    /** Must be at least quasi-stable (always stable, doesn't need to be called during render) @stable */\r\n    isValid(index: M): boolean;\r\n}\r\n\r\nexport interface UseChildrenFlagReturnType<M extends ManagedChildInfo<any>, R> {\r\n    /** \r\n     * @stable\r\n     * \r\n     * Manually changes the current index that is (focused/selected/tabbable/whatever).\r\n     * \r\n     * The parent can use this to notify each relevant child of what it must do in order to make this change happen.\r\n     * \r\n     * The returned value will be the new index that will be used. If `closestFit` is false, it will always be the same as what you passed in.\r\n     */\r\n    changeIndex: PassiveStateUpdater<M[\"index\"] | null, R>;\r\n    /** \r\n     * @stable\r\n     * \r\n     * Call this whenever a child mounts/unmounts, or whenever calling a child's isValid() would change\r\n     */\r\n    reevaluateClosestFit: (reason: R) => void;\r\n    /** @stable */\r\n    getCurrentIndex: () => M[\"index\"] | null;\r\n}\r\n\r\n/**\r\n * An extension to useManagedChildren that handles the following common case:\r\n * 1. You have a bunch of children\r\n * 2. At any given time, only 1 of them is \"selected\", \"activated\", \"focusable\", whatever (or 0 of them, that's cool too, just 0 or 1 though).\r\n * 3. The parent has control over who is \"selected\" via a numerical index.\r\n * \r\n * This hook allows for much easier control over selection management.\r\n * \r\n * Note that because you may want to use multiple flags with the same children, this hook *does not* use `useManagedChildren`!\r\n * You need to pass it the existing children, and you must pass your invocation of `useManagedChildren` the returned `onChildrenMountChange` handler!\r\n * \r\n * Also because of that, the types of this function are rather odd.  It's better to start off using a hook that already uses a flag, such as `useRovingTabIndex`, as an example.\r\n * \r\n */\r\nexport function useChildrenFlag<M extends ManagedChildInfo<number | string>, R>({ getChildren, initialIndex, closestFit, onClosestFit, onIndexChange, getAt, setAt, isValid }: UseChildrenFlagParameters<M, R>): UseChildrenFlagReturnType<M, R> {\r\n    useEnsureStability(\"useChildrenFlag\", onIndexChange, getAt, setAt, isValid);\r\n\r\n    // TODO (maybe?): Even if there is an initial index, it's not set until mount. Is that fine?\r\n    const [getCurrentIndex, setCurrentIndex] = usePassiveState<null | M[\"index\"], R>(onIndexChange);\r\n\r\n    const [getRequestedIndex, setRequestedIndex] = usePassiveState<null | M[\"index\"], R>(null);\r\n\r\n    // Shared between onChildrenMountChange and changeIndex, not public\r\n    // Only called when `closestFit` is false, naturally.\r\n    const getClosestFit = useCallback((requestedIndex: number) => {\r\n        const children = getChildren();\r\n        let closestDistance = Infinity;\r\n        let closestIndex: number | null = null;\r\n        children.forEach(child => {\r\n\r\n            if (child != null && isValid(child)) {\r\n                console.assert(typeof child.index == \"number\", \"closestFit can only be used when each child has a numeric index, and cannot be used when children use string indices instead.\");\r\n                const newDistance = Math.abs((child.index as number) - requestedIndex);\r\n                if (newDistance < closestDistance || (newDistance == closestDistance && (child.index as number) < requestedIndex)) {\r\n                    closestDistance = newDistance;\r\n                    closestIndex = (child.index as number);\r\n                }\r\n            }\r\n        });\r\n        return closestIndex;\r\n    }, [/* Must remain stable! */]);\r\n\r\n    if (closestFit) {\r\n        console.assert(onClosestFit != null, \"When closestFit is used, onClosestFit must be provided\")\r\n    }\r\n\r\n    // Any time a child mounts/unmounts, we need to double-check to see if that affects \r\n    // the \"currently selected\" (or whatever) index.  The two cases we're looking for:\r\n    // 1. The currently selected child unmounted\r\n    // 2. A child mounted, and it mounts with the index we're looking for\r\n    const reevaluateClosestFit = useStableCallback((reason: R | undefined) => {\r\n        const children = getChildren();\r\n        const requestedIndex = getRequestedIndex();\r\n        const currentIndex = getCurrentIndex();\r\n        const currentChild = currentIndex == null ? null : children.getAt(currentIndex);\r\n\r\n        if (requestedIndex != null && closestFit && (requestedIndex != currentIndex || currentChild == null || !isValid(currentChild))) {\r\n            console.assert(typeof requestedIndex == \"number\", \"closestFit can only be used when each child has a numeric index, and cannot be used when children use string indices instead.\");\r\n\r\n            const closestFitIndex = getClosestFit(requestedIndex as number);\r\n            setCurrentIndex(closestFitIndex, reason!);\r\n            if (currentChild)\r\n                setAt(currentChild, false, closestFitIndex, currentIndex);\r\n            if (closestFitIndex != null) {\r\n                const closestFitChild = children.getAt(closestFitIndex)!;\r\n                console.assert(closestFitChild != null, \"Internal logic???\");\r\n                setAt(closestFitChild, true, closestFitIndex, currentIndex);\r\n                onClosestFit!(closestFitIndex);\r\n            }\r\n            else {\r\n                onClosestFit!(null);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n\r\n    const reasonRef = useRef<R | undefined>(undefined);\r\n\r\n    const changeIndex = useCallback<PassiveStateUpdater<M[\"index\"] | null, R>>((arg: Parameters<PassiveStateUpdater<M[\"index\"] | null, R>>[0], reason: Parameters<PassiveStateUpdater<M[\"index\"] | null, R>>[1]) => {\r\n        const children = getChildren();\r\n        const requestedIndex = (arg instanceof Function ? arg(getRequestedIndex()) : arg) as M[\"index\"];\r\n        reasonRef.current = reason;\r\n        setRequestedIndex(requestedIndex, reason as never);\r\n        const currentIndex = getCurrentIndex();\r\n        if (currentIndex == requestedIndex)\r\n            return requestedIndex;\r\n\r\n        let newMatchingChild = (requestedIndex == null ? null : children.getAt(requestedIndex));\r\n        const oldMatchingChild = (currentIndex == null ? null : children.getAt(currentIndex));\r\n        if (requestedIndex == null) {\r\n            // Easy case\r\n            setCurrentIndex(null, reason as never);\r\n            if (oldMatchingChild)\r\n                setAt(oldMatchingChild, false, requestedIndex, currentIndex);\r\n            return null;\r\n        }\r\n        else {\r\n            const childIsValid = (newMatchingChild && isValid(newMatchingChild));\r\n            if (childIsValid || !closestFit) {\r\n                setCurrentIndex(requestedIndex, reason as never);\r\n                if (oldMatchingChild)\r\n                    setAt(oldMatchingChild, false, requestedIndex, currentIndex);\r\n                if (newMatchingChild)\r\n                    setAt(newMatchingChild, true, requestedIndex, currentIndex);\r\n\r\n                return requestedIndex;\r\n            }\r\n            else {\r\n                console.assert(closestFit);\r\n                console.assert(typeof requestedIndex == \"number\", \"closestFit can only be used when each child has a numeric index, and cannot be used when children use string indices instead.\");\r\n\r\n                const closestFitIndex = getClosestFit(requestedIndex as number);\r\n                setCurrentIndex(closestFitIndex, reason as never);\r\n                if (closestFitIndex != null) {\r\n                    newMatchingChild = children.getAt(closestFitIndex)!;\r\n                    console.assert(newMatchingChild != null, \"Internal logic???\");\r\n                    if (oldMatchingChild)\r\n                        setAt(oldMatchingChild, false, closestFitIndex, currentIndex);\r\n                    setAt(newMatchingChild, true, closestFitIndex, currentIndex);\r\n                    return closestFitIndex;\r\n                }\r\n                else {\r\n                    if (oldMatchingChild)\r\n                        setAt(oldMatchingChild, false, closestFitIndex, currentIndex);\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    // Run once, on mount\r\n    useLayoutEffect(() => {\r\n        changeIndex(initialIndex ?? null, reasonRef.current!);\r\n    }, [])\r\n\r\n    return { changeIndex, reevaluateClosestFit, getCurrentIndex };\r\n}\r\n\r\n","\r\n\r\nimport { StateUpdater, useCallback, useRef, useState as useStateP } from \"../util/lib.js\";\r\nimport { useStack } from \"../util/stack.js\";\r\n\r\n/**\r\n * Slightly enhanced version of `useState` that includes a getter that remains constant\r\n * (i.e. you can use it in `useEffect` and friends without it being a dependency).\r\n * \r\n * @remarks If `getBuildMode()` returns `\"development\"`, then any calls to `setState` will also\r\n * take the stack at the time the hook was called and save it to `window._setState_stack`.\r\n * Useful if you want to trace whose state is being updated.\r\n * \r\n * @param initialState - Same as the built-in `setState`'s\r\n */\r\nexport const useState = (function useState<T>(initialState: T | (() => T)): readonly [value: T, setValue: StateUpdater<T>, getValue: () => T] {\r\n    const getStack = useStack();\r\n\r\n    // We keep both, but override the `setState` functionality\r\n    const [state, setStateP] = useStateP(initialState);\r\n    const ref = useRef(state);\r\n\r\n    // Hijack the normal setter function \r\n    // to also set our ref to the new value\r\n    const setState = useRef<StateUpdater<T>>(value => {\r\n        if (process.env.NODE_ENV === 'development') {\r\n            (window as any)._setState_stack = getStack();\r\n        }\r\n        if (typeof value === \"function\") {\r\n            const callback = value as ((_prevValue: T) => T);\r\n            setStateP(prevValue => {\r\n                const nextValue = callback(prevValue);\r\n                if (ref.current !== nextValue) {\r\n                    // put a breakpoint here if you want\r\n                    ref.current = nextValue;\r\n                }\r\n                ref.current = nextValue;\r\n                return nextValue;\r\n            });\r\n        }\r\n        else {\r\n            if (ref.current !== value) {\r\n                // put a breakpoint here if you want\r\n                ref.current = value;\r\n            }\r\n            ref.current = value;\r\n            setStateP(value);\r\n        }\r\n    });\r\n\r\n    const getState = useCallback(() => { return ref.current; }, []);\r\n\r\n    return [state, setState.current, getState] as const;\r\n})","import { UseRefElementReturnType } from \"../../dom-helpers/use-ref-element.js\";\r\nimport { UseHasCurrentFocusParameters } from \"../../observers/use-has-current-focus.js\";\r\nimport { ManagedChildInfo, UseGenericChildParameters, UseManagedChildrenParameters, UseManagedChildrenReturnType, useChildrenFlag } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { OnPassiveStateChange, PassiveStateUpdater, usePassiveState } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject, useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { useState } from \"../../preact-extensions/use-state.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { findBackupFocus } from \"../../util/focus.js\";\r\nimport { EventType, FocusEventType, StateUpdater, TargetedPick, useCallback, useEffect, useRef } from \"../../util/lib.js\";\r\nimport { ElementProps, Nullable } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\nimport { useTagProps } from \"../../util/use-tag-props.js\";\r\n\r\nexport type SetTabbableIndex = (updater: Parameters<PassiveStateUpdater<number | null, EventType<any, any>>>[0], reason: EventType<any, any> | undefined, fromUserInteraction: boolean) => void;\r\nexport type OnTabbableIndexChange = (tabbableIndex: number | null) => void;\r\n\r\n\r\nexport interface UseRovingTabIndexParametersSelf<ParentElement extends Element> {\r\n\r\n    /** When `untabbable` is true, instead of a child focusing itself, the parent will via this `focusSelf` argument. */\r\n    focusSelfParent(e: ParentElement | null): void;\r\n\r\n    /**\r\n     * This is imperative, not declarative; \r\n     * it is better if we can keep re-renders on the parent to a minimum anyway.\r\n     * \r\n     * You can manually control this with `onTabbableIndexChange` and `setTabbableIndex` if you need.\r\n     */\r\n    initiallyTabbedIndex: Nullable<number>;\r\n\r\n    /**\r\n     * When true, none of the children will be tabbable, as if the entire component is hidden.\r\n     * \r\n     * This does not actually change the currently tabbable index; if this is set to `false`, the last tabbable child is remembered.\r\n     */\r\n    untabbable: boolean;\r\n\r\n    /** \r\n     * When the parent is `untabbable` and a child gains focus via some means, we need to decide what to do.\r\n     * \r\n     * Sometimes, it's better to just send focus back to the parent.\r\n     * Sometimes, it's better to just let the child be focused this one time (especially if focusing means that `untabbable` is going to change to `true`).\r\n     * \r\n     * If `untabbable` is false, then this has no effect. \r\n     */\r\n    untabbableBehavior: \"focus-parent\" | \"leave-child-focused\";\r\n\r\n    /** \r\n     * If you would like to have an event run whenever a new index becomes tabbable\r\n     * (e.g. to call `setState` to render that tabbable index...for some reason...)\r\n     * you can do that here.\r\n     * \r\n     * **MUST** be stable!\r\n     */\r\n    onTabbableIndexChange: Nullable<OnPassiveStateChange<number | null, EventType<any, any>>>;\r\n}\r\n\r\nexport interface UseRovingTabIndexReturnTypeSelf {\r\n\r\n    /** \r\n     * Can be used to programmatically change which child is the currently tabbable one.\r\n     * \r\n     * `fromUserInteraction` determines if this was a user-generated event that should focus the newly tabbable child,\r\n     * or a programmatic event that should leave the user's focus where the user currently is, because they didn't do that.\r\n     * \r\n     * @stable\r\n     */\r\n    setTabbableIndex: SetTabbableIndex;\r\n\r\n    /** \r\n     * Returns the index of the child that is currently tabbable.\r\n     * \r\n     * @stable\r\n     */\r\n    getTabbableIndex: () => number | null;\r\n    /** \r\n     * Call to focus the currently tabbable child, or, if we're `untabbable`, the component itself.\r\n     * \r\n     * @stable\r\n     */\r\n    focusSelf: (reason?: any) => void;\r\n}\r\n\r\n\r\nexport interface UseRovingTabIndexChildInfo<TabbableChildElement extends Element> extends ManagedChildInfo<number> {\r\n\r\n    /**\r\n     * A **unique integer** (among siblings) representing this child like the index to an array. \r\n     * \r\n     * @remarks There can be holes/gaps, and even negative numbers, though iterating over a gap is still O(n) on the size of the gap (kinda low priority TODO cause computers can count fast).\r\n     */\r\n    index: number;\r\n\r\n\r\n    /**\r\n     * How is this child focused? (Generally just `e => e.focus()`)\r\n     * \r\n     * @remarks In certain cases you may want to focus a different element.\r\n     * When a grid row has its `focusSelf` called, for example, it doesn't focus the row,\r\n     * but instead sends focus further down to a cell.\r\n     * \r\n     * This is used when the tabbable index changes (we auto-focus the newly tabbable element if applicable),\r\n     * and also by the `focusSelf` value returned by the parent (i.e. `parent.focusSelf` calls one child's `focusSelf`)\r\n     */\r\n    focusSelf(e: TabbableChildElement): void;\r\n\r\n    /**\r\n     * Get this from `useRefElement`\r\n     */\r\n    getElement(): TabbableChildElement | null;\r\n\r\n    /**\r\n     * If a child **exists** (i.e. calls `useRovingTabIndexChild` or its derivatives in some way) but **can't be tabbed to** (because it's e.g. `display: none`), then set this to `true`.\r\n     * \r\n     * @remarks This cannot be calculated automatically. It's *possible* to catch something like `display: none` with some reflow-forcing `getComputedStyles` or something,\r\n     * but if the child is untabbable because it's disabled or staggered or paginated or something we just have no way of knowing. \r\n     * It could be untabbable for any arbitrary reason the user decides.\r\n     * \r\n     * If the child is **missing** instead (i.e. it does not exist), then there's no issue. \r\n     * You couldn't even supply this property because the child who would supply it is, by definition, missing. \r\n     * This is, to be clear, about **existing** children whomst are untabbable for any reason at all.\r\n     * \r\n     */\r\n    untabbable: boolean;\r\n\r\n    /** \r\n     * Provided by `useRovingTabIndexChild`. \r\n     * \r\n     * @remarks Used by the parent to control a child's internal tabbable state.\r\n     */\r\n    setLocallyTabbable: StateUpdater<boolean>;\r\n\r\n    /** \r\n     * Provided by `useRovingTabIndexChild`. \r\n     * \r\n     * @see {@link UseRovingTabIndexChildInfo.setLocallyTabbable} \r\n     */\r\n    getLocallyTabbable: () => boolean;\r\n\r\n}\r\n\r\nexport interface UseRovingTabIndexParameters<ParentElement extends Element, TabbableChildElement extends Element, M extends UseRovingTabIndexChildInfo<TabbableChildElement>> extends\r\n    TargetedPick<UseManagedChildrenReturnType<M>, \"managedChildrenReturn\", \"getChildren\">,\r\n    TargetedPick<UseRefElementReturnType<ParentElement>, \"refElementReturn\", \"getElement\"> {\r\n    /** When children mount/unmount, RTI needs access to all known children in case we unmounted the currently tabbable child */\r\n\r\n    /** The only parameters RTI needs directly is the initial index to be tabbable */\r\n    rovingTabIndexParameters: UseRovingTabIndexParametersSelf<ParentElement>;\r\n}\r\n\r\n\r\nexport interface UseRovingTabIndexReturnType<ParentElement extends Element, TabbableChildElement extends Element> extends\r\n    TargetedPick<UseManagedChildrenParameters<UseRovingTabIndexChildInfo<TabbableChildElement>>, \"managedChildrenParameters\", \"onChildrenMountChange\"> {\r\n    /** RTI runs logic when its children mount/unmount themselves */\r\n\r\n    props: ElementProps<ParentElement>;\r\n\r\n    /**\r\n     * STABLE\r\n     */\r\n    context: RovingTabIndexChildContext;\r\n\r\n    /** \r\n     * Return information that lets the user update/query/focus the currently tabbable child\r\n     */\r\n    rovingTabIndexReturn: UseRovingTabIndexReturnTypeSelf;\r\n}\r\n\r\n// While `useManagedChild` consumes the entirety of the `info` object, other hooks may\r\n// only need parts of it, or may return parts of it for `useManagedChildren` to use.\r\n// Each hook defines types like these with the keys of the `info` object that they need/provide.\r\n\r\n// These are the info parameters required by useRovingTabIndexChild specifically\r\nexport type UseRovingTabIndexChildInfoKeysParameters = \"index\" | \"untabbable\";\r\n// These are the info parameters provided by useRovingTabIndexChild specifically\r\nexport type UseRovingTabIndexChildInfoKeysReturnType = \"setLocallyTabbable\" | \"getLocallyTabbable\";\r\n\r\nexport interface UseRovingTabIndexChildParameters<TabbableChildElement extends Element> extends\r\n    UseGenericChildParameters<RovingTabIndexChildContext, Pick<UseRovingTabIndexChildInfo<TabbableChildElement>, UseRovingTabIndexChildInfoKeysParameters>>,\r\n    Pick<UseRefElementReturnType<TabbableChildElement>, \"refElementReturn\"> {\r\n}\r\n\r\nexport interface RovingTabIndexChildContextSelf {\r\n    getUntabbable(): boolean;\r\n    getUntabbableBehavior(): \"focus-parent\" | \"leave-child-focused\";\r\n    /** `force` refers to if the untabbableBehavior is ignored. E.G. `force` temporarily disables `leave-child-focused` and allows the parent to focus itself. */\r\n    parentFocusSelf: (force: boolean) => void;\r\n    giveParentFocusedElement(element: Element): void;\r\n    setTabbableIndex: SetTabbableIndex;\r\n    getInitiallyTabbedIndex(): number | null;\r\n    /**\r\n     * (This is technically the same as what's passed to onChildrenMountChange,\r\n     * but it serves a slightly different purpose and is separate for clarity)\r\n     */\r\n    reevaluateClosestFit: (reason: EventType<any, any> | undefined) => void;\r\n};\r\n\r\n\r\nexport interface RovingTabIndexChildContext {\r\n    rovingTabIndexContext: RovingTabIndexChildContextSelf;\r\n}\r\n\r\nexport interface UseRovingTabIndexChildReturnTypeSelf {\r\n    /** \r\n     * Whether this child, individually, is *the* currently tabbable child.\r\n     */\r\n    tabbable: boolean;\r\n\r\n    /** \r\n     * @stable\r\n     */\r\n    getTabbable(): boolean;\r\n\r\n}\r\n\r\nexport interface UseRovingTabIndexChildReturnType<ChildElement extends Element> extends\r\n    TargetedPick<UseHasCurrentFocusParameters<ChildElement>, \"hasCurrentFocusParameters\", \"onCurrentFocusedInnerChanged\"> {\r\n\r\n    /** Return information about the tabbable state of this child */\r\n    rovingTabIndexChildReturn: UseRovingTabIndexChildReturnTypeSelf;\r\n\r\n    /**\r\n     * Pass this to `useManagedChild`.\r\n     */\r\n    info: Pick<UseRovingTabIndexChildInfo<ChildElement>, UseRovingTabIndexChildInfoKeysReturnType>;\r\n\r\n    /** \r\n     * *Unstable*\r\n     * \r\n     * The props that must be applied to this child in order for this hook to work.\r\n     * \r\n     * The object itself, as well as the properties within it, are unstable and should be rendered by the same component that uses this hook.\r\n     */\r\n    props: ElementProps<ChildElement>;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Implements a roving tabindex system where only one \"focusable\"\r\n * component in a set is able to receive a tab focus. \r\n * \r\n * @remarks *Which* of those elements receives focus is determined by you, \r\n * but it's recommended to offload that logic then to another hook, like\r\n * `useLinearNavigation`, which lets you change the tabbable element with \r\n * the arrow keys, `useTypeaheadNavigation`, which lets you change the \r\n * tabbable index with typeahead, or `useListNavigation(Complete)` if you \r\n * just want everything bundled together.\r\n * \r\n * \r\n * @hasChild {@link useRovingTabIndexChild}\r\n * \r\n * @compositeParams\r\n * \r\n * @param args - {@link UseRovingTabIndexParameters}\r\n * @returns - {@link UseRovingTabIndexReturnType}\r\n */\r\nexport const useRovingTabIndex = monitored(function useRovingTabIndex<ParentElement extends Element, ChildElement extends Element>({\r\n    managedChildrenReturn: { getChildren },\r\n    rovingTabIndexParameters: { focusSelfParent: focusSelfParentUnstable, untabbable, untabbableBehavior, initiallyTabbedIndex, onTabbableIndexChange },\r\n    refElementReturn: { getElement },\r\n    ...void1\r\n}: UseRovingTabIndexParameters<ParentElement, ChildElement, UseRovingTabIndexChildInfo<ChildElement>>): UseRovingTabIndexReturnType<ParentElement, ChildElement> {\r\n    type M = UseRovingTabIndexChildInfo<ChildElement>;\r\n\r\n    const focusSelfParent = useStableCallback(focusSelfParentUnstable);\r\n    untabbableBehavior ||= \"focus-parent\";\r\n\r\n    const lastFocused = useRef<Element | null>(null);\r\n\r\n    assertEmptyObject(void1);\r\n\r\n    const getInitiallyTabbedIndex = useStableGetter(initiallyTabbedIndex);\r\n    const getUntabbable = useStableGetter(untabbable);\r\n\r\n    // Override the actual setter to include some extra logic related to avoiding hidden children, \r\n    // what to do when we're untabbable, what to do when we're tabbable but given `null`, etc.\r\n    const setTabbableIndex = useStableCallback<SetTabbableIndex>((updater, reason, fromUserInteraction) => {\r\n        const children = getChildren();\r\n\r\n        // Notify the relevant children that they should become tabbable/untabbable,\r\n        // but also handle focus management when we changed due to user interaction\r\n        return changeTabbableIndex(function returnModifiedTabbableIndex(prevIndex: number | null | undefined): number | null {\r\n            let nextIndex = ((typeof updater === \"function\") ? updater(prevIndex ?? null) : updater) as M[\"index\"];\r\n            const untabbable = getUntabbable();\r\n            let parentElement = getElement();\r\n            console.assert(!!parentElement);\r\n\r\n            // Whether or not we're currently tabbable, make sure that when we switch from untabbable to tabbable,\r\n            // that we know which index to switch back to.\r\n            if (nextIndex != null)\r\n                setLastNonNullIndex(nextIndex, reason!);\r\n\r\n            // If we're untabbable, then any attempt to set a new index simply fails and sets it to `null`.\r\n            if (untabbable) {\r\n                // Focus the parent, since it's what's in the tab order right now\r\n\r\n                // TODO: Replace this and the other focus(getElement())\r\n                // with a user-replaceable focusParent, like item.focusSelf?\r\n                //\r\n                // Also TODO: Should these take fromUserInteraction into consideration?\r\n                // Do we always move focus when we become untabbable?\r\n                if (!parentElement!.contains(document.activeElement) && untabbableBehavior != 'leave-child-focused')\r\n                    focusSelfParent(parentElement);\r\n                return null;\r\n            }\r\n\r\n            // If the requested index is hidden, then there's no need to focus any elements or run any extra logic.\r\n            if (nextIndex == null) {\r\n                // Focus the parent (more to be polite)\r\n                // TODO: Find the next/prev element and focus that instead,\r\n                // doable with the `tabbable` library, but it doesn't have a next() function or anything,\r\n                // so that needs to be manually done with a TreeWalker or something?\r\n                if (!parentElement!.contains(document.activeElement) && untabbableBehavior != 'leave-child-focused')\r\n                    focusSelfParent(parentElement);\r\n                return null;\r\n            }\r\n\r\n            // If we've made a change, and it was because the user clicked on it or something,\r\n            // then focus that element too\r\n            if (prevIndex != nextIndex) {\r\n                const nextChild = children.getAt(nextIndex);\r\n\r\n                if (nextChild != null && fromUserInteraction) {\r\n                    const element = nextChild.getElement();\r\n                    if (element) {\r\n                        if (document.activeElement == document.body || document.activeElement == null || !element.contains(document.activeElement)) {\r\n                            nextChild.focusSelf(element);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // TODO: Redundant?\r\n            if (nextIndex != null)\r\n                setLastNonNullIndex(nextIndex, reason!);\r\n\r\n            // Finally, return the value the user requested the index be set to.\r\n            return nextIndex ?? 0;\r\n        }, reason!);\r\n    });\r\n\r\n    // When we switch from tabbable to non/tabbable, we really want to remember the last tabbable child.\r\n    // So every time we change the index for any reason, record that change as a back up here that can be restored.\r\n    const [getLastNonNullIndex, setLastNonNullIndex] = usePassiveState<number, EventType<any, any>>(null, useCallback(() => (initiallyTabbedIndex ?? 0), []));\r\n\r\n    // Any time we switch to being untabbable, set the current tabbable index accordingly.\r\n    useEffect(() => {\r\n        let shouldFocusParentAfterwards = (getElement()?.contains(document.activeElement));\r\n        if (untabbable)\r\n            changeTabbableIndex(null, undefined);\r\n        else {\r\n            changeTabbableIndex(getLastNonNullIndex(), undefined);\r\n        }\r\n\r\n        if (shouldFocusParentAfterwards) {\r\n            focusSelf(true);\r\n        }\r\n    }, [untabbable]);\r\n\r\n    // Boilerplate related to notifying individual children when they become tabbable/untabbable\r\n    const getTabbableAt = useCallback((child: M) => { return child.getLocallyTabbable() }, []);\r\n    const setTabbableAt = useCallback((child: M, t: boolean) => { child.setLocallyTabbable(t); }, []);\r\n    const isTabbableValid = useStableCallback((child: M) => { return !child.untabbable; });\r\n    const { changeIndex: changeTabbableIndex, getCurrentIndex: getTabbableIndex, reevaluateClosestFit } = useChildrenFlag<M, EventType<any, any> | undefined>({\r\n        initialIndex: initiallyTabbedIndex ?? (untabbable ? null : 0),\r\n        onIndexChange: useStableCallback((n, p, r) => {\r\n            // Ensure that changes to `untabbable` don't affect the user-provided onTabbableIndexChange\r\n            if ((!(n == null && untabbable)) && n != getLastNonNullIndex())\r\n                onTabbableIndexChange?.(n, p, r!);\r\n        }),\r\n        getChildren,\r\n        closestFit: true,\r\n        getAt: getTabbableAt,\r\n        isValid: isTabbableValid,\r\n        setAt: setTabbableAt,\r\n        onClosestFit: (index) => {\r\n            // Whenever we change due to a closest-fit switch, make sure we don't lose focus to the body\r\n            // TODO: This is slightly janky -- we want to only mess with the user's focus when this list (or whatever) is the current focus,\r\n            // but by the time we know something like \"all the children have unmounted\",\r\n            // we've lot the ability to know if any of them were focused, at least easily.\r\n            // So we just check to see if focus was lost to the body and, if so, send it somewhere useful.\r\n            // This is liable to break, probably with blockingElements or something.\r\n            if (document.activeElement == null || document.activeElement == document.body) {\r\n                let childElement = index == null ? null : getChildren().getAt(index)?.getElement();\r\n                if (index == null || childElement == null)\r\n                    findBackupFocus(getElement()!).focus();\r\n                else\r\n                    getChildren().getAt(index)?.focusSelf(childElement);\r\n            }\r\n        }\r\n    });\r\n\r\n    const focusSelf = useCallback((force: boolean, reason?: unknown) => {\r\n        const children = getChildren();\r\n        let index = getTabbableIndex();\r\n        const untabbable = getUntabbable();\r\n        if (!untabbable) {\r\n            // If we change from untabbable to tabbable, it's possible `index` might still be null.\r\n            index ??= getInitiallyTabbedIndex() ?? children.getLowestIndex();\r\n        }\r\n\r\n        if (untabbable) {\r\n            if (document.activeElement != getElement() && (force || untabbableBehavior != 'leave-child-focused')) {\r\n                focusSelfParent(getElement());\r\n            }\r\n        }\r\n        else if (!untabbable && index != null) {\r\n            const element = children.getAt(index)?.getElement();\r\n            children.getAt(index)?.focusSelf?.(element!);\r\n        }\r\n        else\r\n            setTabbableIndex(null, reason as any, true);\r\n    }, []);\r\n\r\n    const rovingTabIndexContext = useMemoObject<RovingTabIndexChildContextSelf>({\r\n        setTabbableIndex,\r\n        parentFocusSelf: focusSelf,\r\n        getInitiallyTabbedIndex: useCallback(() => { return initiallyTabbedIndex ?? (untabbable ? null : 0) }, []),\r\n        reevaluateClosestFit,\r\n        getUntabbable: useStableGetter(untabbable),\r\n        getUntabbableBehavior: useStableGetter(untabbableBehavior),\r\n        giveParentFocusedElement: useCallback((e) => { lastFocused.current = e }, [])\r\n    });\r\n\r\n    return {\r\n        managedChildrenParameters: { onChildrenMountChange: useCallback(() => { reevaluateClosestFit(undefined); }, [reevaluateClosestFit]), },\r\n        rovingTabIndexReturn: { setTabbableIndex, getTabbableIndex, focusSelf },\r\n        context: useMemoObject({ rovingTabIndexContext }),\r\n        props: useTagProps({\r\n            // Note: Making this -1 instead of null is partially intentional --\r\n            // it gives us time during useEffect to move focus back to the last focused element\r\n            // (otherwise focus gets lost to the body, and useEffect thinks that it shouldn't\r\n            // focus the child because focus wasn't within the list). \r\n            // It's also just consistent. \r\n            tabIndex: untabbable ? 0 : -1,\r\n            // When a hidden child is clicked, some browsers focus the parent, just because it's got a role and a tabindex.\r\n            onFocus: useStableCallback((e: FocusEventType<ParentElement>) => {\r\n                const parentElement = getElement();\r\n                console.assert(!!parentElement);\r\n                if (e.target == getElement()) {\r\n                    if (!untabbable) {\r\n                        focusSelf(false, e);\r\n                    }\r\n                }\r\n            })\r\n        }, \"data-roving-tab-index\")\r\n    };\r\n})\r\n\r\n/**\r\n * @compositeParams\r\n * \r\n * @see {@link useRovingTabIndex}\r\n * @param args - {@link UseRovingTabIndexChildParameters}\r\n * @returns - {@link UseRovingTabIndexChildReturnType}\r\n */\r\nexport const useRovingTabIndexChild = monitored(function useRovingTabIndexChild<ChildElement extends Element>({\r\n    info: { index, untabbable: iAmUntabbable, ...void2 },\r\n    context: { rovingTabIndexContext: { giveParentFocusedElement, getUntabbable: getParentIsUntabbable, getUntabbableBehavior, reevaluateClosestFit, setTabbableIndex, getInitiallyTabbedIndex, parentFocusSelf } },\r\n    refElementReturn: { getElement },\r\n    ...void3\r\n}: UseRovingTabIndexChildParameters<ChildElement>): UseRovingTabIndexChildReturnType<ChildElement> {\r\n    const [tabbable, setTabbable, getTabbable] = useState(getInitiallyTabbedIndex() === index);\r\n\r\n    useEffect(() => {\r\n        reevaluateClosestFit(undefined);\r\n    }, [!!iAmUntabbable]);\r\n\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n\r\n    useEffect(() => {\r\n        if (tabbable) {\r\n            giveParentFocusedElement(getElement()!);\r\n        }\r\n    }, [tabbable])\r\n\r\n    return {\r\n        hasCurrentFocusParameters: {\r\n            onCurrentFocusedInnerChanged: useStableCallback((focused: boolean, _prevFocused: boolean | undefined, e) => {\r\n                if (focused) {\r\n                    const parentIsUntabbable = getParentIsUntabbable();\r\n                    const untabbableBehavior = getUntabbableBehavior();\r\n\r\n                    if ((!parentIsUntabbable && !iAmUntabbable) || untabbableBehavior != \"focus-parent\")\r\n                        setTabbableIndex(index, e, false);\r\n                    else\r\n                        parentFocusSelf(false);\r\n                }\r\n            })\r\n        },\r\n        rovingTabIndexChildReturn: {\r\n            tabbable,\r\n            getTabbable,\r\n        },\r\n        info: { setLocallyTabbable: setTabbable, getLocallyTabbable: getTabbable },\r\n        props: useTagProps({\r\n            tabIndex: (tabbable ? 0 : -1),\r\n            ...{ inert: iAmUntabbable } // This inert is to prevent the edge case of clicking a hidden item and it focusing itself\r\n        } as {}, \"data-roving-tab-index-child\"),\r\n    }\r\n})\r\n","\r\nimport { OnPassiveStateChange, returnNull, runImmediately, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { TargetedPick, useEffect } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { UseRefElementReturnType } from \"./use-ref-element.js\";\r\n\r\nexport interface UseTextContentParametersSelf<E extends Element> {\r\n    /**\r\n     * Return the text content of this component. By default, `e => e.textContent` is probably what you want.\r\n     * \r\n     * @remarks Reminder that `element.innerText` is heavy and causes layout calculations, but respects `display:none` and such. \r\n     * `element.textContent` is usually what you want if this is used many times across a page (like as part of a list item).\r\n     */\r\n    getText(e: E | null): string | null;\r\n\r\n    /**\r\n     * During `useEffect`, this is called if the text content of the rendered element has changed.\r\n     * \r\n     * @see {@link useMutationObserver} for a more robust implementation of this idea\r\n     */\r\n    onTextContentChange: OnPassiveStateChange<string | null, never>;\r\n}\r\n\r\nexport interface UseTextContentParameters<E extends Element> extends TargetedPick<UseRefElementReturnType<E>, \"refElementReturn\", \"getElement\"> {\r\n    textContentParameters: UseTextContentParametersSelf<E>;\r\n}\r\n\r\nexport interface UseTextContentReturnTypeSelf {\r\n    /** Returns the last known value of the element's text content */\r\n    getTextContent: () => string | null;\r\n}\r\n\r\nexport interface UseTextContentReturnType {\r\n    textContentReturn: UseTextContentReturnTypeSelf;\r\n}\r\n\r\n/**\r\n * Allows examining the rendered component's text content whenever it renders and reacting to changes.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useTextContent = monitored(function useTextContent<E extends Element>({ refElementReturn: { getElement }, textContentParameters: { getText, onTextContentChange } }: UseTextContentParameters<E>): UseTextContentReturnType {\r\n    const [getTextContent, setTextContent] = usePassiveState<string | null, never>(onTextContentChange, returnNull, runImmediately);\r\n    useEffect(() => {\r\n        const element = getElement();\r\n        if (element) {\r\n            const textContent = getText(element);\r\n            if (textContent) {\r\n                setTextContent(textContent);\r\n            }\r\n        }\r\n    });\r\n    return { textContentReturn: { getTextContent } }\r\n})\r\n","import { UsePressParameters } from \"../../component-use/use-press.js\";\r\nimport { UseRefElementReturnType } from \"../../dom-helpers/use-ref-element.js\";\r\nimport { UseTextContentParameters, UseTextContentReturnType, useTextContent } from \"../../dom-helpers/use-text-content.js\";\r\nimport { UseGenericChildParameters } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { OnPassiveStateChange, usePassiveState } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject, useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { useState } from \"../../preact-extensions/use-state.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { TargetedPick, useCallback, useLayoutEffect, useRef } from \"../../util/lib.js\";\r\nimport { CompositionEventType, ElementProps, EventType, KeyboardEventType, Nullable } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\nimport { useTagProps } from \"../../util/use-tag-props.js\";\r\nimport { UseRovingTabIndexChildInfo, UseRovingTabIndexReturnType } from \"./use-roving-tabindex.js\";\r\n\r\nexport interface UseTypeaheadNavigationReturnTypeSelf {\r\n    /** Returns the string currently typed by the user. Stable, but cannot be called during render. */\r\n    getCurrentTypeahead(): string | null;\r\n\r\n    /**\r\n     * What the current status of the user's input is:\r\n     * \r\n     * * `\"none\"`: Typeahead is not in progress; the user has not typed anything (or has not for the given timeout period).\r\n     * * `\"valid\"`: The string the user has typed so far corresponds to at least one child\r\n     * * `\"invalid\"`: The string the user has typed so does not correspond to any child\r\n     */\r\n    typeaheadStatus: \"invalid\" | \"valid\" | \"none\";\r\n}\r\n\r\nexport interface UseTypeaheadNavigationContextSelf {\r\n    /** \r\n     * Stable, but don't call during render.\r\n     * \r\n     * @stable\r\n     */\r\n    excludeSpace: () => boolean;\r\n    sortedTypeaheadInfo: Array<TypeaheadInfo>;\r\n    insertingComparator: (lhs: string | null, rhs: TypeaheadInfo) => number;\r\n}\r\n\r\nexport interface UseTypeaheadNavigationParametersSelf<TabbableChildElement extends Element> {\r\n\r\n    /**\r\n     * **Optional**\r\n     * \r\n     * Called any time the currently tabbable index changes as a result of a typeahead-related keypress\r\n     * \r\n     * @nonstable\r\n     */\r\n    onNavigateTypeahead: Nullable<(newIndex: number | null, event: KeyboardEventType<TabbableChildElement>) => void>;\r\n\r\n\r\n    /**\r\n     * Must return true if the given child can be navigated to.\r\n     * \r\n     * Generally corresponds to a `hidden` or `disabled` prop.\r\n     * @param index - Which child to query\r\n     * \r\n     * @nonstable\r\n     */\r\n    isValidForTypeaheadNavigation(index: number): boolean;\r\n\r\n\r\n    /**\r\n     * A collator to use when comparing. \r\n     * If not provided, simply uses `localeCompare` after transforming each to lowercase, which will, at best, work okay in English.\r\n     * \r\n     * @nonstable\r\n     */\r\n    collator: Nullable<Intl.Collator>;\r\n\r\n    /**\r\n     * If true, no typeahead-related processing will occur, effectively disabling this invocation of `useTypeaheadNavigation` altogether.\r\n     */\r\n    noTypeahead: boolean;\r\n\r\n    /**\r\n     * How long after the user's last typeahead-related keypress does it take for the system to reset?\r\n     */\r\n    typeaheadTimeout: number;\r\n}\r\n\r\nexport interface UseTypeaheadNavigationReturnType<ParentOrChildElement extends Element> {\r\n    typeaheadNavigationReturn: UseTypeaheadNavigationReturnTypeSelf;\r\n    propsStable: ElementProps<ParentOrChildElement>;\r\n    context: UseTypeaheadNavigationContext;\r\n}\r\n\r\nexport interface UseTypeaheadNavigationContext {\r\n    typeaheadNavigationContext: UseTypeaheadNavigationContextSelf;\r\n}\r\n\r\n\r\nexport interface UseTypeaheadNavigationChildInfo<TabbableChildElement extends Element> extends Pick<UseRovingTabIndexChildInfo<TabbableChildElement>, \"index\"> { }\r\n\r\n\r\nexport interface UseTypeaheadNavigationParameters<TabbableChildElement extends Element> extends TargetedPick<UseRovingTabIndexReturnType<any, TabbableChildElement>, \"rovingTabIndexReturn\", \"getTabbableIndex\" | \"setTabbableIndex\"> {\r\n    typeaheadNavigationParameters: UseTypeaheadNavigationParametersSelf<TabbableChildElement>;\r\n}\r\n\r\nexport type UseTypeaheadNavigationChildInfoKeysParameters = \"index\";\r\nexport type UseTypeaheadNavigationChildInfoKeysReturnType = never;\r\n\r\n/** Arguments passed to the child `useTypeaheadNavigationChild` */\r\nexport interface UseTypeaheadNavigationChildParameters<ChildElement extends Element> extends\r\n    UseGenericChildParameters<UseTypeaheadNavigationContext, Pick<UseTypeaheadNavigationChildInfo<ChildElement>, UseTypeaheadNavigationChildInfoKeysParameters>>,\r\n    TargetedPick<UseTextContentParameters<ChildElement>, \"textContentParameters\", \"getText\">,\r\n    TargetedPick<UseRefElementReturnType<ChildElement>, \"refElementReturn\", \"getElement\"> {\r\n}\r\n\r\nexport interface UseTypeaheadNavigationChildReturnType extends\r\n    UseTextContentReturnType,\r\n    TargetedPick<UsePressParameters<any>, \"pressParameters\", \"excludeSpace\"> {\r\n}\r\n\r\ninterface TypeaheadInfo { text: string | null; unsortedIndex: number; }\r\n\r\n\r\n/**\r\n * Allows for the selection of a managed child by typing the given text associated with it.\r\n *  \r\n * @see useListNavigation, which packages everything up together.\r\n * \r\n * @hasChild {@link useTypeaheadNavigationChild}\r\n * \r\n * @compositeParams\r\n */\r\nexport const useTypeaheadNavigation = monitored( function useTypeaheadNavigation<ParentOrChildElement extends Element, ChildElement extends Element>({\r\n    typeaheadNavigationParameters: { collator, typeaheadTimeout, noTypeahead, isValidForTypeaheadNavigation, onNavigateTypeahead, ...void3 },\r\n    rovingTabIndexReturn: { getTabbableIndex: getIndex, setTabbableIndex: setIndex, ...void1 },\r\n    ...void2\r\n}: UseTypeaheadNavigationParameters<ChildElement>): UseTypeaheadNavigationReturnType<ParentOrChildElement> {\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n\r\n    // For typeahead, keep track of what our current \"search\" string is (if we have one)\r\n    // and also clear it every 1000 ms since the last time it changed.\r\n    // Next, keep a mapping of typeahead values to indices for faster searching.\r\n    // And, for the user's sake, let them know when their typeahead can't match anything anymore\r\n    const [getCurrentTypeahead, setCurrentTypeahead] = usePassiveState<string | null, EventType<any, any> | undefined>(useStableCallback((currentTypeahead, prev, reason) => {\r\n        const handle = setTimeout(() => { setCurrentTypeahead(null, undefined); setTypeaheadStatus(\"none\"); }, typeaheadTimeout ?? 1000);\r\n        updateBasedOnTypeaheadChange(currentTypeahead, reason!);\r\n        return () => clearTimeout(handle);\r\n    }));\r\n    //useTimeout({ timeout: typeaheadTimeout ?? 1000, callback: () => { setCurrentTypeahead(null); setInvalidTypeahead(null); }, triggerIndex: currentTypeahead });\r\n    const sortedTypeaheadInfo = useRef<TypeaheadInfo[]>([]);\r\n    const [typeaheadStatus, setTypeaheadStatus] = useState<`${\"in\" | \"\"}valid` | \"none\">(\"none\");\r\n\r\n    // Handle typeahead for input method editors as well\r\n    // Essentially, when active, ignore further keys \r\n    // because we're waiting for a CompositionEnd event\r\n    const [, setImeActive, getImeActive] = useState(false);\r\n\r\n    // Because composition events fire *after* keydown events \r\n    // (but within the same task, which, TODO, could be browser-dependent),\r\n    // we can use this to keep track of which event we're listening for on the first keydown.\r\n    const [nextTypeaheadChar, setNextTypeaheadChar] = useState<string | null>(null);\r\n    useLayoutEffect(() => {\r\n        if (nextTypeaheadChar !== null) {\r\n            setCurrentTypeahead(typeahead => ((typeahead ?? \"\") + nextTypeaheadChar), undefined);\r\n            setNextTypeaheadChar(null);\r\n        }\r\n    }, [nextTypeaheadChar]);\r\n\r\n\r\n    const comparatorShared = useStableCallback((safeLhs: string, safeRhs: string) => {\r\n        let compare: number;\r\n        // For the purposes of typeahead, only compare a string of the same size as our currently typed string.\r\n        // By normalizing them first, we ensure this byte-by-byte handling of raw character data works out okay.\r\n        safeLhs = safeLhs.normalize(\"NFD\");\r\n        safeRhs = safeRhs.normalize(\"NFD\")\r\n\r\n        if (collator)\r\n            compare = collator.compare(safeLhs, safeRhs)\r\n        else\r\n            compare = safeLhs.toLowerCase().localeCompare(safeRhs.toLowerCase() ?? \"\");\r\n\r\n        return compare;\r\n    });\r\n\r\n    const insertingComparator = useStableCallback((lhs: string | null, rhs: TypeaheadInfo) => {\r\n\r\n        if (typeof lhs === \"string\" && typeof rhs.text === \"string\") {\r\n            return comparatorShared(lhs, rhs.text);\r\n        }\r\n\r\n        return (lhs as unknown as number) - (rhs as unknown as number);\r\n    });\r\n\r\n    const typeaheadComparator = useStableCallback((lhs: string, rhs: TypeaheadInfo) => {\r\n\r\n        if (typeof lhs === \"string\" && typeof rhs.text === \"string\") {\r\n            // During typeahead, all strings longer than ours should be truncated\r\n            // so that they're all considered equally by that point.\r\n            return comparatorShared(lhs, rhs.text.substring(0, lhs.length));\r\n        }\r\n\r\n        return (lhs as unknown as number) - (rhs as unknown as number);\r\n    });\r\n\r\n    const isDisabled = useStableGetter(noTypeahead);\r\n\r\n\r\n    const propsStable = useRef<ElementProps<ParentOrChildElement>>(useTagProps({\r\n        onKeyDown: useStableCallback((e) => {\r\n            if (isDisabled())\r\n                return;\r\n\r\n            const imeActive = getImeActive();\r\n\r\n            const key = e.key;\r\n\r\n            // Not handled by typeahead (i.e. assume this is a keyboard shortcut)\r\n            if (e.ctrlKey || e.metaKey)\r\n                return;\r\n\r\n            if (!imeActive && e.key === \"Backspace\") {\r\n                // Remove the last character in a way that doesn't split UTF-16 surrogates.\r\n                setCurrentTypeahead(t => t == null ? null : [...t].reverse().slice(1).reverse().join(\"\"), e);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                return;\r\n            }\r\n\r\n            // The key property represents the typed character OR the \"named key attribute\" of the key pressed.\r\n            // There's no definite way to tell the difference, but for all intents and purposes\r\n            // there are no one-character names, and there are no non-ASCII-alpha names.\r\n            // Thus, any one-character or non-ASCII value for `key` is *almost certainly* a typed character.\r\n            const isCharacterKey = (key.length === 1 || !/^[A-Za-z]/.test(key));\r\n            if (isCharacterKey) {\r\n\r\n                if (key == \" \" && (getCurrentTypeahead() ?? \"\").trim().length == 0) {\r\n                    // Don't do anything because a spacebar can't ever \r\n                    // initiate a typeahead, only continue one.\r\n\r\n                    // (Specifically, let the event continue propagation in this case)\r\n                }\r\n                else {\r\n\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n\r\n                    // Note: Won't be true for the first keydown\r\n                    // but will be overwritten before useLayoutEffect is called\r\n                    // to actually apply the change\r\n                    if (!imeActive)\r\n                        setNextTypeaheadChar(key);\r\n                }\r\n            }\r\n\r\n        }),\r\n        onCompositionStart: useStableCallback((e: CompositionEventType<ParentOrChildElement>) => {\r\n            setNextTypeaheadChar(e.data);\r\n            setImeActive(false);\r\n        }),\r\n        onCompositionEnd: useStableCallback((_e: CompositionEventType<ParentOrChildElement>) => { setImeActive(true) }),\r\n    }, \"data-typeahead-navigation\"));\r\n\r\n    const excludeSpace = useStableCallback(() => { return typeaheadStatus != \"none\" });\r\n\r\n    return {\r\n        context: useMemoObject({\r\n            typeaheadNavigationContext: useMemoObject({\r\n                insertingComparator,\r\n                sortedTypeaheadInfo: sortedTypeaheadInfo.current,\r\n                excludeSpace\r\n            }),\r\n\r\n        }),\r\n        typeaheadNavigationReturn: {\r\n            getCurrentTypeahead,\r\n            typeaheadStatus\r\n        },\r\n        propsStable: propsStable.current\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    function updateBasedOnTypeaheadChange(currentTypeahead: string | null, reason: EventType<any, any>) {\r\n        if (currentTypeahead && sortedTypeaheadInfo.current.length) {\r\n\r\n\r\n\r\n            const sortedTypeaheadIndex = binarySearch(sortedTypeaheadInfo.current, currentTypeahead, typeaheadComparator);\r\n\r\n            if (sortedTypeaheadIndex < 0) {\r\n                // The user has typed an entry that doesn't exist in the list\r\n                // (or more specifically \"for which there is no entry that starts with that input\")\r\n                setTypeaheadStatus(\"invalid\");\r\n            }\r\n            else {\r\n                setTypeaheadStatus(\"valid\");\r\n\r\n                /*\r\n                  We know roughly where, in the sorted array of strings, our next typeahead location is.\r\n                  But roughly isn't good enough if there are multiple matches.\r\n                  To convert our sorted index to the unsorted index we need, we have to find the first\r\n                  element that matches us *and* (if any such exist) is *after* our current selection.\r\n    \r\n                  In other words, the only way typeahead moves backwards relative to our current\r\n                  position is if the only other option is behind us.\r\n    \r\n                  It's not specified in WAI-ARIA what to do in that case.  I suppose wrap back to the start?\r\n                  Though there's also a case for just going upwards to the nearest to prevent jumpiness.\r\n                  But if you're already doing typeahead on an unsorted list, like, jumpiness can't be avoided.\r\n                  I dunno. Going back to the start is the simplest though.\r\n    \r\n                  Basically what this does: Starting from where we found ourselves after our binary search,\r\n                  scan backwards and forwards through all adjacent entries that also compare equally so that\r\n                  we can find the one whose `unsortedIndex` is the lowest amongst all other equal strings\r\n                  (and also the lowest `unsortedIndex` yadda yadda except that it comes after us).\r\n    \r\n                  TODO: The binary search starts this off with a solid O(log n), but one-character \r\n                  searches are, thanks to pigeonhole principal, eventually guaranteed to become \r\n                  O(n*log n). This is annoying but probably not easily solvable? There could be an \r\n                  exception for one-character strings, but that's just kicking the can down \r\n                  the road. Maybe one or two characters would be good enough though.\r\n                */\r\n\r\n\r\n                // These are used to keep track of the candidates' positions in both our sorted array and the unsorted DOM.\r\n                let lowestUnsortedIndexAll: number | null = null;\r\n                let lowestSortedIndexAll = sortedTypeaheadIndex;\r\n\r\n                // These two are only set for elements that are ahead of us, but the principle's the same otherwise\r\n                let lowestUnsortedIndexNext: number | null = null;\r\n                let lowestSortedIndexNext = sortedTypeaheadIndex;\r\n\r\n                const updateBestFit = (u: number) => {\r\n                    if (!isValidForTypeaheadNavigation(u))\r\n                        return;\r\n\r\n                    if (lowestUnsortedIndexAll == null || u < lowestUnsortedIndexAll) {\r\n                        lowestUnsortedIndexAll = u;\r\n                        lowestSortedIndexAll = i;\r\n                    }\r\n                    if ((lowestUnsortedIndexNext == null || u < lowestUnsortedIndexNext) && u > (getIndex() ?? -Infinity)) {\r\n                        lowestUnsortedIndexNext = u;\r\n                        lowestSortedIndexNext = i;\r\n                    }\r\n                }\r\n\r\n                let i = sortedTypeaheadIndex;\r\n                while (i >= 0 && typeaheadComparator(currentTypeahead, sortedTypeaheadInfo.current[i]) == 0) {\r\n                    updateBestFit(sortedTypeaheadInfo.current[i].unsortedIndex);\r\n                    --i;\r\n                }\r\n\r\n                i = sortedTypeaheadIndex;\r\n                while (i < sortedTypeaheadInfo.current.length && typeaheadComparator(currentTypeahead, sortedTypeaheadInfo.current[i]) == 0) {\r\n                    updateBestFit(sortedTypeaheadInfo.current[i].unsortedIndex);\r\n                    ++i;\r\n                }\r\n\r\n                let toSet: number | null = null;\r\n\r\n                if (lowestUnsortedIndexNext !== null)\r\n                    toSet = sortedTypeaheadInfo.current[lowestSortedIndexNext].unsortedIndex;\r\n                else if (lowestUnsortedIndexAll !== null)\r\n                    toSet = sortedTypeaheadInfo.current[lowestSortedIndexAll].unsortedIndex;\r\n\r\n                if (toSet != null) {\r\n                    setIndex(toSet, reason, true);\r\n                    onNavigateTypeahead?.(toSet, reason as KeyboardEventType<any>);\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n/**\r\n * \r\n * @compositeParams\r\n */\r\nexport const useTypeaheadNavigationChild = monitored(function useTypeaheadNavigationChild<ChildElement extends Element>({\r\n    info: { index, ...void1 },\r\n    textContentParameters: { getText, ...void5 },\r\n    context: { typeaheadNavigationContext: { sortedTypeaheadInfo, insertingComparator, excludeSpace, ...void2 } },\r\n    refElementReturn: { getElement, ...void3 },\r\n    ...void4\r\n}: UseTypeaheadNavigationChildParameters<ChildElement>): UseTypeaheadNavigationChildReturnType {\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n\r\n    const { textContentReturn } = useTextContent({\r\n        refElementReturn: { getElement },\r\n        textContentParameters: {\r\n            getText,\r\n            onTextContentChange: useCallback<OnPassiveStateChange<string | null, never>>((text: string | null) => {\r\n                if (text) {\r\n                    // Find where to insert this item.\r\n                    // Because all index values should be unique, the returned sortedIndex\r\n                    // should always refer to a new location (i.e. be negative)                \r\n                    const sortedIndex = binarySearch(sortedTypeaheadInfo, text, insertingComparator);\r\n                    console.assert(sortedIndex < 0 || insertingComparator(sortedTypeaheadInfo[sortedIndex].text, { unsortedIndex: index, text }) == 0);\r\n                    if (sortedIndex < 0) {\r\n                        sortedTypeaheadInfo.splice(-sortedIndex - 1, 0, { text, unsortedIndex: index });\r\n                    }\r\n                    else {\r\n                        sortedTypeaheadInfo.splice(sortedIndex, 0, { text, unsortedIndex: index });\r\n                    }\r\n\r\n                    return () => {\r\n                        // When unmounting, find where we were and remove ourselves.\r\n                        // Again, we should always find ourselves because there should be no duplicate values if each index is unique.\r\n                        const sortedIndex = binarySearch(sortedTypeaheadInfo, text, insertingComparator);\r\n                        console.assert(sortedIndex < 0 || insertingComparator(sortedTypeaheadInfo[sortedIndex].text, { unsortedIndex: index, text }) == 0);\r\n\r\n                        if (sortedIndex >= 0) {\r\n                            sortedTypeaheadInfo.splice(sortedIndex, 1);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }, [])\r\n        }\r\n    })\r\n\r\n    return {\r\n        textContentReturn,\r\n        pressParameters: { excludeSpace }\r\n    };\r\n\r\n})\r\n\r\n/**\r\n * Your usual binary search implementation.\r\n * \r\n * It's used here to quickly find a good spot to start searching for our next typeahead candidate.\r\n * @param array - The array to search through\r\n * @param wanted - The value you'd like to find\r\n * @param comparator - Compares `wanted` with the current value in `array`\r\n * @returns A non-negative value if `wanted` was found, and a negative number if not. \r\n * The absolute value of this number, minus one, is where `wanted` *would* be found if it *was* in `array`\r\n */\r\nexport function binarySearch<T, U, F extends (lhs: U, rhs: T) => number>(array: T[], wanted: U, comparator: F): number {\r\n    let firstIndex = 0;\r\n    let lastIndex = array.length - 1;\r\n    while (firstIndex <= lastIndex) {\r\n        const testIndex = (lastIndex + firstIndex) >> 1;\r\n        const comparisonResult = comparator(wanted, array[testIndex]);\r\n\r\n        if (comparisonResult > 0) {\r\n            firstIndex = testIndex + 1;\r\n        }\r\n        else if (comparisonResult < 0) {\r\n            lastIndex = testIndex - 1;\r\n        }\r\n        else {\r\n            return testIndex;\r\n        }\r\n    }\r\n\r\n    return -firstIndex - 1;\r\n}\r\n","import { useMergedProps } from \"../../dom-helpers/use-merged-props.js\";\r\nimport { UseGenericChildParameters } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { useMemoObject } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { useRef } from \"../../util/lib.js\";\r\nimport { ElementProps, OmitStrong } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\nimport { UseLinearNavigationParameters, UseLinearNavigationReturnType, useLinearNavigation } from \"./use-linear-navigation.js\";\r\nimport { RovingTabIndexChildContext, UseRovingTabIndexChildInfo, UseRovingTabIndexChildInfoKeysParameters, UseRovingTabIndexChildInfoKeysReturnType, UseRovingTabIndexChildParameters, UseRovingTabIndexChildReturnType, UseRovingTabIndexParameters, UseRovingTabIndexReturnType, useRovingTabIndex, useRovingTabIndexChild } from \"./use-roving-tabindex.js\";\r\nimport { UseTypeaheadNavigationChildInfo, UseTypeaheadNavigationChildInfoKeysParameters, UseTypeaheadNavigationChildInfoKeysReturnType, UseTypeaheadNavigationChildParameters, UseTypeaheadNavigationChildReturnType, UseTypeaheadNavigationContext, UseTypeaheadNavigationParameters, UseTypeaheadNavigationReturnType, useTypeaheadNavigation, useTypeaheadNavigationChild } from \"./use-typeahead-navigation.js\";\r\n\r\n/**\r\n * \r\n * TODO: This table was scrapped when this was changed to just accept a collator directly,\r\n * but it's not bad for a collation crash course and I might use it again.\r\n * Even just as a \"this is why it's important and good to use these things\" thing.\r\n * \r\n * |Lang.|Target|User input|`base`|`accent`|`case`|`variant`|\r\n * |----|----|----|----|----|----|----|\r\n * |EN|Hi|Bye|❌|❌|❌|❌|\r\n * |EN|Hi|Hi|✅|✅|✅|✅|\r\n * |EN|Hi|Ｈｉ|✅|✅|✅|❌|\r\n * |EN|Hi|hi|✅|✅|❌|❌|\r\n * |EN|Hi|Hï|✅|❌|❌|❌|\r\n * |EN|å|aa|❌|❌|❌|❌|\r\n * |DA|å|aa|✅|✅|✅|❌|\r\n * |DA|å|AA|✅|✅|❌|❌|\r\n * |DA|å|Aa|✅|✅|❌|❌|\r\n * |DA|å|aA|❌|❌|❌|❌|\r\n * |EN|å|a|✅|✅|❌|❌|\r\n * |DA|å|a|✅|✅|❌|❌|\r\n * |JP|着|着|✅|✅|✅|✅|\r\n * |JP|カ|ｶ|✅|✅|✅|✅|\r\n * |JP|カ|か|✅|✅|✅|❌|\r\n * |JP|カ|ヵ|✅|✅|✅|❌|\r\n * |JP|カ|㋕|✅|✅|❌|❌|\r\n * |JP|カ|ガ|✅|❌|❌|❌|\r\n * |JP|カ|力|❌|❌|❌|❌|\r\n * |ZH|紅|红|❌|❌|❌|❌|\r\n * \r\n * \r\n * (Note to self: At some point, this file will probably be normalized\r\n * by somebody and 着 will turn back into 着.)\r\n * \r\n * Unrelated, but hey, this is fun: try highlighting the space between the two characters in VS Code,\r\n * or just typing a character in between them. What's up with this?\r\n * 着 着\r\n */\r\nconst _dummy: any = null;\r\n\r\n\r\n\r\n\r\nexport interface UseListNavigationChildInfo<TabbableChildElement extends Element> extends UseRovingTabIndexChildInfo<TabbableChildElement>, UseTypeaheadNavigationChildInfo<TabbableChildElement> { }\r\n\r\nexport interface UseListNavigationParameters<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationChildInfo<ChildElement>> extends\r\n    UseRovingTabIndexParameters<ParentOrChildElement, ChildElement, M>,\r\n    OmitStrong<UseTypeaheadNavigationParameters<ChildElement>, \"rovingTabIndexReturn\">,\r\n    OmitStrong<UseLinearNavigationParameters<ParentOrChildElement, ChildElement>, \"rovingTabIndexReturn\"> { }\r\n\r\nexport interface UseListNavigationReturnType<ParentOrChildElement extends Element, ChildElement extends Element> extends\r\n    OmitStrong<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement>, \"props\">,\r\n    OmitStrong<UseTypeaheadNavigationReturnType<ParentOrChildElement>, \"propsStable\">,\r\n    OmitStrong<UseLinearNavigationReturnType<ParentOrChildElement>, \"propsStable\"> {\r\n    props: ElementProps<ParentOrChildElement>;\r\n    context: UseListNavigationContext;\r\n}\r\n\r\n/** {@link useListNavigationChild} requires the same `info` that {@link useRovingTabIndexChild} and {@link useTypeaheadNavigationChild} do (there is no `useLinearNavigationChild`) */\r\nexport type UseListNavigationChildInfoKeysParameters = UseRovingTabIndexChildInfoKeysParameters | UseTypeaheadNavigationChildInfoKeysParameters;\r\nexport type UseListNavigationChildInfoKeysReturnType = UseRovingTabIndexChildInfoKeysReturnType | UseTypeaheadNavigationChildInfoKeysReturnType;\r\n\r\nexport interface UseListNavigationChildParameters<ChildElement extends Element> extends\r\n    UseGenericChildParameters<UseListNavigationContext, Pick<UseListNavigationChildInfo<ChildElement>, UseRovingTabIndexChildInfoKeysParameters | UseTypeaheadNavigationChildInfoKeysParameters>>,\r\n    OmitStrong<UseRovingTabIndexChildParameters<ChildElement>, \"info\" | \"context\">,\r\n    OmitStrong<UseTypeaheadNavigationChildParameters<ChildElement>, \"info\" | \"context\"> {\r\n}\r\nexport interface UseListNavigationContext extends RovingTabIndexChildContext, UseTypeaheadNavigationContext { }\r\nexport interface UseListNavigationChildReturnType<ChildElement extends Element> extends\r\n    UseRovingTabIndexChildReturnType<ChildElement>,\r\n    UseTypeaheadNavigationChildReturnType {\r\n    info: Pick<UseListNavigationChildInfo<ChildElement>, UseListNavigationChildInfoKeysReturnType>;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Implements proper keyboard navigation for components like listboxes, button groups, menus, etc.\r\n * \r\n * @remarks In the document order, there will be only one \"focused\" or \"tabbable\" element, making it act more like one complete unit in comparison to everything around it.\r\n * Navigating forwards/backwards can be done with the arrow keys, Home/End keys, or any text for typeahead to focus the next item that matches.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useListNavigationChild}\r\n */\r\nexport const useListNavigation = monitored(function useListNavigation<ParentOrChildElement extends Element, ChildElement extends Element>({\r\n    linearNavigationParameters,\r\n    typeaheadNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    managedChildrenReturn,\r\n    refElementReturn,\r\n    paginatedChildrenParameters,\r\n    rearrangeableChildrenReturn,\r\n    ...void1\r\n}: UseListNavigationParameters<ParentOrChildElement, ChildElement, UseListNavigationChildInfo<ChildElement>>): UseListNavigationReturnType<ParentOrChildElement, ChildElement> {\r\n    const { props: propsRTI, rovingTabIndexReturn, managedChildrenParameters, context: contextRovingTabIndex, ...void2 } = useRovingTabIndex<ParentOrChildElement, ChildElement>({ managedChildrenReturn, rovingTabIndexParameters, refElementReturn });\r\n    const { propsStable: propsStableTN, typeaheadNavigationReturn, context: contextTypeahead, ...void3 } = useTypeaheadNavigation<ParentOrChildElement, ChildElement>({ rovingTabIndexReturn, typeaheadNavigationParameters, });\r\n    const { propsStable: propsStableLN, linearNavigationReturn, ...void4 } = useLinearNavigation<ParentOrChildElement, ChildElement>({ rovingTabIndexReturn, linearNavigationParameters, paginatedChildrenParameters, rearrangeableChildrenReturn });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n\r\n    // Merge the props while keeping them stable\r\n    // (TODO: We run this merge logic every render but only need the first render's result because it's stable)\r\n    const p = useMergedProps<ParentOrChildElement>(propsStableTN, propsStableLN);\r\n    const propsStable = useRef<ElementProps<ParentOrChildElement>>(p)\r\n\r\n    return {\r\n        managedChildrenParameters,\r\n        rovingTabIndexReturn,\r\n        typeaheadNavigationReturn,\r\n        context: useMemoObject({\r\n            ...contextRovingTabIndex,\r\n            ...contextTypeahead\r\n        }),\r\n        linearNavigationReturn,\r\n        props: useMergedProps(propsStableLN, propsStableTN, propsRTI)\r\n    }\r\n})\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport const useListNavigationChild = monitored(function useListNavigationChild<ChildElement extends Element>({\r\n    info: { index, untabbable, ...void1 },\r\n    context,\r\n    refElementReturn,\r\n    textContentParameters,\r\n    ...void2\r\n}: UseListNavigationChildParameters<ChildElement>): UseListNavigationChildReturnType<ChildElement> {\r\n    const { props, ...rticr } = useRovingTabIndexChild<ChildElement>({ context, info: { index, untabbable }, refElementReturn });\r\n    const { ...tncr } = useTypeaheadNavigationChild<ChildElement>({ refElementReturn, textContentParameters, context, info: { index } });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    return {\r\n        props,\r\n        ...tncr,\r\n        ...rticr\r\n    }\r\n})","import { identity } from \"lodash-es\";\r\nimport { useMergedProps } from \"../../dom-helpers/use-merged-props.js\";\r\nimport { UseGenericChildParameters, UseManagedChildrenReturnType } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { OnPassiveStateChange, PassiveStateUpdater, usePassiveState } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { focus } from \"../../util/focus.js\";\r\nimport { EventType, Nullable, OmitStrong, TargetedOmit, TargetedPick } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\nimport { useTagProps } from \"../../util/use-tag-props.js\";\r\nimport { UseListNavigationChildInfo, UseListNavigationChildInfoKeysParameters, UseListNavigationChildInfoKeysReturnType, UseListNavigationChildParameters, UseListNavigationChildReturnType, UseListNavigationContext, UseListNavigationParameters, UseListNavigationReturnType, useListNavigation, useListNavigationChild } from \"./use-list-navigation-partial.js\";\r\nimport { SetTabbableIndex } from \"./use-roving-tabindex.js\";\r\n\r\nexport interface GridChildRowInfo<RowElement extends Element> extends UseListNavigationChildInfo<RowElement> { }\r\nexport interface GridChildCellInfo<CellElement extends Element> extends UseListNavigationChildInfo<CellElement> { }\r\n\r\nexport interface UseGridNavigationCellParametersSelf {\r\n    /**\r\n     * How many columns this cell spans (all cells default to 1).\r\n     * \r\n     * Any following cells should skip over the `index`es this one covered with its `colSpan`. E.G. if this cell is `index=5` and `colSpan=3`, the next cell would be `index=8`, **not** `index=6`\r\n     */\r\n    colSpan: Nullable<number>;\r\n}\r\n\r\nexport interface UseGridNavigationCellContextSelf {\r\n    //allChildCellsAreUntabbable: boolean;\r\n    getRowIndex: () => number;\r\n    setTabbableRow: SetTabbableIndex; //(u: Parameters<StateUpdater<number | null>>[0], fromUserInteraction: boolean) => void;\r\n    getTabbableColumn: () => TabbableColumnInfo;\r\n    setTabbableColumn: PassiveStateUpdater<TabbableColumnInfo, EventType<any, any> | undefined>;\r\n    setTabbableCell: SetTabbableIndex; //(updater: Parameters<StateUpdater<number | null>>[0], fromUserInteraction: boolean) => void;\r\n}\r\n\r\nexport interface UseGridNavigationParametersSelf {\r\n    /**\r\n     * TODO: This may be called even when there is no actual change in the numeric values\r\n     * \r\n     * @stable\r\n     */\r\n    onTabbableColumnChange: Nullable<OnPassiveStateChange<TabbableColumnInfo, EventType<any, any> | undefined>>;\r\n}\r\n\r\nexport interface UseGridNavigationRowContextSelf {\r\n    setTabbableRow: SetTabbableIndex;\r\n    getTabbableColumn: () => TabbableColumnInfo;\r\n    setTabbableColumn: PassiveStateUpdater<TabbableColumnInfo, EventType<any, any> | undefined>;\r\n}\r\n\r\nexport interface UseGridNavigationParameters<ParentOrChildElement extends Element, RowElement extends Element, RM extends GridChildRowInfo<RowElement>> extends\r\n    OmitStrong<UseListNavigationParameters<ParentOrChildElement, RowElement, RM>, \"linearNavigationParameters\">,\r\n    TargetedOmit<UseListNavigationParameters<ParentOrChildElement, RowElement, RM>, \"linearNavigationParameters\", \"arrowKeyDirection\"> {\r\n    gridNavigationParameters: UseGridNavigationParametersSelf;\r\n}\r\nexport interface UseGridNavigationReturnType<ParentOrRowElement extends Element, RowElement extends Element> extends\r\n    OmitStrong<UseListNavigationReturnType<ParentOrRowElement, RowElement>, \"context\"> {\r\n    context: UseGridNavigationRowContext;\r\n}\r\n\r\n\r\nexport interface UseGridNavigationRowContext extends UseListNavigationContext {\r\n    gridNavigationRowContext: UseGridNavigationRowContextSelf;\r\n}\r\n\r\nexport type UseGridNavigationRowInfoKeysParameters = UseListNavigationChildInfoKeysParameters;\r\nexport type UseGridNavigationRowInfoKeysReturnType = UseListNavigationChildInfoKeysReturnType | \"focusSelf\";\r\nexport type UseGridNavigationCellInfoKeysParameters = UseListNavigationChildInfoKeysParameters;\r\nexport type UseGridNavigationCellInfoKeysReturnType = UseListNavigationChildInfoKeysReturnType;\r\n\r\nexport interface UseGridNavigationRowParameters<RowElement extends Element, CellElement extends Element, CM extends GridChildCellInfo<CellElement>> extends\r\n    UseGenericChildParameters<UseGridNavigationRowContext, Pick<GridChildRowInfo<RowElement>, UseGridNavigationRowInfoKeysParameters>>,\r\n    OmitStrong<UseListNavigationChildParameters<RowElement>, \"info\" | \"context\">,\r\n    TargetedOmit<UseListNavigationParameters<RowElement, CellElement, CM>, \"linearNavigationParameters\", \"disableHomeEndKeys\" | \"onNavigateLinear\" | \"arrowKeyDirection\" | \"pageNavigationSize\">,\r\n    TargetedOmit<UseListNavigationParameters<RowElement, CellElement, CM>, \"rovingTabIndexParameters\", \"focusSelfParent\" | \"untabbableBehavior\">,\r\n    OmitStrong<UseListNavigationParameters<RowElement, CellElement, CM>, \"rearrangeableChildrenReturn\" | \"paginatedChildrenParameters\" | \"refElementReturn\" | \"rovingTabIndexParameters\" | \"linearNavigationParameters\">,\r\n    TargetedPick<UseManagedChildrenReturnType<CM>, \"managedChildrenReturn\", \"getChildren\"> {\r\n\r\n\r\n}\r\n\r\nexport interface UseGridNavigationRowReturnType<RowElement extends Element, CellElement extends Element> extends\r\n    UseListNavigationChildReturnType<RowElement>,\r\n    OmitStrong<UseListNavigationReturnType<RowElement, CellElement>, \"rovingTabIndexReturn\" | \"context\">,\r\n    TargetedOmit<UseListNavigationReturnType<RowElement, CellElement>, \"rovingTabIndexReturn\", \"focusSelf\"> {\r\n    context: UseGridNavigationCellContext;\r\n    info: Pick<GridChildRowInfo<RowElement>, UseGridNavigationRowInfoKeysReturnType>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface UseGridNavigationCellParameters<CellElement extends Element> extends\r\n    UseGenericChildParameters<UseGridNavigationCellContext, Pick<GridChildCellInfo<CellElement>, UseGridNavigationCellInfoKeysParameters>>,\r\n    OmitStrong<UseListNavigationChildParameters<CellElement>, \"context\" | \"info\"> {\r\n    gridNavigationCellParameters: UseGridNavigationCellParametersSelf;\r\n}\r\n\r\nexport interface TabbableColumnInfo {\r\n    /** Which cell in this row is actually tabbable? */\r\n    actual: number | null;\r\n    /** Which column was the last column the user navigated to? */\r\n    ideal: number | null;\r\n}\r\n\r\nexport interface UseGridNavigationCellContext extends UseListNavigationContext {\r\n    gridNavigationCellContext: UseGridNavigationCellContextSelf;\r\n}\r\n\r\n\r\nexport interface UseGridNavigationCellReturnType<CellElement extends Element> extends UseListNavigationChildReturnType<CellElement> {\r\n    info: Pick<GridChildCellInfo<CellElement>, UseGridNavigationCellInfoKeysReturnType>;\r\n}\r\n\r\n/**\r\n * Implements 2-dimensional grid-based keyboard navigation, similarly to {@link useListNavigation}.\r\n * \r\n * @remarks Due to the complexity of this hook, it is *highly* recommended to use {@link useCompleteGridNavigation} instead. \r\n * But if you do need to it's designed to work well with intellisense -- just keep plugging the holes until the errors stop and that's 95% of it right there.\r\n * \r\n * Some features and/or limitations of this hook:\r\n * \r\n * ```md-literal\r\n * * Like all other hooks (except sorting), the only DOM restriction is that the rows and cells are descendants of the grid as a whole **somewhere**.\r\n * * Rows are given priority over columns. Sorting/filtering happens by row, Page Up/Down, the Home/End keys, and typeahead affect the current row, etc.\r\n * * Cells can have a `colSpan` or be missing, and moving with the arrow keys will \"remember\" the correct column to be in as focus jumps around.\r\n * ```\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useGridNavigationRow}\r\n * @hasChild {@link useGridNavigationCell}\r\n */\r\nexport const useGridNavigation = monitored(function useGridNavigation<ParentOrRowElement extends Element, RowElement extends Element>({\r\n    gridNavigationParameters: { onTabbableColumnChange, ...void3 },\r\n    linearNavigationParameters,\r\n    ...listNavigationParameters\r\n}: UseGridNavigationParameters<ParentOrRowElement, RowElement, GridChildRowInfo<RowElement>>): UseGridNavigationReturnType<ParentOrRowElement, RowElement> {\r\n    const [getTabbableColumn, setTabbableColumn] = usePassiveState<TabbableColumnInfo, EventType<any, any> | undefined>(onTabbableColumnChange, useStableCallback(() => {\r\n        let t = (listNavigationParameters.rovingTabIndexParameters.initiallyTabbedIndex ?? 0);\r\n        return { actual: t, ideal: t }\r\n    }));\r\n\r\n    const {\r\n        linearNavigationReturn,\r\n        rovingTabIndexReturn,\r\n        typeaheadNavigationReturn,\r\n        managedChildrenParameters,\r\n        context: { rovingTabIndexContext, typeaheadNavigationContext },\r\n        props,\r\n        ...void1\r\n    } = useListNavigation<ParentOrRowElement, RowElement>({\r\n        linearNavigationParameters: { arrowKeyDirection: \"vertical\", ...linearNavigationParameters },\r\n        ...listNavigationParameters\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void3);\r\n\r\n    const gridNavigationRowContext = useMemoObject<UseGridNavigationRowContextSelf>({\r\n        //rowIsUntabbableBecauseOfGrid: !!untabbable,\r\n        setTabbableRow: rovingTabIndexReturn.setTabbableIndex,\r\n        getTabbableColumn,\r\n        setTabbableColumn\r\n    })\r\n\r\n    return {\r\n        props,\r\n        managedChildrenParameters,\r\n        context: useMemoObject<UseGridNavigationRowContext>({\r\n            gridNavigationRowContext,\r\n            rovingTabIndexContext,\r\n            typeaheadNavigationContext\r\n        }),\r\n        linearNavigationReturn,\r\n        rovingTabIndexReturn,\r\n        typeaheadNavigationReturn\r\n    }\r\n})\r\n\r\n/**\r\n * Child hook for {@link useGridNavigation}\r\n * \r\n * As a row, this hook is responsible for both being a **child** of list navigation, but also a **parent** of list navigation.\r\n * As such, this is one of the most complicated hooks here in terms of dependencies.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useGridNavigationRow = monitored(function useGridNavigationRow<RowElement extends Element, CellElement extends Element>({\r\n    // Stuff for the row as a child of the parent grid\r\n    info: { index, untabbable, ...void3 },\r\n    textContentParameters,\r\n    context: contextFromParent,\r\n\r\n    // Stuff for the row as a parent of child cells\r\n    linearNavigationParameters,\r\n    rovingTabIndexParameters: { untabbable: rowIsUntabbableAndSoAreCells, initiallyTabbedIndex, onTabbableIndexChange, ...void4 },\r\n    managedChildrenReturn,\r\n    typeaheadNavigationParameters,\r\n\r\n    // Both/neither\r\n    refElementReturn,\r\n    ...void1\r\n}: UseGridNavigationRowParameters<RowElement, CellElement, GridChildCellInfo<CellElement>>): UseGridNavigationRowReturnType<RowElement, CellElement> {\r\n    const { getTabbableColumn, setTabbableColumn, setTabbableRow } = contextFromParent.gridNavigationRowContext;\r\n\r\n    const getIndex = useStableCallback(() => { return index })\r\n\r\n    // When this row is focused from the parent's `useRovingTabIndex`,\r\n    // instead of focusing the row element, this function focuses the appropriate cell element.\r\n    const whenThisRowIsFocused = useStableCallback((e: RowElement) => {\r\n        const { getChildren } = managedChildrenReturn;\r\n\r\n        if (contextFromParent.rovingTabIndexContext.getUntabbable()) {\r\n            // If the parent is untabbable, and this row was requested to focus itself (as part of parentFocusSelf),\r\n            // then we focus the parent grid instead of the child cell.\r\n            contextFromParent.rovingTabIndexContext.parentFocusSelf(true);\r\n        }\r\n        else {\r\n            // If the parent is tabbable (normal behavior), \r\n            // then we focus the cell that should be focused in this row.\r\n            let { ideal, actual } = (getTabbableColumn());\r\n\r\n            let index = (ideal ?? 0);\r\n            let child = getChildren().getAt(index);\r\n            let lowestIndex = getChildren().getLowestIndex();\r\n            let highestIndex = getChildren().getHighestIndex();\r\n            while ((!child || child.untabbable) && index > lowestIndex) {\r\n                --index;\r\n                child = getChildren().getAt(index);\r\n            }\r\n            while ((!child || child.untabbable) && index <= highestIndex) {\r\n                ++index;\r\n                child = getChildren().getAt(index);\r\n            }\r\n            if (child) {\r\n                const e = child.getElement()!;\r\n                child.focusSelf(e);\r\n            }\r\n            else {\r\n                focus(e);\r\n            }\r\n        }\r\n    }, []);\r\n    const focusSelf = whenThisRowIsFocused;\r\n\r\n    const {\r\n        props: propsLNC,\r\n        info: { getLocallyTabbable, setLocallyTabbable, ...void2 },\r\n        hasCurrentFocusParameters,\r\n        pressParameters,\r\n        rovingTabIndexChildReturn,\r\n        textContentReturn,\r\n        ...void6\r\n    } = useListNavigationChild<RowElement>({ info: { index, untabbable }, refElementReturn, textContentParameters, context: contextFromParent });\r\n    const allChildCellsAreUntabbable = !rovingTabIndexChildReturn.tabbable;\r\n\r\n    const {\r\n        props: propsLN,\r\n        context: contextULN,\r\n        linearNavigationReturn,\r\n        managedChildrenParameters,\r\n        rovingTabIndexReturn,\r\n        typeaheadNavigationReturn,\r\n        ...void5\r\n    } = useListNavigation<RowElement, CellElement>({\r\n        managedChildrenReturn,\r\n        refElementReturn,\r\n        typeaheadNavigationParameters,\r\n        rearrangeableChildrenReturn: { indexDemangler: identity, indexMangler: identity },\r\n        rovingTabIndexParameters: {\r\n            untabbableBehavior: \"leave-child-focused\",\r\n            focusSelfParent: whenThisRowIsFocused,\r\n            untabbable: allChildCellsAreUntabbable || rowIsUntabbableAndSoAreCells,\r\n            initiallyTabbedIndex,\r\n            onTabbableIndexChange: useStableCallback((v, p, r) => {\r\n                setTabbableColumn({ ideal: v, actual: v }, r);\r\n                onTabbableIndexChange?.(v, p, r);\r\n            })\r\n        },\r\n        linearNavigationParameters: {\r\n            onNavigateLinear: useStableCallback((next, event) => {\r\n                setTabbableColumn(prev => ({ ideal: next, actual: prev?.actual ?? next }), event);\r\n            }),\r\n            disableHomeEndKeys: true,\r\n            pageNavigationSize: 0,\r\n            arrowKeyDirection: \"horizontal\",\r\n            ...linearNavigationParameters\r\n        },\r\n        paginatedChildrenParameters: { paginationMin: null, paginationMax: null }\r\n    });\r\n\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    assertEmptyObject(void6);\r\n\r\n    const { setTabbableIndex } = rovingTabIndexReturn;\r\n\r\n    const gridNavigationCellContext = useMemoObject<UseGridNavigationCellContextSelf>({\r\n        //allChildCellsAreUntabbable,\r\n        setTabbableRow,\r\n        getRowIndex: getIndex,\r\n        getTabbableColumn,\r\n        setTabbableColumn,\r\n        setTabbableCell: setTabbableIndex\r\n    })\r\n\r\n\r\n    // These will often have conflicting values, but we always use -1 for rows no matter what,\r\n    // so instead of negotiating a resolution we can just give a straight answer.\r\n    propsLN.tabIndex = propsLNC.tabIndex = -1;\r\n    const props = useMergedProps(propsLN, propsLNC, {\r\n        // Ensure that if the browser focuses the row for whatever reason, we transfer the focus to a child cell.\r\n        onFocus: useStableCallback(e => whenThisRowIsFocused(e.currentTarget))\r\n    });\r\n\r\n    const contextToChildren = useMemoObject<UseGridNavigationCellContext>({\r\n        gridNavigationCellContext,\r\n        ...contextULN\r\n    });\r\n\r\n    return {\r\n        context: contextToChildren,\r\n        props: useTagProps(props, \"data-use-grid-navigation-partial-row\"),\r\n        info: { focusSelf, getLocallyTabbable, setLocallyTabbable },\r\n        hasCurrentFocusParameters,\r\n        pressParameters,\r\n        rovingTabIndexChildReturn,\r\n        textContentReturn,\r\n        linearNavigationReturn,\r\n        managedChildrenParameters,\r\n        rovingTabIndexReturn,\r\n        typeaheadNavigationReturn\r\n    }\r\n\r\n})\r\n\r\n/**\r\n * Child hook for {@link useGridNavigationRow} (and {@link useGridNavigation}).\r\n * \r\n * @compositeParams\r\n */\r\nexport const useGridNavigationCell = monitored(function useGridNavigationCell<CellElement extends Element>({\r\n    context: {\r\n        gridNavigationCellContext: {\r\n            getRowIndex,\r\n            setTabbableRow,\r\n            getTabbableColumn: _getCurrentColumn,\r\n            setTabbableColumn,\r\n            setTabbableCell,\r\n            ...void4\r\n        },\r\n        rovingTabIndexContext,\r\n        typeaheadNavigationContext,\r\n        ...void5\r\n    },\r\n    info: { index, untabbable, ...void7 },\r\n    refElementReturn,\r\n    textContentParameters,\r\n    gridNavigationCellParameters: {\r\n        colSpan,\r\n        ...void6\r\n    },\r\n    ...void1\r\n}: UseGridNavigationCellParameters<CellElement>): UseGridNavigationCellReturnType<CellElement> {\r\n    colSpan ??= 1;\r\n\r\n    const {\r\n        hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic1, ...void3 },\r\n        rovingTabIndexChildReturn,\r\n        textContentReturn,\r\n        pressParameters,\r\n        props,\r\n        info: infoLs,\r\n        ...void2\r\n    } = useListNavigationChild<CellElement>({\r\n        info: { index, untabbable },\r\n        context: { rovingTabIndexContext, typeaheadNavigationContext },\r\n        textContentParameters,\r\n        refElementReturn,\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    assertEmptyObject(void6);\r\n    assertEmptyObject(void7);\r\n\r\n    return {\r\n        info: infoLs,\r\n        props: useMergedProps(props, { onClick: (e) => setTabbableColumn(prev => ({ ideal: index, actual: (prev?.actual ?? index) }), e) }),\r\n        rovingTabIndexChildReturn,\r\n        textContentReturn,\r\n        pressParameters,\r\n        hasCurrentFocusParameters: {\r\n            onCurrentFocusedInnerChanged: useStableCallback((focused, prev, e) => {\r\n                ocfic1?.(focused, prev, e);\r\n\r\n                if (focused) {\r\n                    setTabbableRow(getRowIndex(), e, false);\r\n                    setTabbableColumn(prev => { return { actual: index, ideal: prev?.ideal ?? index }; }, e);\r\n                    setTabbableCell((prev) => {\r\n                        if (prev != null && (prev < index || prev > index + (colSpan!))) {\r\n                            return prev;\r\n                        }\r\n                        return index;\r\n                    }, e, false);\r\n                }\r\n            })\r\n        },\r\n    }\r\n})","import { UseChildrenHaveFocusReturnType } from \"../../index.js\";\r\nimport { UseManagedChildrenReturnType } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { useState } from \"../../preact-extensions/use-state.js\";\r\nimport { TargetedPick, useCallback, useEffect, useLayoutEffect, useMemo, useRef } from \"../../util/lib.js\";\r\nimport { ElementProps, Nullable } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\nimport { useTagProps } from \"../../util/use-tag-props.js\";\r\nimport { UseLinearNavigationParameters } from \"../keyboard-navigation/use-linear-navigation.js\";\r\nimport { UseRovingTabIndexChildInfo, UseRovingTabIndexReturnType } from \"../keyboard-navigation/use-roving-tabindex.js\";\r\n\r\nexport interface UsePaginatedChildrenInfo<TabbableChildElement extends Element> extends Pick<UseRovingTabIndexChildInfo<TabbableChildElement>, \"index\"> {\r\n    setPaginationVisible(visible: boolean): void;\r\n    setChildCountIfPaginated(count: number): void;\r\n}\r\n\r\nexport interface UsePaginatedChildrenParametersSelf {\r\n    paginationMin: Nullable<number>;\r\n    paginationMax: Nullable<number>;\r\n    childCount: Nullable<number>;\r\n}\r\n\r\nexport interface UsePaginatedChildrenParameters<TabbableChildElement extends Element>\r\n    extends Pick<UseManagedChildrenReturnType<UsePaginatedChildrenInfo<TabbableChildElement>>, \"managedChildrenReturn\">,\r\n    TargetedPick<UseLinearNavigationParameters<any, TabbableChildElement>, \"rearrangeableChildrenReturn\", \"indexDemangler\">,\r\n    TargetedPick<UseChildrenHaveFocusReturnType<TabbableChildElement>, \"childrenHaveFocusReturn\", \"getAnyFocused\">,\r\n    TargetedPick<UseRovingTabIndexReturnType<any, TabbableChildElement>, \"rovingTabIndexReturn\", \"getTabbableIndex\" | \"setTabbableIndex\"> {\r\n    paginatedChildrenParameters: UsePaginatedChildrenParametersSelf;\r\n}\r\n\r\nexport interface UsePaginatedChildContextSelf {\r\n    // UNSTABLE, changes in this will cause the context to re-create itself.\r\n    parentIsPaginated: boolean;\r\n    getDefaultPaginationVisible(i: number): boolean;\r\n}\r\n\r\nexport interface UsePaginatedChildContext {\r\n    paginatedChildContext: UsePaginatedChildContextSelf;\r\n}\r\n\r\nexport interface UsePaginatedChildrenReturnTypeSelf {\r\n\r\n    /**\r\n     * If the values returned by `indexDemangler` change (e.g. when sorting), then this must be called to re-sync everything.\r\n     * \r\n     * @stable\r\n     */\r\n    refreshPagination: (min: Nullable<number>, max: Nullable<number>) => void;\r\n\r\n    /**\r\n     * **IMPORTANT**: This is only tracked when pagination is enabled.\r\n     * \r\n     * If pagination is not enabled, this is either `null` or some undefined previous number.\r\n     */\r\n    //childCount: Nullable<number>;\r\n}\r\n\r\nexport interface UsePaginatedChildrenReturnType /*extends TargetedPick<UseManagedChildrenParameters<any>, \"managedChildrenParameters\", \"onChildrenCountChange\">*/ {\r\n    paginatedChildrenReturn: UsePaginatedChildrenReturnTypeSelf;\r\n\r\n    context: UsePaginatedChildContext;\r\n}\r\n\r\n/**\r\n * Allows children to stop themselves from rendering outside of a narrow range.\r\n * \r\n * @remarks Each child will still render itself, but it is aware of if it is within/outside of the pagination range, and simply return empty.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link usePaginatedChild}\r\n */\r\nexport const usePaginatedChildren = monitored(function usePaginatedChildren<TabbableChildElement extends Element>({\r\n    managedChildrenReturn: { getChildren },\r\n    rearrangeableChildrenReturn: { indexDemangler },\r\n    paginatedChildrenParameters: { paginationMax, paginationMin, childCount },\r\n    rovingTabIndexReturn: { getTabbableIndex, setTabbableIndex },\r\n    childrenHaveFocusReturn: { getAnyFocused }\r\n}: UsePaginatedChildrenParameters<TabbableChildElement>): UsePaginatedChildrenReturnType {\r\n\r\n    const parentIsPaginated = (paginationMin != null || paginationMax != null);\r\n\r\n    const lastPagination = useRef({ paginationMax: null as null | number, paginationMin: null as number | null });\r\n    const refreshPagination = useCallback((paginationMin: Nullable<number>, paginationMax: Nullable<number>) => {\r\n        const childMax = (getChildren().getHighestIndex() + 1);\r\n        const childMin = (getChildren().getLowestIndex());\r\n        for (let i = childMin; i <= childMax; ++i) {\r\n            const visible = (i >= (paginationMin ?? -Infinity) && i < (paginationMax ?? Infinity));\r\n            getChildren().getAt(indexDemangler(i))?.setPaginationVisible(visible);\r\n            if (visible && (paginationMax != null || paginationMin != null))\r\n                getChildren().getAt(indexDemangler(i))?.setChildCountIfPaginated(getChildren().getHighestIndex() + 1);\r\n        }\r\n\r\n    }, [/* Must be empty */])\r\n    useEffect(() => {\r\n        // At this point, the children have not yet updated themselves to match the pagination.\r\n        // We need to tell them to update, but also handle where the focus is.\r\n        // If a current list item is focused, then we need to move focus to a paginated one\r\n        // but we can't do it until they all re-render...\r\n        // TODO: Something better than setTimeout for this, please...\r\n        let tabbableIndex = getTabbableIndex();\r\n        if (tabbableIndex != null) {\r\n            let shouldFocus = getAnyFocused() || false;\r\n\r\n            setTimeout(() => {\r\n\r\n                if (paginationMin != null && tabbableIndex! < paginationMin) {\r\n                    setTabbableIndex(paginationMin, undefined, shouldFocus);   // TODO: This isn't a user interaction, but we need to ensure the old element doesn't remain focused, yeesh.\r\n                }\r\n                else if (paginationMax != null && tabbableIndex! >= paginationMax) {\r\n                    let next: number | null = paginationMax - 1;\r\n                    if (next == -1)\r\n                        next = null;\r\n                    setTabbableIndex(next, undefined, shouldFocus);   // TODO: This isn't a user interaction, but we need to ensure the old element doesn't remain focused, yeesh.\r\n                }\r\n            }, 1)\r\n\r\n        }\r\n\r\n        refreshPagination(paginationMin, paginationMax);\r\n        lastPagination.current.paginationMax = paginationMax ?? null;\r\n        lastPagination.current.paginationMin = paginationMin ?? null;\r\n    }, [paginationMax, paginationMin]);\r\n\r\n    const pmin = useRef(paginationMin);\r\n    const pmax = useRef(paginationMax);\r\n    pmin.current = paginationMin;\r\n    pmax.current = paginationMax;\r\n    const getDefaultPaginationVisible = useCallback((i: number) => { return (i >= (pmin.current ?? -Infinity) && i < (pmax.current ?? Infinity)) }, []);\r\n    const paginatedChildContext = useMemo<UsePaginatedChildContext[\"paginatedChildContext\"]>(() => ({\r\n        parentIsPaginated,\r\n        getDefaultPaginationVisible\r\n    }), [parentIsPaginated]);\r\n\r\n    const getPaginationMin = useStableGetter(paginationMin);\r\n    const getPaginationMax = useStableGetter(paginationMax);\r\n\r\n    useLayoutEffect(() => {\r\n        const paginationMin = getPaginationMin();\r\n        const paginationMax = getPaginationMax();\r\n        const count = childCount ?? 0;\r\n        if (paginationMax != null || paginationMin != null) {\r\n            const min = (paginationMin ?? 0);\r\n            const max = (paginationMax ?? count);\r\n            for (let i = min; i < max; ++i) {\r\n                getChildren().getAt(i)?.setChildCountIfPaginated(count);\r\n            }\r\n        }\r\n    }, [childCount]);\r\n\r\n    return {\r\n        context: useMemo(() => ({ paginatedChildContext }), [paginatedChildContext]),\r\n        paginatedChildrenReturn: { refreshPagination }\r\n    }\r\n})\r\n\r\n\r\n\r\nexport interface UsePaginatedChildParameters {\r\n    info: { index: number; }\r\n    context: UsePaginatedChildContext;\r\n}\r\n\r\nexport interface UsePaginatedChildReturnType<ChildElement extends Element> {\r\n    props: ElementProps<ChildElement>;\r\n    paginatedChildReturn: UsePaginatedChildReturnTypeSelf;\r\n    info: Pick<UsePaginatedChildrenInfo<ChildElement>, \"setPaginationVisible\" | \"setChildCountIfPaginated\">\r\n}\r\n\r\nexport interface UsePaginatedChildReturnTypeSelf {\r\n    //paginatedVisible: boolean;\r\n    /**\r\n     * Whether this child is part of a paginated parent component.\r\n     */\r\n    parentIsPaginated: boolean;\r\n\r\n    /**\r\n     * Whether this child should hide itself because the parent is paginated and this child is outside of the current range.\r\n     */\r\n    hideBecausePaginated: boolean;\r\n}\r\n\r\n/**\r\n * Child hook for {@link usePaginatedChildren}.\r\n * \r\n * @remarks When a child is paginated, it still renders itself (i.e. it calls this hook, so it's rendering),\r\n * so check `hideBecausePaginated` and, if it's true, avoid doing any heavy logic and render with `display: none`.\r\n * \r\n * @compositeParams\r\n */\r\nexport const usePaginatedChild = monitored(function usePaginatedChild<ChildElement extends Element>({ info: { index }, context: { paginatedChildContext: { parentIsPaginated, getDefaultPaginationVisible } } }: UsePaginatedChildParameters): UsePaginatedChildReturnType<ChildElement> {\r\n    const [childCountIfPaginated, setChildCountIfPaginated] = useState(null as number | null);\r\n    const [paginatedVisible, setPaginatedVisible] = useState(parentIsPaginated ? getDefaultPaginationVisible(index) : true);\r\n\r\n    return {\r\n        props: useTagProps(!parentIsPaginated ? {} : (({ \"aria-setsize\": childCountIfPaginated ?? undefined, \"aria-posinset\": (index + 1) } as ElementProps<ChildElement>)), \"data-paginated-children-child\"),\r\n        paginatedChildReturn: { /*paginatedVisible,*/ parentIsPaginated, hideBecausePaginated: parentIsPaginated ? !paginatedVisible : false },\r\n        info: {\r\n            setPaginationVisible: setPaginatedVisible,\r\n            setChildCountIfPaginated\r\n        }\r\n    }\r\n})","import { useRef, useState } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n/**\r\n * Returns a function that will, when called, force the component\r\n * that uses this hook to re-render itself.\r\n * \r\n * @remarks It's a bit smelly, so best to use sparingly.\r\n */\r\nexport const useForceUpdate = monitored(function useForceUpdate() {\r\n    const [, set] = useState(0);\r\n    return useRef(() => set(i => ++i)).current;\r\n})","\r\nimport { useForceUpdate } from \"../../preact-extensions/use-force-update.js\";\r\nimport { ManagedChildInfo, UseManagedChildrenReturnType } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { useEnsureStability } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject, useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { Nullable, TargetedPick, createElement, useCallback, useLayoutEffect, useRef } from \"../../util/lib.js\";\r\nimport { OmitStrong, VNode } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\n\r\n// TODO: This actually pulls in a lot of lodash for, like, one questionably-useful import.\r\nimport { identity, shuffle as lodashShuffle, noop } from \"lodash-es\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface UseRearrangedChildrenContextSelf {\r\n    provideManglers(args: Pick<UseRearrangeableChildrenReturnTypeSelf<any>, \"indexDemangler\" | \"indexMangler\" | \"reverse\" | \"shuffle\" | \"sort\">): void;\r\n}\r\n\r\n/**\r\n * Unusually, this context is not passed from parent to child,\r\n * but from parent to a different parent.\r\n */\r\nexport interface UseRearrangedChildrenContext {\r\n    rearrangeableChildrenContext: UseRearrangedChildrenContextSelf;\r\n}\r\n\r\n\r\n/**\r\n * A parent can call this to provide useRearrangeableChildren with the `context` it expects.\r\n * \r\n * @returns \r\n */\r\nexport function useCreateProcessedChildrenContext(): OmitStrong<UseRearrangeableChildrenReturnTypeSelf<any>, \"children\"> & { context: UseRearrangedChildrenContext } {\r\n    const sortRef = useRef<null | UseRearrangeableChildrenReturnTypeSelf<any>[\"sort\"]>(null);\r\n    const shuffleRef = useRef<null | UseRearrangeableChildrenReturnTypeSelf<any>[\"shuffle\"]>(null);\r\n    const reverseRef = useRef<null | UseRearrangeableChildrenReturnTypeSelf<any>[\"reverse\"]>(null);\r\n    const rearrangeRef = useRef<null | UseRearrangeableChildrenReturnTypeSelf<any>[\"rearrange\"]>(null);\r\n    const indexManglerRef = useRef<null | ((n: number) => number)>(null);\r\n    const indexDemanglerRef = useRef<null | ((n: number) => number)>(null);\r\n    const indexMangler = useStableCallback((i: number) => { return (indexManglerRef.current ?? identity)(i)! }, []);\r\n    const indexDemangler = useStableCallback((i: number) => { return (indexDemanglerRef.current ?? identity)(i)! }, []);\r\n    const sort = useStableCallback<(typeof sortRef)[\"current\"]>((i) => { return (sortRef.current ?? identity)(i)! }, []);\r\n    const shuffle = useStableCallback<(typeof shuffleRef)[\"current\"]>(() => { return (shuffleRef.current ?? identity)()! }, []);\r\n    const reverse = useStableCallback<(typeof reverseRef)[\"current\"]>(() => { return (reverseRef.current ?? identity)()! }, []);\r\n    const rearrange = useStableCallback<(typeof rearrangeRef)[\"current\"]>((original, ordered) => { (rearrangeRef.current ?? noop)(original, ordered)! }, []);\r\n    const provideManglers = useStableCallback<UseRearrangedChildrenContextSelf[\"provideManglers\"]>(({ indexDemangler, indexMangler, reverse, shuffle, sort }) => {\r\n        indexManglerRef.current = indexMangler;\r\n        indexDemanglerRef.current = indexDemangler;\r\n        reverseRef.current = reverse;\r\n        shuffleRef.current = shuffle;\r\n        sortRef.current = sort;\r\n    });\r\n    const rearrangeableChildrenContext = useMemoObject<UseRearrangedChildrenContextSelf>({\r\n        provideManglers\r\n    });\r\n    return {\r\n        context: useMemoObject<UseRearrangedChildrenContext>({ rearrangeableChildrenContext }),\r\n        indexDemangler,\r\n        indexMangler,\r\n        rearrange,\r\n        reverse,\r\n        shuffle,\r\n        sort\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport interface UseRearrangeableChildInfo extends ManagedChildInfo<number> { }\r\n\r\nexport type GetIndex = (row: VNode) => (number | null | undefined);\r\nexport type GetValid = (index: number) => boolean;\r\nexport type GetHighestChildIndex = () => number;\r\nexport type Compare<M extends UseRearrangeableChildInfo> = (lhs: M, rhs: M) => number;\r\n\r\nexport interface UseRearrangeableChildrenParametersSelf<M extends UseRearrangeableChildInfo> {\r\n    /**\r\n     * Controls how values compare against each other when `sort` is called.\r\n     * \r\n     * If null, a default sort is used that assumes `getSortValue` returns a value that works well with the `-` operator (so, like, a number, string, `Date`, `null`, etc.)\r\n     * \r\n     * @param lhs - The first value to compare\r\n     * @param rhs - The second value to compare\r\n     */\r\n    compare: Nullable<Compare<M>>;\r\n\r\n\r\n    /**\r\n     * Because this hook needs to re-render each child with a new `key` prop,\r\n     * it may be useful to apply a transformation before that step completes.\r\n     * \r\n     * @default `identity`\r\n     */\r\n    adjust: Nullable<(input: VNode, data: { mangledIndex: number | null, demangledIndex: number | null }) => VNode | null>;\r\n\r\n    /**\r\n     * This must return the index of this child relative to all its sortable siblings from its `VNode`.\r\n     * \r\n     * @remarks In general, this corresponds to the `index` prop, so something like `vnode => vnode.props.index` is what you're usually looking for.\r\n     * \r\n     * @stable\r\n     */\r\n    getIndex: GetIndex;\r\n\r\n\r\n    /**\r\n     * Called after the children have been rearranged.\r\n     */\r\n    onRearranged: Nullable<(() => void)>;\r\n\r\n    /**\r\n     * The children to sort.\r\n     */\r\n    children: (VNode | null)[];\r\n}\r\n\r\n/**\r\n * All of these functions **MUST** be stable across renders.\r\n */\r\nexport interface UseRearrangeableChildrenParameters<M extends UseRearrangeableChildInfo> extends TargetedPick<UseManagedChildrenReturnType<M>, \"managedChildrenReturn\", \"getChildren\"> {\r\n    rearrangeableChildrenParameters: UseRearrangeableChildrenParametersSelf<M>;\r\n    context: UseRearrangedChildrenContext;\r\n}\r\n\r\n\r\nexport interface UseRearrangeableChildrenReturnType<M extends UseRearrangeableChildInfo> {\r\n    rearrangeableChildrenReturn: UseRearrangeableChildrenReturnTypeSelf<M>;\r\n}\r\n\r\nexport interface UseRearrangeableChildrenReturnTypeSelf<M extends UseRearrangeableChildInfo> {\r\n\r\n    /**\r\n     * Pass an array of not-sorted child information to this function\r\n     * and the children will re-arrange themselves to match.\r\n     * \r\n     * @remarks This is only needed if you are implementing your own sort/reordering algorithm, just call this at the end when you're ready.\r\n     *  \r\n     * @stable\r\n     */\r\n    rearrange: (originalRows: M[], rowsInOrder: M[]) => void;\r\n\r\n    /** \r\n     * Arranges the children in a random order.\r\n     * \r\n     * @stable \r\n     */\r\n    shuffle: () => Promise<void> | void;\r\n\r\n    /** \r\n     * Reverses the order of the children\r\n     * \r\n     * @stable \r\n     */\r\n    reverse: () => Promise<void> | void;\r\n\r\n    /** \r\n     * @stable\r\n     *\r\n     * This function takes a component's original `index` prop and outputs a new index that represents its re-arranged position.\r\n     * In conjunction with `indexDemangler`, this can be used to perform math on indices (incrementing, decrementing, etc.)\r\n     *  \r\n     * E.G. to decrement a component's index \"c\": indexDemangler(indexMangler(c) - 1)\r\n     */\r\n    indexMangler: (n: number) => number;\r\n    /** @stable */\r\n    indexDemangler: (n: number) => number;\r\n\r\n    /**\r\n     * The transformed (i.e. rearranged) children to render.\r\n     */\r\n    children: (VNode | null)[];\r\n\r\n    /** \r\n     * @stable\r\n     * \r\n     * Call to rearrange the children in ascending or descending order according to `compare`.\r\n     * \r\n     */\r\n    sort: (direction: \"ascending\" | \"descending\") => Promise<void> | void;\r\n\r\n    /**\r\n     * Returns an array of each cell's `getSortValue()` result.\r\n     */\r\n    //toJsonArray(transform?: (info: M) => object): object;\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * Hook that allows for the **direct descendant** children of this component to be re-ordered and sorted.\r\n * \r\n * @remarks *This is **separate** from \"managed\" children, which can be any level of child needed! Sortable/rearrangeable children must be **direct descendants** of the parent that uses this hook!*\r\n * \r\n * It's recommended to use this in conjunction with `useListNavigation`; it takes the same `indexMangler` and `indexDemangler` \r\n * functions that this hook returns. `useListNavigation` does not directly use this hook because, as mentioned, \r\n * this hook imposes serious restrictions on child structure, while `useListNavigation` allows anything.\r\n * \r\n * Besides the prop-modifying hook that's returned, the `sort` function that's returned will\r\n * sort all children according to their value from the `getValue` argument you pass in.\r\n * \r\n * If you want to perform some re-ordering operation that's *not* a sort, you can manually\r\n * re-map each child's position using `mangleMap` and `demangleMap`, which convert between\r\n * sorted and unsorted index positions.\r\n * \r\n * Again, unlike some other hooks, **these children must be direct descendants**. This is because\r\n * the prop-modifying hook inspects the given children, then re-creates them with new `key`s.\r\n * Because keys are given special treatment and a child has no way of modifying its own key\r\n * there's no other time or place this can happen other than exactly within the parent component's render function.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useRearrangeableChildren = monitored(function useRearrangeableChildren<M extends UseRearrangeableChildInfo>({\r\n    rearrangeableChildrenParameters: { getIndex, onRearranged, compare: userCompare, children, adjust },\r\n    managedChildrenReturn: { getChildren },\r\n    context: { rearrangeableChildrenContext: { provideManglers } }\r\n}: UseRearrangeableChildrenParameters<M>): UseRearrangeableChildrenReturnType<M> {\r\n    useEnsureStability(\"useRearrangeableChildren\", getIndex);\r\n\r\n    // These are used to keep track of a mapping between unsorted index <---> sorted index.\r\n    // These are needed for navigation with the arrow keys.\r\n    const mangleMap = useRef(new Map<number, number>());\r\n    const demangleMap = useRef(new Map<number, number>());\r\n    const indexMangler = useCallback((n: number) => (mangleMap.current.get(n) ?? n), []);\r\n    const indexDemangler = useCallback((n: number) => (demangleMap.current.get(n) ?? n), []);\r\n    const onRearrangedGetter = useStableGetter(onRearranged);\r\n\r\n    const shuffle = useCallback((): Promise<void> | void => {\r\n        const managedRows = getChildren();\r\n        const originalRows = managedRows._arraySlice();\r\n        const shuffledRows = lodashShuffle(originalRows);\r\n        return rearrange(originalRows, shuffledRows);\r\n    }, [/* Must remain stable */]);\r\n\r\n    const reverse = useCallback((): Promise<void> | void => {\r\n        const managedRows = getChildren();\r\n        const originalRows = managedRows._arraySlice();\r\n        const reversedRows = managedRows._arraySlice().reverse();\r\n        return rearrange(originalRows, reversedRows);\r\n    }, [/* Must remain stable */]);\r\n\r\n\r\n    // The sort function needs to be able to update whoever has all the sortable children.\r\n    // Because that might not be the consumer of *this* hook directly (e.g. a table uses\r\n    // this hook, but it's tbody that actually needs updating), we need to remotely\r\n    // get and set a forceUpdate function.\r\n    const forceUpdateRef = useRef<null | (() => void)>(null);\r\n\r\n    const rearrange = useCallback((originalRows: M[], sortedRows: M[]) => {\r\n\r\n        mangleMap.current.clear();\r\n        demangleMap.current.clear();\r\n\r\n        // Update our sorted <--> unsorted indices map \r\n        // and rerender the whole table, basically\r\n        for (let indexAsSorted = 0; indexAsSorted < sortedRows.length; ++indexAsSorted) {\r\n            if (sortedRows[indexAsSorted]) {\r\n                const indexAsUnsorted = sortedRows[indexAsSorted].index;\r\n\r\n                mangleMap.current.set(indexAsUnsorted, indexAsSorted);\r\n                demangleMap.current.set(indexAsSorted, indexAsUnsorted);\r\n            }\r\n        }\r\n\r\n        onRearrangedGetter()?.();\r\n        forceUpdateRef.current?.();\r\n    }, []);\r\n\r\n    // The actual sort function.\r\n    const getCompare = useStableGetter<Compare<M>>(userCompare ?? defaultCompare);\r\n    const sort = useCallback((direction: \"ascending\" | \"descending\"): Promise<void> | void => {\r\n        const managedRows = getChildren();\r\n        const compare = getCompare();\r\n        const originalRows = managedRows._arraySlice();\r\n\r\n        const sortedRows = compare ? originalRows.sort((lhsRow, rhsRow) => {\r\n\r\n            const lhsValue = lhsRow;\r\n            const rhsValue = rhsRow;\r\n            const result = compare(lhsValue, rhsValue);\r\n            if (direction[0] == \"d\")\r\n                return -result;\r\n            return result;\r\n\r\n        }) : managedRows._arraySlice();\r\n\r\n        return rearrange(originalRows, sortedRows);\r\n\r\n    }, [ /* Must remain stable */]);\r\n\r\n    console.assert(Array.isArray(children));\r\n\r\n    const forceUpdate = useForceUpdate();\r\n    console.assert(forceUpdateRef.current == null || forceUpdateRef.current == forceUpdate);\r\n    forceUpdateRef.current = forceUpdate;    // TODO: Mutation during render? I mean, not really -- it's always the same value...right?\r\n\r\n    let sorted = children\r\n        .slice()\r\n        .map(child => {\r\n            if (process.env.NODE_ENV === 'development' && child) {\r\n                console.assert(getIndex(child) != null, `getIndex(vnode) must return its 0-based numeric index (e.g. its \\`index\\` prop)`);\r\n            }\r\n            const mangledIndex = ((child == null ? null : indexMangler(getIndex(child)!)) ?? null);\r\n            const demangledIndex = ((child == null ? null : getIndex(child))) ?? null;\r\n            return ({\r\n                child,\r\n                sort: mangledIndex ?? -1,\r\n                mangledIndex,\r\n                demangledIndex\r\n            })\r\n        }\r\n        )\r\n        .sort((lhs, rhs) => (lhs.sort - rhs.sort))\r\n        .map(({ child, mangledIndex, demangledIndex }) => {\r\n            // \"data-mangled-index\": mangledIndex, \"data-demangled-index\": demangledIndex\r\n            if (child)\r\n                return ((adjust || identity)(createElement(child.type as any, { ...child.props, key: demangledIndex }), { mangledIndex, demangledIndex })) ?? null\r\n            return null;\r\n        });\r\n\r\n    // The parent useListNavigation uses these for various reasons.\r\n    // If it called useRearrangeableChildren directly, it would have this information,\r\n    // but we're one level deeper in the tree, so once we mount we need to give it to them.\r\n    useLayoutEffect(() => {\r\n        provideManglers({\r\n            indexDemangler,\r\n            indexMangler,\r\n            reverse,\r\n            shuffle,\r\n            sort\r\n        })\r\n    }, [])\r\n\r\n    return {\r\n        rearrangeableChildrenReturn: {\r\n            indexMangler,\r\n            indexDemangler,\r\n            rearrange,\r\n            shuffle,\r\n            reverse,\r\n            sort,\r\n            children: sorted\r\n        }\r\n    };\r\n})\r\n\r\n\r\nfunction defaultCompare(lhs: UseRearrangeableChildInfo | undefined, rhs: UseRearrangeableChildInfo | undefined) {\r\n    return compare1(lhs?.index, rhs?.index);    // TODO: This used to have getSortValue() for a better default, but was also kind of redundant with defaultCompare being overrideable?\r\n\r\n    function compare1(lhs: unknown | undefined, rhs: unknown | undefined) {\r\n        if (lhs == null || rhs == null) {\r\n            if (lhs == null)\r\n                return -1;\r\n            if (rhs == null)\r\n                return 1;\r\n        }\r\n\r\n        return (lhs as any) - (rhs as any);\r\n    }\r\n}\r\n","import { UseRefElementParameters, UseRefElementReturnType } from \"../../dom-helpers/use-ref-element.js\";\r\nimport { UseGenericChildParameters, UseManagedChildrenReturnType } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { returnFalse, returnNull, usePassiveState } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { useState } from \"../../preact-extensions/use-state.js\";\r\nimport { useCallback, useEffect, useMemo, useRef } from \"../../util/lib.js\";\r\nimport { ElementProps, OmitStrong, TargetedPick } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\nimport { useTagProps } from \"../../util/use-tag-props.js\";\r\nimport { UseRovingTabIndexChildInfo } from \"../keyboard-navigation/use-roving-tabindex.js\";\r\n\r\nexport interface UseStaggeredChildrenInfo extends Pick<UseRovingTabIndexChildInfo<any>, \"index\"> {\r\n    //setParentIsStaggered(parentIsStaggered: boolean): void;\r\n    setStaggeredVisible(visible: boolean): void;\r\n    getStaggeredVisible(): boolean;\r\n}\r\n\r\nexport interface UseStaggeredChildrenParametersSelf {\r\n    /**\r\n     * If true, each child will delay rendering itself until the one before it has.\r\n     */\r\n    staggered: boolean;\r\n\r\n    childCount: number | null;\r\n}\r\n\r\nexport interface UseStaggeredChildrenParameters extends\r\n    Pick<UseManagedChildrenReturnType<UseStaggeredChildrenInfo>, \"managedChildrenReturn\">,\r\n    TargetedPick<UseRefElementReturnType<any>, \"refElementReturn\", \"getElement\"> {\r\n    staggeredChildrenParameters: UseStaggeredChildrenParametersSelf;\r\n}\r\n\r\nexport interface UseStaggeredChildContextSelf {\r\n    parentIsStaggered: boolean;\r\n    childCallsThisToTellTheParentToMountTheNextOne(index: number): void;\r\n    //childCallsThisToTellTheParentTheHighestIndex(index: number): void;\r\n    getDefaultStaggeredVisible(i: number): boolean;\r\n    getIntersectionObserver(): IntersectionObserver | null;\r\n    setElementToIndexMap(index: number, element: any): void;\r\n\r\n}\r\n\r\nexport interface UseStaggeredChildContext {\r\n    staggeredChildContext: UseStaggeredChildContextSelf;\r\n}\r\n\r\nexport interface UseStaggeredChildrenReturnType {\r\n    staggeredChildrenReturn: UseStaggeredChildrenReturnTypeSelf;\r\n    context: UseStaggeredChildContext;\r\n}\r\n\r\nexport interface UseStaggeredChildrenReturnTypeSelf {\r\n    /**\r\n     * Whether any children are still waiting to show themselves because of the staggering behavior\r\n     */\r\n    stillStaggering: boolean;\r\n}\r\n\r\n\r\nexport interface UseStaggeredChildParameters extends UseGenericChildParameters<UseStaggeredChildContext, Pick<UseStaggeredChildrenInfo, \"index\">> {\r\n}\r\n\r\nexport interface UseStaggeredChildReturnTypeSelf {\r\n\r\n    /** \r\n     * Whether the parent has indicated that all of its children, including this one, are staggered. \r\n     */\r\n    parentIsStaggered: boolean;\r\n\r\n    /** \r\n     * If this is true, you should delay showing *your* children or running other heavy logic until this becomes false.\r\n     * Can be as simple as `<div>{hideBecauseStaggered? null : children}</div>`\r\n     */\r\n    hideBecauseStaggered: boolean;\r\n\r\n    /**\r\n     * Call this when the child mounts during useEffect (i.e. something like `useEffect(childUseEffect, [childUseEffect])`).\r\n     * \r\n     * This is generally passed to an inner child, if this is the outer child.\r\n     */\r\n    childUseEffect(): void;\r\n}\r\n\r\nexport interface UseStaggeredChildReturnType<ChildElement extends Element> extends TargetedPick<UseRefElementParameters<ChildElement>, \"refElementParameters\", \"onElementChange\"> {\r\n    props: ElementProps<ChildElement>;\r\n    staggeredChildReturn: UseStaggeredChildReturnTypeSelf;\r\n    info: OmitStrong<UseStaggeredChildrenInfo, \"index\">;\r\n}\r\n\r\n\r\n/**\r\n * Allows children to each wait until the previous has finished rendering before itself rendering. \r\n * E.G. Child #3 waits until #2 renders. #2 waits until #1 renders, etc.\r\n * \r\n * @remarks If a child appears on-screen for 100ms then it will be forcibly displayed.\r\n * \r\n * When using the child hook, it's highly recommended to separate out any heavy logic into\r\n * a separate component that won't be rendered until it's de-staggered into visibility.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useStaggeredChild}\r\n */\r\nexport const useStaggeredChildren = monitored(function useStaggeredChildren({\r\n    managedChildrenReturn: { getChildren },\r\n    staggeredChildrenParameters: { staggered, childCount },\r\n    refElementReturn: { getElement }\r\n}: UseStaggeredChildrenParameters): UseStaggeredChildrenReturnType {\r\n\r\n\r\n\r\n    // TODO: Right now, staggering doesn't take into consideration reordering via indexMangler and indexDemangler.\r\n    // This isn't a huge deal because the IntersectionObserver takes care of any holes, but it can look a bit odd\r\n    // until they fill in.\r\n\r\n    const [currentlyStaggering, setCurrentlyStaggering] = useState(staggered);\r\n\r\n    // This is the highest index that we want to show, inclusive.\r\n    const getTargetStaggerIndex = useStableGetter((childCount || 0) - 1);\r\n\r\n    // By default, when a child mounts, we tell the next child to mount and simply repeat.\r\n    // If a child is missing, however, it will break that chain.\r\n    // To guard against that, we also wait for 50ms, and if it hasn't loaded by then, we just continue as if it did.\r\n    const timeoutHandle = useRef(-1);\r\n    const resetEmergencyTimeout = useCallback(() => {\r\n        if (timeoutHandle.current != -1)\r\n            clearTimeout(timeoutHandle.current);\r\n\r\n        // We've gone this long without hearing the next child mount itself...\r\n        // We need to continue.\r\n        timeoutHandle.current = setTimeout(() => {\r\n            // This is split up into two setTimeouts for timing reasons:\r\n            // If it's taking a long time to render a child, it's possible that we'll\r\n            // trip this emergency timeout even though the child renders itself perfectly fine.\r\n            // Due to the way timeouts are ordered, we want to ensure this timeout runs AFTER\r\n            // the component's effect timeout. So we just wait again for a short tick.\r\n            timeoutHandle.current = setTimeout(() => {\r\n                timeoutHandle.current = -1;\r\n                let target = getTargetStaggerIndex();\r\n                setDisplayedStaggerIndex(prev => {\r\n                    let next = Math.min(target || 0, (prev || 0) + 1);\r\n                    while (next <= (getChildCount() || 0) && getChildren().getAt(next)?.getStaggeredVisible() == true)\r\n                        ++next;\r\n                    return next;\r\n                });\r\n            }, 10)\r\n        }, 100)\r\n    }, [/* Must be empty */])\r\n\r\n    // The target index is the index that we're \"animating\" to.\r\n    // Each child simply sets this to the highest value ever seen.\r\n    useEffect(() => {\r\n        // Any time our target changes,\r\n        // ensure our timeout is running, and start a new one if not\r\n        if (timeoutHandle.current == -1) {\r\n            resetEmergencyTimeout();\r\n\r\n            // If there's no timeout running, then that also means we're not waiting for a child to mount.\r\n            // So ask a child to mount and then wait for that child to mount.\r\n            let current = getDisplayedStaggerIndex();\r\n            let next = Math.min(childCount ?? 0, (current ?? 0) + 1);\r\n\r\n            setDisplayedStaggerIndex(next);\r\n        }\r\n    }, [childCount]);\r\n\r\n    const [getDisplayedStaggerIndex, setDisplayedStaggerIndex] = usePassiveState<number | null, never>(useCallback((newIndex: number | null, prevIndex: number | null | undefined) => {\r\n        if (newIndex == null || !s.current) {\r\n            return;\r\n        }\r\n\r\n        setCurrentlyStaggering(newIndex < (getTargetStaggerIndex() ?? 0));\r\n\r\n        // It's time to show the next child,\r\n        // either because the current one finished mounting,\r\n        // or because our emergency backup timeout fired.\r\n        //\r\n        // Either way, tell the next child to show itself.\r\n        // Also make sure that anyone we skipped somehow show themselves as well.\r\n\r\n        // (queueMicrotask prevents warnings if debounceRendering is immediate)\r\n        queueMicrotask(() => {\r\n            for (let i = (prevIndex ?? 0) - 1; i <= newIndex; ++i) {\r\n                getChildren().getAt(i)?.setStaggeredVisible(true);\r\n            }\r\n        });\r\n\r\n        // Set a new emergency timeout\r\n        resetEmergencyTimeout();\r\n\r\n    }, [/* Must be empty */]), returnNull)\r\n\r\n    const parentIsStaggered = (!!staggered);\r\n    const getChildCount = useStableGetter(childCount);\r\n    const childCallsThisToTellTheParentToMountTheNextOne = useCallback((justMountedChildIndex: number) => {\r\n        setDisplayedStaggerIndex(prevIndex => {\r\n            let next = Math.min(\r\n                (getTargetStaggerIndex() ?? 0), // Don't go higher than the highest child\r\n                1 + (Math.max(prevIndex ?? 0, justMountedChildIndex))   // Go one higher than the child that just mounted itself or any previously mounted child (TODO: Is that last bit working as intended?)\r\n            );\r\n            // Skip over any children that have already been made visible ahead\r\n            // (through IntersectionObserver)\r\n            let s = 0;\r\n            while (next < (getChildCount() || 0) && getChildren().getAt(next)?.getStaggeredVisible()) {\r\n                ++next;\r\n                ++s;\r\n            }\r\n\r\n            return next;\r\n        });\r\n    }, []);\r\n\r\n    // TODO: Modification during render (but it's really, really hard to avoid here,\r\n    // but also probably fine because parents render before children? Does that include suspense?)\r\n    const s = useRef(parentIsStaggered);\r\n    s.current = parentIsStaggered;\r\n\r\n    const getDefaultStaggeredVisible = useCallback((i: number) => {\r\n        if (s.current) {\r\n            const staggerIndex = getDisplayedStaggerIndex();\r\n            if (staggerIndex == null)\r\n                return false;\r\n            return i < staggerIndex;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }, []);\r\n\r\n    const intersectionObserver = useRef<IntersectionObserver | null>(null);\r\n    const elementToIndex = useRef(new Map<Element, number>());\r\n    const setElementToIndexMap = useCallback((index: number, element: any) => {\r\n        elementToIndex.current.set(element, index);\r\n    }, [])\r\n\r\n    const getIntersectionObserver = useCallback(() => intersectionObserver.current, []);\r\n    const staggeredChildContext = useMemo<UseStaggeredChildContext[\"staggeredChildContext\"]>(() => ({\r\n        parentIsStaggered,\r\n        childCallsThisToTellTheParentToMountTheNextOne,\r\n        getDefaultStaggeredVisible,\r\n        getIntersectionObserver,\r\n        setElementToIndexMap\r\n    }), [parentIsStaggered]);\r\n\r\n    useEffect(() => {\r\n        const element = getElement();\r\n        const io = intersectionObserver.current = new IntersectionObserver((entries) => {\r\n            for (let entry of entries) {\r\n                if (entry.isIntersecting) {\r\n                    const index = elementToIndex.current.get(entry.target)\r\n                    if (index != null) {\r\n                        getChildren().getAt(index)?.setStaggeredVisible(true);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return () => io.disconnect();\r\n    }, [])\r\n\r\n    return {\r\n        staggeredChildrenReturn: { stillStaggering: currentlyStaggering },\r\n        context: useMemo(() => ({\r\n            staggeredChildContext\r\n        }), [staggeredChildContext]),\r\n    }\r\n})\r\n\r\n\r\n/**\r\n * Child hook for {@link useStaggeredChildren}.\r\n * \r\n * @remarks When a child is staggered, it still renders itself (i.e. it calls this hook, so it's rendering),\r\n * so check `hideBecauseStaggered` and, if it's true, avoid doing any heavy logic. Ideally that kind of heavy\r\n * logic/CSS will be in a sub-child that can be either rendered or not depending on `hideBecauseStaggered`.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useStaggeredChild = monitored(function useStaggeredChild<ChildElement extends Element>({\r\n    info: { index },\r\n    //refElementReturn: { getElement },\r\n    context: { staggeredChildContext: { parentIsStaggered, getDefaultStaggeredVisible, childCallsThisToTellTheParentToMountTheNextOne, getIntersectionObserver, setElementToIndexMap } }\r\n}: UseStaggeredChildParameters): UseStaggeredChildReturnType<ChildElement> {\r\n    const [staggeredVisible, setStaggeredVisible, getStaggeredVisible] = useState(getDefaultStaggeredVisible(index));\r\n\r\n    // Controls whether we ask the parent to start mounting children after us.\r\n    // (We don't ask when the child becomes visible due to screen-scrolling,\r\n    // only when it becomes visible because we were next in line to do so)\r\n    const becauseScreen = useRef(false);\r\n\r\n    const [getOnScreen, setOnScreen] = usePassiveState<boolean, any>(useStableCallback((next, prev, reason) => {\r\n\r\n        if (staggeredVisible)\r\n            return;\r\n\r\n        if (next) {\r\n            const io = getIntersectionObserver();\r\n            io?.unobserve(e.current!);\r\n\r\n            setStaggeredVisible(true);\r\n            becauseScreen.current = true;\r\n        }\r\n    }), returnFalse);\r\n\r\n    // This isn't called during useEffect here, because we want to wait for the\r\n    // \"heavier processing\" child to render, instead of us (the \"ligher pre-processing\" child).\r\n    // So we return the effect we want to run and let the caller run it as appropriate.\r\n    // (In theory this could be returned as, like, useStaggeredChildChild instead but I really don't wanna do that)\r\n    const childUseEffect = useCallback(() => {\r\n        if (!becauseScreen.current && (parentIsStaggered && staggeredVisible)) {\r\n            if ((parentIsStaggered && staggeredVisible)) {\r\n                childCallsThisToTellTheParentToMountTheNextOne(index);\r\n            }\r\n            else if (!parentIsStaggered) {\r\n                // Ensure that if we mount unstaggered and change to staggered, we start at the end\r\n                childCallsThisToTellTheParentToMountTheNextOne(index);\r\n            }\r\n        }\r\n    }, [index, (parentIsStaggered && staggeredVisible)])\r\n\r\n    // This is the element that the IntersectionObserver will watch.\r\n    const e = useRef<Element | null>(null);\r\n    \r\n    return {\r\n        props: useTagProps(!parentIsStaggered ? {} : { \"aria-busy\": (!staggeredVisible).toString() } as {}, \"data-staggered-children-child\"),\r\n        staggeredChildReturn: { parentIsStaggered, hideBecauseStaggered: parentIsStaggered ? !staggeredVisible : false, childUseEffect },\r\n        info: { setStaggeredVisible, getStaggeredVisible },\r\n        refElementParameters: {\r\n            onElementChange: useStableCallback((element) => {\r\n                setElementToIndexMap(index, element);\r\n                e.current = (element || e.current);\r\n                const io = getIntersectionObserver();\r\n                if (e.current) {\r\n                    io?.observe(e.current);\r\n                }\r\n                else {\r\n                    io?.unobserve(e.current!);\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n","import { useMergedProps } from \"../../dom-helpers/use-merged-props.js\";\r\nimport { UseChildrenHaveFocusReturnTypeSelf, UseRefElementReturnTypeSelf } from \"../../index.js\";\r\nimport { ManagedChildren, UseGenericChildParameters, UseManagedChildParameters, UseManagedChildReturnType, UseManagedChildrenContext, UseManagedChildrenParameters, useManagedChild, useManagedChildren } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { OmitStrong, TargetedOmit } from \"../../util/lib.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\nimport { UseRovingTabIndexReturnTypeSelf } from \"../keyboard-navigation/use-roving-tabindex.js\";\r\nimport { UsePaginatedChildContext, UsePaginatedChildParameters, UsePaginatedChildReturnType, UsePaginatedChildrenInfo, UsePaginatedChildrenParameters, UsePaginatedChildrenReturnType, usePaginatedChild, usePaginatedChildren } from \"./use-paginated-children.js\";\r\nimport { UseRearrangeableChildInfo, UseRearrangeableChildrenParameters, UseRearrangeableChildrenReturnType, UseRearrangedChildrenContext, useRearrangeableChildren } from \"./use-rearrangeable-children.js\";\r\nimport { UseStaggeredChildContext, UseStaggeredChildReturnType, UseStaggeredChildrenInfo, UseStaggeredChildrenParameters, UseStaggeredChildrenReturnType, useStaggeredChild, useStaggeredChildren } from \"./use-staggered-children.js\";\r\n\r\nexport interface UseProcessedChildrenReturnType<TabbableChildElement extends Element, M extends UseProcessedChildInfo<TabbableChildElement>> extends\r\n    OmitStrong<UseRearrangeableChildrenReturnType<M>, never>,\r\n    OmitStrong<UseStaggeredChildrenReturnType, never>,\r\n    OmitStrong<UsePaginatedChildrenReturnType, never> {\r\n    context: UseProcessedChildContext<TabbableChildElement, M>;\r\n}\r\n\r\n// These are the info parameters required by useRovingTabIndexChild specifically\r\nexport type UseProcessedChildInfoKeysParameters = \"index\";\r\n// These are the info parameters provided by useRovingTabIndexChild specifically\r\nexport type UseProcessedChildInfoKeysReturnType = \"setLocallyTabbable\" | \"getLocallyTabbable\";\r\n\r\nexport interface UseProcessedChildParameters<TabbableChildElement extends Element, M extends UseProcessedChildInfo<TabbableChildElement>> extends\r\n    UseGenericChildParameters<UseProcessedChildContext<TabbableChildElement, M>, Pick<M, UseProcessedChildInfoKeysParameters>>,\r\n    Pick<UsePaginatedChildParameters, never>,\r\n    Pick<UseManagedChildParameters<M>, never> {\r\n}\r\n\r\nexport interface UseProcessedChildContext<TabbableChildElement extends Element, M extends UseProcessedChildInfo<TabbableChildElement>> extends\r\n    UsePaginatedChildContext,\r\n    UseStaggeredChildContext,\r\n    UseManagedChildrenContext<M> { }\r\n\r\nexport interface UseProcessedChildReturnType<TabbableChildElement extends Element, M extends UseProcessedChildInfo<TabbableChildElement>> extends\r\n    OmitStrong<UsePaginatedChildReturnType<TabbableChildElement>, \"info\">,\r\n    OmitStrong<UseStaggeredChildReturnType<TabbableChildElement>, \"info\" | \"props\">,\r\n    Pick<UseManagedChildReturnType<M>, \"managedChildReturn\"> {\r\n}\r\n\r\nexport interface UseProcessedChildInfo<TabbableChildElement extends Element> extends UseRearrangeableChildInfo, UsePaginatedChildrenInfo<TabbableChildElement>, UseStaggeredChildrenInfo {\r\n\r\n}\r\n\r\nexport interface UseProcessedChildrenContext extends UseRearrangedChildrenContext {\r\n    processedChildrenContext: Pick<UseRovingTabIndexReturnTypeSelf, \"getTabbableIndex\" | \"setTabbableIndex\"> & Pick<UseChildrenHaveFocusReturnTypeSelf, \"getAnyFocused\"> & Pick<UseRefElementReturnTypeSelf<any>, \"getElement\">;\r\n}\r\n\r\n/**\r\n * All of these functions **MUST** be stable across renders.\r\n */\r\nexport interface UseProcessedChildrenParameters<TabbableChildElement extends Element, M extends UseRearrangeableChildInfo> extends\r\n    OmitStrong<UseRearrangeableChildrenParameters<M>, \"managedChildrenReturn\">,\r\n    OmitStrong<UseStaggeredChildrenParameters, \"managedChildrenReturn\" | \"staggeredChildrenParameters\">,\r\n    TargetedOmit<UseStaggeredChildrenParameters, \"staggeredChildrenParameters\", \"childCount\">,\r\n    Pick<UseManagedChildrenParameters<M>, \"managedChildrenParameters\">,\r\n    TargetedOmit<UsePaginatedChildrenParameters<TabbableChildElement>, \"paginatedChildrenParameters\", \"childCount\"> {\r\n    context: UseProcessedChildrenContext;\r\n}\r\n\r\n/**\r\n * Hook that allows for optimization (staggering, pagination) and rearranging (sorting, shuffling, etc.) of large arrays of children.\r\n * \r\n * @remarks This is separate from `useManagedChildren` (and its descendants, like `useListNavigation), \r\n * but takes advantage of its flexibility (especially with its allowing for \"holes\" of missing children) \r\n * to prevent all children from rendering at once on mount.\r\n * \r\n * Staggering and pagination exists because no matter how well optimized your CSS and Javascript for each child is,\r\n * eventually some number of children will cause jank when mounting them all at once. Considering that maybe 1% of them\r\n * will actually be visible at first within the screen, with the other 99% wasting time doing things off-screen, it makes\r\n * sense to only show what's necessary at first, and delay as much as possible.\r\n * \r\n * If you're loading a dynamic list of data, where you don't know the length in advance \r\n * (but that it could be more than, say, 30 - 50 at any point), \r\n * this is all but essential for a good user experience.\r\n * \r\n * * 100 children without staggering/pagination is \"start to feel jank on mobile\"\r\n * * 1000 children without staggering/pagination is \"start to feel jank on desktop\"\r\n * * 10000 children staggered/paginated is \"start to feel jank on desktop\"\r\n * * 100000 children is \"you're probably out of memory\"\r\n * \r\n * <br />\r\n * \r\n * Additionally, this hook allows for reorganization of its children. A default `sort` and `shuffle` are provided,\r\n * but you can implement any arbitrary reordering.\r\n * \r\n * <br />\r\n * \r\n * The main limitation of this hook is that, unlike hooks that use/derive from `useManagedChildren` \r\n * (in which children can arbitrarily be anywhere descendant in the tree), children here ***must***\r\n * be in a single, sequential array (gaps are still fine).\r\n * \r\n * This is separate from `useListNavigation` and friends for performance reasons -- if a child is\r\n * hidden because it's paginated out or not staggered in yet, then we want to avoid running the normal\r\n * child list logic (which is as fast as possible, but still only so fast).\r\n * \r\n * Similarly, it can be useful for the children to be in a separate component for performance reasons, which\r\n * is another reason to separate this logic from `useListNavigation`.\r\n * \r\n * Finally, `useListNavigation` imposes no requirements on how your children are laid out in the DOM, but\r\n * this hook **requires** all children be in one contiguous array.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useProcessedChild}\r\n */\r\nexport const useProcessedChildren = monitored(function useProcessedChildren<TabbableChildElement extends Element, M extends UseProcessedChildInfo<TabbableChildElement>>({\r\n    rearrangeableChildrenParameters: { onRearranged, children: childrenUnsorted, ...rearrangeableChildrenParameters },\r\n    paginatedChildrenParameters,\r\n    staggeredChildrenParameters,\r\n    context,\r\n    managedChildrenParameters\r\n}: UseProcessedChildrenParameters<TabbableChildElement, M>): UseProcessedChildrenReturnType<TabbableChildElement, M> {\r\n\r\n    const childCount = childrenUnsorted.length;\r\n    const { paginationMax, paginationMin } = paginatedChildrenParameters;\r\n    const { staggered } = staggeredChildrenParameters;\r\n\r\n    const { context: { managedChildContext }, managedChildrenReturn } = useManagedChildren<M>({ managedChildrenParameters, })\r\n\r\n    const { rearrangeableChildrenReturn } = useRearrangeableChildren<M>({\r\n        rearrangeableChildrenParameters: {\r\n            onRearranged: useStableCallback(() => { refreshPagination(paginationMin, paginationMax); onRearranged?.(); }),\r\n            children: childrenUnsorted,\r\n            ...rearrangeableChildrenParameters,\r\n        },\r\n        managedChildrenReturn,\r\n        context\r\n    });\r\n\r\n    const {\r\n        paginatedChildrenReturn,\r\n        paginatedChildrenReturn: { refreshPagination },\r\n        context: { paginatedChildContext }\r\n    }: UsePaginatedChildrenReturnType = usePaginatedChildren<TabbableChildElement>({\r\n        managedChildrenReturn: { getChildren: useStableCallback(() => managedChildContext.getChildren()) },\r\n        rovingTabIndexReturn: context.processedChildrenContext,\r\n        childrenHaveFocusReturn: context.processedChildrenContext,\r\n        paginatedChildrenParameters: { paginationMax, paginationMin, childCount },\r\n        rearrangeableChildrenReturn,\r\n    });\r\n\r\n    const {\r\n        context: { staggeredChildContext },\r\n        staggeredChildrenReturn\r\n    }: UseStaggeredChildrenReturnType = useStaggeredChildren({\r\n        managedChildrenReturn: { getChildren: useStableCallback((): ManagedChildren<M> => managedChildContext.getChildren()) },\r\n        staggeredChildrenParameters: { staggered, childCount },\r\n        refElementReturn: { getElement: context.processedChildrenContext.getElement }\r\n    });\r\n\r\n    return {\r\n        rearrangeableChildrenReturn,\r\n        staggeredChildrenReturn,\r\n        paginatedChildrenReturn,\r\n        context: useMemoObject<UseProcessedChildContext<TabbableChildElement, M>>({\r\n            staggeredChildContext,\r\n            paginatedChildContext,\r\n            managedChildContext\r\n        })\r\n    };\r\n});\r\n\r\nexport const useProcessedChild = monitored(function useProcessedChild<TabbableChildElement extends Element, M extends UseProcessedChildInfo<TabbableChildElement>>({\r\n    context,\r\n    info: { index, ...uinfo },\r\n}: UseProcessedChildParameters<TabbableChildElement, M>): UseProcessedChildReturnType<TabbableChildElement, M> {\r\n    const { paginatedChildContext, staggeredChildContext } = context;\r\n    const { info: { setChildCountIfPaginated, setPaginationVisible }, paginatedChildReturn, props: propsPaginated } = usePaginatedChild<TabbableChildElement>({ context: { paginatedChildContext }, info: { index } });\r\n    const { info: { setStaggeredVisible, getStaggeredVisible }, staggeredChildReturn, props: propsStaggered, refElementParameters } = useStaggeredChild<TabbableChildElement>({ context: { staggeredChildContext }, info: { index } });\r\n    const { managedChildReturn } = useManagedChild<M>({\r\n        context,\r\n        info: {\r\n            index,\r\n            setChildCountIfPaginated,\r\n            setPaginationVisible,\r\n            setStaggeredVisible,\r\n            getStaggeredVisible,\r\n            ...uinfo\r\n        } as M\r\n    });\r\n\r\n    const propsRet = useMergedProps<TabbableChildElement>(propsStaggered, propsPaginated);\r\n\r\n    return {\r\n        props: propsRet,\r\n        managedChildReturn,\r\n        paginatedChildReturn,\r\n        staggeredChildReturn,\r\n        refElementParameters\r\n    }\r\n})\r\n","\r\nimport { PressEventReason, UsePressParameters } from \"../../component-use/use-press.js\";\r\nimport { useGlobalHandler } from \"../../dom-helpers/use-event-handler.js\";\r\nimport { UseChildrenHaveFocusParameters, UseChildrenHaveFocusReturnType } from \"../../observers/use-children-have-focus.js\";\r\nimport { UseHasCurrentFocusParameters } from \"../../observers/use-has-current-focus.js\";\r\nimport { UseGenericChildParameters, UseManagedChildrenReturnType } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { OnPassiveStateChange, returnFalse, returnTrue } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject, useStableGetter } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { useState } from \"../../preact-extensions/use-state.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { EnhancedEventHandler, TargetedEnhancedEvent, enhanceEvent } from \"../../util/event.js\";\r\nimport { focus } from \"../../util/focus.js\";\r\nimport { useCallback, useEffect, useLayoutEffect, useRef } from \"../../util/lib.js\";\r\nimport { ElementProps, EventType, FocusEventType, KeyboardEventType, Nullable, OmitStrong, TargetedOmit, TargetedPick } from \"../../util/types.js\";\r\nimport { UseRovingTabIndexChildInfo } from \"../keyboard-navigation/use-roving-tabindex.js\";\r\n\r\nexport type MultiSelectChildChangeHandler = EnhancedEventHandler<Event, { multiSelected: boolean; }>;\r\nexport type MultiSelectChildChangeEvent = TargetedEnhancedEvent<Event, { multiSelected: boolean; }>;\r\n\r\nexport type MultiSelectionChangeEvent = TargetedEnhancedEvent<EventType<any, any>, { selectedPercent: number; selectedIndices: Set<number>; }>;\r\n\r\nexport interface UseMultiSelectionContextSelf extends Pick<UseMultiSelectionParametersSelf, \"multiSelectionAriaPropName\" | \"multiSelectionMode\"> {\r\n    notifyParentOfChildSelectChange(event: EventType<any, any>, childIndex: number, selected: boolean | undefined, previous: boolean | undefined): void;\r\n    /**\r\n     * When the user presses Shift+Space or Ctrl+Space (depending on selectionMode),\r\n     * all the items since the last selected item are toggled,\r\n     * so the child in question needs to be able to track that.\r\n     */\r\n    doContiguousSelection(event: EventType<any, any>, endIndex: number): void;\r\n\r\n    /**\r\n     * Mostly used for when focus-mode selects something (because by default it deselects everything else)\r\n     */\r\n    changeAllChildren: (event: EventType<any, any>, shouldBeSelected: (index: number) => boolean) => void;\r\n\r\n    getCtrlKeyDown(): boolean;\r\n    getShiftKeyDown(): boolean;\r\n\r\n    getAnyFocused(): boolean;\r\n}\r\nexport interface UseMultiSelectionContext {\r\n    multiSelectionContext: UseMultiSelectionContextSelf;\r\n}\r\n\r\nexport interface UseMultiSelectionChildInfo<E extends Element> extends UseRovingTabIndexChildInfo<E> {\r\n    /**\r\n     * When the parent changes all children (generally because of CTRL+A, focus-selection mode, etc.)\r\n     * it needs to change all the child checkboxes at once.\r\n     * It calls this function to do so.\r\n     * \r\n     * TODO: This should be a promise because\r\n     * 1) It might take time for a child to change its state\r\n     * 2) It might be impossible for a child to change itself, which is neatly represented as a rejected promise.\r\n     * \r\n     * But that propagates all the way to linear navigation, which is sync... \r\n     * (and for good reasons, cause navigation shouldn't be slowed down by sending data to a server or something)\r\n     */\r\n    setSelectedFromParent(event: EventType<any, any>, selected: boolean): void;\r\n\r\n    getMultiSelected(): boolean;\r\n\r\n    getMultiSelectionDisabled(): boolean;\r\n}\r\n\r\nexport interface UseMultiSelectionParameters<M extends UseMultiSelectionChildInfo<any>> extends\r\n    TargetedPick<UseChildrenHaveFocusReturnType<any>, \"childrenHaveFocusReturn\", \"getAnyFocused\">,\r\n    TargetedPick<UseManagedChildrenReturnType<M>, \"managedChildrenReturn\", \"getChildren\"> {\r\n    multiSelectionParameters: UseMultiSelectionParametersSelf;\r\n}\r\n\r\nexport interface UseMultiSelectionReturnTypeSelf {\r\n}\r\n\r\nexport interface UseMultiSelectionReturnType<ParentElement extends Element, ChildElement extends Element> extends\r\n    TargetedPick<UseChildrenHaveFocusParameters<ChildElement>, \"childrenHaveFocusParameters\", \"onCompositeFocusChange\"> {\r\n    context: UseMultiSelectionContext;\r\n    multiSelectionReturn: UseMultiSelectionReturnTypeSelf;\r\n    propsStable: ElementProps<ParentElement>\r\n}\r\n\r\nexport type UseMultiSelectionChildInfoKeysParameters = \"index\";\r\nexport type UseMultiSelectionChildInfoKeysReturnType = \"setSelectedFromParent\" | \"getMultiSelected\" | \"getMultiSelectionDisabled\";\r\n\r\nexport interface UseMultiSelectionParametersSelf {\r\n    onSelectionChange: Nullable<(e: MultiSelectionChangeEvent) => void>;\r\n\r\n\r\n    /**\r\n     * What causes a child to become selected? \r\n     * \r\n     * @remarks **`\"focus\"`** is **strongly** discouraged, even though it behaves like a native HTML element (e.g. like `<select size=10>`).\r\n     * \r\n     * Notably, in `\"focus\"` mode, it can be difficult to tell the difference between multi-select and single-select unless you already know that this is a multi-select control.\r\n     * \r\n     * Keyboard controls in `\"activation\"` mode don't differ strongly from the usual conventions of \"navigate to a thing, press Space to activate it\".\r\n     * However, because the `\"focus\"` mode controls are extremely unintuitive, all controls are documented here:\r\n     * \r\n     * ```md-literal\r\n     * \r\n     * * In either mode, navigation/selection has the usual keyboard controls (arrow keys, space/enter, page up/down, home/end, mouse clicks, pointer events, etc.)\r\n     * * In either mode, <kbd>Ctrl</kbd>+<kbd>A</kbd> will select all items.\r\n     * * In either mode, holding <kbd>Shift</kbd> while changing selection will extend the current selection to include the new item and any items in between.\r\n     * * Exclusive to `\"focus\"` mode:\r\n     *     * Navigating to a new item will automatically select it.\r\n     *         * To navigate **without** selecting a new item, hold <kbd>Ctrl</kbd>.\r\n     *             * Any item navigated to in this way can be selected by pressing <kbd>Space</kbd>/<kbd>Enter</kbd> as usual, but...\r\n     *     * Selecting a new item (whether via navigation or pressing <kbd>Space</kbd> or <kbd>Enter</kbd>) will **deselect all other items** unless <kbd>Ctrl</kbd> is held.\r\n     * ```\r\n     */\r\n    multiSelectionMode: \"focus\" | \"activation\" | \"disabled\";\r\n\r\n    /**\r\n     * What property will be used to mark this item as selected.\r\n     * \r\n     * TODO: No compelling use-case for aria-current in multi-select? Just in case: | `current-${\"page\" | \"step\" | \"date\" | \"time\" | \"location\" | \"true\"}`\r\n     */\r\n    multiSelectionAriaPropName: Nullable<`aria-${\"pressed\" | \"selected\" | \"checked\"}`>;\r\n}\r\nexport interface UseMultiSelectionChildParameters<E extends Element, M extends UseMultiSelectionChildInfo<E>> extends\r\n    UseGenericChildParameters<UseMultiSelectionContext, Pick<M, UseMultiSelectionChildInfoKeysParameters>> {\r\n\r\n    multiSelectionChildParameters: UseMultiSelectionChildParametersSelf<E>;\r\n    context: UseMultiSelectionContext;\r\n}\r\nexport interface UseMultiSelectionChildParametersSelf<E extends Element> {\r\n    /** \r\n     * Called when the child is requesting to change whether it's selected or not (generally because the user clicked it)\r\n     * \r\n     * @remarks To comply with the child's request, you should either:\r\n     * \r\n     * ```md-literal\r\n     * * Change the `selected` parameter to true (probably by calling `setState` somewhere) if this is declaratively controlled (most cases).\r\n     * * Call `changeSelected`, if this is imperatively controlled.\r\n     * ```\r\n     */\r\n    onMultiSelectChange: Nullable<(e: MultiSelectChildChangeEvent) => void>;\r\n\r\n    initiallyMultiSelected: boolean;\r\n\r\n\r\n\r\n\r\n    /** When true, this child cannot be selected via multi-select, either by focusing it or by clicking it. */\r\n    multiSelectionDisabled: boolean;\r\n}\r\n\r\nexport interface UseMultiSelectionChildReturnType<E extends Element, M extends UseMultiSelectionChildInfo<E>> extends\r\n    TargetedPick<UsePressParameters<any>, \"pressParameters\", \"onPressSync\">,\r\n    TargetedPick<UseHasCurrentFocusParameters<any>, \"hasCurrentFocusParameters\", \"onCurrentFocusedInnerChanged\"> {\r\n    multiSelectionChildReturn: UseMultiSelectionChildReturnTypeSelf;\r\n    props: ElementProps<E>;\r\n    info: Pick<M, UseMultiSelectionChildInfoKeysReturnType>;\r\n}\r\n\r\nexport interface UseMultiSelectionChildReturnTypeSelf extends Pick<Required<UseMultiSelectionContextSelf>, \"multiSelectionMode\"> {\r\n    /**\r\n     * @stable\r\n     */\r\n    changeMultiSelected(event: EventType<any, any>, selected: boolean): void;\r\n\r\n    /**\r\n     * Indicates that this child is selected, according to itself.\r\n     */\r\n    multiSelected: boolean;\r\n\r\n    /**\r\n     * @stable\r\n     */\r\n    getMultiSelected(): boolean;\r\n}\r\n\r\n/**\r\n * Allows a parent to track the changes made to multi-selection children.\r\n * \r\n * @remarks Beyond just giving each child the ability to track its own selected state, the parent can change all children at once. \r\n * Pressing <kbd>Ctrl</kbd>+<kbd>A</kbd> will select all children, for example.\r\n * \r\n * This is not exclusive with {@link useSingleSelection}, you can use both at once if you have a use case for it.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useMultiSelectionChild}\r\n */\r\nexport function useMultiSelection<ParentOrChildElement extends Element, ChildElement extends Element>({\r\n    multiSelectionParameters: { onSelectionChange, multiSelectionAriaPropName, multiSelectionMode, ...void3 },\r\n    managedChildrenReturn: { getChildren, ...void1 },\r\n    childrenHaveFocusReturn: { getAnyFocused, ...void4 },\r\n    ...void2\r\n}: UseMultiSelectionParameters<UseMultiSelectionChildInfo<any>>): UseMultiSelectionReturnType<ParentOrChildElement, ChildElement> {\r\n\r\n    // By having both we get the total number of children for free, even if there are holes in the array.\r\n    // TODO: useManagedChildren should do that by default??\r\n    const selectedIndices = useRef(new Set<number>());\r\n    const unselectedIndices = useRef(new Set<number>());\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n\r\n    const startOfShiftSelect = useRef<number | null>(null);\r\n\r\n    // Why these are needed:\r\n    // When in focus mode, there's no way to determine whether these keys are held down during the focus event.\r\n    // That's all. Wow.\r\n    let shiftKeyHeld = useRef(false);\r\n    let ctrlKeyHeld = useRef(false);\r\n\r\n    // When a child changes selection state, it calls this function.\r\n    const notifyParentOfChildSelectChange = useStableCallback((event: EventType<any, any>, index: number, selected: boolean | undefined, previous: boolean | undefined) => {\r\n        console.assert(selected != previous);\r\n\r\n        if (selected == undefined) {\r\n            // This child is unmounting itself.\r\n            if (previous === true) {\r\n                console.assert(selectedIndices.current.has(index), `The selected child at index ${index} is unmounting itself, but the parent was unaware of it being selected.`);\r\n                selectedIndices.current.delete(index);\r\n            }\r\n            else if (previous === false) {\r\n                console.assert(unselectedIndices.current.has(index), `The selected child at index ${index} is unmounting itself, but the parent was unaware of it being selected.`);\r\n                unselectedIndices.current.delete(index);\r\n            }\r\n            else {\r\n                console.assert(false, `The child at index ${index} was not selected or unselected but a secret third thing: ${selected}`);\r\n            }\r\n        }\r\n        else if (selected) {\r\n            if (previous != undefined) {\r\n                console.assert(unselectedIndices.current.has(index), `The multi-select child at index ${index} changed to selected even though it was not unselected before, somehow.`);\r\n                unselectedIndices.current.delete(index);\r\n            }\r\n            console.assert(!selectedIndices.current.has(index), `The multi-select child at index ${index} changed to selected even though there is already a selected child with that index.`)\r\n            selectedIndices.current.add(index);\r\n            startOfShiftSelect.current = index;\r\n        }\r\n        else {\r\n            if (previous != undefined) {\r\n                console.assert(selectedIndices.current.has(index), `The multi-select child at index ${index} changed to unselected even though it was not selected before, somehow.`);\r\n                selectedIndices.current.delete(index);\r\n            }\r\n            console.assert(!unselectedIndices.current.has(index), `The multi-select child at index ${index} was marked as unselected even though there is already an unselected child with that index.`)\r\n            unselectedIndices.current.add(index);\r\n        }\r\n\r\n        const childCount = (selectedIndices.current.size + unselectedIndices.current.size);\r\n        const selectedPercent = (childCount == 0 ? 0 : (selectedIndices.current.size / (childCount)));\r\n        console.assert(selectedPercent >= 0 && selectedPercent <= 1);\r\n\r\n        onSelectionChange?.(enhanceEvent(event, { selectedPercent, selectedIndices: selectedIndices.current }));\r\n    });\r\n\r\n    const changeAllChildren = useStableCallback((event: EventType<any, any>, shouldBeSelected: (index: number) => boolean) => {\r\n        getChildren().forEach(child => {\r\n            if (!child.getMultiSelectionDisabled()) {\r\n                child.setSelectedFromParent(event, shouldBeSelected(child.index));\r\n            }\r\n        })\r\n    });\r\n\r\n    const doContiguousSelection = useStableCallback((event: KeyboardEventType<any>, endIndex: number) => {\r\n        let originalEnd = endIndex;\r\n\r\n        let temp = 0;\r\n        let startIndex = startOfShiftSelect.current || 0;   // TODO: Is || 0 correct here? Probably, right?\r\n        if (startIndex <= endIndex) {\r\n            // Never include the child that started this contiguous selection, only the children beyond it.\r\n            ++startIndex;\r\n        }\r\n        else {\r\n            // Never include the child that started(/ended) this contiguous selection, only the children beyond it.\r\n            --startIndex;\r\n            temp = endIndex;\r\n            endIndex = startIndex;\r\n            startIndex = temp;\r\n        }\r\n\r\n        console.assert(startIndex <= endIndex);\r\n        if (startIndex <= endIndex) {\r\n\r\n            changeAllChildren(event, (childIndex) => {\r\n                if (childIndex >= startIndex && childIndex <= endIndex) {\r\n                    // If this child is within the range, toggle it.\r\n                    return !getChildren().getAt(childIndex)?.getMultiSelected();\r\n                }\r\n                else {\r\n                    return !!getChildren().getAt(childIndex)?.getMultiSelected();\r\n                }\r\n            });\r\n        }\r\n\r\n        startOfShiftSelect.current = originalEnd;\r\n    });\r\n\r\n    const onCompositeFocusChange = useStableCallback<OnPassiveStateChange<boolean, FocusEventType<ChildElement> | undefined>>((anyFocused, prevAnyFocused, event) => {\r\n        if (!anyFocused) {\r\n            ctrlKeyHeld.current = shiftKeyHeld.current = false;\r\n        }\r\n    });\r\n\r\n    let nextCtrlAIsUndo = useRef(false);\r\n\r\n    useGlobalHandler(document, \"keydown\", useStableCallback((e: KeyboardEvent) => {\r\n        shiftKeyHeld.current = (e.shiftKey || e.key == 'Shift');\r\n        ctrlKeyHeld.current = (e.ctrlKey || e.key == 'Control');\r\n        // Only do CTRL+A handling if the control is focused\r\n        if (getAnyFocused()) {\r\n            // Listen for CTRL+A\r\n            if (e.code == \"KeyA\" && e.ctrlKey && !e.repeat) {\r\n                // Only perform this logic if multi-selection is enabled\r\n                if (multiSelectionMode != \"disabled\") {\r\n                    changeAllChildren(e, !nextCtrlAIsUndo.current ? returnTrue : returnFalse);\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n\r\n                    // TODO: This should update in more places\r\n                    nextCtrlAIsUndo.current = !nextCtrlAIsUndo.current;\r\n                }\r\n            }\r\n        }\r\n    }), { capture: true });\r\n\r\n    useGlobalHandler(document, \"keyup\", (e: KeyboardEvent) => {\r\n        if (e.key == 'Shift')\r\n            shiftKeyHeld.current = false;\r\n        if (e.key == 'Control')\r\n            ctrlKeyHeld.current = false;\r\n    }, { passive: true, capture: true });\r\n\r\n    return {\r\n        context: useMemoObject({\r\n            multiSelectionContext: useMemoObject<UseMultiSelectionContextSelf>({\r\n                doContiguousSelection,\r\n                notifyParentOfChildSelectChange,\r\n                multiSelectionAriaPropName,\r\n                multiSelectionMode,\r\n                changeAllChildren,\r\n                getCtrlKeyDown: useCallback(() => ctrlKeyHeld.current, []),\r\n                getShiftKeyDown: useCallback(() => shiftKeyHeld.current, []),\r\n                getAnyFocused\r\n            })\r\n        }),\r\n        childrenHaveFocusParameters: { onCompositeFocusChange },\r\n        multiSelectionReturn: {},\r\n        propsStable: useMemoObject({})\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @compositeParams\r\n */\r\nexport function useMultiSelectionChild<E extends Element>({\r\n    info: { index, ...void4 },\r\n    multiSelectionChildParameters: {\r\n        initiallyMultiSelected,\r\n        onMultiSelectChange,\r\n        multiSelectionDisabled,\r\n        ...void1\r\n    },\r\n    context: {\r\n        multiSelectionContext: {\r\n            notifyParentOfChildSelectChange,\r\n            multiSelectionAriaPropName,\r\n            multiSelectionMode,\r\n            doContiguousSelection,\r\n            changeAllChildren,\r\n            getCtrlKeyDown,\r\n            getShiftKeyDown,\r\n            getAnyFocused,\r\n            ...void5\r\n        },\r\n        ...void3\r\n    },\r\n    ...void2\r\n}: UseMultiSelectionChildParameters<E, UseMultiSelectionChildInfo<E>>): UseMultiSelectionChildReturnType<E, UseMultiSelectionChildInfo<E>> {\r\n\r\n    // When we're in focus-selection mode, focusing any child deselects everything and selects JUST that child.\r\n    // But that's really annoying for when you tab into the component, so it's only enabled when you're navigating WITHIN the component\r\n    // (e.g. we only do that \"reset everything\" selection stuff when the component already had focus and that focus simply moved to a different child)\r\n    // The exception is press events, because a click can come from anywhere, focusing a child even if focus is elsewhere (or the window doesn't even have focus!)\r\n    // So when a press event happens during focus-selection mode, we disable the disabling with this flag.\r\n    const pressFreebie = useRef(false);\r\n\r\n\r\n    const onPressSync = (e: PressEventReason<E>) => {\r\n        if (!multiSelectionDisabled) {\r\n            if (multiSelectionMode == \"activation\") {\r\n                if (e.shiftKey) {\r\n                    doContiguousSelection(e, index);\r\n                }\r\n                else {\r\n                    onMultiSelectChange?.(enhanceEvent(e, { multiSelected: !getLocalSelected() }));\r\n                }\r\n            }\r\n            else {\r\n                if (e.ctrlKey) {\r\n                    onMultiSelectChange?.(enhanceEvent(e, { multiSelected: !getLocalSelected() }));\r\n                }\r\n                else {\r\n                    pressFreebie.current = true;\r\n                    focus(e.currentTarget);\r\n                    onCurrentFocusedInnerChanged(true, false, e as any);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const [localSelected, setLocalSelected, getLocalSelected] = useState(initiallyMultiSelected ?? false);\r\n\r\n    const changeMultiSelected = useStableCallback((e: EventType<any, any>, selected: boolean) => {\r\n        console.assert(selected != null);\r\n        console.assert(!multiSelectionDisabled);\r\n        // We're selected now (because someone told us we are, this hook doesn't call this function directly)\r\n        //\r\n        // So update our own internal state so we can re-render with the correct props,\r\n        // and also notify the parent (in case the parent is listening for changes in some way)\r\n        let prevSelected = getLocalSelected();\r\n        if (prevSelected != selected) {\r\n            setLocalSelected(selected);\r\n            notifyParentOfChildSelectChange(e, index, selected, prevSelected);\r\n        }\r\n    });\r\n\r\n    const multiSelectIsEnabled = (multiSelectionMode != 'disabled');\r\n    useLayoutEffect(() => {\r\n        if (multiSelectIsEnabled) {\r\n            notifyParentOfChildSelectChange(null!, index, getLocalSelected(), undefined);\r\n            return () => notifyParentOfChildSelectChange(null!, index, undefined, getLocalSelected());\r\n        }\r\n    }, [index, multiSelectIsEnabled])\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    const onCurrentFocusedInnerChanged = useStableCallback<OnPassiveStateChange<boolean, FocusEventType<any> | undefined>>((focused, prev, event) => {\r\n        if (focused) {\r\n            if (multiSelectionMode == \"focus\") {\r\n                let any = getAnyFocused();\r\n                console.log(\"any focused: \", any);\r\n\r\n                // Wow, it's the worst selection mode.\r\n                const subSelectionMode = (getShiftKeyDown() ? \"toggle\" : getCtrlKeyDown() ? \"skip\" : \"set\");\r\n                let newIndex = index;\r\n\r\n                switch (subSelectionMode) {\r\n                    case \"set\":\r\n                        if (any || pressFreebie.current) {\r\n                            changeAllChildren(event!, index => (index == newIndex));\r\n                        }\r\n                        break;\r\n                    case \"toggle\":\r\n                        doContiguousSelection(event!, index);\r\n                        //onMultiSelectChange?.(enhanceEvent(event, { multiSelected: !localSelected }));\r\n                        //doContiguousSelection\r\n                        //setSelectedFromParent(event!, getLocalSelected())\r\n                        break;\r\n                    case \"skip\":\r\n                        debugger;\r\n                        break;\r\n                }\r\n\r\n                /*if (getShiftKeyDown()) {\r\n                    onMultiSelectChange?.(enhanceEvent(event, { multiSelected: !localSelected }));\r\n                }\r\n                else {\r\n                    changeAllChildren(event!, i => (i == index));\r\n                }*/\r\n            }\r\n        }\r\n        pressFreebie.current = false;\r\n    });\r\n\r\n    const setSelectedFromParent = useStableCallback((event: EventType<any, any>, multiSelected: boolean) => {\r\n        console.assert(onMultiSelectChange != null);\r\n        onMultiSelectChange?.(enhanceEvent(event, { multiSelected }));\r\n    })\r\n\r\n    return {\r\n        multiSelectionChildReturn: {\r\n            changeMultiSelected,\r\n            multiSelected: localSelected,\r\n            getMultiSelected: getLocalSelected,\r\n            multiSelectionMode\r\n        },\r\n        pressParameters: {\r\n            onPressSync\r\n        },\r\n        hasCurrentFocusParameters: {\r\n            onCurrentFocusedInnerChanged\r\n        },\r\n        props: { [multiSelectionAriaPropName || \"aria-selected\"]: multiSelectionMode == \"disabled\" ? undefined : (localSelected ? \"true\" : \"false\") },\r\n        info: {\r\n            getMultiSelected: getLocalSelected,\r\n            setSelectedFromParent,\r\n            getMultiSelectionDisabled: useStableGetter(multiSelectionDisabled)\r\n        }\r\n    }\r\n}\r\n\r\nexport interface UseMultiSelectionChildDeclarativeReturnType<E extends Element, M extends UseMultiSelectionChildInfo<E>> extends\r\n    TargetedPick<UseMultiSelectionChildParameters<E, M>, \"multiSelectionChildParameters\", \"onMultiSelectChange\"> {\r\n    info: Pick<M, \"setSelectedFromParent\">;\r\n}\r\n\r\nexport interface UseMultiSelectionChildDeclarativeParameters<E extends Element, M extends UseMultiSelectionChildInfo<E>> extends\r\n    TargetedPick<UseMultiSelectionChildReturnType<E, M>, \"multiSelectionChildReturn\", \"changeMultiSelected\"> {\r\n    multiSelectionChildDeclarativeParameters: {\r\n        multiSelected: boolean;\r\n        onMultiSelectedChange: Nullable<(e: MultiSelectChildChangeEvent) => void>;\r\n    }\r\n}\r\n\r\n\r\nexport type MakeMultiSelectionChildDeclarativeParameters<P extends UseMultiSelectionChildParameters<any, any>> = OmitStrong<P, \"multiSelectionChildParameters\"> & UseMultiSelectionChildDeclarativeParameters<any, any> & TargetedPick<UseMultiSelectionChildParameters<any, any>, \"multiSelectionChildParameters\", never>;\r\nexport type MakeMultiSelectionChildDeclarativeReturnType<R extends UseMultiSelectionChildReturnType<any, any>> = OmitStrong<R, \"multiSelectionChildReturn\"> & TargetedOmit<UseMultiSelectionChildReturnType<any, any>, \"multiSelectionChildReturn\", \"changeMultiSelected\">;\r\n\r\n/**\r\n * \r\n * @compositeParams\r\n */\r\nexport function useMultiSelectionChildDeclarative<E extends Element>({\r\n    multiSelectionChildDeclarativeParameters: { onMultiSelectedChange, multiSelected, ...void3 },\r\n    multiSelectionChildReturn: { changeMultiSelected, ...void2 },\r\n    ...void1\r\n}: UseMultiSelectionChildDeclarativeParameters<E, UseMultiSelectionChildInfo<E>>): UseMultiSelectionChildDeclarativeReturnType<E, UseMultiSelectionChildInfo<E>> {\r\n    let s = (multiSelected || false);\r\n    let reasonRef = useRef<MultiSelectChildChangeEvent | undefined>(undefined);\r\n    useEffect(() => {\r\n        changeMultiSelected(reasonRef.current!, s);\r\n    }, [s]);\r\n\r\n    const omsc = useStableCallback<NonNullable<UseMultiSelectionChildParametersSelf<E>[\"onMultiSelectChange\"]>>((e) => {\r\n        reasonRef.current = e;\r\n        return onMultiSelectedChange?.(e);\r\n    });\r\n\r\n    const setSelectedFromParent = useStableCallback((event: EventType<any, any>, multiSelected: boolean) => {\r\n        onMultiSelectedChange?.(enhanceEvent(event, { multiSelected }));\r\n    })\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n\r\n    return {\r\n        multiSelectionChildParameters: {\r\n            onMultiSelectChange: omsc\r\n        },\r\n        info: { setSelectedFromParent }\r\n    }\r\n}\r\n","\r\nimport { noop } from \"lodash-es\";\r\nimport { PressEventReason, UsePressParameters } from \"../../component-use/use-press.js\";\r\nimport { UseChildrenHaveFocusChildReturnType, UseChildrenHaveFocusParameters } from \"../../observers/use-children-have-focus.js\";\r\nimport { UseGenericChildParameters, UseManagedChildrenReturnType, useChildrenFlag } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { OnPassiveStateChange, PassiveStateUpdater, useEnsureStability } from \"../../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { useState } from \"../../preact-extensions/use-state.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { EnhancedEventHandler, TargetedEnhancedEvent, enhanceEvent } from \"../../util/event.js\";\r\nimport { focus } from \"../../util/focus.js\";\r\nimport { RequiredN, TargetedOmit } from \"../../util/lib-shared.js\";\r\nimport { EventType, TargetedPick, useCallback, useEffect, useRef } from \"../../util/lib.js\";\r\nimport { ElementProps, Nullable } from \"../../util/types.js\";\r\nimport { monitored } from \"../../util/use-call-count.js\";\r\nimport { useTagProps } from \"../../util/use-tag-props.js\";\r\nimport { UseRovingTabIndexChildInfo, UseRovingTabIndexReturnType } from \"../keyboard-navigation/use-roving-tabindex.js\";\r\n\r\n/** Anything that's selectable must be tabbable, so we DO use rovingTabIndex instead of just managedChildren */\r\nexport interface UseSingleSelectionChildInfo<E extends Element> extends UseRovingTabIndexChildInfo<E> {\r\n    singleSelected: boolean;\r\n    getSingleSelected(): boolean;\r\n    /**\r\n     * The parent calls this to change the child's local state.\r\n     * \r\n     * When the `selectedIndex` changes, the relevant children's `setLocalSelected` are called (max of 2).\r\n     * \r\n     * @param selected - This is the selected child (out of all of them)\r\n     * @param direction - How far to the `selectedIndex` this child is\r\n     */\r\n    setLocalSingleSelected(selected: boolean, direction: number | null): void;\r\n\r\n    /**\r\n     * This is similar to `untabbable` for `useRovingTabIndex`, but for selection.\r\n     * \r\n     * Disables selecting this child. Being `untabbable` must imply being `unselectable`, but you can of course have something that's unselectable but not untabbable.\r\n     */\r\n    //unselectable: boolean;\r\n}\r\n\r\nexport type SelectedIndexChangeHandler = EnhancedEventHandler<Event, { selectedIndex: number }>;\r\nexport type SelectedIndexChangeEvent = TargetedEnhancedEvent<Event, { selectedIndex: number }>;\r\n\r\nexport interface UseSingleSelectionParametersSelf {\r\n    /**\r\n     * This is imperative, as opposed to declarative, \r\n     * to save on re-rendering the parent whenever the selected index changes.\r\n     */\r\n    initiallySingleSelectedIndex: Nullable<number>;\r\n\r\n    /**\r\n     * Called when a child is selected (via a press or other method).\r\n     * \r\n     * If this component is declaratively controlled (with e.g. `useSingleSelectionDeclarative`),\r\n     * then you should use this to `setState` somewhere that'll change your `selectedIndex`.\r\n     * \r\n     * If this component is imperatively controlled, then you should hook this up to the\r\n     * returned `changeSelectedIndex` function to have the desired change occur.\r\n     * \r\n     * In general, this should only be `null` when single selection is entirely disabled.\r\n     * \r\n     * @nonstable\r\n     */\r\n    onSingleSelectedIndexChange: Nullable<SelectedIndexChangeHandler>; // ((index: number | null, reason: Event | undefined) => void);\r\n\r\n\r\n    /**\r\n     * What causes a child to become selected?\r\n     * \r\n     * In general, `\"focus\"` is preferred (and also implies `\"activation\"` for iOS devices that may or may not focus anything ever),\r\n     * especially when the change can be seen immediately and there is no consequence for doing so, like with tabs and sometimes radio buttons too.\r\n     * \r\n     * When this is `\"disabled\"`, all single-selection behavior is turned off, allowing for multi-selection, or no selection.\r\n     */\r\n    singleSelectionMode: \"focus\" | \"activation\" | \"disabled\";\r\n\r\n    /**\r\n     * What property will be used to mark this item as selected.\r\n     * \r\n     * **IMPORTANT**: The `aria-current` options should be used with caution as they are semantically very different from the usual selection cases.\r\n     * \r\n     * This is ignored if `selectionMode` is set to `\"disabled\"`.\r\n     */\r\n    singleSelectionAriaPropName: Nullable<`aria-${\"pressed\" | \"selected\" | \"checked\" | `current-${\"page\" | \"step\" | \"date\" | \"time\" | \"location\" | \"true\"}`}`>;\r\n\r\n}\r\n\r\nexport interface UseSingleSelectionReturnTypeSelf {\r\n    /**\r\n     * A function that, when called, internally updates the selected index to the one you provide,\r\n     * and tells the relevant children that they are/are not selected.\r\n     * \r\n     * If you are creating an imperative component, this is what how you can force the value to change in response to something.\r\n     * \r\n     * If you are creating a declarative component, this is what you call in `useEffect` when your `selectedIndex` changes.\r\n     * \r\n     * @stable\r\n     */\r\n    changeSingleSelectedIndex: PassiveStateUpdater<number | null, SelectedIndexChangeEvent>;\r\n\r\n    /**\r\n     * @stable\r\n     */\r\n    getSingleSelectedIndex(): number | null;\r\n}\r\n\r\nexport interface UseSingleSelectionChildReturnTypeSelf extends Pick<Required<SingleSelectionContextSelf>, \"singleSelectionMode\"> {\r\n    // These two are already available as managedChild info,\r\n    // but we're keeping them because RTI does the same thing, and it's convenient (info is kinda semi-private).\r\n\r\n    /**\r\n     * Is this child currently the selected child among all its siblings?\r\n     */\r\n    singleSelected: boolean;\r\n\r\n    /** @stable */\r\n    getSingleSelected(): boolean;\r\n\r\n    /**\r\n     * Any time `selected` changes to or from being visible, this will represent the direction and magnitude of the change.\r\n     * \r\n     * It will never be zero; when `selected` is `true`, then this will be the most recently-used offset.\r\n     * \r\n     * This useful for things like animations or transitions.\r\n     */\r\n    singleSelectedOffset: Nullable<number>;\r\n\r\n    /** @stable */\r\n    getSingleSelectedOffset: () => (number | null);\r\n}\r\n\r\nexport interface UseSingleSelectionParameters<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseSingleSelectionChildInfo<ChildElement>> extends\r\n    TargetedPick<UseManagedChildrenReturnType<M>, \"managedChildrenReturn\", \"getChildren\">,\r\n    TargetedPick<UseRovingTabIndexReturnType<ParentOrChildElement, ChildElement>, \"rovingTabIndexReturn\", \"setTabbableIndex\"> {\r\n    singleSelectionParameters: UseSingleSelectionParametersSelf;\r\n}\r\n\r\nexport type UseSingleSelectionChildInfoKeysParameters = \"index\" | \"untabbable\";\r\nexport type UseSingleSelectionChildInfoKeysReturnType = \"getSingleSelected\" | \"setLocalSingleSelected\" | \"singleSelected\";\r\n\r\nexport interface UseSingleSelectionChildParametersSelf {\r\n    /** When true, this child cannot be selected via single-select, either by focusing it or by clicking it. */\r\n    singleSelectionDisabled: boolean;\r\n}\r\n\r\nexport interface UseSingleSelectionChildParameters<E extends Element, M extends UseSingleSelectionChildInfo<E>> extends\r\n    UseGenericChildParameters<UseSingleSelectionContext, Pick<M, UseSingleSelectionChildInfoKeysParameters>> {\r\n    singleSelectionChildParameters: UseSingleSelectionChildParametersSelf;\r\n}\r\n\r\n\r\nexport interface UseSingleSelectionChildReturnType<E extends Element, M extends UseSingleSelectionChildInfo<E>> extends UseChildrenHaveFocusChildReturnType<E>, TargetedPick<UsePressParameters<any>, \"pressParameters\", \"onPressSync\"> {\r\n    props: ElementProps<E>;\r\n\r\n    info: Pick<M, UseSingleSelectionChildInfoKeysReturnType>;\r\n\r\n    singleSelectionChildReturn: UseSingleSelectionChildReturnTypeSelf;\r\n}\r\n\r\nexport interface UseSingleSelectionReturnType<ChildElement extends Element> extends TargetedPick<UseChildrenHaveFocusParameters<ChildElement>, \"childrenHaveFocusParameters\", \"onCompositeFocusChange\"> {\r\n    singleSelectionReturn: UseSingleSelectionReturnTypeSelf;\r\n    context: UseSingleSelectionContext;\r\n}\r\n\r\nexport interface SingleSelectionContextSelf extends RequiredN<Pick<UseSingleSelectionParametersSelf, \"singleSelectionMode\" | \"onSingleSelectedIndexChange\">>, Pick<UseSingleSelectionParametersSelf, \"singleSelectionAriaPropName\"> {\r\n    getSingleSelectedIndex(): number | null;\r\n}\r\n\r\nexport interface UseSingleSelectionContext {\r\n    singleSelectionContext: SingleSelectionContextSelf;\r\n}\r\n\r\n/**\r\n * Allows a single child among all children to be the \"selected\" child (which can be different from the \"focused\" child).\r\n * \r\n * @remarks If you need multi-select instead of single-select and you're using this hook (e.g. as part of {@link useCompleteListNavigation}), you can disable the single-selection behavior either by setting the selected index to `null` or.\r\n * \r\n * @hasChild {@link useSingleSelectionChild}\r\n * \r\n * @compositeParams\r\n */\r\nexport const useSingleSelection = monitored(function useSingleSelection<ParentOrChildElement extends Element, ChildElement extends Element>({\r\n    managedChildrenReturn: { getChildren, ...void1 },\r\n    rovingTabIndexReturn: { setTabbableIndex, ...void2 },\r\n    singleSelectionParameters: { onSingleSelectedIndexChange: onSelectedIndexChange_U, initiallySingleSelectedIndex, singleSelectionAriaPropName, singleSelectionMode, ...void3 },\r\n    ...void4\r\n}: UseSingleSelectionParameters<ParentOrChildElement, ChildElement, UseSingleSelectionChildInfo<ChildElement>>): UseSingleSelectionReturnType<ChildElement> {\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n\r\n    type R = Event;\r\n    const onSingleSelectedIndexChange = useStableCallback(onSelectedIndexChange_U ?? noop);\r\n\r\n    const getSelectedAt = useCallback((m: UseSingleSelectionChildInfo<ChildElement>) => { return m.getSingleSelected(); }, []);\r\n    const setSelectedAt = useCallback((m: UseSingleSelectionChildInfo<ChildElement>, t: boolean, newSelectedIndex: number | null, prevSelectedIndex: number | null) => {\r\n        if (m.untabbable) {\r\n            console.assert(false);\r\n        }\r\n        const directionComparison = (newSelectedIndex == m.index ? prevSelectedIndex : newSelectedIndex);\r\n        const direction = (directionComparison == null ? null : (m.index - directionComparison));\r\n        if (newSelectedIndex == null)\r\n            console.assert(t == false);\r\n        if (t)\r\n            console.assert(newSelectedIndex === m.index);\r\n\r\n        m.setLocalSingleSelected(t, direction);\r\n    }, []);\r\n    const isSelectedValid = useCallback((m: UseSingleSelectionChildInfo<ChildElement>) => { return !m.untabbable; }, []);\r\n\r\n    const {\r\n        changeIndex: changeSingleSelectedIndex,\r\n        getCurrentIndex: getSingleSelectedIndex\r\n    } = useChildrenFlag<UseSingleSelectionChildInfo<ChildElement>, R>({\r\n        getChildren,\r\n        onIndexChange: null,\r\n        initialIndex: initiallySingleSelectedIndex,\r\n        getAt: getSelectedAt,\r\n        setAt: setSelectedAt,\r\n        isValid: isSelectedValid,\r\n        closestFit: false,\r\n        onClosestFit: null\r\n    });\r\n    return {\r\n        singleSelectionReturn: useMemoObject({\r\n            getSingleSelectedIndex,\r\n            changeSingleSelectedIndex\r\n        }),\r\n        context: useMemoObject({\r\n            singleSelectionContext: useMemoObject<SingleSelectionContextSelf>({\r\n                getSingleSelectedIndex,\r\n                onSingleSelectedIndexChange,\r\n                singleSelectionAriaPropName,\r\n                singleSelectionMode\r\n            }),\r\n        }),\r\n        childrenHaveFocusParameters: {\r\n            onCompositeFocusChange: useStableCallback((anyFocused, prev, reason) => {\r\n                if (!anyFocused) {\r\n                    const selectedIndex = getSingleSelectedIndex();\r\n                    if (selectedIndex != null)\r\n                        setTabbableIndex(selectedIndex, reason, false);\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\n\r\n/**\r\n * \r\n * \r\n * @compositeParams\r\n */\r\nexport const useSingleSelectionChild = monitored(function useSingleSelectionChild<ChildElement extends Element>({\r\n    singleSelectionChildParameters: { singleSelectionDisabled, ...void5 },\r\n    context: { singleSelectionContext: { getSingleSelectedIndex, onSingleSelectedIndexChange, singleSelectionAriaPropName: ariaPropName, singleSelectionMode, ...void1 }, ...void2 },\r\n    info: { index, untabbable, ...void3 },\r\n    ...void4\r\n}: UseSingleSelectionChildParameters<ChildElement, UseSingleSelectionChildInfo<ChildElement>>): UseSingleSelectionChildReturnType<ChildElement, UseSingleSelectionChildInfo<ChildElement>> {\r\n    type R = EventType<any, any>;\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n\r\n    useEnsureStability(\"useSingleSelectionChild\", getSingleSelectedIndex, onSingleSelectedIndexChange);\r\n\r\n    const [localSelected, setLocalSelected, getLocalSelected] = useState(getSingleSelectedIndex() == index);\r\n    const [direction, setDirection, getDirection] = useState(getSingleSelectedIndex() == null ? null : (getSingleSelectedIndex()! - index));\r\n\r\n    const onCurrentFocusedInnerChanged = useStableCallback<OnPassiveStateChange<boolean, R | undefined>>((focused, _prev, e) => {\r\n        if (!singleSelectionDisabled && singleSelectionMode == 'focus' && focused && !untabbable) {\r\n            onSingleSelectedIndexChange(enhanceEvent(e, { selectedIndex: index }));\r\n        }\r\n    });\r\n\r\n    const onPressSync = useStableCallback((e: PressEventReason<any>) => {\r\n        // We allow press events for selectionMode == 'focus' because\r\n        // press generally causes a focus anyway (except when it doesn't, iOS Safari...)\r\n        if (!singleSelectionDisabled && !untabbable) {\r\n            if (singleSelectionMode == 'activation')\r\n                onSingleSelectedIndexChange(enhanceEvent(e, { selectedIndex: index }));\r\n        }\r\n        else {\r\n            focus(e.currentTarget);\r\n        }\r\n    });\r\n\r\n    const propParts = ariaPropName?.split(\"-\") ?? [];\r\n\r\n    return {\r\n        info: {\r\n            setLocalSingleSelected: useStableCallback((selected, direction) => {\r\n                setLocalSelected(selected);\r\n                setDirection(direction);\r\n            }),\r\n            getSingleSelected: getLocalSelected,\r\n            singleSelected: localSelected,\r\n        },\r\n        singleSelectionChildReturn: {\r\n            singleSelected: localSelected,\r\n            getSingleSelected: getLocalSelected,\r\n            singleSelectedOffset: direction,\r\n            singleSelectionMode,\r\n            getSingleSelectedOffset: getDirection\r\n        },\r\n        props: useTagProps(ariaPropName == null || singleSelectionMode == \"disabled\" ? {} : {\r\n            [`${propParts[0]}-${propParts[1]}`]: (localSelected ? (propParts[1] == \"current\" ? `${propParts[2]}` : `true`) : \"false\")\r\n        }, \"data-single-selection-child\"),\r\n        hasCurrentFocusParameters: { onCurrentFocusedInnerChanged },\r\n        pressParameters: { onPressSync }\r\n    }\r\n})\r\n\r\nexport interface UseSingleSelectionDeclarativeParametersSelf extends Pick<UseSingleSelectionParametersSelf, \"onSingleSelectedIndexChange\"> {\r\n    singleSelectedIndex: Nullable<number>;\r\n}\r\n\r\nexport interface UseSingleSelectionDeclarativeParameters<ChildElement extends Element> extends TargetedPick<UseSingleSelectionReturnType<ChildElement>, \"singleSelectionReturn\", \"changeSingleSelectedIndex\"> {\r\n    singleSelectionDeclarativeParameters: UseSingleSelectionDeclarativeParametersSelf;\r\n}\r\n\r\nexport type MakeSingleSelectionDeclarativeParameters<P> = Omit<P, \"singleSelectionParameters\"> & UseSingleSelectionDeclarativeParameters<any> & TargetedPick<UseSingleSelectionParameters<any, any, any>, \"singleSelectionParameters\", \"singleSelectionAriaPropName\" | \"singleSelectionMode\">;\r\nexport type MakeSingleSelectionDeclarativeReturnType<R> = Omit<R, \"singleSelectionReturn\"> & TargetedOmit<UseSingleSelectionReturnType<any>, \"singleSelectionReturn\", \"changeSingleSelectedIndex\">;\r\n\r\n/**\r\n * Let's face it, declarative is nicer to use than imperative, so this is a shortcut.\r\n */\r\nexport function useSingleSelectionDeclarative<ParentOrChildElement extends Element, ChildElement extends Element>({\r\n    singleSelectionReturn: { changeSingleSelectedIndex },\r\n    singleSelectionDeclarativeParameters: { singleSelectedIndex, onSingleSelectedIndexChange }\r\n}: UseSingleSelectionDeclarativeParameters<ChildElement>) {\r\n    let s = (singleSelectedIndex ?? null);\r\n    let reasonRef = useRef<SelectedIndexChangeEvent | undefined>(undefined);\r\n    useEffect(() => { changeSingleSelectedIndex(s, reasonRef.current!); }, [s]);\r\n\r\n    const osic = useCallback<NonNullable<UseSingleSelectionParametersSelf[\"onSingleSelectedIndexChange\"]>>((e) => {\r\n        reasonRef.current = e;\r\n        return onSingleSelectedIndexChange?.(e);\r\n    }, [onSingleSelectedIndexChange]);\r\n\r\n    return { singleSelectionParameters: { onSingleSelectedIndexChange: osic } satisfies Pick<UseSingleSelectionParameters<ParentOrChildElement, ChildElement, UseSingleSelectionChildInfo<ChildElement>>[\"singleSelectionParameters\"], \"onSingleSelectedIndexChange\"> }\r\n}\r\n\r\n","import { useMergedProps } from \"../../dom-helpers/use-merged-props.js\";\r\nimport { UseGenericChildParameters } from \"../../preact-extensions/use-managed-children.js\";\r\nimport { useStableCallback } from \"../../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../../util/assert.js\";\r\nimport { ExtendMerge, OmitStrong } from \"../../util/types.js\";\r\nimport { MakeMultiSelectionChildDeclarativeParameters, MakeMultiSelectionChildDeclarativeReturnType, UseMultiSelectionChildDeclarativeParameters, UseMultiSelectionChildInfo, UseMultiSelectionChildInfoKeysParameters, UseMultiSelectionChildInfoKeysReturnType, UseMultiSelectionChildParameters, UseMultiSelectionChildReturnType, UseMultiSelectionContext, UseMultiSelectionParameters, UseMultiSelectionReturnType, useMultiSelection, useMultiSelectionChild, useMultiSelectionChildDeclarative } from \"./use-multi-selection.js\";\r\nimport { MakeSingleSelectionDeclarativeParameters, MakeSingleSelectionDeclarativeReturnType, UseSingleSelectionChildInfo, UseSingleSelectionChildInfoKeysParameters, UseSingleSelectionChildInfoKeysReturnType, UseSingleSelectionChildParameters, UseSingleSelectionChildReturnType, UseSingleSelectionContext, UseSingleSelectionDeclarativeParameters, UseSingleSelectionParameters, UseSingleSelectionReturnType, useSingleSelection, useSingleSelectionChild, useSingleSelectionDeclarative } from \"./use-single-selection.js\";\r\n\r\n\r\nexport interface UseSelectionChildInfo<E extends Element> extends UseSingleSelectionChildInfo<E>, UseMultiSelectionChildInfo<E> { }\r\nexport type UseSelectionChildInfoKeysParameters = UseSingleSelectionChildInfoKeysParameters | UseMultiSelectionChildInfoKeysParameters;\r\nexport type UseSelectionChildInfoKeysReturnType = UseSingleSelectionChildInfoKeysReturnType | UseMultiSelectionChildInfoKeysReturnType;\r\nexport interface UseSelectionContext extends UseSingleSelectionContext, UseMultiSelectionContext { }\r\n\r\n\r\nexport interface UseSelectionParameters<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseSelectionChildInfo<ChildElement>> extends\r\n    UseSingleSelectionParameters<ParentOrChildElement, ChildElement, M>,\r\n    UseMultiSelectionParameters<M> {\r\n}\r\n\r\nexport interface UseSelectionReturnType<ParentElement extends Element, ChildElement extends Element> extends\r\n    UseSingleSelectionReturnType<ChildElement>,\r\n    UseMultiSelectionReturnType<ParentElement, ChildElement> {\r\n    context: UseSelectionContext;\r\n}\r\n\r\nexport interface UseSelectionChildParameters<ChildElement extends Element, M extends UseSelectionChildInfo<ChildElement>> extends\r\n    UseGenericChildParameters<UseSelectionContext, Pick<M, UseSelectionChildInfoKeysParameters>>,\r\n    OmitStrong<UseSingleSelectionChildParameters<ChildElement, M>, \"info\" | \"context\">,\r\n    OmitStrong<UseMultiSelectionChildParameters<ChildElement, M>, \"info\" | \"context\"> {\r\n}\r\n\r\nexport interface UseSelectionChildReturnType<ChildElement extends Element, M extends UseSelectionChildInfo<ChildElement>> extends\r\n        ExtendMerge<UseSingleSelectionChildReturnType<ChildElement, M>,\r\n        UseMultiSelectionChildReturnType<ChildElement, M>> {\r\n}\r\n\r\n/**\r\n * Allows the children of this component to be selected, either with a `singleSelectedIndex` prop on the parent, or via each child's individual `multiSelected` prop.\r\n * \r\n * @remarks Single-selection and multi-selection are not mutually exclusive, though the cases where you would want both are uncommon.\r\n * \r\n * Most of the time, you'll want to pick and choose one mode to work with:\r\n * \r\n * ```md-literal\r\n * * Single-selection is controlled by the parent -- it receives a `singleSelectedIndex` parameter that represents the currently selected child and handles all the logic related to coordinating the deselection of the old child.\r\n * * Multi-selection is controlled by each individual child -- they have a `multiSelected` parameter that can be optionally reported back to the parent (so it can show the % of all children selected, or similar)\r\n * ```\r\n * \r\n * @see {@link useSingleSelection}\r\n * @see {@link useMultiSelection}\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useSelectionChild}\r\n */\r\nexport function useSelection<ParentOrChildElement extends Element, ChildElement extends Element>({ managedChildrenReturn, multiSelectionParameters, childrenHaveFocusReturn, rovingTabIndexReturn, singleSelectionParameters }: UseSelectionParameters<ParentOrChildElement, ChildElement, UseSelectionChildInfo<ChildElement>>): UseSelectionReturnType<ParentOrChildElement, ChildElement> {\r\n    const { childrenHaveFocusParameters: { onCompositeFocusChange: ocfc1, ...void3 }, context: contextSS, singleSelectionReturn, ...void1 } = useSingleSelection<ParentOrChildElement, ChildElement>({ managedChildrenReturn, rovingTabIndexReturn, singleSelectionParameters });\r\n    const { childrenHaveFocusParameters: { onCompositeFocusChange: ocfc2, ...void4 }, context: contextMS, multiSelectionReturn, propsStable, ...void2 } = useMultiSelection<ParentOrChildElement, ChildElement>({ managedChildrenReturn, multiSelectionParameters, childrenHaveFocusReturn });\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n\r\n    return {\r\n        propsStable,\r\n        childrenHaveFocusParameters: { onCompositeFocusChange: useStableCallback((...a) => { ocfc1!(...a); ocfc2!(...a); }) },\r\n        context: useMemoObject({ ...contextSS, ...contextMS }),\r\n        multiSelectionReturn,\r\n        singleSelectionReturn\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @compositeParams\r\n */\r\nexport function useSelectionChild<ChildElement extends Element>({\r\n    context,\r\n    info: {\r\n        index,\r\n        untabbable,\r\n        ...void2\r\n    },\r\n    singleSelectionChildParameters,\r\n    multiSelectionChildParameters,\r\n    ...void3\r\n}: UseSelectionChildParameters<ChildElement, UseSelectionChildInfo<ChildElement>>): UseSelectionChildReturnType<ChildElement, UseSelectionChildInfo<ChildElement>> {\r\n    const { props: p1, hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic1 }, pressParameters: { onPressSync: opc1 }, info: { getSingleSelected, setLocalSingleSelected, singleSelected, ...void1 }, singleSelectionChildReturn, } = useSingleSelectionChild<ChildElement>({ context, info: { index, untabbable }, singleSelectionChildParameters });\r\n    const { props: p2, hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic2 }, pressParameters: { onPressSync: opc2 }, multiSelectionChildReturn, info: { getMultiSelected, setSelectedFromParent, getMultiSelectionDisabled, ...void5 }, ...void4 } = useMultiSelectionChild<ChildElement>({ context, info: { index }, multiSelectionChildParameters });\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n\r\n    return {\r\n        hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: useStableCallback((...a) => { ocfic1!(...a); ocfic2!(...a); }) },\r\n        info: {\r\n            getMultiSelected,\r\n            setSelectedFromParent,\r\n            getSingleSelected,\r\n            setLocalSingleSelected,\r\n            singleSelected,\r\n            getMultiSelectionDisabled,\r\n        },\r\n        multiSelectionChildReturn,\r\n        pressParameters: { onPressSync: useStableCallback((...a) => { opc1!(...a); opc2!(...a); }) },\r\n        props: useMergedProps(p1, p2),\r\n        singleSelectionChildReturn\r\n    }\r\n}\r\n\r\nexport type MakeSelectionDeclarativeParameters<P> = MakeSingleSelectionDeclarativeParameters<P>;\r\nexport type MakeSelectionDeclarativeReturnType<R> = MakeSingleSelectionDeclarativeReturnType<R>;\r\nexport type MakeSelectionDeclarativeChildParameters<P extends UseMultiSelectionChildParameters<any, any>> = MakeMultiSelectionChildDeclarativeParameters<P>;\r\nexport type MakeSelectionDeclarativeChildReturnType<R extends UseMultiSelectionChildReturnType<any, any>> = MakeMultiSelectionChildDeclarativeReturnType<R>;\r\nexport interface UseSelectionDeclarativeParameters<ChildElement extends Element> extends UseSingleSelectionDeclarativeParameters<ChildElement> { }\r\nexport interface UseSelectionChildDeclarativeParameters<ChildElement extends Element, M extends UseSelectionChildInfo<ChildElement>> extends UseMultiSelectionChildDeclarativeParameters<ChildElement, M> { }\r\n\r\nexport function useSelectionDeclarative<ChildElement extends Element>(args: UseSelectionDeclarativeParameters<ChildElement>) {\r\n    return useSingleSelectionDeclarative(args);\r\n}\r\n\r\nexport function useSelectionChildDeclarative<ChildElement extends Element>(args: UseSelectionChildDeclarativeParameters<ChildElement, UseSelectionChildInfo<ChildElement>>) {\r\n    return useMultiSelectionChildDeclarative(args);\r\n}\r\n","import { OnPassiveStateChange, returnNull, runImmediately, useEnsureStability, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { Nullable, useCallback, useRef } from \"../util/lib.js\";\r\nimport { ElementProps } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { useTagProps } from \"../util/use-tag-props.js\";\r\n\r\nexport interface UseRefElementReturnTypeSelf<T extends EventTarget> {\r\n    /** \r\n     * \r\n     * Returns the element that the props were rendered to, or `null` if they were not rendered to an element.\r\n     * \r\n     * @stable\r\n     */\r\n    getElement(): T | null;\r\n}\r\nexport interface UseRefElementReturnType<T extends EventTarget> {\r\n    /** @stable */\r\n    propsStable: ElementProps<T>;\r\n    refElementReturn: UseRefElementReturnTypeSelf<T>;\r\n}\r\nexport interface UseRefElementParametersSelf<T> {\r\n    /**\r\n     * Called with the `Element` when it mounts, called with `null` when it unmounts.\r\n     * \r\n     * @stable\r\n     */\r\n    onElementChange?: Nullable<OnPassiveStateChange<T | null, never>>;\r\n    /** \r\n     * Called when the element mounts \r\n     * \r\n     * @stable\r\n     */\r\n    onMount?: Nullable<(element: T) => void>;\r\n    /** \r\n     * Called when the element unmounts\r\n     * \r\n     * @stable \r\n     */\r\n    onUnmount?: Nullable<(element: T) => void>;\r\n}\r\n\r\nexport interface UseRefElementParameters<T> {\r\n    refElementParameters: UseRefElementParametersSelf<T>;\r\n}\r\n\r\n/**\r\n * Access `HTMLElement` rendered by this hook/these props, either as soon as it's available (as a callback), or whenever you need it (as a getter function).\r\n * \r\n * @remarks\r\n * \r\n * This hook, like many others, works with either `useState` or {@link usePassiveState}. Why use one over the other?\r\n * \r\n * ```md-literal\r\n * * `useState` is familiar and easy to use, but calling `setState` causes a re-render, which you might not need/want\r\n * * `usePassiveState` is faster and more scalable, but its state can't be accessed during render and it's more complex.\r\n * ```\r\n * \r\n * Suppose we want to call the `HTMLElement`'s `doSomethingFunny` method as soon as the element has been created:\r\n * \r\n * @example\r\n * Easiest way to use (but setElement causes an extra re-render when it's called...)\r\n * ```typescript\r\n * const [element, setElement] = useState<HTMLButtonElement | null>(null);\r\n * const { propsStable } = useRefElement({ onElementChange: setElement });\r\n * useEffect(() => {\r\n *     element.doSomethingFunny();\r\n * }, [element])\r\n * ```\r\n * \r\n * @example\r\n * Fastest (but slightly more verbose)\r\n * ```typescript\r\n * // The code in useEffect is moved into this callback, but runs at the same time\r\n * const onElementChange = useCallback(element => element.doSomethingFunny(), []);\r\n * const [getElement, setElement] = usePassiveState<HTMLButtonElement | null>(onElementChange, returnNull);\r\n * const { propsStable } = useRefElement({ onElementChange: setElement });\r\n * ```\r\n * \r\n * @compositeParams\r\n */\r\nexport const useRefElement = monitored( function useRefElement<T extends EventTarget>(args: UseRefElementParameters<T>): UseRefElementReturnType<T> {\r\n    const nonElementWarn = useRef(false);\r\n    if (nonElementWarn.current) {\r\n        nonElementWarn.current = false;\r\n        // There are two of these to catch the problem in the two most useful areas --\r\n        // when it initially happens, and also in the component stack.\r\n        console.assert(false, `useRefElement was used on a component that didn't forward its ref onto a DOM element, so it's attached to that component's VNode instead.`);\r\n    }\r\n\r\n    const { onElementChange, onMount, onUnmount } = (args.refElementParameters || {});\r\n    useEnsureStability(\"useRefElement\", onElementChange, onMount, onUnmount);\r\n\r\n    // Called (indirectly) by the ref that the element receives.\r\n    const handler = useCallback<OnPassiveStateChange<T | null, never>>((e, prevValue) => {\r\n        if (!(e == null || e instanceof Element)) {\r\n            console.assert(e == null || e instanceof Element, `useRefElement was used on a component that didn't forward its ref onto a DOM element, so it's attached to that component's VNode instead.`);\r\n            nonElementWarn.current = true;\r\n        }\r\n        const cleanup = onElementChange?.(e, prevValue);\r\n        if (prevValue)\r\n            onUnmount?.(prevValue!);\r\n\r\n        if (e)\r\n            onMount?.(e);\r\n\r\n        return cleanup;\r\n    }, []);\r\n\r\n    // Let us store the actual (reference to) the element we capture\r\n    const [getElement, setElement] = usePassiveState<T | null, never>(handler, returnNull, runImmediately);\r\n    const propsStable = useRef<ElementProps<T>>(useTagProps({ ref: setElement as never }, \"data-use-ref-element\"));\r\n\r\n    // Return both the element and the hook that modifies \r\n    // the props and allows us to actually find the element\r\n    return {\r\n        propsStable: propsStable.current,\r\n\r\n        refElementReturn: {\r\n            getElement,\r\n        }\r\n    }\r\n})\r\n\r\n","\r\nimport { MapOfSets } from \"map-and-set-extensions\";\r\n\r\nimport { OnPassiveStateChange, returnNull, returnTrue, runImmediately, useEnsureStability, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { Nullable, StateUpdater, useEffect } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n\r\n/**\r\n * \r\n * There are several different ways that a focus event can happen.  Assume\r\n * the following steps happen in order:\r\n * \r\n * 1. The page loads.\r\n *    * Nothing is focused, but `document.activeElement` is `body`. \r\n *    * No focus events are fired.\r\n * 2. The window is focused, an unfocusable element is clicked, text is selected, etc.\r\n *    * The `activeElement` remains as `body`.\r\n *    * A `focus`/`focusin` event *MIGHT* be fired for `body`. Depending on\r\n *      the browser, this depends on whether the handler was attached to `window` or `document`.\r\n *      Probably just best to not rely on it, or listen to `window` focus events directly.\r\n * 3. A focusable element is clicked, etc.\r\n *    * The `activeElement` is set to the new element before any event even fires.\r\n *    * `focusout` and `blur` are *not* fired on `body`.\r\n *    * `focus` and `focusin` are fired on the new element. `relatedTarget` is null.\r\n * 4. A focusable element is clicked, etc.\r\n *    * **The `activeElement` is set to the `body`** before any event even fires.\r\n *    * `blur` and `focusout` are fired on the old element. `relatedTarget` is the new element.\r\n *    * The `activeElement` is now set to the new element.\r\n *    * `focusin` is fired on the new element. `relatedTarget` is the old element.\r\n * 5. An unfocusable element is clicked, text is selected, etc.\r\n *    * The `activeElement` is set to `body`.\r\n *    * `blur` and `focusout` are fired on the old element. `relatedTarget` is null.\r\n *    * `focusin` is *not* fired on `body`.\r\n * \r\n * \r\n * In summary:\r\n * 1. Focus events *do* notify us of all changes in focus, but there is no one single comprehensive event that provides us with all available information.\r\n * 2. `document.activeElement` *is not* always the same as what's being referenced by a focus event. In particular, it may become `body` at any arbitrary time.\r\n * 3. A `blur` without a `focus` can and will occur. This means it is not possible to solely use `focus` to detect all changes.\r\n * 4. A `blur` event whose `relatedTarget` is null indicates that there will be no following `focus` event.\r\n * \r\n */\r\nconst _dummy = 0;\r\n\r\ninterface Foo<T> {\r\n    lastSent: T | undefined;\r\n    send: (e: T, r: FocusEvent) => void;\r\n}\r\n\r\n\r\nconst activeElementUpdaters: MapOfSets<Window | null | undefined, Foo<Node | null>> = new Map();\r\nconst lastActiveElementUpdaters: MapOfSets<Window | null | undefined, Foo<Node>> = new Map();\r\nconst windowFocusedUpdaters: MapOfSets<Window | null | undefined, Foo<boolean>> = new Map();\r\nconst windowsFocusedUpdaters = new Map<Window | null | undefined, boolean>();\r\n\r\n\r\n// The focusin and focusout events often fire synchronously in the middle of running code.\r\n// E.G. calling element.focus() can cause a focusin event handler to immediately interrupt that code.\r\n// For the purpose of improving stability, we debounce all focus events to the next microtask.\r\nfunction forEachUpdater<T>(window: Window | null | undefined, map: MapOfSets<Window | null | undefined, Foo<T>>, value: T, reason: any) {\r\n    const updaters = map.get(window);\r\n\r\n    if (updaters) {\r\n        for (const updater of updaters) {\r\n            const { lastSent, send } = updater;\r\n            if (value !== lastSent) {\r\n                send(value, reason);\r\n                updater.lastSent = value;\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction focusout(e: FocusEvent) {\r\n    const window = (e.target as Element).ownerDocument.defaultView;\r\n\r\n    if (e.relatedTarget == null) {\r\n        forEachUpdater(window, activeElementUpdaters, null, e);\r\n    }\r\n    else {\r\n        // Just wait for the focusin event.\r\n    }\r\n\r\n}\r\n\r\nfunction focusin(e: FocusEvent) {\r\n    const window = (e.target as Element).ownerDocument.defaultView;\r\n    const currentlyFocusedElement = e.target as (Element & HTMLOrSVGElement);\r\n    forEachUpdater(window, activeElementUpdaters, currentlyFocusedElement, e);\r\n    forEachUpdater(window, lastActiveElementUpdaters, currentlyFocusedElement, e);\r\n}\r\n\r\nfunction windowFocus(e: FocusEvent) {\r\n    const window = (e.target instanceof Window ? e.target : e.currentTarget instanceof Window ? e.currentTarget : (e.target as Element).ownerDocument.defaultView);\r\n    windowsFocusedUpdaters.set(window, true);\r\n    forEachUpdater(window, windowFocusedUpdaters, true, e);\r\n}\r\n\r\nfunction windowBlur(e: FocusEvent) {\r\n    const window = (e.target instanceof Window ? e.target : e.currentTarget instanceof Window ? e.currentTarget : (e.target as Element).ownerDocument.defaultView);\r\n    windowsFocusedUpdaters.set(window, false);\r\n    forEachUpdater(window, windowFocusedUpdaters, false, e);\r\n}\r\n\r\nexport interface UseActiveElementParametersSelf {\r\n    /**\r\n     * Called any time the active element changes.\r\n     * \r\n     * @stable\r\n     */\r\n    onActiveElementChange: Nullable<OnPassiveStateChange<Element | null, FocusEvent>>;\r\n\r\n    /**\r\n     * Called any time the active element changes and is not null.\r\n     * \r\n     * @stable\r\n     */\r\n    onLastActiveElementChange: Nullable<OnPassiveStateChange<Element, FocusEvent>>;\r\n\r\n    /**\r\n     * Called any time the window gains/loses focus.\r\n     * \r\n     * @stable\r\n     */\r\n    onWindowFocusedChange: Nullable<OnPassiveStateChange<boolean, FocusEvent>>;\r\n\r\n    /**\r\n     * This must be a function that returns the document associated with whatever elements we're listening to.\r\n     * \r\n     * E.G. someDivElement.ownerDocument\r\n     * \r\n     * @stable\r\n     */\r\n    getDocument(): Document;\r\n\r\n    /**\r\n     * By default, event handlers are attached to the document's defaultView Window.\r\n     * If you need something different, override it here.\r\n     * \r\n     * @stable\r\n     */\r\n    //getWindow: Nullable<((document: Document) => Window)>;\r\n}\r\n\r\n\r\nexport interface UseActiveElementParameters {\r\n\r\n    activeElementParameters: UseActiveElementParametersSelf;\r\n}\r\n\r\nexport interface UseActiveElementReturnTypeSelf {\r\n    /** \r\n     * Returns whatever element is currently focused, or `null` if there's no focused element\r\n     * @stable\r\n     */\r\n    getActiveElement: () => Element | null;\r\n    /** \r\n     * Returns whatever element is currently focused, or whatever element was most recently focused if there's no focused element\r\n     * @stable\r\n     */\r\n    getLastActiveElement: () => Element;\r\n    /** \r\n     * Returns if the window itself has focus or not\r\n     * @stable\r\n     */\r\n    getWindowFocused: () => boolean;\r\n}\r\n\r\nexport interface UseActiveElementReturnType {\r\n    activeElementReturn: UseActiveElementReturnTypeSelf;\r\n}\r\n\r\n/**\r\n * Allows you to inspect which element in the `document` currently has focus, which was most recently focused if none are currently, and whether or not the window has focus \r\n * \r\n * @remarks The document's body receiving focus, like it does when you click on an empty area, is counted as no element having focus for all intents and purposes\r\n * \r\n * This is a passive hook, so by default it returns getter functions that report this information but the component will not re-render by default when the active element changes.\r\n * \r\n * If you need the component to re-render when the active element changes, use the `on*Change` arguments to set some state on your end.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useActiveElement = monitored(function useActiveElement({ activeElementParameters: { onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange, getDocument } }: UseActiveElementParameters): UseActiveElementReturnType {\r\n    useEnsureStability(\"useActiveElement\", onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange, getDocument);\r\n\r\n    useEffect(() => {\r\n        const document = getDocument();\r\n        const window = (document?.defaultView);\r\n\r\n        if ((activeElementUpdaters.get(window)?.size ?? 0) === 0) {\r\n            document?.addEventListener(\"focusin\", focusin, { passive: true });\r\n            document?.addEventListener(\"focusout\", focusout, { passive: true });\r\n            window?.addEventListener(\"focus\", windowFocus, { passive: true });\r\n            window?.addEventListener(\"blur\", windowBlur, { passive: true });\r\n        }\r\n\r\n        const laeu = { send: setActiveElement as StateUpdater<Node | null>, lastSent: undefined }\r\n        const llaeu = { send: setLastActiveElement as StateUpdater<Node>, lastSent: undefined };\r\n        const lwfu = { send: setWindowFocused, lastSent: undefined };\r\n\r\n        MapOfSets.add(activeElementUpdaters, window, laeu);\r\n        MapOfSets.add(lastActiveElementUpdaters, window, llaeu);\r\n        MapOfSets.add(windowFocusedUpdaters, window, lwfu);\r\n\r\n        return () => {\r\n            MapOfSets.delete(activeElementUpdaters, window, laeu);\r\n            MapOfSets.delete(lastActiveElementUpdaters, window, llaeu);\r\n            MapOfSets.delete(windowFocusedUpdaters, window, lwfu);\r\n\r\n            if (activeElementUpdaters.size === 0) {\r\n                document?.removeEventListener(\"focusin\", focusin);\r\n                document?.removeEventListener(\"focusout\", focusout);\r\n                window?.removeEventListener(\"focus\", windowFocus);\r\n                window?.removeEventListener(\"blur\", windowBlur);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const [getActiveElement, setActiveElement] = usePassiveState<Element | null, FocusEvent>(onActiveElementChange, returnNull, runImmediately);\r\n    const [getLastActiveElement, setLastActiveElement] = usePassiveState<Element, FocusEvent>(onLastActiveElementChange, returnNull as () => never, runImmediately);\r\n    const [getWindowFocused, setWindowFocused] = usePassiveState<boolean, FocusEvent>(onWindowFocusedChange, returnTrue, runImmediately);\r\n\r\n    return { activeElementReturn: { getActiveElement, getLastActiveElement, getWindowFocused } };\r\n})\r\n","import { UseRefElementReturnType, useRefElement } from \"../dom-helpers/use-ref-element.js\";\r\nimport { UseActiveElementParameters, useActiveElement } from \"../observers/use-active-element.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { assertEmptyObject } from \"../util/assert.js\";\r\nimport { ElementProps, EventType, TargetedOmit } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { UseBackdropDismissParameters, useBackdropDismiss } from \"./dismissal/use-backdrop-dismiss.js\";\r\nimport { UseEscapeDismissParameters, useEscapeDismiss } from \"./dismissal/use-escape-dismiss.js\";\r\nimport { UseLostFocusDismissParameters, useLostFocusDismiss } from \"./dismissal/use-lost-focus-dismiss.js\";\r\n\r\n/**\r\n * In general, each soft dismiss hook takes an `open` and an `onClose` prop.\r\n * \r\n * `open` in all cases refers to both whether or not the controlled surface is currently being shown,\r\n * but also whether that particular method of soft dismiss is enabled or not.\r\n * \r\n * E.G. If `escape` key dismissing is disabled, just have `open` false at all times for `escapeDismissParameters`.\r\n */\r\nconst _dummy = 0;\r\n\r\n\r\nexport type DismissListenerTypes = \"backdrop\" | \"lost-focus\" | \"escape\";\r\n\r\nexport interface UseDismissParametersSelf<Listeners extends DismissListenerTypes> {\r\n\r\n    /**\r\n     * Controls all dismiss behaviors at once.\r\n     * \r\n     * @remarks When this is `true`, any of the dismiss behaviors are able to be triggered. \r\n     * When this is `false`, no dismiss behaviors are able to be triggered.\r\n     */\r\n    dismissActive: boolean;\r\n\r\n    /**\r\n     * Called any time the user has requested the component be dismissed for the given reason.\r\n     * \r\n     * @remarks You can choose to ignore a reason if you want, but it's better to set `closeOn${reason}` to `false` instead.\r\n     * \r\n     * @nonstable\r\n     */\r\n    onDismiss: (e: EventType<any, any>, reason: Listeners) => void;\r\n\r\n    /**\r\n     * If `true`, then this component closes when a click is detected anywhere not within the component\r\n     * (determined by being in a different branch of the DOM)\r\n     */\r\n    //closeOnBackdrop: Listeners extends \"backdrop\" ? true : false;\r\n\r\n    /**\r\n     * If `true`, then this component closes when the Escape key is pressed, and no deeper component\r\n     * is listening for that same Escape press (i.e. only one Escape dismiss happens per key press)\r\n     */\r\n    //closeOnEscape: Listeners extends \"escape\" ? true : false;\r\n\r\n    /**\r\n     * If `true`, then this component closes whenever focus is sent to an element not contained by this one\r\n     * (using the same rules as `closeOnBackdrop`)\r\n     */\r\n    //closeOnLostFocus: Listeners extends \"lost-focus\" ? true : false;\r\n}\r\n\r\nexport interface UseDismissParameters<Listeners extends DismissListenerTypes> extends\r\n    TargetedOmit<UseEscapeDismissParameters<any, Listeners extends \"escape\" ? true : false>, \"escapeDismissParameters\", \"getDocument\">,\r\n    TargetedOmit<UseBackdropDismissParameters<any, Listeners extends \"backdrop\" ? true : false>, \"backdropDismissParameters\", never>,\r\n    TargetedOmit<UseLostFocusDismissParameters<any, any, Listeners extends \"lost-focus\" ? true : false>, \"lostFocusDismissParameters\", never>,\r\n    UseActiveElementParameters {\r\n    dismissParameters: UseDismissParametersSelf<Listeners>;\r\n}\r\n\r\nexport interface UseDismissReturnType<SourceElement extends Element | null, PopupElement extends Element> {\r\n    /**\r\n     * If this dismissible component has a specific element that caused it to appear (a button, for example),\r\n     * provide it with these props.\r\n     * \r\n     * * REQUIRED for things like menus that pop up from a button and for whom losing focus counts as requesting closure. \r\n     * * OPTIONAL for things like dialogs that can appear out of nowhere and for whom losing focus is actively impossible (due to focus traps).\r\n     */\r\n    refElementSourceReturn: UseRefElementReturnType<NonNullable<SourceElement>>[\"refElementReturn\"];\r\n\r\n    /**\r\n     * This one's always required though\r\n     */\r\n    refElementPopupReturn: UseRefElementReturnType<PopupElement>[\"refElementReturn\"];\r\n\r\n    propsStableSource: ElementProps<NonNullable<SourceElement>>;\r\n    propsStablePopup: ElementProps<NonNullable<PopupElement>>;\r\n\r\n}\r\n\r\n/**\r\n * Combines all the methods a user can implicitly dismiss a popup component. See {@link useModal} for a hook that's ready-to-use for dialogs and menus.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useDismiss = monitored(function useDismiss<Listeners extends DismissListenerTypes, SourceElement extends Element | null, PopupElement extends Element>({\r\n    dismissParameters: { dismissActive, onDismiss, ...void3 },\r\n    backdropDismissParameters: { dismissBackdropActive, onDismissBackdrop, ...void6 },\r\n    lostFocusDismissParameters: { dismissLostFocusActive, onDismissLostFocus, ...void7 },\r\n    escapeDismissParameters: { dismissEscapeActive, onDismissEscape, parentDepth, ...void2 },\r\n    activeElementParameters: { getDocument, onActiveElementChange, onLastActiveElementChange: olaec1, onWindowFocusedChange, ...void5 },\r\n    ...void4\r\n}: UseDismissParameters<Listeners>): UseDismissReturnType<SourceElement, PopupElement> {\r\n    const { refElementReturn: refElementSourceReturn, propsStable: propsStableSource } = useRefElement<NonNullable<SourceElement>>({ refElementParameters: {} });\r\n    const { refElementReturn: refElementPopupReturn, propsStable: propsStablePopup } = useRefElement<PopupElement>({ refElementParameters: {} });\r\n\r\n    //const onCloseBackdrop = useCallback(() => { return globalOnClose?.(\"backdrop\" as Listeners); }, [globalOnClose]);\r\n    //const onCloseEscape = useCallback(() => { return globalOnClose?.(\"escape\" as Listeners); }, [globalOnClose]);\r\n    //const onCloseFocus = useCallback(() => { return globalOnClose?.(\"lost-focus\" as Listeners); }, [globalOnClose]);\r\n\r\n    const void8 = useBackdropDismiss<PopupElement, Listeners extends \"backdrop\" ? true : false>({\r\n        refElementPopupReturn,\r\n        backdropDismissParameters: {\r\n            dismissBackdropActive: (dismissBackdropActive && dismissActive) as false,\r\n            onDismissBackdrop: useStableCallback((e) => {\r\n                onDismissBackdrop?.(e);\r\n                onDismiss(e, \"backdrop\" as Listeners);\r\n\r\n            }),\r\n        },\r\n    });\r\n    const void9 = useEscapeDismiss<PopupElement, Listeners extends \"escape\" ? true : false>({\r\n        refElementPopupReturn,\r\n        escapeDismissParameters: {\r\n            dismissEscapeActive: (dismissEscapeActive && dismissActive) as false,\r\n            getDocument,\r\n            onDismissEscape: useStableCallback((e) => {\r\n                onDismissEscape?.(e);\r\n                onDismiss(e, \"escape\" as Listeners);\r\n            }),\r\n            parentDepth,\r\n        },\r\n    });\r\n    const {\r\n        activeElementParameters: {\r\n            onLastActiveElementChange: olaec2,\r\n            ...void1\r\n        }\r\n    } = useLostFocusDismiss<SourceElement, PopupElement, Listeners extends \"lost-focus\" ? true : false>({\r\n        lostFocusDismissParameters: {\r\n            dismissLostFocusActive: (dismissLostFocusActive && dismissActive) as false,\r\n            onDismissLostFocus: useStableCallback((e) => {\r\n                onDismissLostFocus?.(e);\r\n                onDismiss(e, \"lost-focus\" as Listeners);\r\n            }),\r\n        },\r\n        refElementPopupReturn,\r\n        refElementSourceReturn\r\n    });\r\n\r\n\r\n    const {\r\n        activeElementReturn: {\r\n            getActiveElement: _getActiveElement,\r\n            getLastActiveElement: _getLastActiveElement,\r\n            getWindowFocused: _getWindowFocused\r\n        }\r\n    } = useActiveElement({\r\n        activeElementParameters: {\r\n            onLastActiveElementChange: useStableCallback((a, b, r) => { olaec2?.(a, b, r); olaec1?.(a, b, r); }),\r\n            onActiveElementChange,\r\n            onWindowFocusedChange,\r\n            getDocument\r\n        }\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    assertEmptyObject(void6);\r\n    assertEmptyObject(void7);\r\n    assertEmptyObject(void8);\r\n    assertEmptyObject(void9);\r\n\r\n    return {\r\n        refElementSourceReturn,\r\n        refElementPopupReturn,\r\n        propsStableSource: propsStableSource,\r\n        propsStablePopup: propsStablePopup\r\n    }\r\n})\r\n","import { clsx } from \"clsx\";\r\nimport { useEffect } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport function getDocument(element?: Node) { return (element?.ownerDocument ?? document ?? window.document ?? globalThis.document); }\r\n\r\ntype P = Parameters<typeof clsx>;\r\n\r\n/**\r\n * Allows adding/removing a CSS class to the `window`, `document`, or other global `HTMLElement`.\r\n * \r\n * @param className - The class (as a string) to be adding/removing\r\n * @param active - If `true`, the default, then the class is added to the element. If `false`, it's removed.\r\n * @param element - The element to affect. By default, it's the root `<html>` element\r\n */\r\nexport const useDocumentClass = monitored(function useDocumentClass(className: P[0], active?: boolean, element?: HTMLElement) {\r\n    element ??= getDocument().documentElement;\r\n    className = clsx(className);\r\n\r\n    useEffect(() => {\r\n        if (element) {\r\n            if (active !== false) {\r\n                element.classList.add(className as string);\r\n                return () => element!.classList.remove(className as string);\r\n            }\r\n        }\r\n\r\n    }, [className, active, element]);\r\n\r\n})\r\n","import \"blocking-elements\";\r\nimport { DocumentWithBlockingElements } from \"blocking-elements\";\r\nimport \"wicg-inert\";\r\n\r\nimport { UseActiveElementParameters, useActiveElement } from \"../observers/use-active-element.js\";\r\nimport { returnNull, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { FocusEventType, useLayoutEffect } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { getDocument } from \"./use-document-class.js\";\r\n\r\nfunction blockingElements() { return (getDocument() as DocumentWithBlockingElements).$blockingElements }\r\n\r\nexport interface UseBlockingElementParametersSelf<E extends Element> {\r\n    enabled: boolean;\r\n    getTarget(): (E | null)\r\n}\r\n\r\nexport interface UseBlockingElementParameters<E extends Element> extends UseActiveElementParameters {\r\n    blockingElementParameters: UseBlockingElementParametersSelf<E>;\r\n}\r\n\r\n/**\r\n * Allows an element to trap focus by applying the \"inert\" attribute to all sibling, aunt, and uncle nodes.\r\n * \r\n * @remarks Automatically handles consecutive calls with a loosely applied stack operation \r\n * (specifically via `blockingElements`, with a small polyfill because I'm not sure how long\r\n * it'll take to find its way into the spec, if ever)\r\n * \r\n * @param target \r\n */\r\nexport const useBlockingElement = monitored(function useBlockingElement<E extends Element>({\r\n    activeElementParameters: {\r\n        getDocument,\r\n        onActiveElementChange,\r\n        onLastActiveElementChange,\r\n        onWindowFocusedChange,\r\n        ...void3\r\n    },\r\n    blockingElementParameters: {\r\n        enabled,\r\n        getTarget,\r\n        ...void1\r\n    },\r\n    ...void2\r\n}: UseBlockingElementParameters<E>) {\r\n\r\n    const stableGetTarget = useStableCallback(getTarget);\r\n\r\n    //const getDocument = useStableCallback(() => (getTarget()?.ownerDocument ?? globalThis.document));\r\n    useActiveElement({\r\n        activeElementParameters: {\r\n            getDocument,\r\n            onActiveElementChange,\r\n            onWindowFocusedChange,\r\n            onLastActiveElementChange: useStableCallback((e, prev, reason) => {\r\n                onLastActiveElementChange?.(e, prev, reason);\r\n\r\n                if (e) {\r\n                    if (enabled)\r\n                        setLastActiveWhenOpen(e as HTMLElement, reason);\r\n                    else\r\n                        setLastActiveWhenClosed(e as HTMLElement, reason);\r\n                }\r\n            })\r\n        }\r\n    })\r\n\r\n    const [getTop, setTop] = usePassiveState<HTMLElement | null, never>(null, returnNull);\r\n    const [getLastActiveWhenClosed, setLastActiveWhenClosed] = usePassiveState<HTMLElement | null, FocusEventType<any>>(null, returnNull);\r\n    const [getLastActiveWhenOpen, setLastActiveWhenOpen] = usePassiveState<HTMLElement | null, FocusEventType<any>>(null, returnNull);\r\n\r\n    /**\r\n     * Push/pop the element from the blockingElements stack.\r\n     */\r\n    useLayoutEffect(() => {\r\n        const target = stableGetTarget();\r\n\r\n        if (enabled) {\r\n\r\n            // Sometimes blockingElements will fail if, for example,\r\n            // the target element isn't connected to document.body.\r\n            // This is rare, but it's better to fail silently with weird tabbing behavior\r\n            // than to crash the entire application.\r\n            try {\r\n                blockingElements().push(target as Element as HTMLElement);\r\n\r\n                setTop(target as Element as HTMLElement);\r\n                return () => {\r\n                    blockingElements().remove(target as Element as HTMLElement);\r\n                };\r\n            }\r\n            catch (ex) {\r\n                // Well, semi-silently.\r\n                console.error(ex);\r\n            }\r\n        }\r\n    }, [enabled]);\r\n\r\n    return { getTop, getLastActiveWhenClosed, getLastActiveWhenOpen }\r\n})\r\n\r\nexport function getTopElement() {\r\n    return blockingElements().top;\r\n}\r\n\r\n\r\n","import { isFocusable, isTabbable } from \"tabbable\";\r\nimport { UseBlockingElementParameters, useBlockingElement } from \"../dom-helpers/use-blocking-element.js\";\r\nimport { UseRefElementReturnType } from \"../dom-helpers/use-ref-element.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { TargetedPick, useEffect } from \"../util/lib.js\";\r\nimport { ElementProps, OmitStrong } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { useTagProps } from \"../util/use-tag-props.js\";\r\n\r\nexport interface UseFocusTrapParametersSelf<SourceElement extends Element | null, PopupElement extends Element> {\r\n    /**\r\n     * Whether or not the focus trap is currently active (or, when used as part of a larger component, whether it is activatable)\r\n     */\r\n    trapActive: boolean;\r\n\r\n    /**\r\n     * If true, focus is not trapped but only moved to the new element. \r\n     */\r\n    onlyMoveFocus: boolean;\r\n\r\n\r\n    /**\r\n     * This function is called to find where focus should be sent when the dialog (or menu, popup, etc.) opens.\r\n     * \r\n     * @remarks This **cannot be done deterministically** across all possible scenarios because this is about what makes the most sense as a human.\r\n     * \r\n     * For example, if it's a confirmation dialog about deleting something, *it's best to send focus to the \"cancel\" button*,\r\n     * but there's no way to programmatically know both a) that should be done and b) how to do it.\r\n     * \r\n     * Ideally this function is specified *manually* for every dialog you create.\r\n     * \r\n     * If you really, really, ***genuinely*** cannot determine what should be done in your use case,\r\n     * as a very very last resort, use `findFirstFocusable`, and then if nothing's found focus the body.  \r\n     * \r\n     * Just please, please make sure that whatever that first focusable is **isn't** a destructive action, at the very least. \r\n     * \r\n     * @nonstable\r\n     */\r\n    focusPopup(e: PopupElement, findFirstFocusable: () => HTMLOrSVGElement | null): void;\r\n\r\n    /**\r\n     * When the focus trap has deactivated, focus must be sent back to the element that opened it.\r\n     * \r\n     * @remarks This is tracked for you; by default, just call `lastFocused?.focus()`, but you can also override this behavior\r\n     * and just do whatever you want with any element. \r\n     * \r\n     * @param lastFocused - The element that was focused before the modal was opened\r\n     * \r\n     * @nonstable\r\n     */\r\n    focusOpener(lastFocused: SourceElement | null): void;\r\n}\r\n\r\nexport interface UseFocusTrapParameters<SourceElement extends Element | null, PopupElement extends Element> extends\r\n    TargetedPick<UseRefElementReturnType<NonNullable<PopupElement>>, \"refElementReturn\", \"getElement\">,\r\n    OmitStrong<UseBlockingElementParameters<NonNullable<SourceElement>>, \"blockingElementParameters\"> {\r\n    focusTrapParameters: UseFocusTrapParametersSelf<SourceElement, PopupElement>;\r\n}\r\n\r\nexport interface UseFocusTrapReturnType<E extends Element> {\r\n    props: ElementProps<E>;\r\n}\r\n\r\n/**\r\n * Allows you to move focus to an isolated area of the page, restore it when finished, and **optionally trap it there** so that you can't tab out of it.\r\n * \r\n * @remarks By default, this implements a focus trap using the Blocking Elements...uh...[proposal](https://github.com/whatwg/html/issues/897)? \r\n * Not that it really looks like it's going anywhere, but until something better comes along, [the polyfill](#https://github.com/PolymerLabs/blocking-elements) has been working pretty great.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useFocusTrap = monitored (function useFocusTrap<SourceElement extends Element | null, PopupElement extends Element>({\r\n    focusTrapParameters: { onlyMoveFocus, trapActive, focusPopup: focusSelfUnstable, focusOpener: focusOpenerUnstable },\r\n    activeElementParameters,\r\n    refElementReturn\r\n}: UseFocusTrapParameters<SourceElement, PopupElement>): UseFocusTrapReturnType<PopupElement> {\r\n    const focusSelf = useStableCallback(focusSelfUnstable);\r\n    const focusOpener = useStableCallback(focusOpenerUnstable);\r\n\r\n    useEffect(() => {\r\n        if (trapActive) {\r\n            let top = getTop();\r\n            const lastFocusedInThisComponent = getLastActiveWhenOpen();\r\n\r\n            if (false && lastFocusedInThisComponent && lastFocusedInThisComponent?.isConnected) {\r\n                focusSelf(lastFocusedInThisComponent as any as PopupElement, () => lastFocusedInThisComponent);\r\n            }\r\n            else {\r\n                top ??= refElementReturn.getElement() as unknown as HTMLElement;\r\n                console.assert(!!top);\r\n                if (top)\r\n                    focusSelf(top as any as PopupElement, () => findFirstFocusable(top!));\r\n            }\r\n        }\r\n        else {\r\n            const lastActive = getLastActiveWhenClosed();\r\n            let currentFocus = document.activeElement;\r\n\r\n            // Restore focus to whatever caused this trap to trigger,\r\n            // but only if it wasn't caused by explicitly focusing something else \r\n            // (generally if `onlyMoveFocus` is true)\r\n            let top = refElementReturn.getElement();\r\n            if (currentFocus == document.body || currentFocus == null || top == currentFocus || top?.contains(currentFocus)) {\r\n                if (lastActive)\r\n                    focusOpener(lastActive as any as SourceElement);\r\n            }\r\n        }\r\n    }, [trapActive]);\r\n\r\n    const { getElement } = refElementReturn;\r\n\r\n    const { getTop, getLastActiveWhenClosed, getLastActiveWhenOpen } = useBlockingElement({\r\n        activeElementParameters,\r\n        blockingElementParameters: {\r\n            enabled: trapActive && !onlyMoveFocus,\r\n            getTarget: getElement\r\n        }\r\n    });\r\n\r\n\r\n    return {\r\n        props: useTagProps({ \"aria-modal\": trapActive ? \"true\" : undefined } as ElementProps<PopupElement>, \"data-focus-trap\")\r\n    };\r\n})\r\n\r\n/**\r\n * Returns the first focusable element contained within the given node, or null if none are found.\r\n */\r\nexport function findFirstFocusable<T extends Node>(element: T): T | null {\r\n    return findFirstCondition<T>(element, node => node instanceof Element && isFocusable(node));\r\n}\r\n\r\n/**\r\n * Returns the first tabbable element contained within the given node, or null if none are found.\r\n */\r\nexport function findFirstTabbable<T extends Node>(element: T): T | null {\r\n    return findFirstCondition<T>(element, node => node instanceof Element && isTabbable(node));\r\n}\r\n\r\nfunction findFirstCondition<T extends Node>(element: T, filter: (node: Node) => boolean): T | null {\r\n    if (element && filter(element))\r\n        return element;\r\n\r\n    console.assert(!!element);\r\n    element ??= document.body as Node as T;\r\n    const treeWalker = document.createTreeWalker(element, NodeFilter.SHOW_ELEMENT, { acceptNode: (node) => (filter(node) ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP) })\r\n    const firstFocusable = treeWalker.firstChild() as T | null;\r\n    return firstFocusable;\r\n}\r\n","import { useMergedProps } from \"../dom-helpers/use-merged-props.js\";\r\nimport { UseGenericChildParameters } from \"../preact-extensions/use-managed-children.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../util/assert.js\";\r\nimport { ExtendMerge, OmitStrong, TargetedOmit } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { GridChildCellInfo, GridChildRowInfo, UseGridNavigationCellContext, UseGridNavigationCellInfoKeysReturnType, UseGridNavigationCellParameters, UseGridNavigationCellReturnType, UseGridNavigationParameters, UseGridNavigationReturnType, UseGridNavigationRowContext, UseGridNavigationRowInfoKeysReturnType, UseGridNavigationRowParameters, UseGridNavigationRowReturnType, useGridNavigation, useGridNavigationCell, useGridNavigationRow } from \"./keyboard-navigation/use-grid-navigation-partial.js\";\r\nimport { UseListNavigationChildInfoKeysParameters } from \"./keyboard-navigation/use-list-navigation-partial.js\";\r\nimport { UseSelectionChildInfo, UseSelectionChildInfoKeysReturnType, UseSelectionChildParameters, UseSelectionChildReturnType, UseSelectionContext, UseSelectionParameters, UseSelectionReturnType, useSelection, useSelectionChild } from \"./selection/use-selection.js\";\r\nimport { UseListNavigationSelectionChildInfoKeysParameters } from \"./use-list-navigation-selection.js\";\r\n\r\n/**\r\n * List navigation gets  selection, so grid navigation does too.\r\n * \r\n * Any given row of the grid can be selected, akin to it being a  select list but with options that can be left/right arrowed to.\r\n * \r\n * Highly recommended to make the `selectionMode` *not* be `\"focus\"`, but it's up to you, ultimately.\r\n */\r\nconst _dummy = 0;\r\n\r\nexport type UseGridNavigationSelectionRowInfoKeysParameters = UseListNavigationSelectionChildInfoKeysParameters;\r\nexport type UseGridNavigationSelectionRowInfoKeysReturnType = UseGridNavigationRowInfoKeysReturnType | UseSelectionChildInfoKeysReturnType;\r\nexport type UseGridNavigationSelectionCellInfoKeysParameters = UseListNavigationChildInfoKeysParameters;\r\nexport type UseGridNavigationSelectionCellInfoKeysReturnType = UseGridNavigationCellInfoKeysReturnType;\r\n\r\nexport interface GridSelectChildRowInfo<RowElement extends Element> extends GridChildRowInfo<RowElement>, UseSelectionChildInfo<RowElement> { }\r\nexport interface GridSelectChildCellInfo<CellElement extends Element> extends GridChildCellInfo<CellElement> { }\r\nexport interface UseGridNavigationSelectionParameters<ParentOrRowElement extends Element, RowElement extends Element, RM extends GridSelectChildRowInfo<RowElement>> extends\r\n    OmitStrong<UseGridNavigationParameters<ParentOrRowElement, RowElement, RM>, \"rovingTabIndexParameters\">,\r\n    TargetedOmit<UseGridNavigationParameters<ParentOrRowElement, RowElement, RM>, \"rovingTabIndexParameters\", \"initiallyTabbedIndex\">,\r\n    OmitStrong<UseSelectionParameters<ParentOrRowElement, RowElement, RM>, \"rovingTabIndexReturn\"> { }\r\nexport interface UseGridNavigationSelectionReturnType<ParentOrRowElement extends Element, RowElement extends Element> extends\r\n    UseGridNavigationReturnType<ParentOrRowElement, RowElement>,\r\n    OmitStrong<UseSelectionReturnType<ParentOrRowElement, RowElement>, \"propsStable\"> {\r\n    context: UseGridNavigationRowSelectionContext;\r\n}\r\nexport interface UseGridNavigationRowSelectionContext extends UseGridNavigationRowContext, UseSelectionContext { }\r\nexport interface UseGridNavigationCellSelectionContext extends UseGridNavigationCellContext { }\r\nexport interface UseGridNavigationSelectionRowParameters<RowElement extends Element, CellElement extends Element, RM extends GridSelectChildRowInfo<RowElement>, CM extends GridSelectChildCellInfo<CellElement>> extends\r\n    UseGenericChildParameters<UseGridNavigationRowSelectionContext, Pick<GridSelectChildRowInfo<RowElement>, UseGridNavigationSelectionRowInfoKeysParameters>>,\r\n    OmitStrong<UseGridNavigationRowParameters<RowElement, CellElement, CM>, \"info\" | \"context\">,\r\n    OmitStrong<UseSelectionChildParameters<RowElement, RM>, \"info\" | \"context\"> {\r\n    info: Pick<GridSelectChildRowInfo<RowElement>, UseGridNavigationSelectionRowInfoKeysParameters>;\r\n}\r\n\r\nexport interface UseGridNavigationSelectionRowReturnType<RowElement extends Element, CellElement extends Element, RM extends GridSelectChildRowInfo<RowElement>> extends\r\n    ExtendMerge<OmitStrong<UseGridNavigationRowReturnType<RowElement, CellElement>, \"context\" | \"info\">, OmitStrong<UseSelectionChildReturnType<RowElement, RM>, \"info\">> {\r\n    context: UseGridNavigationCellSelectionContext;\r\n    info: Pick<GridSelectChildRowInfo<RowElement>, UseGridNavigationSelectionRowInfoKeysReturnType>;\r\n}\r\nexport interface UseGridNavigationSelectionCellParameters<CellElement extends Element> extends\r\n    UseGenericChildParameters<UseGridNavigationCellSelectionContext, Pick<GridSelectChildCellInfo<CellElement>, UseGridNavigationSelectionCellInfoKeysParameters>>,\r\n    OmitStrong<UseGridNavigationCellParameters<CellElement>, \"context\" | \"info\"> {\r\n    info: Pick<GridSelectChildCellInfo<CellElement>, UseGridNavigationSelectionCellInfoKeysParameters>;\r\n}\r\n\r\nexport interface UseGridNavigationSelectionCellReturnType<CellElement extends Element> extends UseGridNavigationCellReturnType<CellElement> {\r\n    info: Pick<GridSelectChildCellInfo<CellElement>, UseGridNavigationSelectionCellInfoKeysReturnType>;\r\n}\r\n\r\n/**\r\n * Combines {@link useGridNavigation} and {@link useSelection}.\r\n * \r\n * @remarks The -selection behavior is optional, if you decide you need multi-selection instead within the same component.\r\n * \r\n * @hasChild {@link useGridNavigationSelectionRow}\r\n * @hasChild {@link useGridNavigationSelectionCell}\r\n * \r\n * @compositeParams\r\n */\r\nexport const useGridNavigationSelection = monitored(function useGridNavigationSelection<ParentOrRowElement extends Element, RowElement extends Element>({\r\n    gridNavigationParameters,\r\n    linearNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    managedChildrenReturn,\r\n    typeaheadNavigationParameters,\r\n    singleSelectionParameters,\r\n    multiSelectionParameters,\r\n    refElementReturn,\r\n    paginatedChildrenParameters,\r\n    rearrangeableChildrenReturn,\r\n    childrenHaveFocusReturn,\r\n    ...void2\r\n}: UseGridNavigationSelectionParameters<ParentOrRowElement, RowElement, GridSelectChildRowInfo<RowElement>>): UseGridNavigationSelectionReturnType<ParentOrRowElement, RowElement> {\r\n\r\n    const {\r\n        context: { gridNavigationRowContext, rovingTabIndexContext, typeaheadNavigationContext },\r\n        linearNavigationReturn,\r\n        managedChildrenParameters,\r\n        props,\r\n        rovingTabIndexReturn,\r\n        typeaheadNavigationReturn,\r\n    } = useGridNavigation<ParentOrRowElement, RowElement>({\r\n        gridNavigationParameters,\r\n        linearNavigationParameters,\r\n        managedChildrenReturn,\r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters, initiallyTabbedIndex: singleSelectionParameters.initiallySingleSelectedIndex || 0 },\r\n        typeaheadNavigationParameters,\r\n        paginatedChildrenParameters,\r\n        rearrangeableChildrenReturn,\r\n        refElementReturn\r\n    });\r\n\r\n    const {\r\n        childrenHaveFocusParameters,\r\n        context: { singleSelectionContext, multiSelectionContext },\r\n        multiSelectionReturn,\r\n        propsStable,\r\n        singleSelectionReturn,\r\n        ...void1\r\n    } = useSelection<ParentOrRowElement, RowElement>({\r\n        managedChildrenReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionParameters,\r\n        multiSelectionParameters,\r\n        childrenHaveFocusReturn\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    return {\r\n        context: useMemoObject({\r\n            gridNavigationRowContext,\r\n            rovingTabIndexContext,\r\n            singleSelectionContext,\r\n            multiSelectionContext,\r\n            typeaheadNavigationContext\r\n        }),\r\n        childrenHaveFocusParameters,\r\n        linearNavigationReturn,\r\n        managedChildrenParameters,\r\n        props: useMergedProps(props, propsStable),\r\n        rovingTabIndexReturn,\r\n        singleSelectionReturn,\r\n        multiSelectionReturn,\r\n        typeaheadNavigationReturn\r\n    }\r\n})\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport const useGridNavigationSelectionRow = monitored(function useGridNavigationSelectionRow<RowElement extends Element, CellElement extends Element>({\r\n    info: mcp1,\r\n    linearNavigationParameters,\r\n    managedChildrenReturn,\r\n    refElementReturn,\r\n    rovingTabIndexParameters,\r\n    textContentParameters,\r\n    typeaheadNavigationParameters,\r\n    context,\r\n    singleSelectionChildParameters,\r\n    multiSelectionChildParameters,\r\n    ...void1\r\n}: UseGridNavigationSelectionRowParameters<RowElement, CellElement, GridSelectChildRowInfo<RowElement>, GridSelectChildCellInfo<CellElement>>): UseGridNavigationSelectionRowReturnType<RowElement, CellElement, GridSelectChildRowInfo<RowElement>> {\r\n    const { hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic1, ...void6 }, info: { getSingleSelected, setLocalSingleSelected, singleSelected, getMultiSelected, setSelectedFromParent, getMultiSelectionDisabled, ...void8 }, props: propsSelection, singleSelectionChildReturn, multiSelectionChildReturn, pressParameters: { onPressSync, ...void4 }, ...void2 } = useSelectionChild<RowElement>({ info: mcp1, context, singleSelectionChildParameters, multiSelectionChildParameters });\r\n    const { hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic2, ...void7 }, info: { focusSelf, getLocallyTabbable, setLocallyTabbable, ...void9 }, props: propsGridNavigation, linearNavigationReturn, managedChildrenParameters, pressParameters: { excludeSpace, ...void5 }, rovingTabIndexChildReturn, rovingTabIndexReturn, textContentReturn, typeaheadNavigationReturn, context: contextGridNavigation, ...void3 } = useGridNavigationRow<RowElement, CellElement>({ context, linearNavigationParameters, info: mcp1, managedChildrenReturn, refElementReturn, rovingTabIndexParameters, textContentParameters, typeaheadNavigationParameters });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    assertEmptyObject(void6);\r\n    assertEmptyObject(void7);\r\n    assertEmptyObject(void8);\r\n    assertEmptyObject(void9);\r\n\r\n    return {\r\n        context: contextGridNavigation,\r\n        linearNavigationReturn,\r\n        info: {\r\n            getLocallyTabbable,\r\n            getSingleSelected,\r\n            singleSelected,\r\n            setLocallyTabbable,\r\n            setLocalSingleSelected,\r\n            focusSelf,\r\n            getMultiSelected,\r\n            setSelectedFromParent,\r\n            getMultiSelectionDisabled\r\n        },\r\n        managedChildrenParameters,\r\n        pressParameters: { onPressSync, excludeSpace },\r\n        hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: useStableCallback((hasFocus, hadFocus, reason) => { ocfic1?.(hasFocus, hadFocus, reason); ocfic2?.(hasFocus, hadFocus, reason) }) },\r\n        props: useMergedProps(propsGridNavigation, propsSelection),\r\n        rovingTabIndexChildReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionChildReturn,\r\n        multiSelectionChildReturn,\r\n        textContentReturn,\r\n        typeaheadNavigationReturn\r\n    }\r\n})\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport const useGridNavigationSelectionCell = monitored(function useGridNavigationSelectionCell<CellElement extends Element>(p: UseGridNavigationSelectionCellParameters<CellElement>): UseGridNavigationSelectionCellReturnType<CellElement> {\r\n    return useGridNavigationCell<CellElement>(p);\r\n})","import { useMergedProps } from \"../dom-helpers/use-merged-props.js\";\r\nimport { UseGenericChildParameters } from \"../preact-extensions/use-managed-children.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../util/assert.js\";\r\nimport { ElementProps, ExtendMerge, OmitStrong, TargetedOmit } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { UseListNavigationChildInfo, UseListNavigationChildInfoKeysParameters, UseListNavigationChildInfoKeysReturnType, UseListNavigationChildParameters, UseListNavigationChildReturnType, UseListNavigationContext, UseListNavigationParameters, UseListNavigationReturnType, useListNavigation, useListNavigationChild } from \"./keyboard-navigation/use-list-navigation-partial.js\";\r\nimport { UseSelectionChildInfo, UseSelectionChildInfoKeysParameters, UseSelectionChildInfoKeysReturnType, UseSelectionChildParameters, UseSelectionChildReturnType, UseSelectionContext, UseSelectionParameters, UseSelectionReturnType, useSelection, useSelectionChild } from \"./selection/use-selection.js\";\r\n\r\nexport interface UseListNavigationSelectionChildInfo<TabbableChildElement extends Element> extends UseListNavigationChildInfo<TabbableChildElement>, UseSelectionChildInfo<TabbableChildElement> { }\r\nexport interface UseListNavigationSelectionChildContext extends UseListNavigationContext, UseSelectionContext { }\r\n\r\nexport interface UseListNavigationSelectionParameters<ParentOrChildElement extends Element, ChildElement extends Element, M extends UseListNavigationSelectionChildInfo<ChildElement>> extends \r\nOmitStrong<UseListNavigationParameters<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexParameters\">, \r\nTargetedOmit<UseListNavigationParameters<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexParameters\", \"initiallyTabbedIndex\">,\r\nOmitStrong<UseSelectionParameters<ParentOrChildElement, ChildElement, M>, \"rovingTabIndexReturn\"> { }\r\nexport interface UseListNavigationSelectionReturnType<ParentOrChildElement extends Element, ChildElement extends Element> extends OmitStrong<UseListNavigationReturnType<ParentOrChildElement, ChildElement>, \"props\">, OmitStrong<UseSelectionReturnType<ParentOrChildElement, ChildElement>, \"propsStable\"> {\r\n    context: UseListNavigationSelectionChildContext;\r\n    props: ElementProps<ParentOrChildElement>;\r\n}\r\n\r\nexport type UseListNavigationSelectionChildInfoKeysParameters = UseListNavigationChildInfoKeysParameters | UseSelectionChildInfoKeysParameters;\r\nexport type UseListNavigationSelectionChildInfoKeysReturnType = UseListNavigationChildInfoKeysReturnType | UseSelectionChildInfoKeysReturnType;\r\n\r\nexport interface UseListNavigationSelectionChildParameters<ChildElement extends Element, M extends UseListNavigationSelectionChildInfo<ChildElement>> extends\r\n    UseGenericChildParameters<UseListNavigationSelectionChildContext, Pick<UseListNavigationSelectionChildInfo<ChildElement>, UseListNavigationSelectionChildInfoKeysParameters>>,\r\n    OmitStrong<UseListNavigationChildParameters<ChildElement>, \"context\" | \"info\">,\r\n    OmitStrong<UseSelectionChildParameters<ChildElement, M>, \"context\" | \"info\"> {\r\n}\r\n\r\nexport interface UseListNavigationSelectionChildReturnType<ChildElement extends Element, M extends UseListNavigationSelectionChildInfo<ChildElement>> extends OmitStrong<ExtendMerge<UseListNavigationChildReturnType<ChildElement>, UseSelectionChildReturnType<ChildElement, M>>, \"props\"> {\r\n    propsTabbable: ElementProps<any>;\r\n    propsChild: ElementProps<any>;\r\n}\r\n\r\n/**\r\n * Combines {@link useListNavigation} and {@link useSelection}.\r\n * \r\n * @remarks The -selection behavior is optional, if you decide you need multi-selection instead within the same component.\r\n * \r\n * @hasChild {@link useListNavigationSelectionChild}\r\n * \r\n * @compositeParams\r\n */\r\nexport const useListNavigationSelection = monitored(function useListNavigationSelection<ParentOrChildElement extends Element, ChildElement extends Element>({\r\n    linearNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    typeaheadNavigationParameters,\r\n    singleSelectionParameters,\r\n    multiSelectionParameters,\r\n    managedChildrenReturn,\r\n    refElementReturn,\r\n    paginatedChildrenParameters,\r\n    rearrangeableChildrenReturn,\r\n    childrenHaveFocusReturn,\r\n    ...void3\r\n}: UseListNavigationSelectionParameters<ParentOrChildElement, ChildElement, UseListNavigationSelectionChildInfo<ChildElement>>): UseListNavigationSelectionReturnType<ParentOrChildElement, ChildElement> {\r\n    const { context: contextSS, propsStable, ...retSS } = useSelection<ParentOrChildElement, ChildElement>({ \r\n        childrenHaveFocusReturn, \r\n        rovingTabIndexReturn: { setTabbableIndex: useStableCallback((...a) => { rovingTabIndexReturn.setTabbableIndex(...a) }) }, \r\n        managedChildrenReturn, \r\n        singleSelectionParameters, \r\n        multiSelectionParameters \r\n    });\r\n    const { \r\n        context: contextLN, \r\n        props, \r\n        rovingTabIndexReturn, \r\n        ...retLN \r\n    } = useListNavigation<ParentOrChildElement, ChildElement>({ \r\n        rovingTabIndexParameters: { ...rovingTabIndexParameters, initiallyTabbedIndex: singleSelectionParameters.initiallySingleSelectedIndex || 0 },\r\n        linearNavigationParameters,  \r\n        paginatedChildrenParameters, \r\n        typeaheadNavigationParameters, \r\n        managedChildrenReturn, \r\n        refElementReturn, \r\n        rearrangeableChildrenReturn \r\n    });\r\n\r\n    assertEmptyObject(void3);\r\n\r\n    return {\r\n        rovingTabIndexReturn,\r\n        ...retSS,\r\n        ...retLN,\r\n        context: useMemoObject({\r\n            ...contextLN,\r\n            ...contextSS\r\n        }),\r\n        props: useMergedProps(props, propsStable)\r\n    }\r\n})\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport const useListNavigationSelectionChild = monitored (function useListNavigationSelectionChild<ChildElement extends Element>({\r\n    info: { index, untabbable, ...void2 },\r\n    context,\r\n    refElementReturn,\r\n    textContentParameters,\r\n    singleSelectionChildParameters,\r\n    multiSelectionChildParameters,\r\n    ...void1\r\n}: UseListNavigationSelectionChildParameters<ChildElement, UseListNavigationSelectionChildInfo<ChildElement>>): UseListNavigationSelectionChildReturnType<ChildElement, UseListNavigationSelectionChildInfo<ChildElement>> {\r\n    const {\r\n        hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic2, ...void3 },\r\n        info: infoSS,\r\n        multiSelectionChildReturn,\r\n        singleSelectionChildReturn,\r\n        props: propsSS,\r\n        pressParameters: { onPressSync },\r\n        ...void9\r\n    } = useSelectionChild<ChildElement>({\r\n        info: { index, untabbable },\r\n        context,\r\n        multiSelectionChildParameters,\r\n        singleSelectionChildParameters\r\n    });\r\n\r\n    const {\r\n        hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic1, ...void6 },\r\n        pressParameters: { excludeSpace },\r\n        rovingTabIndexChildReturn,\r\n        textContentReturn,\r\n        props: propsLN,\r\n        info: infoLN,\r\n        ...void8\r\n    } = useListNavigationChild<ChildElement>({\r\n        info: { index, untabbable },\r\n        context,\r\n        refElementReturn,\r\n        textContentParameters,\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void6);\r\n    assertEmptyObject(void8);\r\n    assertEmptyObject(void9);\r\n\r\n    return {\r\n        hasCurrentFocusParameters: {\r\n            onCurrentFocusedInnerChanged: useStableCallback((focused, previouslyFocused, e) => {\r\n                ocfic1?.(focused, previouslyFocused, e);\r\n                ocfic2?.(focused, previouslyFocused, e);\r\n            })\r\n        },\r\n        pressParameters: { onPressSync, excludeSpace },\r\n        info: { ...infoSS, ...infoLN },\r\n        rovingTabIndexChildReturn,\r\n        multiSelectionChildReturn,\r\n        singleSelectionChildReturn,\r\n        textContentReturn,\r\n        propsChild: propsSS,\r\n        propsTabbable: propsLN\r\n    }\r\n})\r\n","import { OnPassiveStateChange, PassiveStateUpdater, returnFalse, returnZero, runImmediately, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../preact-extensions/use-stable-getter.js\";\r\nimport { FocusEventType, TargetedPick } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { UseHasCurrentFocusParameters } from \"./use-has-current-focus.js\";\r\n\r\n\r\nexport interface UseChildrenHaveFocusParametersSelf<T extends Element> {\r\n    /**\r\n     * Fires `true` once any of the children have become focused, and `false` once all of the children have become unfocused.\r\n     * \r\n     * @stable\r\n     */\r\n    onCompositeFocusChange: null | OnPassiveStateChange<boolean, FocusEventType<T> | undefined>;\r\n}\r\n\r\n\r\nexport interface UseChildrenHaveFocusParameters<T extends Element> {\r\n    childrenHaveFocusParameters: UseChildrenHaveFocusParametersSelf<T>\r\n}\r\n\r\nexport interface UseChildrenHaveFocusChildReturnType<E extends Element> extends TargetedPick<UseHasCurrentFocusParameters<E>, \"hasCurrentFocusParameters\", \"onCurrentFocusedInnerChanged\"> {\r\n}\r\n\r\nexport interface UseChildrenHaveFocusReturnTypeSelf {\r\n    /** @stable */\r\n    getAnyFocused(): boolean;\r\n}\r\n\r\nexport interface UseChildrenHaveFocusReturnType<T extends Element> {\r\n    childrenHaveFocusReturn: UseChildrenHaveFocusReturnTypeSelf;\r\n    context: UseChildrenHaveFocusContext<T>;\r\n}\r\n\r\nexport interface UseChildrenHaveFocusContext<T extends Element> {\r\n    childrenHaveFocusChildContext: {\r\n        /** @stable */\r\n        setFocusCount: PassiveStateUpdater<number, FocusEventType<T> | undefined>;\r\n    }\r\n}\r\n\r\nexport interface UseChildrenHaveFocusChildParameters<T extends Element> {\r\n    context: UseChildrenHaveFocusContext<T>;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * Allows a composite component (such as a radio group or listbox) to listen\r\n * for an \"overall focusin/out\" event; this hook lets you know when focus has \r\n * moved in/out of this grouping of children EVEN IF there is no actual parent DOM element.\r\n * \r\n * @remarks I.E. you can use this without needing a parent `<div>` to listen for a `focusout` event.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useChildrenHaveFocusChild}\r\n */\r\nexport const useChildrenHaveFocus = monitored(function useChildrenHaveFocus<ChildElement extends Element>(args: UseChildrenHaveFocusParameters<ChildElement>): UseChildrenHaveFocusReturnType<ChildElement> {\r\n    const { childrenHaveFocusParameters: { onCompositeFocusChange } } = args;\r\n\r\n    const [getAnyFocused, setAnyFocused] = usePassiveState<boolean, FocusEventType<ChildElement> | undefined>(onCompositeFocusChange, returnFalse, runImmediately);\r\n    const [_getFocusCount, setFocusCount] = usePassiveState<number, FocusEventType<ChildElement> | undefined>(useStableCallback<OnPassiveStateChange<number, FocusEventType<ChildElement> | undefined>>((anyFocused, anyPreviouslyFocused, e) => {\r\n        console.assert(anyFocused >= 0 && anyFocused <= 1);\r\n        setAnyFocused(!!(anyFocused && !anyPreviouslyFocused), e);\r\n    }), returnZero, setTimeout);    // setTimeout is used for the debounce to be somewhat generous with timing, and to guard against the default being runImmediately...\r\n\r\n    return {\r\n        childrenHaveFocusReturn: { getAnyFocused },\r\n        context: useMemoObject<UseChildrenHaveFocusContext<ChildElement>>({ childrenHaveFocusChildContext: useMemoObject<UseChildrenHaveFocusContext<ChildElement>[\"childrenHaveFocusChildContext\"]>({ setFocusCount }) }),\r\n    }\r\n})\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport const useChildrenHaveFocusChild = monitored(function useChildrenHaveFocusChild<E extends Element>({ context: { childrenHaveFocusChildContext: { setFocusCount } } }: UseChildrenHaveFocusChildParameters<E>): UseChildrenHaveFocusChildReturnType<E> {\r\n    return {\r\n        hasCurrentFocusParameters: {\r\n            onCurrentFocusedInnerChanged: useStableCallback((focused, prev, e) => {\r\n                if (focused) {\r\n                    setFocusCount(p => (p ?? 0) + 1, e);\r\n                }\r\n                else if (!focused && prev) {\r\n                    setFocusCount(p => (p ?? 0) - 1, e);\r\n                }\r\n            }),\r\n        }\r\n    };\r\n})","import { UseRefElementReturnType } from \"../dom-helpers/use-ref-element.js\";\r\n\r\nimport { OnPassiveStateChange, returnFalse, runImmediately, useEnsureStability, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { TargetedPick, onfocusin, onfocusout, useCallback, useEffect, useRef } from \"../util/lib.js\";\r\nimport { ElementProps, FocusEventType, Nullable } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport interface UseHasCurrentFocusParametersSelf<T extends Node> {\r\n\r\n    /**\r\n     * Whether the element itself currently has focus.\r\n     * \r\n     * `prevFocused` is generally the opposite of `focused`, but on mount it's `undefined` while `focused` is probably false (both falsy)\r\n     * \r\n     * @stable\r\n     */\r\n    onCurrentFocusedChanged: Nullable<OnPassiveStateChange<boolean, FocusEventType<T> | undefined>>;\r\n\r\n    /**\r\n     * Like `onFocusedChanged`, but also *additionally* if any child elements are focused.\r\n     * \r\n     * @see this.onFocusedChanged\r\n     * \r\n     * @stable\r\n     */\r\n    onCurrentFocusedInnerChanged: Nullable<OnPassiveStateChange<boolean, FocusEventType<T> | undefined>>;\r\n}\r\n\r\nexport interface UseHasCurrentFocusParameters<T extends Node> extends TargetedPick<UseRefElementReturnType<T>, \"refElementReturn\", \"getElement\"> {\r\n    hasCurrentFocusParameters: UseHasCurrentFocusParametersSelf<T>;\r\n}\r\n\r\nexport interface UseHasCurrentFocusReturnTypeSelf<E extends Element> {\r\n    propsStable: ElementProps<E>\r\n    /**\r\n     * Modifies the element to be able to track its own focus state\r\n     */\r\n    //propsStable: ElementProps<T>;\r\n\r\n    /** @stable */\r\n    getCurrentFocused(): boolean;\r\n    /** @stable */\r\n    getCurrentFocusedInner(): boolean;\r\n}\r\n\r\nexport interface UseHasCurrentFocusReturnType<E extends Element> {\r\n    hasCurrentFocusReturn: UseHasCurrentFocusReturnTypeSelf<E>;\r\n}\r\n\r\n/**\r\n * Allows monitoring whether the rendered element is or is not focused directly (i.e. would satisfy `:focus`).\r\n * \r\n * @see {@link useHasLastFocus}, in which even if the `body` is clicked it's not considered a loss in focus.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useHasCurrentFocus = monitored(function useHasCurrentFocus<T extends Element>(args: UseHasCurrentFocusParameters<T>): UseHasCurrentFocusReturnType<T> {\r\n    const {\r\n        hasCurrentFocusParameters: { onCurrentFocusedChanged, onCurrentFocusedInnerChanged },\r\n        refElementReturn: { getElement }\r\n    } = args;\r\n\r\n\r\n    useEnsureStability(\"useHasCurrentFocus\", onCurrentFocusedChanged, onCurrentFocusedInnerChanged, getElement);\r\n\r\n    const [getFocused, setFocused] = usePassiveState<boolean, FocusEventType<T> | undefined>(onCurrentFocusedChanged, returnFalse, runImmediately);\r\n    const [getFocusedInner, setFocusedInner] = usePassiveState<boolean, FocusEventType<T> | undefined>(onCurrentFocusedInnerChanged, returnFalse, runImmediately);\r\n\r\n    const onFocusIn = useCallback((e: FocusEventType<T>) => {\r\n        setFocusedInner(true, e);\r\n        setFocused(e.target == getElement(), e)\r\n    }, []);\r\n\r\n    const onFocusOut = useCallback((e: FocusEventType<T>) => {\r\n        // Even if we're focusOut-ing to another inner element,\r\n        // that'll be caught during onFocusIn,\r\n        // so just set everything to false and let that revert things back to true if necessary.\r\n        setFocusedInner(false, e);\r\n        setFocused(false, e);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setFocused(false, undefined);\r\n            setFocusedInner(false, undefined);\r\n        }\r\n    }, []);\r\n\r\n    const propsStable = useRef<ElementProps<T>>({\r\n        [onfocusin]: onFocusIn,\r\n        [onfocusout]: onFocusOut\r\n    });\r\n\r\n    return {\r\n        hasCurrentFocusReturn: {\r\n            propsStable: propsStable.current,\r\n            getCurrentFocused: getFocused,\r\n            getCurrentFocusedInner: getFocusedInner,\r\n        }\r\n    };\r\n})\r\n\r\n","import { UseGridNavigationRowContext } from \"../component-detail/keyboard-navigation/use-grid-navigation-partial.js\";\r\nimport { RovingTabIndexChildContext } from \"../component-detail/keyboard-navigation/use-roving-tabindex.js\";\r\nimport { UseTypeaheadNavigationContext } from \"../component-detail/keyboard-navigation/use-typeahead-navigation.js\";\r\nimport { UsePaginatedChildrenReturnType } from \"../component-detail/processed-children/use-paginated-children.js\";\r\nimport { UseProcessedChildContext, UseProcessedChildInfo, UseProcessedChildrenContext, UseProcessedChildrenParameters, UseProcessedChildrenReturnType, useProcessedChildren } from \"../component-detail/processed-children/use-processed-children.js\";\r\nimport { UseRearrangeableChildrenReturnType, useCreateProcessedChildrenContext } from \"../component-detail/processed-children/use-rearrangeable-children.js\";\r\nimport { UseStaggeredChildrenReturnType } from \"../component-detail/processed-children/use-staggered-children.js\";\r\nimport { MakeSelectionDeclarativeParameters, UseSelectionContext, useSelectionDeclarative } from \"../component-detail/selection/use-selection.js\";\r\nimport { GridSelectChildCellInfo, GridSelectChildRowInfo, UseGridNavigationCellSelectionContext, UseGridNavigationSelectionCellInfoKeysParameters, UseGridNavigationSelectionCellParameters, UseGridNavigationSelectionCellReturnType, UseGridNavigationSelectionParameters, UseGridNavigationSelectionReturnType, UseGridNavigationSelectionRowInfoKeysParameters, UseGridNavigationSelectionRowParameters, UseGridNavigationSelectionRowReturnType, useGridNavigationSelection, useGridNavigationSelectionCell, useGridNavigationSelectionRow } from \"../component-detail/use-grid-navigation-selection.js\";\r\nimport { useMergedProps } from \"../dom-helpers/use-merged-props.js\";\r\nimport { UseRefElementParameters, UseRefElementReturnType, useRefElement } from \"../dom-helpers/use-ref-element.js\";\r\nimport { UseChildrenHaveFocusContext, UseChildrenHaveFocusReturnType, useChildrenHaveFocus } from \"../observers/use-children-have-focus.js\";\r\nimport { UseHasCurrentFocusParameters, UseHasCurrentFocusReturnType, useHasCurrentFocus } from \"../observers/use-has-current-focus.js\";\r\nimport { ManagedChildInfo, ManagedChildren, UseGenericChildParameters, UseManagedChildReturnType, UseManagedChildrenContext, UseManagedChildrenReturnType, useManagedChild, useManagedChildren } from \"../preact-extensions/use-managed-children.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../util/assert.js\";\r\nimport { TargetedOmit, useCallback } from \"../util/lib.js\";\r\nimport { ElementProps, OmitStrong } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n\r\nexport type UseCompleteGridNavigationRowInfoKeysParameters<M extends UseCompleteGridNavigationRowInfo<any>> =\r\n    // All types in the user-supplied info type that aren't in the base type (since we handle it) \r\n    Exclude<keyof M, keyof UseCompleteGridNavigationRowInfo<any>> |\r\n    // except for these extra types! Because the user supplies them.\r\n    UseGridNavigationSelectionRowInfoKeysParameters;\r\n\r\nexport type UseCompleteGridNavigationCellInfoKeysParameters<M extends UseCompleteGridNavigationCellInfo<any>> =\r\n    Exclude<keyof M, keyof UseCompleteGridNavigationCellInfo<any>> |\r\n    UseGridNavigationSelectionCellInfoKeysParameters | \"focusSelf\";\r\n\r\nexport interface UseCompleteGridNavigationRowInfo<RowElement extends Element> extends GridSelectChildRowInfo<RowElement>, ManagedChildInfo<number> { }\r\nexport interface UseCompleteGridNavigationCellInfo<CellElement extends Element> extends GridSelectChildCellInfo<CellElement>, ManagedChildInfo<number> { }\r\n\r\nexport interface UseCompleteGridNavigationRowsInfo<ChildElement extends Element> extends\r\n    UseProcessedChildInfo<ChildElement>,\r\n    ManagedChildInfo<number> { }\r\n\r\nexport interface UseCompleteGridNavigationParameters<ParentOrRowElement extends Element, RowElement extends Element, M extends UseCompleteGridNavigationRowInfo<RowElement>> extends\r\n    OmitStrong<UseGridNavigationSelectionParameters<ParentOrRowElement, RowElement, M>, \"rearrangeableChildrenReturn\" | \"refElementReturn\" | \"managedChildrenReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\" | \"rovingTabIndexParameters\" | \"childrenHaveFocusReturn\">,\r\n    TargetedOmit<UseGridNavigationSelectionParameters<ParentOrRowElement, RowElement, M>, \"linearNavigationParameters\", \"getLowestIndex\" | \"getHighestIndex\" | \"isValidForLinearNavigation\">,\r\n    TargetedOmit<UseGridNavigationSelectionParameters<ParentOrRowElement, RowElement, M>, \"typeaheadNavigationParameters\", \"isValidForTypeaheadNavigation\">,\r\n    TargetedOmit<UseGridNavigationSelectionParameters<ParentOrRowElement, RowElement, M>, \"rovingTabIndexParameters\", \"untabbableBehavior\">,\r\n    Pick<UseRefElementParameters<ParentOrRowElement>, \"refElementParameters\"> {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport interface UseCompleteGridNavigationRowsParameters<TabbableChildElement extends Element, M extends UseCompleteGridNavigationRowsInfo<TabbableChildElement>> extends\r\n    OmitStrong<UseProcessedChildrenParameters<TabbableChildElement, M>, \"refElementReturn\"> {\r\n}\r\n\r\nexport interface UseCompleteGridNavigationRowsReturnType<TabbableChildElement extends Element, M extends UseCompleteGridNavigationRowsInfo<TabbableChildElement>> extends\r\n    OmitStrong<UseRearrangeableChildrenReturnType<M>, never>,\r\n    OmitStrong<UsePaginatedChildrenReturnType, \"context\">,\r\n    OmitStrong<UseStaggeredChildrenReturnType, \"context\"> {\r\n    context: UseProcessedChildContext<TabbableChildElement, M>;\r\n}\r\n\r\n\r\n\r\n\r\nexport interface UseCompleteGridNavigationRowParameters<RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends\r\n    UseGenericChildParameters<CompleteGridNavigationRowContext<RowElement, RM>, Pick<RM, UseCompleteGridNavigationRowInfoKeysParameters<RM>>>,\r\n    OmitStrong<UseGridNavigationSelectionRowParameters<RowElement, CellElement, RM, CM>, \"info\" | \"context\" | \"textContentParameters\" | \"managedChildrenReturn\" | \"refElementReturn\" | \"linearNavigationParameters\" | \"typeaheadNavigationParameters\">,\r\n    TargetedOmit<UseGridNavigationSelectionRowParameters<RowElement, CellElement, RM, CM>, \"textContentParameters\", never>,\r\n    TargetedOmit<UseGridNavigationSelectionRowParameters<RowElement, CellElement, RM, CM>, \"linearNavigationParameters\", \"getLowestIndex\" | \"getHighestIndex\" | \"isValidForLinearNavigation\">,\r\n    TargetedOmit<UseGridNavigationSelectionRowParameters<RowElement, CellElement, RM, CM>, \"typeaheadNavigationParameters\", \"isValidForTypeaheadNavigation\">,\r\n    OmitStrong<UseHasCurrentFocusParameters<RowElement>, \"refElementReturn\"> {\r\n}\r\n\r\nexport interface UseCompleteGridNavigationCellParameters<CellElement extends Element, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends\r\n    UseGenericChildParameters<CompleteGridNavigationCellContext<CellElement, CM>, Pick<CM, UseCompleteGridNavigationCellInfoKeysParameters<CM>>>,\r\n\r\n    OmitStrong<UseGridNavigationSelectionCellParameters<CellElement>, \"info\" | \"context\" | \"refElementReturn\"> {\r\n}\r\n\r\n\r\nexport interface CompleteGridNavigationRowContext<RowElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>> extends\r\n    UseManagedChildrenContext<RM>,\r\n\r\n    UseChildrenHaveFocusContext<RowElement>,\r\n    UseTypeaheadNavigationContext,\r\n    UseSelectionContext,\r\n    RovingTabIndexChildContext,\r\n    UseGridNavigationRowContext {\r\n    contextProcessing: UseProcessedChildrenContext;\r\n}\r\n\r\n\r\nexport interface CompleteGridNavigationCellContext<ChildElement extends Element, CM extends UseCompleteGridNavigationCellInfo<ChildElement>> extends\r\n    UseManagedChildrenContext<CM>,\r\n    UseTypeaheadNavigationContext,\r\n    RovingTabIndexChildContext,\r\n    UseGridNavigationCellSelectionContext {\r\n}\r\n\r\n\r\nexport interface UseCompleteGridNavigationReturnType<ParentOrRowElement extends Element, RowElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>> extends\r\n    OmitStrong<UseGridNavigationSelectionReturnType<ParentOrRowElement, RowElement>, \"props\" | \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\">,\r\n    Pick<UseManagedChildrenReturnType<RM>, \"managedChildrenReturn\">,\r\n    Pick<UseRefElementReturnType<ParentOrRowElement>, \"refElementReturn\">,\r\n    TargetedOmit<UseProcessedChildrenReturnType<RowElement, any>, \"rearrangeableChildrenReturn\", \"indexDemangler\" | \"indexMangler\" | \"children\">,\r\n    Pick<UseChildrenHaveFocusReturnType<RowElement>, \"childrenHaveFocusReturn\"> {\r\n    contextChildren: CompleteGridNavigationRowContext<RowElement, RM>;\r\n    contextProcessing: UseProcessedChildrenContext;\r\n    props: ElementProps<ParentOrRowElement>;\r\n}\r\n\r\nexport interface UseCompleteGridNavigationRowReturnType<RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends\r\n    OmitStrong<UseGridNavigationSelectionRowReturnType<RowElement, CellElement, RM>, \"hasCurrentFocusParameters\" | \"managedChildrenParameters\" | \"info\">,\r\n    Pick<UseManagedChildrenReturnType<CM>, \"managedChildrenReturn\">,\r\n    Pick<UseHasCurrentFocusReturnType<RowElement>, \"hasCurrentFocusReturn\">,\r\n    Pick<UseRefElementReturnType<RowElement>, \"refElementReturn\">,\r\n    Pick<UseManagedChildReturnType<RM>, \"managedChildReturn\"> {\r\n    context: CompleteGridNavigationCellContext<CellElement, CM>;\r\n}\r\n\r\nexport interface UseCompleteGridNavigationCellReturnType<CellElement extends Element, CM extends UseCompleteGridNavigationCellInfo<CellElement>> extends\r\n    OmitStrong<UseGridNavigationSelectionCellReturnType<CellElement>, \"hasCurrentFocusParameters\" | \"info\">,\r\n    OmitStrong<UseRefElementReturnType<CellElement>, \"propsStable\">,\r\n    UseHasCurrentFocusReturnType<CellElement>,\r\n    UseManagedChildReturnType<CM> {\r\n    props: ElementProps<CellElement>;\r\n}\r\n\r\n/**\r\n * Combines all the grid- (&amp; list-) related hooks into one giant hook that accomplishes everything.\r\n * \r\n * @compositeParams\r\n * \r\n * @hasChild {@link useCompleteGridNavigationRow}\r\n * @hasChild {@link useCompleteGridNavigationCell}\r\n */\r\nexport const useCompleteGridNavigation = monitored(function useCompleteGridNavigation<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>>({\r\n    gridNavigationParameters,\r\n    linearNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    singleSelectionParameters,\r\n    multiSelectionParameters,\r\n    typeaheadNavigationParameters,\r\n    paginatedChildrenParameters,\r\n    refElementParameters,\r\n    ...void1\r\n}: UseCompleteGridNavigationParameters<ParentOrRowElement, RowElement, RM>): UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, RM> {\r\n    assertEmptyObject(void1);\r\n    const getChildren: () => ManagedChildren<RM> = useCallback<() => ManagedChildren<RM>>(() => managedChildrenReturn.getChildren(), []);\r\n    const getLowestChildIndex: (() => number) = useCallback<() => number>(() => getChildren().getLowestIndex(), []);\r\n    const getHighestChildIndex: (() => number) = useCallback<() => number>(() => getChildren().getHighestIndex(), []);\r\n\r\n\r\n    const isValidForNavigation = useCallback((i: number) => {\r\n        const child = getChildren().getAt(i);\r\n        if (child == null)\r\n            return false;\r\n        if (child.untabbable)\r\n            return false;\r\n        return true;\r\n    }, []);\r\n\r\n    const { refElementReturn, propsStable, ...void2 } = useRefElement<ParentOrRowElement>({ refElementParameters })\r\n\r\n    // Grab the information from the array of children we may or may not render.\r\n    // (see useProcessedChildren -- it send this information to us if it's used.)\r\n    // These are all stable functions, except for `contextPreprocessing`, which is how it sends things to us.\r\n    const { context: contextProcessing, indexDemangler, indexMangler, rearrange, reverse, shuffle, sort } = useCreateProcessedChildrenContext();\r\n    const getAnyFocused = useStableCallback((): boolean => childrenHaveFocusReturn.getAnyFocused());\r\n    const {\r\n        childrenHaveFocusParameters,\r\n        managedChildrenParameters,\r\n        context: { gridNavigationRowContext, rovingTabIndexContext, singleSelectionContext, multiSelectionContext, typeaheadNavigationContext },\r\n        props,\r\n        rovingTabIndexReturn,\r\n        linearNavigationReturn,\r\n        singleSelectionReturn,\r\n        multiSelectionReturn,\r\n        typeaheadNavigationReturn,\r\n        ...void3\r\n    }: UseGridNavigationSelectionReturnType<ParentOrRowElement, RowElement> = useGridNavigationSelection<ParentOrRowElement, RowElement>({\r\n        gridNavigationParameters,\r\n        singleSelectionParameters,\r\n        multiSelectionParameters,\r\n        paginatedChildrenParameters,\r\n        refElementReturn,\r\n        linearNavigationParameters: { getLowestIndex: getLowestChildIndex, getHighestIndex: getHighestChildIndex, isValidForLinearNavigation: isValidForNavigation, ...linearNavigationParameters },\r\n        managedChildrenReturn: { getChildren },\r\n        rovingTabIndexParameters: { untabbableBehavior: \"focus-parent\", ...rovingTabIndexParameters },\r\n        typeaheadNavigationParameters: { isValidForTypeaheadNavigation: isValidForNavigation, ...typeaheadNavigationParameters },\r\n        childrenHaveFocusReturn: { getAnyFocused },\r\n        rearrangeableChildrenReturn: { indexDemangler, indexMangler }\r\n    });\r\n\r\n\r\n\r\n    const { context: { childrenHaveFocusChildContext }, childrenHaveFocusReturn } = useChildrenHaveFocus<RowElement>({ childrenHaveFocusParameters });\r\n    const { context: { managedChildContext }, managedChildrenReturn }: UseManagedChildrenReturnType<RM> = useManagedChildren<RM>({ managedChildrenParameters });\r\n    const { getTabbableIndex, setTabbableIndex } = rovingTabIndexReturn;\r\n    const processedChildrenContext = useMemoObject({ getTabbableIndex, setTabbableIndex, getAnyFocused, getElement: refElementReturn.getElement });\r\n    const c2 = useMemoObject({\r\n        processedChildrenContext,\r\n        ...contextProcessing\r\n    });\r\n    const context = useMemoObject<CompleteGridNavigationRowContext<RowElement, RM>>({\r\n        singleSelectionContext,\r\n        multiSelectionContext,\r\n        managedChildContext,\r\n        rovingTabIndexContext,\r\n        typeaheadNavigationContext,\r\n        childrenHaveFocusChildContext,\r\n        gridNavigationRowContext,\r\n        contextProcessing: c2\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n\r\n    return {\r\n        contextChildren: context,\r\n        contextProcessing: c2,\r\n        props: useMergedProps(props, propsStable),\r\n        refElementReturn,\r\n\r\n        managedChildrenReturn,\r\n        rovingTabIndexReturn,\r\n        childrenHaveFocusReturn,\r\n        linearNavigationReturn,\r\n        singleSelectionReturn,\r\n        multiSelectionReturn,\r\n        typeaheadNavigationReturn,\r\n        rearrangeableChildrenReturn: { rearrange, reverse, shuffle, sort }\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n/**\r\n * Helper for `useCompleteGridNavigation` that handles the array of children in a way that allows for sorting, pagination, and staggering. Optional but recommended.\r\n * \r\n * @remarks Each child must also call `useProcessedChild`, and use its information to optimize \r\n */\r\nexport const useCompleteGridNavigationRows = monitored(function useCompleteGridNavigationRows<TabbableChildElement extends Element, M extends UseCompleteGridNavigationRowsInfo<TabbableChildElement>>({\r\n    context,\r\n    paginatedChildrenParameters,\r\n    rearrangeableChildrenParameters,\r\n    staggeredChildrenParameters,\r\n    managedChildrenParameters\r\n}: UseCompleteGridNavigationRowsParameters<TabbableChildElement, M>): UseCompleteGridNavigationRowsReturnType<TabbableChildElement, M> {\r\n    const {\r\n        context: contextRPS, \r\n        paginatedChildrenReturn,\r\n        rearrangeableChildrenReturn,\r\n        staggeredChildrenReturn,\r\n    } = useProcessedChildren<TabbableChildElement, M>({\r\n        paginatedChildrenParameters,\r\n        rearrangeableChildrenParameters,\r\n        staggeredChildrenParameters,\r\n        managedChildrenParameters,\r\n        refElementReturn: context.processedChildrenContext,\r\n        context,\r\n    });\r\n\r\n    return {\r\n        context: contextRPS,\r\n        paginatedChildrenReturn,\r\n        rearrangeableChildrenReturn,\r\n        staggeredChildrenReturn\r\n    }\r\n})\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport const useCompleteGridNavigationRow = monitored(function useCompleteGridNavigationRow<RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>>({\r\n\r\n    info: { index, untabbable, ...customUserInfo },\r\n    context: contextIncomingForRowAsChildOfTable,\r\n    textContentParameters,\r\n\r\n    linearNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    typeaheadNavigationParameters,\r\n    hasCurrentFocusParameters: { onCurrentFocusedChanged: ocfc1, onCurrentFocusedInnerChanged: ocfic3, ...void5 },\r\n    singleSelectionChildParameters,\r\n    multiSelectionChildParameters,\r\n    ...void1\r\n\r\n}: UseCompleteGridNavigationRowParameters<RowElement, CellElement, RM, CM>): UseCompleteGridNavigationRowReturnType<RowElement, CellElement, RM, CM> {\r\n\r\n    // Create some helper functions\r\n    const getChildren = useCallback(() => managedChildrenReturn.getChildren(), []);\r\n    const getHighestChildIndex: (() => number) = useCallback<() => number>(() => getChildren().getHighestIndex(), []);\r\n    const getLowestChildIndex: (() => number) = useCallback<() => number>(() => getChildren().getLowestIndex(), []);\r\n    const isValidForNavigation = useCallback((i: number) => {\r\n        const child = getChildren().getAt(i);\r\n        if (child == null)\r\n            return false;\r\n        if (child.untabbable)\r\n            return false;\r\n        return true;\r\n    }, []);\r\n\r\n    // Someone somewhere needs useRefElement, no shock there\r\n    const { refElementReturn, propsStable, ...void6 } = useRefElement<RowElement>({ refElementParameters: {} });\r\n\r\n    // Enormous bag of parameters for useGridNavigationRow\r\n    const parameters: UseGridNavigationSelectionRowParameters<RowElement, CellElement, RM, CM> = {\r\n        rovingTabIndexParameters,\r\n        typeaheadNavigationParameters: { isValidForTypeaheadNavigation: isValidForNavigation, ...typeaheadNavigationParameters },\r\n        linearNavigationParameters: { isValidForLinearNavigation: isValidForNavigation, getHighestIndex: getHighestChildIndex, getLowestIndex: getLowestChildIndex, ...linearNavigationParameters },\r\n        managedChildrenReturn: { getChildren },\r\n        refElementReturn,\r\n        context: contextIncomingForRowAsChildOfTable,\r\n        info: { index, untabbable },\r\n        textContentParameters,\r\n        singleSelectionChildParameters,\r\n        multiSelectionChildParameters\r\n    }\r\n\r\n    // Actually call useGridNavigationRow,\r\n    // and get an enormous bag of return values\r\n    const {\r\n        linearNavigationReturn,\r\n        managedChildrenParameters,\r\n        pressParameters,\r\n        rovingTabIndexChildReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionChildReturn,\r\n        multiSelectionChildReturn,\r\n        textContentReturn,\r\n        typeaheadNavigationReturn,\r\n        context: contextGNR,\r\n        info: infoRowReturn,\r\n        props: p3,\r\n        hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic1, ...void3 },\r\n        ...void2\r\n    }: UseGridNavigationSelectionRowReturnType<RowElement, CellElement, RM> = useGridNavigationSelectionRow<RowElement, CellElement>(parameters);\r\n\r\n    // This is all the info the parent needs about us, the row\r\n    // (NOT the info the cells provide to us, the row)\r\n    const completeInfo: UseCompleteGridNavigationRowInfo<RowElement> = {\r\n        getElement: refElementReturn.getElement,\r\n        index,\r\n        untabbable,\r\n        ...infoRowReturn,\r\n    }\r\n\r\n    // Call both `useManagedChildren` and `useManagedChild` with their appropriate parameters.\r\n    const { context: contextMC, managedChildrenReturn } = useManagedChildren<CM>({ managedChildrenParameters });\r\n    const { managedChildReturn, ...void4 } = useManagedChild<RM>({ context: contextIncomingForRowAsChildOfTable, info: { ...completeInfo, ...customUserInfo } as RM })\r\n\r\n    const context = useMemoObject<CompleteGridNavigationCellContext<CellElement, CM>>({\r\n        ...contextGNR,\r\n        ...contextMC,\r\n    });\r\n\r\n    const { hasCurrentFocusReturn } = useHasCurrentFocus<RowElement>({\r\n        refElementReturn,\r\n        hasCurrentFocusParameters: {\r\n            onCurrentFocusedChanged: ocfc1,\r\n            onCurrentFocusedInnerChanged: useStableCallback((focused, prevFocused, reason) => {\r\n                // Call grid navigation's focus change\r\n                ocfic1?.(focused, prevFocused, reason);\r\n                ocfic3?.(focused, prevFocused, reason);\r\n            }),\r\n        }\r\n    });\r\n\r\n    const props = useMergedProps(\r\n        propsStable,\r\n        p3,\r\n        hasCurrentFocusReturn.propsStable,\r\n    );\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    assertEmptyObject(void6);\r\n\r\n    return {\r\n        pressParameters,\r\n        hasCurrentFocusReturn,\r\n        managedChildrenReturn,\r\n        context,\r\n        managedChildReturn,\r\n        linearNavigationReturn,\r\n        rovingTabIndexChildReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionChildReturn,\r\n        multiSelectionChildReturn,\r\n        textContentReturn,\r\n        typeaheadNavigationReturn,\r\n        refElementReturn,\r\n        props,\r\n    }\r\n})\r\n\r\n/**\r\n * @compositeParams\r\n */\r\nexport const useCompleteGridNavigationCell = monitored(function useCompleteGridNavigationCell<CellElement extends Element, CM extends UseCompleteGridNavigationCellInfo<CellElement>>({\r\n    gridNavigationCellParameters,\r\n    context,\r\n    textContentParameters,\r\n    info: { focusSelf, index, untabbable, ...customUserInfo },\r\n    ...void1\r\n}: UseCompleteGridNavigationCellParameters<CellElement, CM>): UseCompleteGridNavigationCellReturnType<CellElement, CM> {\r\n    const { refElementReturn, propsStable } = useRefElement<CellElement>({ refElementParameters: {} });\r\n\r\n    const {\r\n        hasCurrentFocusParameters,\r\n        rovingTabIndexChildReturn,\r\n        textContentReturn,\r\n        pressParameters: { excludeSpace: es1 },\r\n        props: propsRti,\r\n        info: info2,\r\n        ...void2\r\n    } = useGridNavigationSelectionCell<CellElement>({\r\n        gridNavigationCellParameters,\r\n        info: { index, untabbable },\r\n        context,\r\n        refElementReturn,\r\n        textContentParameters,\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    const { hasCurrentFocusReturn } = useHasCurrentFocus<CellElement>({\r\n        hasCurrentFocusParameters: {\r\n            onCurrentFocusedChanged: null,\r\n            ...hasCurrentFocusParameters\r\n        },\r\n        refElementReturn\r\n    });\r\n\r\n    const baseInfo: UseCompleteGridNavigationCellInfo<CellElement> = {\r\n        getElement: refElementReturn.getElement,\r\n        getLocallyTabbable: rovingTabIndexChildReturn.getTabbable,\r\n        setLocallyTabbable: info2.setLocallyTabbable,\r\n        focusSelf,\r\n        index,\r\n        untabbable\r\n    }\r\n\r\n    const { managedChildReturn } = useManagedChild<CM>({ context, info: { ...baseInfo, ...customUserInfo } as CM })\r\n\r\n    const props = useMergedProps(\r\n        propsStable,\r\n        propsRti,\r\n        hasCurrentFocusReturn.propsStable\r\n    );\r\n\r\n    return {\r\n        props,\r\n        refElementReturn,\r\n        rovingTabIndexChildReturn,\r\n        pressParameters: { excludeSpace: useStableCallback(() => (es1?.() || false)) },\r\n        hasCurrentFocusReturn,\r\n        managedChildReturn,\r\n        textContentReturn\r\n    }\r\n})\r\n\r\nexport interface UseCompleteGridNavigationDeclarativeParameters<ParentOrRowElement extends Element, RowElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>> extends\r\n    OmitStrong<MakeSelectionDeclarativeParameters<UseCompleteGridNavigationParameters<ParentOrRowElement, RowElement, RM>>, \"singleSelectionReturn\"> { }\r\n\r\nexport interface UseCompleteGridNavigationDeclarativeReturnType<ParentOrRowElement extends Element, RowElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>> extends\r\n    TargetedOmit<UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, RM>, \"singleSelectionReturn\", \"changeSingleSelectedIndex\">,\r\n    TargetedOmit<UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, RM>, \"multiSelectionReturn\", never>,\r\n    OmitStrong<UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, RM>, \"singleSelectionReturn\" | \"multiSelectionReturn\"> { }\r\n\r\nexport function useCompleteGridNavigationDeclarative<ParentOrRowElement extends Element, RowElement extends Element, CellElement extends Element, RM extends UseCompleteGridNavigationRowInfo<RowElement>, CM extends UseCompleteGridNavigationCellInfo<CellElement>>({\r\n    singleSelectionDeclarativeParameters,\r\n    singleSelectionParameters,\r\n    ...normalGridNavParameters\r\n}: UseCompleteGridNavigationDeclarativeParameters<ParentOrRowElement, RowElement, RM>): UseCompleteGridNavigationDeclarativeReturnType<ParentOrRowElement, RowElement, RM> {\r\n    const ret2: UseCompleteGridNavigationReturnType<ParentOrRowElement, RowElement, RM> = useCompleteGridNavigation<ParentOrRowElement, RowElement, CellElement, RM>({\r\n        singleSelectionParameters: {\r\n            initiallySingleSelectedIndex: singleSelectionDeclarativeParameters.singleSelectedIndex,\r\n            onSingleSelectedIndexChange: useStableCallback((...e) => onSingleSelectedIndexChange?.(...e)),\r\n            ...singleSelectionParameters\r\n        },\r\n        ...normalGridNavParameters\r\n    });\r\n    const { singleSelectionParameters: { onSingleSelectedIndexChange } } = useSelectionDeclarative({\r\n        singleSelectionDeclarativeParameters,\r\n        singleSelectionReturn: ret2.singleSelectionReturn\r\n    });\r\n\r\n    return ret2;\r\n}\r\n","import { RovingTabIndexChildContext } from \"../component-detail/keyboard-navigation/use-roving-tabindex.js\";\r\nimport { UseTypeaheadNavigationContext } from \"../component-detail/keyboard-navigation/use-typeahead-navigation.js\";\r\nimport { UsePaginatedChildrenParameters, UsePaginatedChildrenReturnType } from \"../component-detail/processed-children/use-paginated-children.js\";\r\nimport { UseProcessedChildContext, UseProcessedChildInfo, UseProcessedChildrenContext, UseProcessedChildrenParameters, UseProcessedChildrenReturnType, useProcessedChildren } from \"../component-detail/processed-children/use-processed-children.js\";\r\nimport { UseRearrangeableChildrenReturnType, useCreateProcessedChildrenContext } from \"../component-detail/processed-children/use-rearrangeable-children.js\";\r\nimport { MakeSelectionDeclarativeChildParameters, MakeSelectionDeclarativeParameters, UseSelectionChildParameters, UseSelectionContext, UseSelectionParameters, useSelectionChildDeclarative, useSelectionDeclarative } from \"../component-detail/selection/use-selection.js\";\r\nimport { UseListNavigationSelectionChildInfo, UseListNavigationSelectionChildInfoKeysParameters, UseListNavigationSelectionChildParameters, UseListNavigationSelectionChildReturnType, UseListNavigationSelectionParameters, UseListNavigationSelectionReturnType, useListNavigationSelection, useListNavigationSelectionChild } from \"../component-detail/use-list-navigation-selection.js\";\r\nimport { useMergedProps } from \"../dom-helpers/use-merged-props.js\";\r\nimport { UseRefElementParameters, UseRefElementReturnType, useRefElement } from \"../dom-helpers/use-ref-element.js\";\r\nimport { UseStaggeredChildrenReturnType } from \"../index.js\";\r\nimport { UseChildrenHaveFocusContext, UseChildrenHaveFocusReturnType, useChildrenHaveFocus, useChildrenHaveFocusChild } from \"../observers/use-children-have-focus.js\";\r\nimport { UseHasCurrentFocusParameters, UseHasCurrentFocusReturnType, useHasCurrentFocus } from \"../observers/use-has-current-focus.js\";\r\nimport { ManagedChildInfo, ManagedChildren, UseGenericChildParameters, UseManagedChildReturnType, UseManagedChildrenContext, UseManagedChildrenReturnType, useManagedChild, useManagedChildren } from \"../preact-extensions/use-managed-children.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useMemoObject } from \"../preact-extensions/use-stable-getter.js\";\r\nimport { assertEmptyObject } from \"../util/assert.js\";\r\nimport { TargetedOmit, TargetedPick, useCallback } from \"../util/lib.js\";\r\nimport { ElementProps, OmitStrong } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { UsePressParameters } from \"./use-press.js\";\r\n\r\nexport interface UseCompleteListNavigationChildInfo<ChildElement extends Element> extends\r\n    UseListNavigationSelectionChildInfo<ChildElement>,\r\n    ManagedChildInfo<number> { }\r\n\r\nexport interface UseCompleteListNavigationChildrenInfo<ChildElement extends Element> extends\r\n    UseProcessedChildInfo<ChildElement>,\r\n    ManagedChildInfo<number> { }\r\n\r\nexport interface UseCompleteListNavigationParameters<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    Pick<UseListNavigationSelectionParameters<ParentElement, ChildElement, M>, \"singleSelectionParameters\" | \"multiSelectionParameters\">,\r\n    TargetedOmit<Pick<UsePaginatedChildrenParameters<ChildElement>, \"paginatedChildrenParameters\">, \"paginatedChildrenParameters\", \"childCount\">,\r\n    Pick<UseRefElementParameters<ParentElement>, \"refElementParameters\">,\r\n    TargetedOmit<UseListNavigationSelectionParameters<ParentElement, ChildElement, M>, \"linearNavigationParameters\", \"getLowestIndex\" | \"getHighestIndex\" | \"isValidForLinearNavigation\">,\r\n    TargetedOmit<UseListNavigationSelectionParameters<ParentElement, ChildElement, M>, \"typeaheadNavigationParameters\", \"isValidForTypeaheadNavigation\">,\r\n    TargetedOmit<UseListNavigationSelectionParameters<ParentElement, ChildElement, M>, \"rovingTabIndexParameters\", \"untabbableBehavior\"> { }\r\n\r\nexport interface UseCompleteListNavigationReturnType<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    OmitStrong<UseRefElementReturnType<ParentElement>, \"propsStable\">,\r\n    TargetedOmit<UseProcessedChildrenReturnType<any, any>, \"rearrangeableChildrenReturn\", \"indexDemangler\" | \"indexMangler\" | \"children\">,\r\n    Pick<UseProcessedChildrenReturnType<any, any>, never>,\r\n    Pick<UseManagedChildrenReturnType<M>, \"managedChildrenReturn\">,\r\n    Pick<UseChildrenHaveFocusReturnType<ChildElement>, \"childrenHaveFocusReturn\">,\r\n    OmitStrong<UseListNavigationSelectionReturnType<ParentElement, ChildElement>, \"context\" | \"childrenHaveFocusParameters\" | \"managedChildrenParameters\"> {\r\n    props: ElementProps<ParentElement>;\r\n    contextChildren: CompleteListNavigationContext<ChildElement, M>;\r\n    contextProcessing: UseProcessedChildrenContext;\r\n}\r\n\r\n\r\nexport interface CompleteListNavigationContext<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    UseChildrenHaveFocusContext<ChildElement>,\r\n    UseTypeaheadNavigationContext,\r\n    UseSelectionContext,\r\n    UseManagedChildrenContext<M>,\r\n    RovingTabIndexChildContext {\r\n}\r\n\r\n\r\nexport interface UseCompleteListNavigationChildrenParameters<TabbableChildElement extends Element, M extends UseCompleteListNavigationChildrenInfo<TabbableChildElement>> extends\r\n    OmitStrong<UseProcessedChildrenParameters<TabbableChildElement, M>, \"refElementReturn\"> {\r\n}\r\n\r\nexport interface UseCompleteListNavigationChildrenReturnType<TabbableChildElement extends Element, M extends UseCompleteListNavigationChildrenInfo<TabbableChildElement>> extends\r\n    OmitStrong<UseRearrangeableChildrenReturnType<M>, never>,\r\n    OmitStrong<UsePaginatedChildrenReturnType, \"context\">,\r\n    OmitStrong<UseStaggeredChildrenReturnType, \"context\"> {\r\n    context: UseProcessedChildContext<TabbableChildElement, M>;\r\n}\r\n\r\n\r\n\r\n\r\nexport type UseCompleteListNavigationChildInfoKeysParameters<M extends UseCompleteListNavigationChildInfo<any>> =\r\n    // All types in the user-supplied info type that aren't in the base type (since we handle it) \r\n    Exclude<keyof M, keyof UseCompleteListNavigationChildInfo<any>> |\r\n    // except for these extra types! Because the user supplies them.\r\n    // TODO: Where exactly does focusSelf come from? (should be typed)\r\n    // I feel like this always happens with focusSelf, why.\r\n    UseListNavigationSelectionChildInfoKeysParameters | \"focusSelf\";\r\n\r\n\r\n\r\nexport interface UseCompleteListNavigationChildParameters<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    UseGenericChildParameters<CompleteListNavigationContext<ChildElement, M>, Pick<M, UseCompleteListNavigationChildInfoKeysParameters<M>>>,\r\n    OmitStrong<UseListNavigationSelectionChildParameters<ChildElement, M>, \"context\" | \"info\" | \"refElementReturn\">,\r\n    Pick<UseRefElementParameters<ChildElement>, \"refElementParameters\">,\r\n    Pick<UseHasCurrentFocusParameters<ChildElement>, \"hasCurrentFocusParameters\"> {\r\n}\r\n\r\nexport interface UseCompleteListNavigationChildReturnType<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    OmitStrong<UseListNavigationSelectionChildReturnType<ChildElement, M>, \"info\" | \"propsChild\" | \"propsTabbable\" | \"hasCurrentFocusParameters\" | \"pressParameters\">,\r\n    OmitStrong<UseRefElementReturnType<ChildElement>, \"propsStable\">,\r\n    UseHasCurrentFocusReturnType<ChildElement>,\r\n    UseManagedChildReturnType<M>,\r\n    TargetedPick<UsePressParameters<any>, \"pressParameters\", \"onPressSync\" | \"excludeSpace\"> {\r\n\r\n    /**\r\n     * These props should be passed to whichever element is tabbable. \r\n     * This may be the same element as `propsChild`, in which case `useMergedProps` is recommended.\r\n     * \r\n     * @see propsChild\r\n     */\r\n    propsTabbable: ElementProps<any>;\r\n\r\n    /**\r\n     * These props should be passed to whichever element is considered the child element of the list (e.g. the `li` in an `ol`). \r\n     * This may be the same element as `propsChild`, in which case `useMergedProps` is recommended. \r\n     * But it may also be different, e.g. if that `li` contains an `input`.\r\n     * \r\n     * @see propsTabbable\r\n     */\r\n    propsChild: ElementProps<any>;\r\n}\r\n\r\n/**\r\n * All the list-related hooks combined into one large hook that encapsulates everything.\r\n * \r\n * @remarks Unlike most others, this hook assume's it's the final one--the \"outermost\" hook in the component--so it uses `useManagedChildren` and wraps everything up nicely,\r\n * combining event handlers that are used in multiple sub-hooks, collecting all the necessary context-related data, and merging all known DOM props together.\r\n * \r\n * @hasChild {@link useCompleteListNavigationChild}\r\n * \r\n * @compositeParams\r\n */\r\nexport const useCompleteListNavigation = monitored(function useCompleteListNavigation<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>>({\r\n    linearNavigationParameters,\r\n    typeaheadNavigationParameters,\r\n    rovingTabIndexParameters,\r\n    singleSelectionParameters,\r\n    multiSelectionParameters,\r\n    paginatedChildrenParameters,\r\n    //staggeredChildrenParameters,\r\n    refElementParameters,\r\n    ...void1\r\n}: UseCompleteListNavigationParameters<ParentElement, ChildElement, M>): UseCompleteListNavigationReturnType<ParentElement, ChildElement, M> {\r\n    const getChildren: () => ManagedChildren<M> = useCallback(() => managedChildrenReturn.getChildren(), []);\r\n    const getLowestIndex: (() => number) = useCallback<() => number>(() => getChildren().getLowestIndex(), []);\r\n    const getHighestIndex: (() => number) = useCallback<() => number>(() => getChildren().getHighestIndex(), []);\r\n    const isValidForNavigation = useCallback((i: number) => {\r\n        const child = getChildren().getAt(i);\r\n        if (!child)\r\n            return false;\r\n        if (child.untabbable)\r\n            return false;\r\n        return true;\r\n    }, []);\r\n\r\n    const { propsStable: propsRef, refElementReturn } = useRefElement<ParentElement>({ refElementParameters });\r\n\r\n    // Grab the information from the array of children we may or may not render.\r\n    // (see useProcessedChildren -- it send this information to us if it's used.)\r\n    // These are all stable functions, except for `contextPreprocessing`, which is how it sends things to us.\r\n    const { context: contextProcessing, indexDemangler, indexMangler, rearrange, reverse, shuffle, sort } = useCreateProcessedChildrenContext();\r\n\r\n    const {\r\n        childrenHaveFocusParameters,\r\n        managedChildrenParameters: { onChildrenMountChange, ...mcp1 },\r\n        context: { rovingTabIndexContext, singleSelectionContext, multiSelectionContext, typeaheadNavigationContext },\r\n        linearNavigationReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionReturn,\r\n        multiSelectionReturn,\r\n        typeaheadNavigationReturn,\r\n        props,\r\n\r\n        ...void2\r\n    } = useListNavigationSelection<ParentElement, ChildElement>({\r\n        managedChildrenReturn: { getChildren },\r\n        linearNavigationParameters: { getLowestIndex, getHighestIndex, isValidForLinearNavigation: isValidForNavigation, ...linearNavigationParameters },\r\n        typeaheadNavigationParameters: { isValidForTypeaheadNavigation: isValidForNavigation, ...typeaheadNavigationParameters },\r\n        rovingTabIndexParameters: { untabbableBehavior: \"focus-parent\", ...rovingTabIndexParameters },\r\n        singleSelectionParameters,\r\n        multiSelectionParameters,\r\n        paginatedChildrenParameters,\r\n        refElementReturn,\r\n        childrenHaveFocusReturn: { getAnyFocused: useStableCallback((): boolean => childrenHaveFocusReturn.getAnyFocused()) },\r\n        rearrangeableChildrenReturn: { indexDemangler, indexMangler }\r\n    });\r\n\r\n    const { context: { childrenHaveFocusChildContext }, childrenHaveFocusReturn } = useChildrenHaveFocus({ childrenHaveFocusParameters });\r\n\r\n    const mcr: UseManagedChildrenReturnType<M> = useManagedChildren<M>({\r\n        managedChildrenParameters: {\r\n            onChildrenMountChange,\r\n            ...mcp1\r\n        }\r\n    });\r\n    const { context: { managedChildContext: managedChildRTIContext }, managedChildrenReturn } = mcr;\r\n    const { getTabbableIndex, setTabbableIndex } = rovingTabIndexReturn;\r\n    const { getAnyFocused } = childrenHaveFocusReturn;\r\n\r\n    const contextChildren = useMemoObject<CompleteListNavigationContext<ChildElement, M>>({\r\n        childrenHaveFocusChildContext,\r\n        rovingTabIndexContext,\r\n        singleSelectionContext,\r\n        multiSelectionContext,\r\n        typeaheadNavigationContext,\r\n        managedChildContext: managedChildRTIContext,\r\n    });\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n\r\n    const processedChildrenContext = useMemoObject({ getTabbableIndex, setTabbableIndex, getAnyFocused, getElement: refElementReturn.getElement });\r\n\r\n    return {\r\n        contextChildren,\r\n        contextProcessing: useMemoObject({\r\n            processedChildrenContext,\r\n            ...contextProcessing\r\n        }),\r\n        props: useMergedProps(props, propsRef),\r\n        managedChildrenReturn,\r\n        linearNavigationReturn,\r\n        rovingTabIndexReturn,\r\n        singleSelectionReturn,\r\n        multiSelectionReturn,\r\n        typeaheadNavigationReturn,\r\n        childrenHaveFocusReturn,\r\n        refElementReturn,\r\n        rearrangeableChildrenReturn: { reverse, shuffle, rearrange, sort },\r\n    }\r\n});\r\n\r\n/**\r\n * Helper for `useCompleteListNavigation` that handles the array of children in a way that allows for sorting, pagination, and staggering. Optional but recommended.\r\n * \r\n * @remarks Each child must also call `useProcessedChild`, and use its information to optimize \r\n */\r\nexport const useCompleteListNavigationChildren = monitored(function useCompleteListNavigationChildren<TabbableChildElement extends Element, M extends UseCompleteListNavigationChildrenInfo<TabbableChildElement>>({\r\n    context,\r\n    paginatedChildrenParameters,\r\n    rearrangeableChildrenParameters,\r\n    staggeredChildrenParameters,\r\n    managedChildrenParameters\r\n}: UseCompleteListNavigationChildrenParameters<TabbableChildElement, M>): UseCompleteListNavigationChildrenReturnType<TabbableChildElement, M> {\r\n    const {\r\n        context: contextRPS,\r\n        paginatedChildrenReturn,\r\n        rearrangeableChildrenReturn,\r\n        staggeredChildrenReturn,\r\n    } = useProcessedChildren<TabbableChildElement, M>({\r\n        paginatedChildrenParameters,\r\n        rearrangeableChildrenParameters,\r\n        staggeredChildrenParameters,\r\n        managedChildrenParameters,\r\n        refElementReturn: context.processedChildrenContext,\r\n        context,\r\n    });\r\n\r\n    return {\r\n        context: contextRPS,\r\n        paginatedChildrenReturn,\r\n        rearrangeableChildrenReturn,\r\n        staggeredChildrenReturn\r\n    }\r\n})\r\n\r\n/**\r\n * \r\n * @compositeParams\r\n */\r\nexport const useCompleteListNavigationChild = monitored(function useCompleteListNavigationChild<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>>({\r\n    info: { index, focusSelf, untabbable, ...customUserInfo },  // The \"...info\" is empty if M is the same as UCLNCI<ChildElement>.\r\n    textContentParameters,\r\n    refElementParameters,\r\n    hasCurrentFocusParameters: { onCurrentFocusedChanged, onCurrentFocusedInnerChanged: ocfic3, ...void7 },\r\n    singleSelectionChildParameters,\r\n    multiSelectionChildParameters,\r\n    context: { managedChildContext, rovingTabIndexContext, singleSelectionContext, multiSelectionContext, typeaheadNavigationContext, childrenHaveFocusChildContext, ...void5 },\r\n    ...void1\r\n}: UseCompleteListNavigationChildParameters<ChildElement, M>): UseCompleteListNavigationChildReturnType<ChildElement, M> {\r\n    const { refElementReturn, propsStable, ...void6 } = useRefElement<ChildElement>({ refElementParameters });\r\n    const {\r\n        hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic1, ...void3 },\r\n        pressParameters: { excludeSpace, onPressSync, ...void2 },\r\n        textContentReturn,\r\n        singleSelectionChildReturn,\r\n        multiSelectionChildReturn,\r\n        info: infoFromListNav,\r\n        rovingTabIndexChildReturn,\r\n        propsChild,\r\n        propsTabbable,\r\n        ...void4\r\n    } = useListNavigationSelectionChild<ChildElement>({\r\n        info: { index, untabbable },\r\n        context: { rovingTabIndexContext, singleSelectionContext, multiSelectionContext, typeaheadNavigationContext },\r\n        singleSelectionChildParameters,\r\n        multiSelectionChildParameters,\r\n        refElementReturn,\r\n        textContentParameters\r\n    });\r\n\r\n    const allStandardInfo: UseCompleteListNavigationChildInfo<ChildElement> = {\r\n        index,\r\n        focusSelf,\r\n        getElement: refElementReturn.getElement,\r\n        untabbable,\r\n        ...infoFromListNav,\r\n    }\r\n\r\n    const { managedChildReturn } = useManagedChild<M>({ context: { managedChildContext }, info: { ...allStandardInfo, ...customUserInfo } as M });\r\n\r\n    const { hasCurrentFocusParameters: { onCurrentFocusedInnerChanged: ocfic2 } } = useChildrenHaveFocusChild({ context: { childrenHaveFocusChildContext } });\r\n    const onCurrentFocusedInnerChanged = useStableCallback<NonNullable<typeof ocfic1>>((focused, prev, e) => {\r\n        ocfic1?.(focused, prev, e);\r\n        ocfic2?.(focused, prev, e);\r\n        ocfic3?.(focused, prev, e);\r\n    })\r\n    const { hasCurrentFocusReturn } = useHasCurrentFocus<ChildElement>({\r\n        hasCurrentFocusParameters: {\r\n            onCurrentFocusedInnerChanged,\r\n            onCurrentFocusedChanged\r\n        },\r\n        refElementReturn\r\n    });\r\n\r\n\r\n    const props = useMergedProps<ChildElement>(\r\n        propsStable,\r\n        hasCurrentFocusReturn.propsStable,\r\n        propsChild\r\n    );\r\n\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    assertEmptyObject(void6);\r\n    assertEmptyObject(void7);\r\n\r\n    return {\r\n        propsChild: props,\r\n        propsTabbable,\r\n        pressParameters: {\r\n            onPressSync,\r\n            excludeSpace\r\n        },\r\n        textContentReturn,\r\n        refElementReturn,\r\n        singleSelectionChildReturn,\r\n        multiSelectionChildReturn,\r\n        hasCurrentFocusReturn,\r\n        managedChildReturn,\r\n        rovingTabIndexChildReturn\r\n    }\r\n\r\n});\r\n\r\nexport interface UseCompleteListNavigationDeclarativeParameters<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    OmitStrong<MakeSelectionDeclarativeParameters<UseCompleteListNavigationParameters<ParentElement, ChildElement, M>>, \"singleSelectionParameters\" | \"singleSelectionReturn\">,\r\n    TargetedOmit<UseSelectionParameters<ParentElement, ChildElement, M>, \"singleSelectionParameters\", \"initiallySingleSelectedIndex\" | \"onSingleSelectedIndexChange\"> { }\r\n\r\nexport interface UseCompleteListNavigationDeclarativeReturnType<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    TargetedOmit<UseCompleteListNavigationReturnType<ParentElement, ChildElement, M>, \"singleSelectionReturn\", \"changeSingleSelectedIndex\">,\r\n    TargetedOmit<UseCompleteListNavigationReturnType<ParentElement, ChildElement, M>, \"multiSelectionReturn\", never>,\r\n    OmitStrong<UseCompleteListNavigationReturnType<ParentElement, ChildElement, M>, \"singleSelectionReturn\" | \"multiSelectionReturn\"> { }\r\n\r\n\r\nexport interface UseCompleteListNavigationChildDeclarativeParameters<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    OmitStrong<MakeSelectionDeclarativeChildParameters<UseCompleteListNavigationChildParameters<ChildElement, M>>, \"multiSelectionChildParameters\" | \"multiSelectionChildReturn\">,\r\n    TargetedOmit<UseSelectionChildParameters<ChildElement, M>, \"multiSelectionChildParameters\", \"initiallyMultiSelected\" | \"onMultiSelectChange\"> { }\r\n\r\nexport interface UseCompleteListNavigationChildDeclarativeReturnType<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>> extends\r\n    TargetedOmit<UseCompleteListNavigationChildReturnType<ChildElement, M>, \"singleSelectionChildReturn\", never>,\r\n    TargetedOmit<UseCompleteListNavigationChildReturnType<ChildElement, M>, \"multiSelectionChildReturn\", \"changeMultiSelected\">,\r\n    OmitStrong<UseCompleteListNavigationChildReturnType<ChildElement, M>, \"singleSelectionChildReturn\" | \"multiSelectionChildReturn\"> { }\r\n\r\nexport function useCompleteListNavigationDeclarative<ParentElement extends Element, ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>>({\r\n    singleSelectionParameters,\r\n    singleSelectionDeclarativeParameters,\r\n    ...rest\r\n}: UseCompleteListNavigationDeclarativeParameters<ParentElement, ChildElement, M>): UseCompleteListNavigationDeclarativeReturnType<ParentElement, ChildElement, M> {\r\n\r\n    const ret: UseCompleteListNavigationReturnType<ParentElement, ChildElement, M> = useCompleteListNavigation({\r\n        singleSelectionParameters: {\r\n            initiallySingleSelectedIndex: singleSelectionDeclarativeParameters.singleSelectedIndex,\r\n            // Needs to be a (stable) callback because of declaration order\r\n            onSingleSelectedIndexChange: useStableCallback((...e) => onSingleSelectedIndexChange?.(...e)),\r\n            ...singleSelectionParameters\r\n        },\r\n        ...rest\r\n    });\r\n    const { singleSelectionParameters: { onSingleSelectedIndexChange, ...void3 }, ...void2 } = useSelectionDeclarative({ singleSelectionDeclarativeParameters, singleSelectionReturn: ret.singleSelectionReturn });\r\n\r\n    const { singleSelectionReturn: { getSingleSelectedIndex }, ...ret2 } = ret;\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    return { ...ret2, singleSelectionReturn: { getSingleSelectedIndex } };\r\n}\r\n\r\n\r\nexport function useCompleteListNavigationChildDeclarative<ChildElement extends Element, M extends UseCompleteListNavigationChildInfo<ChildElement>>({\r\n    multiSelectionChildParameters,\r\n    multiSelectionChildDeclarativeParameters: { multiSelected, onMultiSelectedChange },\r\n    ...rest\r\n}: UseCompleteListNavigationChildDeclarativeParameters<ChildElement, M>): UseCompleteListNavigationChildDeclarativeReturnType<ChildElement, M> {\r\n\r\n    const ret: UseCompleteListNavigationChildReturnType<ChildElement, M> = useCompleteListNavigationChild({\r\n        multiSelectionChildParameters: {\r\n            initiallyMultiSelected: multiSelected,\r\n            onMultiSelectChange: useStableCallback((e) => { onMultiSelectChange!(e); }),\r\n            ...multiSelectionChildParameters\r\n        },\r\n        ...rest\r\n    });\r\n    const { multiSelectionChildParameters: { onMultiSelectChange }, info, ...void2 } = useSelectionChildDeclarative({\r\n        multiSelectionChildDeclarativeParameters: { onMultiSelectedChange, multiSelected },\r\n        multiSelectionChildReturn: ret.multiSelectionChildReturn\r\n    });\r\n\r\n    const { multiSelectionChildReturn, ...ret2 } = ret;\r\n    assertEmptyObject(void2);\r\n    return { ...ret2, multiSelectionChildReturn };\r\n}","import { DismissListenerTypes, useDismiss, UseDismissParameters, UseDismissReturnType } from \"../component-detail/use-dismiss.js\";\r\nimport { useFocusTrap, UseFocusTrapParameters } from \"../component-detail/use-focus-trap.js\";\r\nimport { useMergedProps } from \"../dom-helpers/use-merged-props.js\";\r\nimport { useRefElement, UseRefElementParameters } from \"../dom-helpers/use-ref-element.js\";\r\nimport { assertEmptyObject } from \"../util/assert.js\";\r\nimport { ElementProps, OmitStrong } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport interface UseModalParametersSelf {\r\n    /**\r\n     * When `false`, all dismissal/focus trapping behavior is disabled. When `true`, they're allowed via their individual parameters.\r\n     */\r\n    active: boolean;\r\n}\r\nexport interface UseModalParameters<Listeners extends DismissListenerTypes> extends\r\n    UseDismissParameters<Listeners>,\r\n    UseRefElementParameters<any>,\r\n    OmitStrong<UseFocusTrapParameters<any, any>, \"refElementReturn\"> {\r\n    modalParameters: UseModalParametersSelf;\r\n}\r\n\r\nexport interface UseModalReturnType<FocusContainerElement extends Element | null, SourceElement extends Element | null, PopupElement extends Element> extends UseDismissReturnType<SourceElement, PopupElement> {\r\n    propsFocusContainer: ElementProps<NonNullable<FocusContainerElement>>;\r\n}\r\n\r\n/**\r\n * Combines dismissal hooks and focus trap hooks into one. \r\n * Use for dialogs, menus, etc.  Anything that can be dismissed and might trap focus, basically.\r\n * \r\n * @remarks Another in the \"complete\" series, alongside list/grid navigation and dismissal itself. \r\n * \r\n * TODO: The HTML &lt;dialog&gt; element is a thing now, and it can be modal or nonmodal, just like this hook. Hmm...\r\n * \r\n * @compositeParams\r\n */\r\nexport const useModal = monitored (function useModal<Listeners extends DismissListenerTypes, FocusContainerElement extends Element | null, SourceElement extends Element | null, PopupElement extends Element>({\r\n    dismissParameters: { dismissActive, onDismiss, ...void2 },\r\n    escapeDismissParameters: { dismissEscapeActive, onDismissEscape, parentDepth, ...void3 },\r\n    focusTrapParameters: { trapActive, ...focusTrapParameters },\r\n    activeElementParameters: { getDocument, onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange, ...void4 },\r\n    backdropDismissParameters: { dismissBackdropActive, onDismissBackdrop, ...void5 },\r\n    lostFocusDismissParameters: { dismissLostFocusActive, onDismissLostFocus, ...void6 },\r\n    refElementParameters: { onElementChange, onMount, onUnmount, ...void7 },\r\n    modalParameters: { active: modalActive, ...void8 },\r\n    ...void1\r\n}: UseModalParameters<Listeners>): UseModalReturnType<FocusContainerElement, SourceElement, PopupElement> {\r\n    const { refElementPopupReturn, refElementSourceReturn, propsStablePopup, propsStableSource } = useDismiss<Listeners, SourceElement, PopupElement>({\r\n        dismissParameters: { dismissActive: dismissActive && modalActive, onDismiss },\r\n        escapeDismissParameters: { dismissEscapeActive, onDismissEscape, parentDepth },\r\n        activeElementParameters: { getDocument, onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange },\r\n        backdropDismissParameters: { dismissBackdropActive, onDismissBackdrop },\r\n        lostFocusDismissParameters: { dismissLostFocusActive, onDismissLostFocus },\r\n    });\r\n    const { propsStable, refElementReturn } = useRefElement<NonNullable<FocusContainerElement>>({ refElementParameters: { onElementChange, onMount, onUnmount } })\r\n    const { props } = useFocusTrap<SourceElement, NonNullable<FocusContainerElement>>({\r\n        focusTrapParameters: { trapActive: trapActive && modalActive, ...focusTrapParameters },\r\n        activeElementParameters: { getDocument, onActiveElementChange, onLastActiveElementChange, onWindowFocusedChange },\r\n        refElementReturn\r\n    });\r\n    assertEmptyObject(void1);\r\n    assertEmptyObject(void2);\r\n    assertEmptyObject(void3);\r\n    assertEmptyObject(void4);\r\n    assertEmptyObject(void5);\r\n    assertEmptyObject(void6);\r\n    assertEmptyObject(void7);\r\n    assertEmptyObject(void8);\r\n\r\n    return {\r\n        propsFocusContainer: useMergedProps(propsStable, props),\r\n        refElementPopupReturn,\r\n        refElementSourceReturn,\r\n        propsStablePopup,\r\n        propsStableSource\r\n    }\r\n})\r\n","\r\nimport { CaptureFunctionType, asyncToSync } from \"async-to-sync\";\r\nimport { identity } from \"lodash-es\";\r\n\r\nimport { Nullable, useCallback, useEffect, useMemo } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { useStableCallback } from \"./use-stable-callback.js\";\r\nimport { useState } from \"./use-state.js\";\r\n\r\ntype SyncFunctionType<SP extends unknown[], R> = (...args: SP) => (R | undefined);\r\ntype AsyncFunctionType<AP extends unknown[], R> = ((...args: AP) => (R | Promise<R>));\r\n\r\nexport interface UseAsyncParameters<AP extends unknown[], SP extends unknown[] = AP> {\r\n    /**\r\n     * If provided, adds a debounce behavior *in addition* to\r\n     * the default \"wait until resolved\" throttling behavior.\r\n     */\r\n    debounce: Nullable<number>;\r\n\r\n    /**\r\n     * By default, `useAsync` will auto-throttle based on how long it takes\r\n     * for the operation to complete.  If you would like there to be a\r\n     * minimum amount of time to wait before allowing a second operation,\r\n     * the `throttle` parameter can be used in addition to that behavior.\r\n     * \r\n     * `throttle` *includes* the time it takes for the async operation to finish.\r\n     * If `throttle` is 500ms, and the async function finishes in 700ms, then\r\n     * another one will be run immediately. If it took 100ms, then we'd wait\r\n     * for the remaining 400ms until allowing a second run.\r\n     */\r\n    throttle: Nullable<number>;\r\n\r\n    /**\r\n     * When an async function is debounced due to one already running,\r\n     * it will run on a delay and, as a result, the original arguments\r\n     * that were passed to it may need to be adjusted to account for that.\r\n     * \r\n     * For example, during `onInput`, the `value` of that event isn't stored\r\n     * in the event itself, it's stored in the `HTMLInputElement` that raised it.\r\n     * So when our handler actually runs a few seconds later, it'll read the **next**\r\n     * `event.currentTarget.value`, instead of the one from a few seconds ago \r\n     * that actually raised the event!\r\n     * \r\n     * If the arguments to your handler require referencing data in the arguments\r\n     * that may become \"stale\" by the time the function actually runs (generally event\r\n     * handlers and other things that reference the properties of existing objects),\r\n     * the `capture` parameter allows you to transform the parameters you were given\r\n     * when the request to run was initially made into parameters that you have\r\n     * guaranteed will still be good by the time the handler actually runs.\r\n     * \r\n     * @nonstable\r\n     */\r\n    capture: Nullable<CaptureFunctionType<AP, SP>>;\r\n}\r\n\r\nexport interface UseAsyncReturnType<SP extends unknown[], R> {\r\n\r\n    /**\r\n     * When the async handler is currently executing, this is true.\r\n     * When it finishes, this becomes false.\r\n     */\r\n    pending: boolean;\r\n\r\n    /** \r\n     * True when we're waiting for a debounce or throttle to end (that's not due waiting for the async function to complete)\r\n     */\r\n    debouncingSync: boolean;\r\n\r\n    /**\r\n     * True when a second invocation of the handler has been called, and it's waiting until the first before it runs.\r\n     */\r\n    debouncingAsync: boolean;\r\n\r\n    /**\r\n     * The number of times the handler has run.\r\n     * Does not include times where it was throttled or debounced away.\r\n     * \r\n     * Useful for knowing if the handler has been called yet, or for\r\n     * setting a new timeout to show a spinner.\r\n     */\r\n    callCount: number;\r\n\r\n    /**\r\n     * The number of times the handler has settled\r\n     * (resolved or rejected), similarly to `callCount`.\r\n     * \r\n     * Useful for knowing if the handler has completed even once yet,\r\n     * or just for when the handler has finished\r\n     */\r\n    settleCount: number;\r\n\r\n    /**\r\n     * The number of times the handler has completed successfully, \r\n     * similarly to `settleCount`.\r\n     */\r\n    resolveCount: number;\r\n\r\n\r\n    /**\r\n     * The number of times the handler has failed to complete, \r\n     * similarly to `resolveCount`.\r\n     */\r\n    rejectCount: number;\r\n\r\n    /**\r\n     * Represents the value most recently returned from a successful handler invocation,\r\n     * or undefined if no handler has successfully returned yet.\r\n     * \r\n     * If the handler rejects after having succeeded previously, then\r\n     * `result` will still keep its value; it won't be \"erased\" due to the error.\r\n     * This means that `result` and `error` can both be populated at the same time.\r\n     * \r\n     * @see hasResult for if `result` being `undefined` means it's unfinished or the function itself returned `undefined`.\r\n     */\r\n    result: R | undefined;\r\n\r\n    /**\r\n     * True when the most recently-run handler completed successfully,\r\n     * also meaning that that it's returned a value that we currently have.\r\n     * \r\n     * While `pending` is true, **`hasResult` and `hasError` may be simultaneously true**,\r\n     * but in all other cases they're mutually exclusive.\r\n     */\r\n    hasResult: boolean;\r\n\r\n    /**\r\n     * The error the handler threw. `undefined` otherwise, though note\r\n     * that `undefined` is a valid thing to throw, so check `hasError` too.\r\n     * \r\n     * @see hasError\r\n     */\r\n    error: unknown;\r\n\r\n    /**\r\n     * Whether or not the most recent handler finished with an error.\r\n     * \r\n     * This is necessary because, technically, `error` can be `undefined`.\r\n     */\r\n    hasError: boolean;\r\n\r\n    /**\r\n     * What happened the last time the handler was called?\r\n     * * `\"async\"`: A `Promise` was returned, and we're about to `await` it.\r\n     * * `\"sync\"`: `undefined` was returned, so it finished immediately.\r\n     * * `\"throw\"`: An error was thrown, so it could have been either (more likely `\"sync\"`, though).\r\n     * * `null`: Nothing's happened yet.\r\n     */\r\n    invocationResult: \"async\" | \"sync\" | \"throw\" | null;\r\n\r\n    /**\r\n     * If you would like any currently debounced-but-eventually-pending promises to immediately be considered by cancelling their debounce timeout,\r\n     * you can call this function.  Normal procedure applies as if the debounced ended normally -- if there's no promise waiting in the queue,\r\n     * the debounced promise runs normally, otherwise, it waits its turn until the current one ends, potentially being overwritten later on\r\n     * if a new promise runs out *its* debounce timer before this one got a chance to run.\r\n     * \r\n     * **Quasi-stable** (don't use during render)\r\n     */\r\n    flushDebouncedPromise: () => void;\r\n\r\n    /**\r\n     * The transformed version of the async handler provided,\r\n     * now synchronous and/or throttled and/or debounced\r\n     * \r\n     * **Quasi-stable** (don't use during render)\r\n     */\r\n    syncHandler: SyncFunctionType<SP, void>;\r\n}\r\n\r\nfunction identityCapture<AP extends unknown[], SP extends unknown[]>(...t: SP) { return t as unknown[] as AP; }\r\n\r\n\r\n\r\nconst AsyncFunction = ((async function () { }).constructor)\r\n\r\n/**\r\n * Given an async function, returns a function that's suitable for non-async APIs, \r\n * along with other information about the current run's status.\r\n * \r\n * @see {@link useAsyncHandler} for a version that's specialized for DOM event handlers.\r\n * \r\n * @remarks When called multiple times in quick succession, (i.e. before the handler has finished), \r\n * this works like Lodash's `throttle` function with the `wait` option always\r\n * set to however long the handler takes to complete. A second call to the sync function will be \r\n * throttled until the first call has finished. The return value of the function is the result \r\n * of the previous invocation, or `undefined` on the first call.\r\n * \r\n * The handler is only ever delayed if one is currently running, so, e.g. for iOS touch events the\r\n * first call happens in the same event handler (which means things like calls to `element.focus()`\r\n * will work as intended, since that fails when the event is \"split up\")\r\n * \r\n * Finally, because the sync handler may be invoked on a delay, any property references on the arguments\r\n * provided might be stale by the time it's actually invoked (e.g. accessing `event.currentTarget.checked`\r\n * is not stable across time because it's a \"live\" value -- you almost always want the value that it\r\n * had at the original time the handler was called). The `capture` option allows you to save that kind of\r\n * dynamic data at the time it runs; the `AP` and `SP` type parameters likewise control\r\n * the parameters the async handler and sync handler expect respectively.\r\n * \r\n * {@include } {@link UseAsyncParameters}\r\n * \r\n * @param asyncHandler - The async function to make sync\r\n * @param options - @see {@link UseAsyncParameters}\r\n * \r\n */\r\nexport const useAsync = monitored(function useAsync<AP extends unknown[], R, SP extends unknown[] = AP>(asyncHandler: Nullable<AsyncFunctionType<AP, R>>, options?: UseAsyncParameters<AP, SP>): UseAsyncReturnType<SP, R> {\r\n\r\n    // Things related to current execution\r\n    // Because we can both return and throw undefined, \r\n    // we need separate state to track their existence too.\r\n    //\r\n    // We keep, like, a *lot* of render-state, but it only ever triggers a re-render\r\n    // when we start/stop an async action.\r\n    const [pending, setPending, _getPending] = useState(false);\r\n    const [result, setResult, _getResult] = useState<R>(undefined!);\r\n    const [error, setError, _getError] = useState<unknown>(undefined!);\r\n    const [hasError, setHasError, _getHasError] = useState<boolean | null>(false);\r\n    const [hasResult, setHasResult, _getHasResult] = useState<boolean | null>(false);\r\n    const [asyncDebouncing, setAsyncDebouncing] = useState(false);\r\n    const [syncDebouncing, setSyncDebouncing] = useState(false);\r\n    const [invocationResult, setInvocationResult] = useState<\"async\" | \"sync\" | \"throw\" | null>(asyncHandler instanceof AsyncFunction ? \"async\" : null);\r\n\r\n    // Keep track of this for the caller's sake -- we don't really care.\r\n    const [runCount, setRunCount] = useState(0);\r\n    const [settleCount, setSettleCount] = useState(0);\r\n    const [resolveCount, setResolveCount] = useState(0);\r\n    const [rejectCount, setRejectCount] = useState(0);\r\n    const incrementCallCount = useCallback(() => { setRunCount(c => c + 1) }, []);\r\n    const incrementResolveCount = useCallback(() => { setResolveCount(c => c + 1) }, []);\r\n    const incrementRejectCount = useCallback(() => { setRejectCount(c => c + 1) }, []);\r\n    const incrementFinallyCount = useCallback(() => { setSettleCount(c => c + 1) }, []);\r\n\r\n    /* eslint-disable prefer-const */\r\n    let { throttle, debounce, capture: captureUnstable } = (options ?? {});\r\n    const captureStable = useStableCallback(captureUnstable ?? identityCapture);\r\n    const asyncHandlerStable = useStableCallback<(...args: AP) => R | Promise<R>>(asyncHandler ?? (identity as any));\r\n    const { flushSyncDebounce, syncOutput, cancelSyncDebounce } = useMemo(() => {\r\n        return asyncToSync<AP, SP, R>({\r\n            asyncInput: asyncHandlerStable,\r\n            capture: captureStable,\r\n            onAsyncDebounce: setAsyncDebouncing,\r\n            onError: setError,\r\n            onPending: setPending,\r\n            onReturnValue: setResult,\r\n            onSyncDebounce: setSyncDebouncing,\r\n            onHasError: setHasError,\r\n            onHasResult: setHasResult,\r\n            onInvoked: setInvocationResult,\r\n            onInvoke: incrementCallCount,\r\n            onFinally: incrementFinallyCount,\r\n            onReject: incrementRejectCount,\r\n            onResolve: incrementResolveCount,\r\n            throttle: options?.throttle ?? undefined,\r\n            wait: options?.debounce ?? undefined\r\n        })\r\n    }, [throttle, debounce]);\r\n\r\n    useEffect(() => {\r\n        return () => cancelSyncDebounce();\r\n    }, [cancelSyncDebounce])\r\n\r\n\r\n\r\n    return {\r\n        syncHandler: syncOutput,\r\n        pending,\r\n        result,\r\n        error,\r\n        hasError: hasError || false,\r\n        hasResult: hasResult || false,\r\n        resolveCount,\r\n        rejectCount,\r\n        settleCount,\r\n        debouncingAsync: asyncDebouncing,\r\n        debouncingSync: syncDebouncing,\r\n        invocationResult,\r\n        callCount: runCount,\r\n        flushDebouncedPromise: flushSyncDebounce\r\n    }\r\n});\r\n\r\n\r\n","\r\nimport { useAsync, UseAsyncParameters, UseAsyncReturnType } from \"../preact-extensions/use-async.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useState } from \"../preact-extensions/use-state.js\";\r\nimport { Nullable, OmitStrong } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport type AsyncHandler<EventType, CaptureType> = ((c: CaptureType, e: EventType) => (Promise<void> | void));\r\n\r\nexport interface UseAsyncHandlerParameters<EventType, CaptureType> extends OmitStrong<UseAsyncParameters<[CaptureType, EventType], [EventType]>, \"capture\"> {\r\n    /**\r\n     * What transient information is captured by this event \r\n     * and presented as the first argument of the event handler?\r\n     * \r\n     * The \"capture\" parameter answers this question. To implement a checkbox, for example, return `target.checked`.\r\n     * \r\n     * @nonstable\r\n     */\r\n    capture: (event: EventType) => CaptureType;\r\n\r\n    /**\r\n     * The function (either async or sync) that you want to convert to a regular, sync event handler. \r\n     */\r\n    asyncHandler: Nullable<AsyncHandler<EventType, CaptureType>>;\r\n}\r\n\r\nexport interface UseAsyncHandlerReturnType<EventType, CaptureType> extends UseAsyncReturnType<[EventType], void> {\r\n\r\n    /**\r\n     * The most recently captured value. In other words, represents what\r\n     * the current value would be if this operation were synchronous and \r\n     * and couldn't fail. It's useful to pretend this is the actual value\r\n     * for an input field, for example, so that the value doesn't \"snap\r\n     * back\" while you're waiting for the handler to finish.\r\n     * \r\n     * Something like `value={pending? currentCapture : value}` is good for checkboxes,\r\n     * something like `value={(pending || hasFocus)? currentCapture : value\\}` for text fields.\r\n     * \r\n     * @see hasCapture\r\n     */\r\n    currentCapture: CaptureType | undefined;\r\n\r\n    /** \r\n     * The above, but stable, if you need the current capture without it being an explicit dependency.\r\n     * @stable\r\n     */\r\n    getCurrentCapture(): (CaptureType | undefined);\r\n\r\n    /**\r\n     * Because you're allowed to have `CaptureType` extend `undefined`,\r\n     * you might need this.\r\n     */\r\n    hasCapture: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Given an asynchronous event handler, returns a synchronous one that works on the DOM,\r\n * along with some other information related to the current state.\r\n * Does not modify any props.\r\n * \r\n * @remarks Note that because the handler you provide may be called with a delay, and \r\n * because the `value` of, e.g., an `<input>` element will likely have changed by the \r\n * time the delay is over, a `capture` function is necessary in order to \r\n * save the relevant information from the DOM at call-time. Any other simple event data, \r\n * like `mouseX` or `shiftKey` can stay on the event itself and don't \r\n * need to be captured &ndash; it's never stale.\r\n * \r\n * The handler is automatically throttled to only run one at a time. \r\n * If the handler is called, and then before it finishes, is called again,\r\n * it will be put on hold until the current one finishes, at which point\r\n * the second one will run.  If the handler is called a third time before\r\n * the first has finished, it will *replace* the second, so only the most\r\n * recently called iteration of the handler will run.\r\n * \r\n * \r\n * You may optionally *also* specify debounce and throttle parameters that wait until the\r\n * synchronous handler has not been called for the specified number of\r\n * milliseconds, at which point we *actually* run the asynchronous handler\r\n * according to the logic in the previous paragraph. This is in\r\n * *addition* to throttling the handler, and does not replace that behavior.\r\n * \r\n * \r\n * @example\r\n * General use\r\n * ```tsx\r\n * const asyncHandler = async (value: number, e: Event) => { \r\n *     [...] // Ex. send to a server and setState when done\r\n * };\r\n * const {\r\n *     // A sync version of asyncHandler\r\n *     syncHandler,\r\n *     // True while the handler is running\r\n *     pending,\r\n *     // The error thrown, if any\r\n *     error,\r\n *     // Show this value while the operation's pending\r\n *     currentCapture,\r\n *     // And others, see `UseAsyncHandlerReturnType`\r\n *     ...rest\r\n * } = useAsyncHandler<HTMLInputElement>()({ \r\n *     asyncHandler,\r\n *     // Pass in the capture function that saves event data\r\n *     // from being stale.\r\n *     capture: e => { \r\n *         // `capture` can have side-effects because\r\n *         // it's called exactly once per invocation\r\n *         e.preventDefault(); \r\n * \r\n *         // Save this value so that it's never stale\r\n *         return e.currentTarget.valueAsNumber;\r\n *     }\r\n * });\r\n * \r\n * const onInput = pending? null : syncHandler;\r\n * ```\r\n * \r\n * {@include } {@link UseAsyncHandlerParameters}\r\n * \r\n * @see useAsync A more general version of this hook that can work with any type of handler, not just DOM event handlers.\r\n */\r\nexport const useAsyncHandler = monitored(function useAsyncHandler<EventType, CaptureType>({ asyncHandler, capture: originalCapture, ...restAsyncOptions }: UseAsyncHandlerParameters<EventType, CaptureType>): UseAsyncHandlerReturnType<EventType, CaptureType> {\r\n    // We need to differentiate between \"nothing captured yet\" and \"`undefined` was captured\"\r\n    const [currentCapture, setCurrentCapture, getCurrentCapture] = useState<CaptureType | undefined>(undefined);\r\n    const [hasCapture, setHasCapture] = useState(false);\r\n\r\n    // Wrap around the normal `useAsync` `capture` function to also\r\n    // keep track of the last value the user actually input.\r\n    // \r\n    // Without this there's no way to re-render the control with\r\n    // it being both controlled and also having the \"correct\" value,\r\n    // and at any rate also protects against sudden exceptions reverting\r\n    // your change out from under you.\r\n    const capture = useStableCallback((e: EventType): [CaptureType, EventType] => {\r\n        const captured = originalCapture(e);\r\n        setCurrentCapture(captured);\r\n        setHasCapture(true);\r\n        return [captured, e];\r\n    });\r\n\r\n\r\n    return {\r\n        getCurrentCapture,\r\n        currentCapture,\r\n        hasCapture,\r\n        ...useAsync(asyncHandler, { capture, ...restAsyncOptions })\r\n    };\r\n})\r\n","import { noop } from \"lodash-es\";\r\nimport { UseAsyncHandlerParameters, UseAsyncHandlerReturnType, useAsyncHandler } from \"../dom-helpers/use-async-handler.js\";\r\nimport { UseRefElementReturnType } from \"../dom-helpers/use-ref-element.js\";\r\nimport { OnPassiveStateChange, returnFalse, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useState } from \"../preact-extensions/use-state.js\";\r\nimport { useTimeout } from \"../timing/use-timeout.js\";\r\nimport { TargetedPick, onfocusout, useCallback } from \"../util/lib.js\";\r\nimport { ElementProps, FocusEventType, KeyboardEventType, MouseEventType, Nullable, OmitStrong, PointerEventType, TargetedOmit, TouchEventType } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport type PressEventReason<E extends EventTarget> = MouseEventType<E> | KeyboardEventType<E> | TouchEventType<E> | PointerEventType<E>;\r\nexport type PressChangeEventReason<E extends EventTarget> = MouseEventType<E> | KeyboardEventType<E> | TouchEventType<E> | PointerEventType<E> | FocusEventType<E>;\r\n\r\nexport interface UsePressParameters<E extends EventTarget> extends TargetedPick<UseRefElementReturnType<E>, \"refElementReturn\", \"getElement\"> {\r\n    pressParameters: UsePressParametersSelf<E>;\r\n}\r\n\r\nfunction pressLog(...args: any[]) {\r\n    if ((window as any).__log_press_events)\r\n        console.log(...args)\r\n}\r\n\r\nexport interface UsePressParametersSelf<E extends EventTarget> {\r\n    /**  */\r\n    onPressingChange: Nullable<OnPassiveStateChange<boolean, PressChangeEventReason<E>>>;\r\n\r\n    /**\r\n     * What should happen when this widget has been \"pressed\".\r\n     * \r\n     * This must be a sync event handler; async handlers must be taken care of externally.\r\n     * \r\n     * Setting to `null` or `undefined` effectively disables the press event handler.\r\n     * \r\n     * @nonstable\r\n     */\r\n    onPressSync: Nullable<((e: PressEventReason<E>) => void)>;\r\n\r\n    /** Pass a function that returns `true` to prevent the spacebar from contributing to press events @nonstable */\r\n    excludeSpace: Nullable<() => boolean>;\r\n    /** Pass a function that returns `true` to prevent the enter key from contributing to press events @nonstable */\r\n    excludeEnter: Nullable<() => boolean>;\r\n    /** Pass a function that returns `true` to prevent the pointer (mouse, touch, etc.) from contributing to press events @nonstable */\r\n    excludePointer: Nullable<() => boolean>;\r\n\r\n    /**\r\n     * Ensures that when a button is pressed it properly receives focus (even on iOS Safari).\r\n     * \r\n     * Generally, this should just be `e => e.focus()`\r\n     * @param element - The element that is (presumably) about to receive focus\r\n     * \r\n     * @nonstable\r\n     */\r\n    focusSelf(element: E): void;\r\n\r\n    /**\r\n     * If `true`, holding down the `Enter` key will repeatedly fire press events as each sequential repeated keyboard event happens.\r\n     */\r\n    allowRepeatPresses: Nullable<boolean>;\r\n\r\n    /**\r\n     * After this number of milliseconds have passed pressing down but not up, the returned `longPress` value will be set to `true`\r\n     * and the user's actions will not fire an actual press event.\r\n     */\r\n    longPressThreshold: Nullable<number>;\r\n}\r\n\r\nexport interface UsePressReturnTypeSelf {\r\n    /** \r\n     * Sort of like when the CSS `:active` pseudo-element would apply,\r\n     * but specifically for presses only, so it's a more accurate reflection\r\n     * of what will happen for the user. Useful for styling mostly.\r\n     */\r\n    pressing: boolean;\r\n\r\n    /**\r\n     * @stable\r\n     */\r\n    getIsPressing(): boolean;\r\n    /**\r\n     * Similar to pseudoActive, but for if the button as been pressed down for a determined length of time.\r\n     */\r\n    longPress: boolean | null;\r\n}\r\n\r\nexport interface UsePressReturnType<E extends Element> {\r\n    pressReturn: UsePressReturnTypeSelf;\r\n\r\n    props: ElementProps<E>;\r\n}\r\n\r\nfunction supportsPointerEvents() {\r\n    return (\"onpointerup\" in window);\r\n}\r\n\r\n// All our checking for pointerdown and up doesn't mean anything if it's\r\n// a programmatic onClick event, which could come from any non-user source.\r\n// We want to handle those just like GUI clicks, but we don't want to double-up on press events.\r\n// So if we handle a press from pointerup, we ignore any subsequent click events, at least for a tick.\r\n//\r\n// Also, this is global to handle the following situation:\r\n// A button is tapped\r\n// Some heavy rendering-logic is done and the page jumps around\r\n// Now there's a new button underneath the user's finger\r\n// And it receives a click event just cause.\r\n// ...at the end of the day, globals are the best way to coordinate this simple state between disparate components.\r\n// But TODO because it doesn't work well it this library is used multiple times on the same page.\r\nlet justHandledManualClickEvent = false;\r\nlet manualClickTimeout1 = null as number | null;\r\nlet manualClickTimeout2 = null as number | null;\r\nfunction onHandledManualClickEvent() {\r\n\r\n    pressLog(\"manual-click\");\r\n    justHandledManualClickEvent = true;\r\n    if (manualClickTimeout1 != null) clearTimeout(manualClickTimeout1);\r\n    if (manualClickTimeout2 != null) clearTimeout(manualClickTimeout2);\r\n\r\n    // The timeout is somewhat generous here because when the \"emulated\" click event finally comes along\r\n    // (i.e. after all the pointer events have finished) it will also clear this. \r\n    // This is mostly as a backup safety net.\r\n    manualClickTimeout1 = setTimeout(() => {\r\n        pressLog(\"manual-click halfway\");\r\n        // This is split into two halves for task-ordering reasons.\r\n        // Namely we'd like one of these to be scheduled **after** some amount of heavy work was scheduled\r\n        // Because the task queue is FIFO at **scheduling** time, not at the **scheduled** time.\r\n        manualClickTimeout2 = setTimeout(() => {\r\n            pressLog(\"manual-click clear\");\r\n            justHandledManualClickEvent = false;\r\n        }, 50);\r\n    }, 200)\r\n}\r\n\r\ndocument.addEventListener(\"click\", (e) => {\r\n    if (justHandledManualClickEvent) {\r\n        justHandledManualClickEvent = false;\r\n        manualClickTimeout1 != null && clearTimeout(manualClickTimeout1);\r\n        manualClickTimeout2 != null && clearTimeout(manualClickTimeout2);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n    }\r\n}, { capture: true });\r\n\r\n/**\r\n * Adds the necessary event handlers to create a \"press\"-like event for\r\n * any element, whether it's a native &lt;button&gt; or regular &lt;div&gt;,\r\n * and allows for a \"long press\" that can be used to, \r\n * e.g., show a tooltip *instead* of activating a press.\r\n * \r\n * @remarks \r\n * Notably, the following cases are covered:\r\n * ```md-literal\r\n * * The target element is properly focused, even on iOS Safari (*especially* on iOS Safari)\r\n * * Double-clicks won't select text, it just presses the button twice.\r\n * * Text selection that happens to end/start with this element won't invoke a press.\r\n * * The `enter` key immediately invokes a press (by default just once until pressed again), while the `space` key invokes it when released, if focus hasn't moved away from the button.\r\n * * Haptic feedback (on, like, the one browser combination that supports it &mdash; this can be disabled app-wide with `setButtonVibrate`)\r\n * ```\r\n * \r\n * In addition, returns a \"more accurate\" CSS `active` and `hover`; more accurate\r\n * in that `hover` won't mess up mobile devices that see `hover` and mess up your click events,\r\n * and in that `active` accurately displays when a press would occur or not.\r\n * \r\n * {@include } {@link setPressVibrate}\r\n * \r\n * @compositeParams\r\n * \r\n */\r\nexport const usePress = monitored(function usePress<E extends Element>(args: UsePressParameters<E>): UsePressReturnType<E> {\r\n    const {\r\n        refElementReturn: { getElement },\r\n        pressParameters: { focusSelf, onPressSync, allowRepeatPresses, longPressThreshold, excludeEnter: ee, excludePointer: ep, excludeSpace: es, onPressingChange: opc }\r\n    } = args;\r\n\r\n\r\n    const excludeEnter = useStableCallback(ee ?? returnFalse);\r\n    const excludeSpace = useStableCallback(es ?? returnFalse);\r\n    const excludePointer = useStableCallback(ep ?? returnFalse);\r\n    const onPressingChange = useStableCallback(opc ?? noop);\r\n\r\n    const [getIsPressing, setIsPressing] = usePassiveState<boolean, PressChangeEventReason<E>>(onPressingChange, returnFalse);\r\n    const hasPressEvent = (onPressSync != null);\r\n\r\n    /**\r\n     * Explanations:\r\n     * \r\n     * It would be nice to just use pointer events for everything,\r\n     * but 2019 iOS devices can't run those, amazingly enough, and\r\n     * that's still pretty recent. So we need to have backup touch\r\n     * events.\r\n     * \r\n     * Why not just use click? Because at the very, very least,\r\n     * we also need to be able to handle space and enter key presses,\r\n     * and that needs to work regardless of if it's a <button> or not.\r\n     * \r\n     * Also, we do still use click, because programmatic clicks can come\r\n     * from anything from ATs to automation scripts, and we don't want\r\n     * to break those. But since we are listening for pointer/touch events,\r\n     * and we can't prevent the subsequent click event from happening,\r\n     * and we **don't want to duplicate press events**, we need to\r\n     * ignore click events that happen in the same tick as a handled press event.\r\n     * \r\n     * When we do a pointermove/touchmove, we check to see if we're still hovering over the element\r\n     * for more accurate \"active\"/hover detection.\r\n     * \r\n     * \"But you have a pointerleave event, why check for hovering during pointermove?\"\r\n     * \r\n     * Because for some reason, pointerleave (etc.) aren't fired until *after* pointerup, no matter what.\r\n     * \r\n     */\r\n\r\n\r\n    const [longPress, setLongPress] = useState(null as boolean | null);\r\n    const [waitingForSpaceUp, setWaitingForSpaceUp, getWaitingForSpaceUp] = useState(false);\r\n    const [pointerDownStartedHere, setPointerDownStartedHere, getPointerDownStartedHere] = useState(false);\r\n    const [hovering, setHovering, getHovering] = useState(false);\r\n    const onTouchStart = useStableCallback((e: TouchEventType<E>) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setIsPressing(true, e);\r\n        setPointerDownStartedHere(true);\r\n        setHovering(true);\r\n        setLongPress(false);\r\n\r\n        const element = getElement();\r\n        if (element)\r\n            focusSelf(element);\r\n    });\r\n    const onTouchMove = useCallback((e: TouchEventType<E>) => {\r\n        pressLog(\"touchmove\", e);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const element = getElement();\r\n        const touch = e.touches[0];\r\n        // Be as generous as possible with touch events by checking all four corners of the radius too\r\n        const offsets = [\r\n            [0, 0] as const,\r\n            [-(touch as Touch).radiusX || 0, -(touch as Touch).radiusY || 0] as const,\r\n            [+(touch as Touch).radiusX || 0, -(touch as Touch).radiusY || 0] as const,\r\n            [-(touch as Touch).radiusX || 0, +(touch as Touch).radiusY || 0] as const,\r\n            [+(touch as Touch).radiusX || 0, +(touch as Touch).radiusY || 0] as const\r\n        ] as const;\r\n        let hoveringAtAnyPoint = false;\r\n        for (const [x, y] of offsets) {\r\n            const elementAtTouch = document.elementFromPoint((touch?.clientX ?? 0) + x, (touch?.clientY ?? 0) + y);\r\n            hoveringAtAnyPoint ||= (element?.contains(elementAtTouch) ?? false)\r\n        }\r\n        setIsPressing(hoveringAtAnyPoint && getPointerDownStartedHere(), e);\r\n        setHovering(hoveringAtAnyPoint);\r\n    }, []);\r\n    const onTouchEnd = useCallback((e: TouchEventType<E>) => {\r\n        pressLog(\"touchend\", e);\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const hovering = getHovering();\r\n        const pointerDownStartedHere = getPointerDownStartedHere();\r\n\r\n        if (pointerDownStartedHere && hovering) {\r\n            onHandledManualClickEvent();\r\n            handlePress(e);\r\n        }\r\n        setWaitingForSpaceUp(false);\r\n        setHovering(false);\r\n        setPointerDownStartedHere(false);\r\n        setIsPressing(false, e);\r\n    }, []);\r\n\r\n    const onPointerDown = useStableCallback((e: PointerEventType<E>) => {\r\n        pressLog(\"pointerdown\", e);\r\n        if (!excludePointer()) {\r\n            if ((e.buttons & 1)) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                setIsPressing(true, e);\r\n                setPointerDownStartedHere(true);\r\n                setHovering(true);\r\n                setLongPress(false);\r\n\r\n                const element = getElement();\r\n                if (element)\r\n                    focusSelf(element);\r\n            }\r\n        }\r\n    });\r\n    const onPointerMove = useStableCallback((e: PointerEventType<E>) => {\r\n        pressLog(\"pointermove\", e);\r\n        let listeningForPress = getPointerDownStartedHere();\r\n        // If we're hovering over this element and not holding down the mouse button (or whatever other primary button)\r\n        // then we're definitely not in a press anymore (if we could we'd just wait for onPointerUp, but it could happen outside this element)\r\n        if (!(e.buttons & 1))\r\n            setPointerDownStartedHere(listeningForPress = false);\r\n\r\n\r\n        if (listeningForPress) {\r\n            const element = getElement();\r\n            // Note: elementFromPoint starts reasonably expensive on a decent computer when on the order of 500 or so elements,\r\n            // so we only test for hovering while actively attempting to detect a press\r\n            const elementAtPointer = document.elementFromPoint(e.clientX, e.clientY);\r\n            const hovering = element == elementAtPointer || element?.contains(elementAtPointer) || false;\r\n            setHovering(hovering);\r\n            setIsPressing(hovering && getPointerDownStartedHere(), e);\r\n        }\r\n\r\n    })\r\n    const onPointerUp = useCallback((e: PointerEventType<E>) => {\r\n        pressLog(\"pointerup\", e);\r\n        const hovering = getHovering();\r\n        const pointerDownStartedHere = getPointerDownStartedHere();\r\n\r\n        if (!excludePointer()) {\r\n            if (pointerDownStartedHere && hovering) {\r\n                onHandledManualClickEvent();\r\n                handlePress(e);\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }\r\n        setWaitingForSpaceUp(false);\r\n        setHovering(false);\r\n        setPointerDownStartedHere(false);\r\n        setLongPress(false);\r\n        setIsPressing(false, e);\r\n\r\n    }, []);\r\n    const onPointerEnter = useCallback((_e: PointerEventType<E>) => {\r\n        pressLog(\"pointerenter\", _e);\r\n        setHovering(true);\r\n    }, [])\r\n    const onPointerLeave = useCallback((_e: PointerEventType<E>) => {\r\n        pressLog(\"pointerleave\", _e);\r\n        setHovering(false);\r\n        setLongPress(false);\r\n    }, []);\r\n\r\n    useTimeout({\r\n        callback: () => {\r\n            const element = getElement();\r\n            setLongPress(pointerDownStartedHere && getHovering());\r\n            if (element && pointerDownStartedHere && getHovering()) {\r\n                focusSelf(element);\r\n\r\n\r\n                if (longPressThreshold) {\r\n                    setWaitingForSpaceUp(false);\r\n                    setHovering(false);\r\n                    setPointerDownStartedHere(false);\r\n                }\r\n            }\r\n\r\n        },\r\n        timeout: longPressThreshold ?? null,\r\n        triggerIndex: longPress ? true : (pointerDownStartedHere && getHovering())\r\n    })\r\n\r\n\r\n    const handlePress = useStableCallback<NonNullable<typeof onPressSync>>((e) => {\r\n        pressLog(\"handlepress\", e);\r\n        setWaitingForSpaceUp(false);\r\n        setHovering(false);\r\n        setPointerDownStartedHere(false);\r\n        setLongPress(null);\r\n\r\n        if (onPressSync) {\r\n\r\n            // Note: The element is focused here because of iOS Safari.\r\n            //\r\n            // It's always iOS Safari.\r\n            //\r\n            // iOS Safari (tested on 12) downright refuses to allow \r\n            // elements to be manually focused UNLESS it happens within\r\n            // an event handler like this.  It also doesn't focus\r\n            // buttons by default when clicked, tapped, etc.\r\n            //\r\n            // If it becomes problematic that button-likes explicitly become\r\n            // focused when they are pressed, then an alternative solution for\r\n            // the question of \"how do menu buttons keep their menus open\"\r\n            // and other focus-related nonsense needs to be figured out.\r\n            //\r\n            // For iOS Safari.\r\n            //\r\n            const element = getElement();\r\n            if (element)\r\n                focusSelf(element as EventTarget as E);\r\n\r\n            // Whatever the browser was going to do with this event,\r\n            // forget it. We're turning it into a \"press\" event.\r\n            e.preventDefault();\r\n\r\n            // Also stop anyone else from listening to this event,\r\n            // since we're explicitly handling it.\r\n            // (Notably, this allows labels to wrap inputs, with them\r\n            // both having press event handlers, without double-firing)\r\n            e.stopPropagation();\r\n\r\n            // Haptic feedback for this press event\r\n            try {\r\n                // The default implementation doesn't throw,\r\n                // but we should guard against user implementations that could.\r\n                pulse();\r\n            }\r\n            finally {\r\n                // Actually call our handler.\r\n                onPressSync(e);\r\n            }\r\n\r\n        }\r\n    });\r\n\r\n\r\n    const onKeyDown = useStableCallback((e: KeyboardEventType<E>) => {\r\n        pressLog(\"keydown\", e);\r\n        if (onPressSync) {\r\n            if (e.key == \" \" && !excludeSpace()) {\r\n                // We don't actually activate it on a space keydown\r\n                // but we do preventDefault to stop the page from scrolling.\r\n                setWaitingForSpaceUp(true);\r\n                setIsPressing(true, e);\r\n                e.preventDefault();\r\n            }\r\n\r\n            if (e.key == \"Enter\" && !excludeEnter() && (!e.repeat || (allowRepeatPresses ?? false))) {\r\n                setIsPressing(true, e);\r\n                handlePress(e);\r\n                requestAnimationFrame(() => {\r\n                    setIsPressing(false, e);\r\n                });\r\n            }\r\n        }\r\n    })\r\n\r\n    const onKeyUp = useStableCallback((e: KeyboardEventType<E>) => {\r\n        pressLog(\"keyup\", e);\r\n        const waitingForSpaceUp = getWaitingForSpaceUp();\r\n        if (waitingForSpaceUp && e.key == \" \" && !excludeSpace()) {\r\n            handlePress(e);\r\n            setIsPressing(false, e);\r\n        }\r\n    })\r\n\r\n    const onClick = useStableCallback((e: MouseEventType<E>) => {\r\n        pressLog(\"click\", e);\r\n        // We should rarely get here. Most of the events do `preventDefault` which stops click from being called,\r\n        // but we can still get here if the actual `click()` member is called, for example, and we need to react appropriately.\r\n        const element = getElement();\r\n        if (onPressSync) {\r\n            if (e.detail > 1) {\r\n                if (\"stopImmediatePropagation\" in e)\r\n                    (e as never as Event).stopImmediatePropagation();\r\n                e.stopPropagation();\r\n            }\r\n            else {\r\n                // Listen for \"programmatic\" click events.\r\n                if (justHandledManualClickEvent) {\r\n                    // This is probably the click event after the end of all the pointerdownupleavemoveenter soup.\r\n                    // Clear the flag a little early.\r\n                    justHandledManualClickEvent = false;\r\n                }\r\n                else {\r\n                    console.assert(justHandledManualClickEvent == false, \"Logic???\");\r\n\r\n                    // Ignore stray click events that were't fired ON OR WITHIN on this element\r\n                    // (\"on or within\" because sometimes a button's got a label that's a different element than the button)\r\n                    if ((e.target && element?.contains(e.target as Node))) {\r\n\r\n                        if (getHovering()) {\r\n                            // Okay, I guess the browser decided the click event is happening *now*,\r\n                            // just after pointerdown but before pointerup, sure.\r\n                            // Nothing to do here, though, but maybe TODO\r\n                            // because I think this only happens on Firefox mobile? Maybe?\r\n                        }\r\n                        else {\r\n                            // Intentional, for now. Programmatic clicks shouldn't happen in most cases.\r\n                            // TODO: Remove this when I'm confident stray clicks won't be handled.\r\n                            /* eslint-disable no-debugger */\r\n                            debugger;\r\n                            console.log(\"onclick was fired and will be handled as it doesn't look like it came from a pointer event\", e);\r\n                            console.assert(justHandledManualClickEvent == false, \"Logic???\");\r\n                        }\r\n\r\n\r\n                        setIsPressing(true, e);\r\n                        requestAnimationFrame(() => {\r\n                            setIsPressing(false, e);\r\n                        });\r\n                        handlePress(e);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    const onFocusOut = useStableCallback((e: FocusEventType<E>) => {\r\n        pressLog(\"focusout\", e);\r\n        setWaitingForSpaceUp(false);\r\n        setIsPressing(false, e);\r\n    })\r\n\r\n\r\n    const p = supportsPointerEvents();\r\n\r\n    return {\r\n        pressReturn: {\r\n            pressing: ((pointerDownStartedHere && hovering) || waitingForSpaceUp || false),\r\n            getIsPressing,\r\n            longPress\r\n        },\r\n        props: {\r\n            onKeyDown,\r\n            onKeyUp,\r\n\r\n            onTouchStart: !hasPressEvent ? undefined : (!p ? onTouchStart : undefined),\r\n            onTouchCancel: !hasPressEvent ? undefined : (!p ? onTouchEnd : undefined),\r\n            onTouchMove: !hasPressEvent ? undefined : (!p ? onTouchMove : undefined),\r\n            onTouchEnd: !hasPressEvent ? undefined : (!p ? onTouchEnd : undefined),\r\n            onPointerDown: !hasPressEvent ? undefined : (p ? onPointerDown : undefined),\r\n            onPointerCancel: !hasPressEvent ? undefined : (p ? onPointerDown : undefined),\r\n            onPointerMove: !pointerDownStartedHere || !hasPressEvent ? undefined : (p ? onPointerMove : undefined),\r\n            onPointerUp: !hasPressEvent ? undefined : (p ? onPointerUp : undefined),\r\n            onPointerEnter: !hasPressEvent ? undefined : (p ? onPointerEnter : undefined),\r\n            onPointerLeave: !hasPressEvent ? undefined : (p ? onPointerLeave : undefined),\r\n            [onfocusout]: onFocusOut,\r\n            onClick\r\n        },\r\n    };\r\n})\r\n\r\nexport interface UsePressAsyncParameters<E extends Element> extends\r\n    OmitStrong<UsePressParameters<E>, \"pressParameters\">,\r\n    TargetedOmit<UsePressParameters<E>, \"pressParameters\", \"onPressSync\"> {\r\n    asyncHandlerParameters: OmitStrong<UseAsyncHandlerParameters<PressEventReason<E>, void>, \"capture\">;\r\n}\r\n\r\nexport interface UsePressAsyncReturnType<E extends Element> extends UsePressReturnType<E> {\r\n    asyncHandlerReturn: UseAsyncHandlerReturnType<PressEventReason<E>, void>;\r\n}\r\n\r\nexport function usePressAsync<E extends Element>({\r\n    asyncHandlerParameters: { debounce, throttle, asyncHandler },\r\n    pressParameters,\r\n    refElementReturn\r\n}: UsePressAsyncParameters<E>): UsePressAsyncReturnType<E> {\r\n    const asyncHandlerReturn = useAsyncHandler<PressEventReason<E>, void>({ asyncHandler, capture: noop, debounce, throttle });\r\n    const { pressReturn, props } = usePress<E>({ pressParameters: { onPressSync: asyncHandlerReturn.syncHandler, ...pressParameters }, refElementReturn });\r\n\r\n    return {\r\n        asyncHandlerReturn,\r\n        pressReturn,\r\n        props\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * selection.containsNode doesn't account for selection.isCollapsed,\r\n * so here's a workaround for that.\r\n * \r\n * We also only look for the selection end to only catch the \r\n * essence of a non-existent \"SelectionStop\" event.\r\n * \r\n * @param element \r\n * @returns \r\n */\r\nfunction _nodeSelectedTextLength(element: EventTarget | null | undefined) {\r\n    if (element && element instanceof Node) {\r\n        const selection = window.getSelection();\r\n\r\n        for (let i = 0; i < (selection?.rangeCount ?? 0); ++i) {\r\n            const range = selection!.getRangeAt(i)!;\r\n            if (element.contains(range.endContainer) && !selection?.isCollapsed) {\r\n                return selection!.toString().length;\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n\r\nlet pulse = ((\"vibrate\" in navigator) && (navigator.vibrate instanceof Function)) ? (() => navigator.vibrate(10)) : (() => { });\r\n\r\n/**\r\n * This function can be used to enable/disable button vibration pulses on an app-wide scale.\r\n * \r\n * \r\n * @param func - The function to run when a button is tapped. (Default is `() => navigator.vibrate(10)` in browsers that support it, a noop otherwise)\r\n */\r\nexport function setPressVibrate(func: () => void) {\r\n    pulse = func;\r\n}\r\n","\r\nimport { useEnsureStability } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useId, useRef } from \"../util/lib.js\";\r\nimport { ElementProps } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport interface UseRandomIdReturnType<S extends Element, T extends Element> {\r\n    propsSource: ElementProps<S>;\r\n    propsReferencer: ElementProps<T>;\r\n\r\n    randomIdReturn: UseRandomIdReturnTypeSelf;\r\n}\r\n\r\nexport interface UseRandomIdReturnTypeSelf { id: string; };\r\n\r\nexport interface UseRandomIdParametersSelf {\r\n    /**\r\n     * While all IDs are unique, this can be used to more easily differentiate them.\r\n     * \r\n     * If this is stable, then your props are stable. Simple as that.\r\n     * \r\n     * @stable\r\n     */\r\n    prefix: string;\r\n\r\n    /** This is the prop on the **OTHER** element that will use our ID.  E.G. The `input` calls `useRandomId` and passes `for` as `referencerProp`. */\r\n    otherReferencerProp: keyof ElementProps<any> | null;\r\n}\r\n\r\nexport interface UseRandomIdParameters {\r\n    randomIdParameters: UseRandomIdParametersSelf;\r\n}\r\n\r\n/**\r\n * Besides just generating something for the `id` prop, also gives you the props to use on another element if you'd like (e.g. a label's `for`).\r\n * \r\n * @compositeParams\r\n */\r\nexport const useRandomId = monitored(function useRandomId<S extends Element, T extends Element>({ randomIdParameters: { prefix, otherReferencerProp } }: UseRandomIdParameters): UseRandomIdReturnType<S, T> {\r\n    const id = (prefix + useId());\r\n    useEnsureStability(\"useRandomId\", prefix, id);\r\n\r\n    const referencerElementProps = useRef<ElementProps<any>>(otherReferencerProp == null ? {} : { [otherReferencerProp]: id });\r\n    const sourceElementProps = useRef<ElementProps<S>>({ id });\r\n    useEnsureStability(\"useRandomIdReferencerElement\", otherReferencerProp);\r\n\r\n\r\n    return {\r\n        propsReferencer: referencerElementProps.current,\r\n        propsSource: sourceElementProps.current,\r\n        randomIdReturn: {\r\n            id: id\r\n        }\r\n    }\r\n})\r\n","import { useMergedProps } from \"../dom-helpers/use-merged-props.js\";\r\nimport { ElementProps } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { UseRandomIdParameters, UseRandomIdReturnType, useRandomId } from \"./use-random-id.js\";\r\n\r\n\r\nexport interface UseRandomDualIdsParameters {\r\n    randomIdInputParameters: UseRandomIdParameters[\"randomIdParameters\"];\r\n    randomIdLabelParameters: UseRandomIdParameters[\"randomIdParameters\"];\r\n}\r\n\r\nexport interface UseRandomDualIdsReturnType<InputElement extends Element, LabelElement extends Element> {\r\n    propsInput: ElementProps<InputElement>;\r\n    propsLabel: ElementProps<LabelElement>;\r\n    randomIdInputReturn: UseRandomIdReturnType<InputElement, LabelElement>[\"randomIdReturn\"];\r\n    randomIdLabelReturn: UseRandomIdReturnType<LabelElement, InputElement>[\"randomIdReturn\"];\r\n}\r\n\r\n/**\r\n * While `useRandomId` allows the referencer to use the source's ID, sometimes you also want the reverse too (e.g. I `aria-label` you, you `aria-controls` me. That sort of thing).\r\n * \r\n * @compositeParams\r\n */\r\nexport const useRandomDualIds = monitored(function useRandomDualIds<InputElement extends Element, LabelElement extends Element>({\r\n    randomIdInputParameters,\r\n    randomIdLabelParameters,\r\n}: UseRandomDualIdsParameters): UseRandomDualIdsReturnType<InputElement, LabelElement> {\r\n    const { randomIdReturn: randomIdInputReturn, propsReferencer: propsLabelAsReferencer, propsSource: propsInputAsSource } = useRandomId<InputElement, LabelElement>({ randomIdParameters: randomIdInputParameters });\r\n    const { randomIdReturn: randomIdLabelReturn, propsReferencer: propsInputAsReferencer, propsSource: propsLabelAsSource } = useRandomId<LabelElement, InputElement>({ randomIdParameters: randomIdLabelParameters });\r\n\r\n    return {\r\n        propsLabel: useMergedProps<LabelElement>(propsLabelAsReferencer, propsLabelAsSource),\r\n        propsInput: useMergedProps<InputElement>(propsInputAsReferencer, propsInputAsSource),\r\n        randomIdInputReturn,\r\n        randomIdLabelReturn\r\n    }\r\n})\r\n","import { useState } from \"../preact-extensions/use-state.js\";\r\nimport { DragEventType, ElementProps, Nullable } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n/*\r\nexport function useDraggableProps<E extends EventTarget>(r: UseDraggableReturnType<E>, ...otherProps: ElementProps<E>[]): ElementProps<E>[] {\r\n    return [r.propsUnstable, ...otherProps];\r\n}*/\r\n\r\nexport interface UseDraggableReturnType<E extends EventTarget> {\r\n    /** *Unstable* */\r\n    propsUnstable: ElementProps<E>;\r\n\r\n    /**\r\n     * Returns true if the element in question is currently being dragged\r\n     */\r\n    dragging: boolean;\r\n\r\n    /** @stable */\r\n    getDragging: () => boolean;\r\n\r\n    /**\r\n     * Once the drag ends, if it was over a valid droppable, this will be\r\n     * set to the `dropEffect` value it had.\r\n     * \r\n     * This can be used to detect when the element has dropped, \r\n     * and then what should be done with it (generally deleted if the effect was \"move\")\r\n     */\r\n    lastDropEffect: DataTransfer[\"dropEffect\"] | null;\r\n\r\n    /** @stable */\r\n    getLastDropEffect: () => (DataTransfer[\"dropEffect\"] | null);\r\n}\r\n\r\n\r\nexport interface UseDraggableParameters {\r\n\r\n    /**\r\n     * Maps to the Drag and Drop API -- allows limiting the areas this element can be dropped.\r\n     * For example, setting this to \"copyLink\" will allow this this to be dropped onto\r\n     * a droppable with an effect of \"copy\" or \"link\", but not \"move\".\r\n     * \r\n     */\r\n    effectAllowed: Nullable<DataTransfer[\"effectAllowed\"]>;\r\n\r\n    /**\r\n     * Can be used to specify a custom drag image instead of the browser default (a transparent render of the original element, generally)\r\n     */\r\n    dragImage: Nullable<HTMLCanvasElement | HTMLImageElement | HTMLVideoElement>;\r\n    dragImageXOffset: Nullable<number>;\r\n    dragImageYOffset: Nullable<number>;\r\n\r\n    /**\r\n     * Represents a dictionary mapping of MIME types to data\r\n     */\r\n    data: { [mimeType: string]: string };\r\n}\r\n\r\n/**\r\n * Allows an element to start a drag operation.\r\n * \r\n * @remarks\r\n * {@include } {@link UseDraggableParameters}\r\n * {@include } {@link UseDraggableReturnType}\r\n */\r\nexport const useDraggable = monitored(function useDraggable<E extends Element>({ effectAllowed, data, dragImage, dragImageXOffset, dragImageYOffset }: UseDraggableParameters): UseDraggableReturnType<E> {\r\n    const [dragging, setDragging, getDragging] = useState(false);\r\n    const [lastDropEffect, setLastDropEffect, getLastDropEffect] = useState<DataTransfer[\"dropEffect\"] | null>(null);\r\n\r\n    const onDragStart = (e: DragEventType<E>) => {\r\n        //e.preventDefault();\r\n        setDragging(true);\r\n        if (e.dataTransfer) {\r\n            e.dataTransfer.effectAllowed = (effectAllowed ?? \"all\");\r\n            if (dragImage)\r\n                e.dataTransfer.setDragImage(dragImage, dragImageXOffset ?? 0, dragImageYOffset ?? 0)\r\n\r\n            const entries = Object.entries(data) as [mimeType: string, data: string][];\r\n            for (const [mimeType, data] of entries) {\r\n                e.dataTransfer.setData(mimeType, data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const onDragEnd = (e: DragEventType<E>) => {\r\n        e.preventDefault();\r\n        setDragging(false);\r\n        if (e.dataTransfer) {\r\n            if (e.dataTransfer.dropEffect != \"none\") {\r\n                setLastDropEffect(e.dataTransfer.dropEffect);\r\n            }\r\n            else {\r\n                setLastDropEffect(null);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Return both the element and the hook that modifies \r\n    // the props and allows us to actually find the element\r\n    const ret: UseDraggableReturnType<E> = {\r\n        propsUnstable: {\r\n            draggable: true,\r\n            onDragStart,\r\n            onDragEnd\r\n        },\r\n        dragging,\r\n        getDragging,\r\n        lastDropEffect,\r\n        getLastDropEffect\r\n    };\r\n\r\n    return ret;\r\n})\r\n\r\n","import { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useState } from \"../preact-extensions/use-state.js\";\r\nimport { DragEventType, useEffect, useRef } from \"../util/lib.js\";\r\nimport { ElementProps } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport interface UseDroppableReturnType<E extends Element> {\r\n\r\n    /**\r\n     * Hook for modifying the props you were going to pass to your drop target Element.\r\n     * \r\n     * *Unstable*\r\n     */\r\n    propsStable: ElementProps<E>;\r\n\r\n    /**\r\n     * While something is being dragged over this element, this will contain any information about any files included in that drop.\r\n     * Otherwise, it'll be null, meaning nothing is being dragged over this element.\r\n     */\r\n    filesForConsideration: DropFileMetadata[] | null;\r\n    /**\r\n     * While something is being dragged over this element, a list of available MIME types for the non-file data will be listed here.\r\n     * Otherwise, it'll be null, meaning nothing is being dragged over this element.\r\n     */\r\n    stringsForConsideration: Set<string> | null;\r\n\r\n    /**\r\n     * When files are dropped over the element, their data will be given here.\r\n     * This will update as new drops happen.\r\n     */\r\n    droppedFiles: DropFile[] | null;\r\n\r\n    /**\r\n     * When non-file data is dropped over the element, their data will be given here.\r\n     * This will update as new drops happen.\r\n     */\r\n    droppedStrings: { [MimeType: string]: string } | null;\r\n\r\n\r\n    dropError: unknown;\r\n}\r\n\r\nexport interface UseDroppableParameters {\r\n    /**\r\n     * Maps to the Drag and Drop API -- effectively means \"as close as possible, what's happening to the data when I drop it here? \r\n     * Am I copying it and leaving the original, am I moving it and deleting the original, or am I linking it to the original?\"\r\n     * \r\n     * Whatever is being dragged over this will have its own permission that's checked against this.\r\n     */\r\n    effect: DataTransfer[\"dropEffect\"] | undefined;\r\n}\r\n\r\nexport interface DropFile extends DropFileMetadata { name: string, data: ArrayBuffer, size: number | undefined, lastModified: number | undefined }\r\nexport interface DropFileMetadata { type: string | undefined }\r\n\r\n\r\ntype DroppableFileErrorType = \"IndexSizeError\" | \"HierarchyRequestError\" | \"WrongDocumentError\" | \"InvalidCharacterError\" | \"NoModificationAllowedError\" | \"NotFoundError\" | \"NotSupportedError\" | \"InvalidStateError\" | \"InUseAttributeError\" | \"SyntaxError\" | \"InvalidModificationError\" | \"NamespaceError\" | \"InvalidAccessError\" | \"TypeMismatchError\" | \"SecurityError\" | \"NetworkError\" | \"AbortError\" | \"URLMismatchError\" | \"QuotaExceededError\" | \"TimeoutError\" | \"InvalidNodeTypeError\" | \"DataCloneError\" | \"EncodingError\" | \"NotReadableError\" | \"UnknownError\" | \"ConstraintError\" | \"DataError\" | \"TransactionInactiveError\" | \"ReadOnlyError\" | \"VersionError\" | \"OperationError\" | \"NotAllowedError\";\r\n\r\nexport class DroppableFileError extends Error {\r\n    fileName: string;\r\n    errorType: DroppableFileErrorType;\r\n\r\n    constructor(fileName: string, base: DOMException | null) {\r\n        super(base?.message ?? \"An unspecified error occurred reading the file.\");\r\n        this.fileName = fileName;\r\n        this.errorType = (base?.name as DroppableFileErrorType);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * Allows an element to start a drag operation.\r\n * \r\n * @remarks\r\n * {@include } {@link UseDroppableParameters}\r\n * {@include } {@link UseDroppableReturnType}\r\n */\r\nexport const useDroppable = monitored(function useDroppable<E extends Element>({ effect }: UseDroppableParameters): UseDroppableReturnType<E> {\r\n\r\n    const [filesForConsideration, setFilesForConsideration] = useState<null | DropFileMetadata[]>(null);\r\n    const [stringsForConsideration, setStringsForConsideration] = useState<null | Set<string>>(null);\r\n\r\n    const [droppedFiles, setDroppedFiles] = useState<null | DropFile[]>(null);\r\n    const [droppedStrings, setDroppedStrings] = useState<null | { [MimeType: string]: string }>(null);\r\n\r\n    const [dropError, setDropError] = useState<unknown | undefined>(undefined);\r\n\r\n    // All the promises generated from the drop events.\r\n    // Used to process multiple drop events in succession\r\n    const dropPromisesRef = useRef<Promise<null | { strings: { [mimeType: string]: string }, files: DropFile[] }>[]>([]);\r\n    const [currentPromiseIndex, setCurrentPromiseIndex, getCurrentPromiseIndex] = useState(-1);\r\n    const [promiseCount, setPromiseCount, getPromiseCount] = useState(0);\r\n\r\n    // Any time we add a new promise, if there's no current promise running, we need to start one.\r\n    // If there is one, then we don't need to do anything, since it runs the same check.\r\n    useEffect(() => {\r\n        const currentPromiseIndex = getCurrentPromiseIndex();\r\n        const promiseCount = getPromiseCount();\r\n\r\n        if (promiseCount > 0) {\r\n            if ((currentPromiseIndex + 1) < promiseCount) {\r\n                setCurrentPromiseIndex(i => ++i);\r\n            }\r\n        }\r\n\r\n    }, [promiseCount]);\r\n\r\n    // Anytime our current promise changes,\r\n    // wait for it to finish, then set our state to its result.\r\n    // Finally, check to see if there are anymore promises.\r\n    // If there are, then increase currentPromiseCount,\r\n    // which will trigger this again.\r\n    //\r\n    // This shouldn't happen *often*, but maybe in the case of\r\n    // individually dropping a bunch of large files or something.\r\n    useEffect(() => {\r\n        if (currentPromiseIndex >= 0) {\r\n            const currentPromise = dropPromisesRef.current[currentPromiseIndex];\r\n            currentPromise.then((info) => {\r\n\r\n                if (info !== null) {\r\n                    const { files, strings } = info;\r\n                    setDroppedFiles(files);\r\n                    setDroppedStrings(strings);\r\n                }\r\n\r\n                // Now that we're done, are there more promises in the queue?\r\n\r\n                const currentPromiseIndex = getCurrentPromiseIndex();\r\n                const promiseCount = getPromiseCount();\r\n\r\n                if ((currentPromiseIndex + 1) < promiseCount) {\r\n                    // Since this promise has started, more have been added.\r\n                    // Run this effect again.\r\n                    setCurrentPromiseIndex(i => ++i);\r\n                }\r\n            })\r\n        }\r\n    }, [currentPromiseIndex]);\r\n\r\n\r\n    // Handle collecting the current file metadata or MIME types.\r\n    const onDragEnter = useStableCallback((e: DragEventType<E>) => {\r\n        e.preventDefault();\r\n        if (e.dataTransfer) {\r\n\r\n            // Is there a default? I can't find one anywhere.\r\n            e.dataTransfer.dropEffect = (effect ?? \"move\");\r\n\r\n            const newMimeTypes = new Set<string>();\r\n            const newFiles = new Array<DropFileMetadata>();\r\n\r\n            for (const item of e.dataTransfer?.items ?? []) {\r\n                const { kind, type } = item;\r\n\r\n                if (kind === \"string\") {\r\n                    newMimeTypes.add(type);\r\n                }\r\n                else if (kind === \"file\") {\r\n                    newFiles.push({ type: item.type });\r\n\r\n                }\r\n            }\r\n\r\n            setFilesForConsideration(newFiles);\r\n            setStringsForConsideration(newMimeTypes);\r\n        }\r\n    });\r\n\r\n    // Handle resetting the current file metadata or MIME types\r\n    const onDragLeave = useStableCallback((e: DragEventType<E>) => {\r\n        e.preventDefault();\r\n        setFilesForConsideration(null);\r\n        setStringsForConsideration(null);\r\n    });\r\n\r\n    // Boilerplate, I guess\r\n    const onDragOver = useStableCallback((e: DragEventType<E>) => {\r\n        e.preventDefault();\r\n    })\r\n\r\n    // Handle getting the drop data asynchronously\r\n    const onDrop = useStableCallback((e: DragEventType<E>) => {\r\n        e.preventDefault();\r\n\r\n        setFilesForConsideration(null);\r\n        setStringsForConsideration(null);\r\n\r\n        const allPromises = new Array<Promise<unknown>>();\r\n\r\n        const dropData: { [mimeType: string]: string } = {};\r\n        const dropFile: DropFile[] = [];\r\n\r\n        for (const item of e.dataTransfer?.items ?? []) {\r\n            const { kind, type } = item;\r\n\r\n            if (kind === \"string\") {\r\n                allPromises.push((new Promise<string>((resolve, _reject) => item.getAsString(resolve))).then(str => dropData[type] = str));\r\n            }\r\n            else if (kind === \"file\") {\r\n                const file = item.getAsFile();\r\n                if (file) {\r\n                    allPromises.push(\r\n                        new Promise<void>((resolve, reject) => {\r\n\r\n                            const reader = new FileReader();\r\n\r\n                            reader.onload = (_) => {\r\n                                resolve();\r\n                                const data = reader.result as ArrayBuffer;\r\n                                dropFile.push({ data, name: file.name, type: file.type, size: data.byteLength, lastModified: file.lastModified });\r\n                            };\r\n                            reader.onerror = (_) => { reject(new DroppableFileError(file.name, reader.error)); };\r\n                            reader.onabort = (_) => { reject(new DroppableFileError(file.name, reader.error)); };\r\n\r\n                            reader.readAsArrayBuffer(file);\r\n                        })\r\n                    );\r\n                    dropFile.push();\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        dropPromisesRef.current.push(Promise.all(allPromises).then(() => {\r\n            setPromiseCount(i => ++i);\r\n            setDropError(null);\r\n            return {\r\n                strings: dropData,\r\n                files: dropFile\r\n            }\r\n        }).catch(ex => {\r\n            /* eslint-disable no-debugger */\r\n            debugger;\r\n            setPromiseCount(i => ++i);\r\n            setDropError(ex);\r\n            return null;\r\n        }));\r\n    })\r\n\r\n    const propsStable = useRef<ElementProps<E>>({ onDragEnter, onDragLeave, onDragOver, onDrop });\r\n\r\n    return {\r\n        propsStable: propsStable.current,\r\n        filesForConsideration,\r\n        stringsForConsideration,\r\n        droppedFiles,\r\n        droppedStrings,\r\n\r\n        dropError\r\n    }\r\n})\r\n\r\n\r\n","import { usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useEffect } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n\r\n/**\r\n * Allows for hiding the scroll bar of the root HTML element\r\n * without shifting the layout of the page by adding a few pixels\r\n * of padding to the root element if necessary.\r\n * \r\n * @param hideScroll - Whether the scroll bar is hidden or not (i.e. `true` to hide the scroll bar, `false` to allow it to be visible)\r\n */\r\nexport const useHideScroll = monitored(function useHideScroll(hideScroll: boolean) {\r\n    const [getScrollbarWidth, setScrollbarWidth] = usePassiveState<number | null, never>(null);\r\n    const [getScrollbarHeight, setScrollbarHeight] = usePassiveState<number | null, never>(null);\r\n\r\n    useEffect(() => {\r\n        if (hideScroll) {\r\n\r\n            // When scrolling is resumed, we'll need to restore the original scroll positions\r\n            // so we need to keep this information around\r\n            const originalScrollTop = document.documentElement.scrollTop;\r\n            const originalScrollLeft = document.documentElement.scrollLeft;\r\n\r\n            // Measure the width of the page (minus the scrollbar)\r\n            const widthWithScrollBar = document.documentElement.scrollWidth;\r\n            const heightWithScrollBar = document.documentElement.scrollHeight;\r\n\r\n            // Apply a class that hides the scrollbar.\r\n            document.documentElement.classList.add(\"document-scroll-hidden\");\r\n\r\n            // In case multiple things are locking scroll, keep track of how many are doing that\r\n            // (just add 1 on enable, subtract 1 on disable)\r\n            document.documentElement.dataset[\"scrollHiders\"] = (+(document.documentElement.dataset[\"scrollHiders\"] || \"0\") + 1).toString();\r\n\r\n            // Measure the new width without a scrollbar \r\n            // so we can take the difference as the scrollbar width.\r\n            const widthWithoutScrollBar = document.documentElement.scrollWidth;\r\n            const heightWithoutScrollBar = document.documentElement.scrollHeight;\r\n            let scrollbarWidth = (widthWithoutScrollBar - widthWithScrollBar);\r\n            let scrollbarHeight = (heightWithoutScrollBar - heightWithScrollBar);\r\n\r\n            // Failsafe -- if this measuring trick does something unexpected, just ignore it\r\n            if (scrollbarWidth > 80)\r\n                scrollbarWidth = 0;\r\n            if (scrollbarHeight > 80)\r\n                scrollbarHeight = 0;\r\n\r\n            // Make our measurements available as CSS properties for general use\r\n            document.documentElement.style.setProperty(\"--root-scrollbar-width\", `${scrollbarWidth}px`);\r\n            document.documentElement.style.setProperty(\"--root-scrollbar-height\", `${scrollbarHeight}px`);\r\n            document.documentElement.style.setProperty(\"--root-scrollstop-top\", `${originalScrollTop}px`);\r\n            document.documentElement.style.setProperty(\"--root-scrollstop-left\", `${originalScrollLeft}px`);\r\n\r\n            setScrollbarWidth(scrollbarWidth);\r\n            setScrollbarHeight(scrollbarHeight);\r\n\r\n            return () => {\r\n                // Undo all the things we just did\r\n                document.documentElement.dataset[\"scrollHiders\"] = (+(document.documentElement.dataset[\"scrollHiders\"] || \"0\") - 1).toString();\r\n                if (document.documentElement.dataset[\"scrollHiders\"] == \"0\") {\r\n\r\n                    // If we were the last scroll-locking thing to stop, then remove the class that stops scrolling.\r\n                    document.documentElement.removeAttribute(\"data-scroll-hiders\");\r\n                    document.documentElement.classList.remove(\"document-scroll-hidden\");\r\n\r\n                    // Also, restore the original scroll position\r\n                    // We do this by forcing the scroll behavior to not be smooth\r\n                    // (it's instant if nothing is set to smooth, https://www.w3.org/TR/cssom-view/#scrolling),\r\n                    // scrolling, then restoring the original scroll behavior \r\n                    // (which was probably already auto anyway, but just to be safe)\r\n                    const originalScrollBehavior = document.documentElement.style.scrollBehavior;\r\n                    document.documentElement.style.scrollBehavior = \"auto\";\r\n                    document.documentElement.scrollTo({ top: originalScrollTop, left: originalScrollLeft, behavior: \"auto\" });\r\n                    document.documentElement.style.scrollBehavior = originalScrollBehavior;\r\n                }\r\n            }\r\n\r\n        }\r\n    }, [hideScroll]);\r\n\r\n    return { getScrollbarWidth, getScrollbarHeight };\r\n})\r\n\r\n","import { EventMapping, TargetedPick, createElement, forwardRef, memo, useCallback, useImperativeHandle, useRef, type RenderableProps } from \"../util/lib.js\";\r\nimport { CSSProperties, ElementProps, Ref } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { useMergedProps } from \"./use-merged-props.js\";\r\nimport { UseRefElementReturnType, useRefElement } from \"./use-ref-element.js\";\r\n\r\nexport type HasClass = UseImperativePropsReturnTypeSelf<any>[\"hasClass\"];\r\nexport type SetClass = UseImperativePropsReturnTypeSelf<any>[\"setClass\"];\r\nexport type SetStyle = UseImperativePropsReturnTypeSelf<any>[\"setStyle\"];\r\nexport type GetAttribute<T extends Element> = UseImperativePropsReturnTypeSelf<T>[\"getAttribute\"];\r\nexport type SetAttribute<T extends Element> = UseImperativePropsReturnTypeSelf<T>[\"setAttribute\"];\r\nexport type SetChildren = UseImperativePropsReturnTypeSelf<any>[\"setChildren\"];\r\nexport type DangerouslySetInnerHTML = UseImperativePropsReturnTypeSelf<any>[\"dangerouslySetInnerHTML\"];\r\nexport type DangerouslyAppendHTML = UseImperativePropsReturnTypeSelf<any>[\"dangerouslyAppendHTML\"];\r\nexport type SetEventHandler = UseImperativePropsReturnTypeSelf<any>[\"setEventHandler\"];\r\n\r\ntype AvailableStyles = (keyof CSSStyleDeclaration & keyof CSSProperties) & string;\r\n\r\nexport interface UseImperativePropsReturnTypeSelf<T extends Element> {\r\n    /** @stable Returns whether the element currently has the current CSS class */\r\n    hasClass(cls: string): boolean;\r\n    /** @stable Applies or removes the given CSS class to the element and its props */\r\n    setClass(cls: string, enabled: boolean): void;\r\n    /** @stable Applies the given CSS style to the element and its props */\r\n    setStyle<K extends AvailableStyles>(prop: K, value: CSSProperties[K] | null): void;\r\n    /** @stable Returns the current value of the attribute on the element */\r\n    getAttribute<K extends keyof ElementProps<T>>(prop: K): ElementProps<T>[K];\r\n    /** @stable Applies the given attribute to the element and its props */\r\n    setAttribute<K extends keyof ElementProps<T>>(prop: K, value: ElementProps<T>[K] | null): void;\r\n    /** @stable Sets the element's `textContent` and `props.children` */\r\n    setChildren(children: string | null): void;\r\n    /** @stable Sets the element's `innerHTML` and `props.dangerouslySetInnerHTML.__html` */\r\n    dangerouslySetInnerHTML(html: string): void;\r\n    /** @stable Evaluates the given HTML and appends it to the current children and the current props. */\r\n    dangerouslyAppendHTML(html: string): Element;\r\n    /** @stable Applies the given event handler to the element and its props */\r\n    setEventHandler<K extends keyof HTMLElementEventMap>(type: K, listener: null | ((this: HTMLElement, ev: HTMLElementEventMap[K]) => void), options: AddEventListenerOptions): void;\r\n}\r\n\r\nlet a: UseImperativePropsReturnTypeSelf<any> = null!;\r\n\r\n\r\nexport interface UseImperativePropsParameters<E extends Element> extends TargetedPick<UseRefElementReturnType<E>, \"refElementReturn\", \"getElement\"> { }\r\n\r\ninterface ImperativeElementProps<T extends keyof HTMLElementTagNameMap> extends ElementProps<HTMLElementTagNameMap[T]> {\r\n    tag: T;\r\n    handle: Ref<UseImperativePropsReturnTypeSelf<HTMLElementTagNameMap[T]>>;\r\n}\r\n\r\nexport interface UseImperativePropsReturnType<T extends Element> {\r\n    /**\r\n     * @stable\r\n     * \r\n     *  (The object itself and everything within it are all stable and can be passed around freely)\r\n     */\r\n    imperativePropsReturn: UseImperativePropsReturnTypeSelf<T>;\r\n    props: ElementProps<T>;\r\n}\r\n\r\nlet templateElement: HTMLTemplateElement | null = null;\r\n\r\nfunction htmlToElement(parent: Element, html: string) {\r\n    const document = parent.ownerDocument;\r\n    templateElement ??= document.createElement(\"template\");\r\n    templateElement.innerHTML = html.trim();   // TODO: Trim ensures whitespace doesn't add anything, but with a better explanation of why\r\n    return templateElement.content.firstChild! as Element;\r\n}\r\n\r\n/**\r\n * Easy access to an HTMLElement that can be controlled imperatively.\r\n * \r\n * The HTMLElement rendered is controlled by the `tag` prop (e.g. \"span\", \"div\").\r\n * \r\n * The `handle` prop should be e.g. `useRef<ImperativeHandle<HTMLDivElement>>(null)`\r\n */\r\nexport const ImperativeElement = memo(forwardRef(ImperativeElementU)) as any as typeof ImperativeElementU;\r\n\r\n/**\r\n * Allows controlling an element's `class`, `style`, etc. with functions like `setStyle` in addition to being reactive to incoming props.\r\n * \r\n * @remarks If the component is re-rendered after the element is modified in some way, those changes are remembered and included in the returned `props` that are meant to be spread to the element in question. \r\n * \r\n * This is extremely useful for integrating with 3rd party libraries that expect to be able to directly manipulate the DOM because it keeps everything syncced together.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useImperativeProps = monitored(function useImperativeProps<E extends Element>({ refElementReturn: { getElement } }: UseImperativePropsParameters<E>): UseImperativePropsReturnType<E> {\r\n    const currentImperativeProps = useRef<{ className: Set<string>, style: CSSProperties, children: string | null, html: string | null, others: ElementProps<E> }>({ className: new Set(), style: {}, children: null, html: null, others: {} });\r\n\r\n\r\n    const hasClass = useCallback<HasClass>((cls: string) => { return currentImperativeProps.current.className.has(cls); }, [])\r\n    const setClass = useCallback<SetClass>((cls, enabled) => {\r\n        if (hasClass(cls) == !enabled) {\r\n            getElement()?.classList[enabled ? \"add\" : \"remove\"](cls);\r\n            currentImperativeProps.current.className[enabled ? \"add\" : \"delete\"](cls);\r\n        }\r\n    }, []);\r\n\r\n    const setStyle = useCallback<SetStyle>((prop, value) => {\r\n        const element = (getElement() as Element as HTMLElement | undefined);\r\n        if (element) {\r\n            if (currentImperativeProps.current.style[prop] != value) {\r\n                currentImperativeProps.current.style[prop as never] = value as never;\r\n                if ((prop as string).startsWith(\"--\")) {\r\n                    if (value != null)\r\n                        element.style.setProperty(prop, `${value}`);\r\n                    else\r\n                        element.style.removeProperty(prop);\r\n                }\r\n                else {\r\n                    element.style[prop] = value ?? (\"\" as any);\r\n                }\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const setChildren = useCallback<SetChildren>((children: string | null) => {\r\n        let e = getElement();\r\n        if (e && currentImperativeProps.current.children != children) {\r\n            currentImperativeProps.current.children = children;\r\n            currentImperativeProps.current.html = null;\r\n            e.textContent = children;\r\n        }\r\n    }, []);\r\n\r\n    const dangerouslySetInnerHTML = useCallback<DangerouslySetInnerHTML>((children: string) => {\r\n        let e = getElement();\r\n        if (e && currentImperativeProps.current.html != children) {\r\n            currentImperativeProps.current.children = null;\r\n            currentImperativeProps.current.html = children;\r\n            e.innerHTML = children;\r\n        }\r\n    }, []);\r\n\r\n    const dangerouslyAppendHTML = useCallback<DangerouslyAppendHTML>((children: string) => {\r\n        let e = getElement();\r\n        if (e && children) {\r\n            const newChild = htmlToElement(e, children);\r\n            console.assert((newChild && newChild instanceof Node));\r\n            if (newChild && newChild instanceof Node) {\r\n                currentImperativeProps.current.children = null;\r\n                currentImperativeProps.current.html ||= \"\";\r\n                currentImperativeProps.current.html += children;\r\n                e.appendChild(newChild);\r\n                return newChild;\r\n            }\r\n        }\r\n        return null!;\r\n    }, [])\r\n\r\n    const getAttribute = useCallback<GetAttribute<E>>((prop) => {\r\n        return currentImperativeProps.current.others[prop];\r\n    }, []);\r\n\r\n    const setAttribute = useCallback<SetAttribute<E>>((prop, value) => {\r\n        if (value != null) {\r\n            if (getAttribute(prop) != value) {\r\n                currentImperativeProps.current.others[prop] = value;\r\n                getElement()?.setAttribute(prop, value);\r\n            }\r\n        }\r\n        else {\r\n            if (getAttribute(prop) != undefined) {\r\n                delete currentImperativeProps.current.others[prop];\r\n                getElement()?.removeAttribute(prop);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const setEventHandler = useCallback<SetEventHandler>((type, handler, options) => {\r\n        const element = (getElement() as Element as HTMLElement | undefined);\r\n        const mappedKey = EventMapping[type] as keyof ElementProps<E>;\r\n        if (element) {\r\n            if (handler) {\r\n                element.addEventListener(type, handler, options);\r\n                currentImperativeProps.current.others[mappedKey] = handler;\r\n            }\r\n            else if (currentImperativeProps.current.others[mappedKey]) {\r\n                element.removeEventListener(type, currentImperativeProps.current.others[mappedKey], options);\r\n                currentImperativeProps.current.others[mappedKey] = undefined;\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return {\r\n        imperativePropsReturn: useRef<UseImperativePropsReturnTypeSelf<E>>({\r\n            hasClass,\r\n            setClass,\r\n            setStyle,\r\n            getAttribute,\r\n            setAttribute,\r\n            setEventHandler,\r\n            setChildren,\r\n            dangerouslySetInnerHTML,\r\n            dangerouslyAppendHTML\r\n        }).current,\r\n        props: useMergedProps<E>(\r\n            { className: [...currentImperativeProps.current.className].join(\" \"), style: currentImperativeProps.current.style },\r\n            currentImperativeProps.current.html ? { dangerouslySetInnerHTML: { __html: currentImperativeProps.current.html } } : {},\r\n            { children: currentImperativeProps.current.children },\r\n            currentImperativeProps.current.others\r\n        )\r\n\r\n    }\r\n})\r\n\r\nfunction ImperativeElementU<T extends keyof HTMLElementTagNameMap>({ tag: Tag, handle, ...props }: RenderableProps<ImperativeElementProps<T>>, ref: Ref<HTMLElementTagNameMap[T]>) {\r\n    const { propsStable, refElementReturn } = useRefElement<HTMLElementTagNameMap[T]>({ refElementParameters: {} })\r\n    const { props: imperativeProps, imperativePropsReturn: imperativeHandle } = useImperativeProps<HTMLElementTagNameMap[T]>({ refElementReturn });\r\n    useImperativeHandle(handle, () => imperativeHandle);\r\n    return (createElement(Tag, useMergedProps(propsStable, imperativeProps, props, { ref })));\r\n}\r\n\r\n\r\n","\r\n\r\nconst Table = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-\";\r\n\r\nfunction base64(value: number) {\r\n    return Table[value];\r\n}\r\n\r\nfunction random6Bits() {\r\n    return Math.floor(Math.random() * 0b1000000);\r\n}\r\n\r\nfunction random64Bits() {\r\n    return [random6Bits(), random6Bits(), random6Bits(), random6Bits(), random6Bits(), random6Bits(), random6Bits(), random6Bits(), random6Bits(), random6Bits(), random6Bits()] as const;\r\n}\r\n\r\n/**\r\n * Returns a randomly-generated ID with an optional prefix.\r\n * Note that if the prefix is *explicitly* set to \"\", then\r\n * IDs that are not valid under HTML4 may be generated. Oh no.\r\n * \r\n * \r\n * (This is here, in this particular file, to avoid circular dependencies\r\n * because useBeforeLayoutEffect also needs random IDs for its own reasons)\r\n */\r\nexport function generateRandomId(prefix?: string) {\r\n    return `${prefix ?? \"id-\"}${random64Bits().map(n => base64(n)).join(\"\")}`;\r\n}","import { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useState } from \"../preact-extensions/use-state.js\";\r\nimport { Fragment, cloneElement, createElement, createPortal, useCallback, useLayoutEffect, useMemo } from \"../util/lib.js\";\r\nimport { generateRandomId } from \"../util/random-id.js\";\r\nimport { VNode } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport interface UsePortalChildrenParameters {\r\n    /**\r\n     * The element that will contain the portal's children, or the string of its `id`.\r\n     * \r\n     * @nonstable\r\n     */\r\n    target: string | Element | null;\r\n}\r\n\r\nexport type PortalChildUpdater<S> = (value: ((prevState: S) => S)) => void;\r\nexport type PushPortalChild = UsePortalChildrenReturnType[\"pushChild\"];\r\nexport type UpdatePortalChild = UsePortalChildrenReturnType[\"updateChild\"];\r\nexport type RemovePortalChild = UsePortalChildrenReturnType[\"removeChild\"];\r\n\r\nexport interface UsePortalChildrenReturnType {\r\n    /** The return value of `createPortal` */\r\n    children: VNode | null;\r\n    /** The element that the portal was rendered to (even if an `id` was provided) */\r\n    portalElement: Element | null;\r\n    /** @stable Appends the given child to the portal's existing children, and returns a number that can be used to request updates to it/remove it later if necessary */\r\n    pushChild(child: VNode): number;\r\n    /** @stable Allows a child to be updated with new props. `index` is the value returned from `pushChild`. */\r\n    updateChild(index: number, child: VNode): void;\r\n    /** @stable Removes the child at the given `index` (the value returned from `pushChild`) */\r\n    removeChild(index: number): void;\r\n}\r\n\r\n/**\r\n * Very basic hook for a root-level component to use to allow any children within the whole app to push children to a portal somewhere.\r\n * \r\n * @remarks Returns the portal (as `children`, and functions to add, remove, or update a child to the portaled area)\r\n * \r\n * TODO: Can't push a child until after the very first `useLayoutEffect`\r\n * \r\n * {@include } {@link UsePortalChildrenParameters}\r\n */\r\nexport const usePortalChildren = monitored(function usePortalChildren({ target }: UsePortalChildrenParameters): UsePortalChildrenReturnType {\r\n    const [pushChild, setPushChild] = useState<PushPortalChild | null>(null);\r\n    const [updateChild, setUpdateChild] = useState<UpdatePortalChild | null>(null);\r\n    const [removeChild, setRemoveChild] = useState<RemovePortalChild | null>(null);\r\n\r\n    const pushChildStable = useStableCallback<NonNullable<typeof pushChild>>((child) => {\r\n        return pushChild?.(child) ?? -1;\r\n    });\r\n\r\n    const updateChildStable = useStableCallback<NonNullable<typeof updateChild>>((index, child) => {\r\n        return updateChild?.(index, child);\r\n    });\r\n\r\n    const removeChildStable = useStableCallback<NonNullable<typeof removeChild>>((index) => {\r\n        return removeChild?.(index);\r\n    });\r\n\r\n    const element = useMemo(() => { return target == null ? null : typeof target == \"string\" ? document.getElementById(target) : target; }, [target]);\r\n    const children = !element ? null : createPortal(createElement(PortalChildren, { setPushChild, setUpdateChild, setRemoveChild }), element!);\r\n\r\n    return {\r\n        children: children,\r\n        pushChild: pushChildStable,\r\n        updateChild: updateChildStable,\r\n        removeChild: removeChildStable,\r\n        portalElement: element\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n/**\r\n * Implementation\r\n */\r\nfunction PortalChildren({ setPushChild, setUpdateChild, setRemoveChild }: { setPushChild: PortalChildUpdater<PushPortalChild | null>, setUpdateChild: PortalChildUpdater<UpdatePortalChild | null>, setRemoveChild: PortalChildUpdater<RemovePortalChild | null> }) {\r\n    const [children, setChildren, getChildren] = useState<VNode[]>([]);\r\n    const pushChild: PushPortalChild | null = useCallback((child: VNode) => {\r\n        const randomKey = generateRandomId();\r\n        let index = getChildren().length;\r\n        setChildren(prev => ([...prev, cloneElement(child, { key: randomKey, index })]));\r\n        return index;\r\n    }, []);\r\n\r\n    const updateChild: UpdatePortalChild | null = useCallback((index: number, child: VNode) => {\r\n        const key = getChildren()[index]?.key;\r\n        console.assert(!!key);\r\n        if (key) {\r\n            setChildren(prev => {\r\n                let newChildren = prev.slice();\r\n                newChildren.splice(index, 1, cloneElement(child, { key: key as string, index }));\r\n                return newChildren;\r\n            });\r\n            return index;\r\n        }\r\n    }, []);\r\n\r\n    const removeChild: RemovePortalChild | null = useCallback((index: number) => {\r\n        const key = getChildren()[index]?.key;\r\n        console.assert(!!key);\r\n        if (key) {\r\n            setChildren(prev => {\r\n                let newChildren = prev.slice();\r\n                newChildren.splice(index, 1);\r\n                return newChildren;\r\n            });\r\n            return index;\r\n        }\r\n    }, []);\r\n\r\n    useLayoutEffect(() => { setPushChild(_ => pushChild); }, [pushChild]);\r\n    useLayoutEffect(() => { setUpdateChild(_ => updateChild); }, [updateChild]);\r\n    useLayoutEffect(() => { setRemoveChild(_ => removeChild); }, [removeChild]);\r\n\r\n    return (\r\n        createElement(Fragment, {}, children)\r\n    );\r\n}\r\n","import { getDocument } from \"../dom-helpers/use-document-class.js\";\r\nimport { UseRefElementParameters, UseRefElementReturnType, useRefElement } from \"../dom-helpers/use-ref-element.js\";\r\nimport { OnPassiveStateChange, returnNull, runImmediately, useEnsureStability, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useCallback, useEffect, useRef } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport interface UseElementSizeParametersSelf {\r\n    /**\r\n     * Called any time the browser detects a size change\r\n     * on the element. Does not need to be stable, so you\r\n     * can pass an anonymous function that only sets the\r\n     * values you use if you'd like.\r\n     * \r\n     * @stable\r\n     */\r\n    onSizeChange(sizeInfo: ElementSize, prevSize: ElementSize | undefined, entries: ResizeObserverEntry[] | UIEvent): void;\r\n\r\n    /**\r\n     * Passed as an argument to the created ResizeObserver.\r\n     * \r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe#parameters\r\n     * \r\n     * @stable \r\n     */\r\n    getObserveBox: null | (() => ResizeObserverOptions[\"box\"]);\r\n}\r\n\r\n\r\nexport interface UseElementSizeParameters<T extends Element> extends UseRefElementParameters<T> {\r\n    elementSizeParameters: UseElementSizeParametersSelf;\r\n}\r\n\r\nexport interface ElementSize {\r\n    clientWidth: number;\r\n    scrollWidth: number;\r\n    offsetWidth: number | undefined;\r\n    clientHeight: number;\r\n    scrollHeight: number;\r\n    offsetHeight: number | undefined;\r\n    clientLeft: number;\r\n    scrollLeft: number;\r\n    offsetLeft: number | undefined;\r\n    clientTop: number;\r\n    scrollTop: number;\r\n    offsetTop: number | undefined;\r\n}\r\n\r\nexport interface UseElementSizeReturnTypeSelf<E extends Element> {\r\n    /** @stable */\r\n    getSize(): ElementSize | null;\r\n}\r\n\r\n\r\nexport interface UseElementSizeReturnType<E extends Element> extends UseRefElementReturnType<E> {\r\n    elementSizeReturn: UseElementSizeReturnTypeSelf<E>;\r\n}\r\n\r\n/**\r\n * Measures an element, allowing you to react to its changes in size.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useElementSize = monitored(function useElementSize<E extends Element>({ elementSizeParameters: { getObserveBox, onSizeChange }, refElementParameters }: UseElementSizeParameters<E>): UseElementSizeReturnType<E> {\r\n    const { onElementChange, onMount, onUnmount } = (refElementParameters || {})\r\n\r\n    useEnsureStability(\"useElementSize\", getObserveBox, onSizeChange, onElementChange, onMount, onUnmount);\r\n\r\n    const [getSize, setSize] = usePassiveState<ElementSize | null, UIEvent | ResizeObserverEntry[]>(onSizeChange as OnPassiveStateChange<ElementSize | null, UIEvent | ResizeObserverEntry[]>, returnNull, runImmediately);\r\n\r\n    const currentObserveBox = useRef<ResizeObserverBoxOptions | undefined>(undefined);\r\n\r\n    const needANewObserver = useCallback((element: E | null, observeBox: ResizeObserverBoxOptions | undefined) => {\r\n        if (element) {\r\n            const document = getDocument(element);\r\n            const window = document.defaultView;\r\n\r\n            const handleUpdate = (entries: ResizeObserverEntry[] | UIEvent) => {\r\n                if (element.isConnected) {\r\n                    const { clientWidth, scrollWidth, offsetWidth, clientHeight, scrollHeight, offsetHeight, clientLeft, scrollLeft, offsetLeft, clientTop, scrollTop, offsetTop } = (element as Element & Partial<HTMLElement>);\r\n                    setSize({ clientWidth, scrollWidth, offsetWidth, clientHeight, scrollHeight, offsetHeight, clientLeft, scrollLeft, offsetLeft, clientTop, scrollTop, offsetTop }, entries);\r\n                }\r\n            }\r\n\r\n\r\n            if (window && (\"ResizeObserver\" in window)) {\r\n                const observer = new ResizeObserver((entries) => { handleUpdate(entries); });\r\n\r\n                observer.observe(element, { box: observeBox });\r\n\r\n                return () => observer.disconnect();\r\n            }\r\n            else {\r\n                document.addEventListener(\"resize\", handleUpdate, { passive: true });\r\n                return () => document.removeEventListener(\"resize\", handleUpdate);\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const { refElementReturn, ...rest } = useRefElement<E>({\r\n        refElementParameters: {\r\n            onElementChange: useCallback((e: E | null, p: E | null | undefined, r?: never) => { needANewObserver(e, getObserveBox?.()); onElementChange?.(e, p, r); }, []),\r\n            onMount,\r\n            onUnmount\r\n        }\r\n    });\r\n\r\n    const { getElement } = refElementReturn;\r\n\r\n    useEffect(() => {\r\n        if (getObserveBox) {\r\n            if (currentObserveBox.current !== getObserveBox())\r\n                needANewObserver(getElement(), getObserveBox());\r\n        }\r\n    });\r\n\r\n    return {\r\n        elementSizeReturn: { getSize },\r\n        refElementReturn,\r\n        ...rest\r\n    }\r\n\r\n\r\n})\r\n","\r\nimport { UseRefElementReturnType } from \"../dom-helpers/use-ref-element.js\";\r\n\r\nimport { OnPassiveStateChange, returnFalse, runImmediately, useEnsureStability, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { assertEmptyObject } from \"../util/assert.js\";\r\nimport { TargetedPick, useCallback, useEffect } from \"../util/lib.js\";\r\nimport { Nullable } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { UseActiveElementParameters, UseActiveElementReturnType, useActiveElement } from \"./use-active-element.js\";\r\n\r\nexport interface UseHasLastFocusParametersSelf {\r\n    /**\r\n     * Similar to `onFocusedChanged`, but if there is no currently focused element, is `true` if this element that *did* have focus last.\r\n     * \r\n     * @remarks This is always `true` while `focused` is `true`. If `focused` is `false`, this may be `true` or `false`.\r\n     * \r\n     * @stable\r\n     */\r\n    onLastFocusedChanged: Nullable<OnPassiveStateChange<boolean, UIEvent | undefined>>;\r\n\r\n    /**\r\n     * Combines the implications of `onFocusedChanged` and `onFocusedChanged`.\r\n     * \r\n     * @stable\r\n     */\r\n    onLastFocusedInnerChanged: Nullable<OnPassiveStateChange<boolean, UIEvent | undefined>>;\r\n}\r\n\r\n\r\nexport interface UseHasLastFocusParameters<T extends Node> extends UseActiveElementParameters, TargetedPick<UseRefElementReturnType<T>, \"refElementReturn\", \"getElement\"> {\r\n    hasLastFocusParameters: UseHasLastFocusParametersSelf;\r\n}\r\n\r\nexport interface HasLastFocusReturnTypeSelf {\r\n    /** @stable */\r\n    getLastFocused(): boolean;\r\n    /** @stable */\r\n    getLastFocusedInner(): boolean;\r\n}\r\n\r\nexport interface UseHasLastFocusReturnType extends UseActiveElementReturnType {\r\n    hasLastFocusReturn: HasLastFocusReturnTypeSelf;\r\n}\r\n\r\n/**\r\n * Allows monitoring whichever element is/was focused most recently, regardless of if it's *currently* focused.\r\n * \r\n * @see {@link useHasCurrentFocus}, where clicking the `body` is considered losing focus.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useHasLastFocus = monitored( function useHasLastFocus<T extends Node>(args: UseHasLastFocusParameters<T>): UseHasLastFocusReturnType {\r\n    const {\r\n        refElementReturn: { getElement },\r\n        activeElementParameters: { onLastActiveElementChange, ...activeElementParameters },\r\n        hasLastFocusParameters: { onLastFocusedChanged, onLastFocusedInnerChanged, ...void1 }\r\n    } = args;\r\n\r\n    assertEmptyObject(void1);\r\n\r\n\r\n    useEnsureStability(\"useHasFocus\", onLastFocusedChanged, onLastFocusedInnerChanged);\r\n\r\n    const [getLastFocused, setLastFocused] = usePassiveState<boolean, UIEvent | undefined>(onLastFocusedChanged, returnFalse, runImmediately);\r\n    const [getLastFocusedInner, setLastFocusedInner] = usePassiveState<boolean, UIEvent | undefined>(onLastFocusedInnerChanged, returnFalse, runImmediately);\r\n\r\n    const { activeElementReturn } = useActiveElement({\r\n        activeElementParameters: {\r\n            onLastActiveElementChange: useCallback<NonNullable<typeof onLastActiveElementChange>>((lastActiveElement, prevLastActiveElement, e) => {\r\n                const selfElement = getElement();\r\n                const focused = (selfElement != null && (selfElement == lastActiveElement as Node | null));\r\n                const focusedInner = (!!selfElement?.contains(lastActiveElement as Node | null));\r\n                setLastFocused(focused, e);\r\n                setLastFocusedInner(focusedInner, e);\r\n                onLastActiveElementChange?.(lastActiveElement, prevLastActiveElement, e);\r\n            }, []),\r\n            ...activeElementParameters\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setLastFocused(false, undefined);\r\n            setLastFocusedInner(false, undefined);\r\n        }\r\n    }, []);\r\n\r\n    return {\r\n        activeElementReturn,\r\n        hasLastFocusReturn: {\r\n            getLastFocused,\r\n            getLastFocusedInner,\r\n        }\r\n    };\r\n})\r\n","\r\nimport { useCallback } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { ElementSize } from \"./use-element-size.js\";\r\n\r\n//export type BlockFlowDirection = \"downwards\" | \"leftwards\" | \"rightwards\";\r\nexport type PhysicalDirection = \"ltr\" | \"rtl\" | \"ttb\" | \"btt\";\r\nexport type PhysicalOrientation = \"horizontal\" | \"vertical\";\r\nexport type PhysicalSize = \"width\" | \"height\";\r\n\r\nexport type LogicalOrientation = \"inline\" | \"block\";\r\n\r\ntype WritingMode = \"horizontal-tb\" | \"vertical-lr\" | \"sideways-rl\" | \"vertical-rl\" | \"sideways-lr\";\r\ntype Direction = \"ltr\" | \"rtl\";\r\ntype TextOrientation = \"mixed\" | \"upright\" | \"sideways\";\r\n\r\nfunction capitalize<T extends string>(str: T): Capitalize<T> {\r\n    return (str[0].toUpperCase() + str.substring(1)) as Capitalize<T>;\r\n}\r\n\r\nexport interface UseLogicalDirectionParameters {\r\n    // logicalDirectionParameters: { onLogicalDirectionChange: null | ((info: LogicalDirectionInfo | null) => void); }\r\n}\r\n\r\nexport interface LogicalElementSize {\r\n    clientInlineSize: number;\r\n    scrollInlineSize: number;\r\n    offsetInlineSize: number | undefined;\r\n    clientBlockSize: number;\r\n    scrollBlockSize: number;\r\n    offsetBlockSize: number | undefined;\r\n    clientInlineInset: number;\r\n    scrollInlineInset: number;\r\n    offsetInlineInset: number | undefined;\r\n    clientBlockInset: number;\r\n    scrollBlockInset: number;\r\n    offsetBlockInset: number | undefined;\r\n}\r\n\r\n/**\r\n * Inspects the element's style and determines the logical direction that text flows.\r\n * \r\n * @remarks Certain CSS properties, like `block-size`, respect the current writing mode and text direction.\r\n * But `transform`, `clip`, etc. don't.\r\n * \r\n * This is provided so that CSS properties can consistently use those logical properties.\r\n * \r\n * See https://drafts.csswg.org/css-writing-modes/#logical-to-physical\r\n * \r\n * {@include } {@link UseLogicalDirectionParameters}\r\n * \r\n * @returns An object containing the following functions:\r\n * * `getLogicalDirection`: retrieves a `LogicalDirectionInfo` representing the current state of the element. (Function is constant between renders)\r\n * * `convertElementSize`: When used in conjunction with `useElementSize`, allows you to retrieve the logical size of an element instead of the physical size. \r\n * * `convertToLogicalOrientation`: Based on the current direction, converts \"horizontal\" or \"vertical\" to \"inline\" or \"block\".\r\n * * `convertToPhysicalOrientation`:  Based on the current direction, converts \"inline\" or \"block\" to \"horizontal\" or \"vertical\".\r\n */\r\nexport const useLogicalDirection = monitored(function useLogicalDirection({ }: UseLogicalDirectionParameters): UseLogicalDirectionReturnType {\r\n\r\n    //    useEnsureStability(\"useLogicalDirection\", onLogicalDirectionChange);\r\n\r\n    //const [getComputedStyles, setComputedStyles] = usePassiveState<CSSStyleDeclaration | null>(null, returnNull);\r\n\r\n    // TODO: There's no way to refresh which writing mode we have once mounted.\r\n    //   A. There's no way to watch for CSS style changes\r\n    //   B. Calling getComputedStyle after every render for every element gets expensive fast and\r\n    //   C. Is not necessary for most use cases that will never switch writing-mode within a single component\r\n    //      (Those that do will need to mount and unmount the component that uses it)\r\n    //\r\n    // As a solution, here's a cheap workaround that checks when the element's size has changed,\r\n    // and if so, tests if the writing mode has changed too.\r\n    //\r\n    // This will work for at least some number of cases, but a better solution is still needed.\r\n    //const { useElementSizeProps } = useElementSize({ onSizeChange: useCallback(_ => onLogicalDirectionChange?.(getLogicalDirectionInfo()), []) })\r\n\r\n    const getLogicalDirectionInfo = useCallback((computedStyles: CSSStyleDeclaration) => {\r\n        if (computedStyles) {\r\n            const w = computedStyles.writingMode as WritingMode;\r\n            let d = computedStyles.direction as Direction;\r\n            const t = computedStyles.textOrientation as TextOrientation;\r\n\r\n            if (t == \"upright\")\r\n                d = \"ltr\";\r\n\r\n            return ({ ...WritingModes[w || \"horizontal-tb\"][d || \"ltr\"] });\r\n        }\r\n\r\n        return null;\r\n    }, [])\r\n\r\n    //const [getLogicalDirectionInfo, setLogicalDirectionInfo] = usePassiveState<LogicalDirectionInfo>(onLogicalDirectionChange);\r\n\r\n    const convertToLogicalOrientation = useCallback((computedStyles: CSSStyleDeclaration, elementOrientation: PhysicalOrientation, direction?: LogicalDirectionInfo | null | undefined) => {\r\n        direction ??= getLogicalDirectionInfo(computedStyles);\r\n        if (direction?.inlineOrientation === elementOrientation)\r\n            return \"inline\";\r\n        return \"block\";\r\n    }, []);\r\n\r\n    const convertToPhysicalSide = useCallback((computedStyles: CSSStyleDeclaration, side: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\", direction?: LogicalDirectionInfo | null | undefined): \"top\" | \"bottom\" | \"left\" | \"right\" => {\r\n        direction ??= getLogicalDirectionInfo(computedStyles);\r\n\r\n        switch (side) {\r\n            case \"block-start\":\r\n                return M[(direction?.blockDirection ?? \"ttb\")[0] as \"t\" | \"b\" | \"l\" | \"r\"];\r\n            case \"block-end\":\r\n                return M[(direction?.blockDirection ?? \"ttb\")[2] as \"t\" | \"b\" | \"l\" | \"r\"];\r\n\r\n            case \"inline-start\":\r\n                return M[(direction?.inlineDirection ?? \"ltr\")[0] as \"t\" | \"b\" | \"l\" | \"r\"];\r\n            case \"inline-end\":\r\n                return M[(direction?.inlineDirection ?? \"ltr\")[2] as \"t\" | \"b\" | \"l\" | \"r\"];\r\n        }\r\n    }, [])\r\n\r\n    const convertToLogicalSide = useCallback((computedStyles: CSSStyleDeclaration, side: \"top\" | \"bottom\" | \"left\" | \"right\", direction?: LogicalDirectionInfo | null | undefined): \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\" => {\r\n        direction ??= getLogicalDirectionInfo(computedStyles);\r\n        if (direction?.inlineOrientation === \"vertical\") {\r\n            switch (side) {\r\n                case \"top\":\r\n                    return direction.inlineDirection === \"ttb\" ? \"inline-start\" : \"inline-end\";\r\n                case \"bottom\":\r\n                    return direction.inlineDirection === \"btt\" ? \"inline-start\" : \"inline-end\";\r\n\r\n                case \"left\":\r\n                    return direction.blockDirection === \"ltr\" ? \"block-start\" : \"block-end\";\r\n                case \"right\":\r\n                    return direction.blockDirection === \"rtl\" ? \"block-start\" : \"block-end\";\r\n            }\r\n        }\r\n        else if (direction?.inlineOrientation === \"horizontal\") {\r\n            switch (side) {\r\n                case \"top\":\r\n                    return direction.blockDirection === \"ttb\" ? \"block-start\" : \"block-end\";\r\n                case \"bottom\":\r\n                    return direction.blockDirection === \"btt\" ? \"block-start\" : \"block-end\";\r\n\r\n                case \"left\":\r\n                    return direction.inlineDirection === \"ltr\" ? \"inline-start\" : \"inline-end\";\r\n                case \"right\":\r\n                    return direction.inlineDirection === \"rtl\" ? \"inline-start\" : \"inline-end\";\r\n            }\r\n        }\r\n\r\n        /* eslint-disable no-debugger */\r\n        debugger;\r\n        console.assert(false);\r\n        return \"inline-start\";\r\n\r\n    }, [])\r\n\r\n    const convertToPhysicalOrientation = useCallback((computedStyles: CSSStyleDeclaration, elementOrientation: LogicalOrientation, direction?: LogicalDirectionInfo | null | undefined) => {\r\n        direction ??= getLogicalDirectionInfo(computedStyles);\r\n        if (elementOrientation == \"inline\") {\r\n            if (direction?.inlineOrientation == \"horizontal\")\r\n                return \"horizontal\";\r\n            return \"vertical\";\r\n        }\r\n        else {\r\n            if (direction?.blockOrientation == \"vertical\")\r\n                return \"vertical\";\r\n\r\n            return \"horizontal\";\r\n        }\r\n    }, []);\r\n\r\n    const convertElementSize = useCallback((computedStyles: CSSStyleDeclaration, elementSize: ElementSize, direction?: LogicalDirectionInfo | null | undefined): LogicalElementSize | null => {\r\n        direction ??= getLogicalDirectionInfo(computedStyles);\r\n        if (direction) {\r\n            const { inlineSize, blockSize, inlineDirection, blockDirection } = direction;\r\n\r\n            // Size is relatively simple\r\n            const clientInlineSize = elementSize[`client${capitalize(inlineSize)}`];\r\n            const clientBlockSize = elementSize[`client${capitalize(blockSize)}`];\r\n\r\n            const offsetInlineSize = elementSize[`offset${capitalize(inlineSize)}`];\r\n            const offsetBlockSize = elementSize[`offset${capitalize(blockSize)}`];\r\n\r\n            const scrollInlineSize = elementSize[`scroll${capitalize(inlineSize)}`];\r\n            const scrollBlockSize = elementSize[`scroll${capitalize(blockSize)}`];\r\n\r\n\r\n\r\n\r\n            const f1 = getPhysicalLeftTop(inlineDirection);\r\n            const f2 = getPhysicalRightBottom(inlineDirection);\r\n\r\n            const f3 = getPhysicalLeftTop(blockDirection);\r\n            const f4 = getPhysicalRightBottom(blockDirection);\r\n\r\n\r\n            const clientInlineInset = elementSize[`client${capitalize(f1)}`] + (!f2 ? 0 : elementSize[`client${capitalize(f2)}`]);\r\n            const scrollInlineInset = elementSize[`scroll${capitalize(f1)}`] + (!f2 ? 0 : elementSize[`scroll${capitalize(f2)}`]);\r\n            const offsetInlineInset = elementSize[`offset${capitalize(f1)}`] == undefined ? undefined : (elementSize[`offset${capitalize(f1)}`]! + (!f2 ? 0 : elementSize[`offset${capitalize(f2)}`]!));\r\n\r\n\r\n            const clientBlockInset = elementSize[`client${capitalize(f3)}`] + (!f4 ? 0 : elementSize[`client${capitalize(f4)}`]);\r\n            const scrollBlockInset = elementSize[`scroll${capitalize(f3)}`] + (!f4 ? 0 : elementSize[`scroll${capitalize(f4)}`]);\r\n            const offsetBlockInset = elementSize[`offset${capitalize(f3)}`] == undefined ? undefined : (elementSize[`offset${capitalize(f3)}`]! + (!f4 ? 0 : elementSize[`offset${capitalize(f4)}`]!));\r\n\r\n\r\n            return {\r\n                clientInlineSize,\r\n                scrollInlineSize,\r\n                offsetInlineSize,\r\n                clientBlockSize,\r\n                scrollBlockSize,\r\n                offsetBlockSize,\r\n                clientInlineInset,\r\n                scrollInlineInset,\r\n                offsetInlineInset,\r\n                clientBlockInset,\r\n                scrollBlockInset,\r\n                offsetBlockInset,\r\n            }\r\n        }\r\n\r\n        return null;\r\n\r\n    }, []);\r\n\r\n    return {\r\n        logicalDirectionReturn: {\r\n            getLogicalDirectionInfo,\r\n            convertToLogicalSize: convertElementSize,\r\n            convertToLogicalOrientation,\r\n            convertToPhysicalOrientation,\r\n            convertToLogicalSide,\r\n            convertToPhysicalSide\r\n        }\r\n    };\r\n})\r\n\r\n// Position requires us to sometimes use one property (like `left`)\r\n// or sometimes two (like `left` + `width`)\r\nfunction getPhysicalLeftTop(dir: PhysicalDirection) { if (dir === \"ltr\" || dir == \"rtl\") return \"left\"; return \"top\"; }\r\nfunction getPhysicalRightBottom(dir: PhysicalDirection) { if (dir === \"rtl\") return \"width\"; if (dir === \"btt\") return \"height\"; return null; }\r\n\r\n// Helper for extracting info from \"ltr\", \"ttb\", etc.\r\nconst M = {\r\n    t: \"top\",\r\n    b: \"bottom\",\r\n    l: \"left\",\r\n    r: \"right\"\r\n} as const;\r\n\r\n\r\nexport interface UseLogicalDirectionReturnType {\r\n\r\n    /** @stable */\r\n    logicalDirectionReturn: {\r\n        getLogicalDirectionInfo: (computedStyles: CSSStyleDeclaration) => LogicalDirectionInfo | null;\r\n\r\n        /**\r\n         * Given the ElementSize info from useElementSize, converts all those physical properties to their logical counterparts.\r\n         * \r\n         * @stable\r\n         */\r\n        convertToLogicalSize: (computedStyles: CSSStyleDeclaration, elementSize: ElementSize, direction?: LogicalDirectionInfo | null | undefined) => LogicalElementSize | null;\r\n\r\n        /**\r\n         * Turns `\"horizontal\" | \"vertical\"` into `\"inline\" | \"block\"`\r\n         * \r\n         * @stable\r\n         */\r\n        convertToLogicalOrientation: (computedStyles: CSSStyleDeclaration, elementOrientation: PhysicalOrientation, direction?: LogicalDirectionInfo | null | undefined) => \"inline\" | \"block\";\r\n\r\n        /**\r\n         * Turns `\"inline\" | \"block\"` into `\"horizontal\" | \"vertical\"`\r\n         * \r\n         * @stable\r\n         */\r\n        convertToPhysicalOrientation: (computedStyles: CSSStyleDeclaration, elementOrientation: LogicalOrientation, direction?: LogicalDirectionInfo | null | undefined) => \"horizontal\" | \"vertical\";\r\n\r\n        /**\r\n         * Turns `\"top\" | \"bottom\" | \"left\" | \"right\"` into `\"block-start\" | \"block-end\" | \"inline-start\" | \"inline-end\"`\r\n         * \r\n         * @stable\r\n         */\r\n        convertToLogicalSide: (computedStyles: CSSStyleDeclaration, side: \"top\" | \"bottom\" | \"left\" | \"right\", direction?: LogicalDirectionInfo | null | undefined) => \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\";\r\n\r\n        /**\r\n         * Turns `\"block-start\" | \"block-end\" | \"inline-start\" | \"inline-end\"` into `\"top\" | \"bottom\" | \"left\" | \"right\"`\r\n         * \r\n         * @stable\r\n         */\r\n        convertToPhysicalSide: (computedStyles: CSSStyleDeclaration, side: \"inline-start\" | \"inline-end\" | \"block-start\" | \"block-end\", direction?: LogicalDirectionInfo | null | undefined) => \"top\" | \"bottom\" | \"left\" | \"right\";\r\n    }\r\n}\r\n\r\n\r\n\r\nexport interface LogicalDirectionInfo {\r\n    /**\r\n     * Represents the direction text flows, glyph by glyph.  By far the most complex property.\r\n     * \r\n     * |`writing-mode`|`direction`|Result|\r\n     * |-----|-----|-----|\r\n     * |`horizontal-tb`|`ltr`|`ltr`|\r\n     * |`horizontal-tb`|`rtl`|`rtl`|\r\n     * |`vertical-rl` & `sideways-rl`|`ltr`|`ttb`|\r\n     * |`vertical-rl` & `sideways-rl`|`rtl`|`btt`|\r\n     * |`vertical-lr`|`ltr`|`ttb`|\r\n     * |`vertical-lr`|`rtl`|`btt`|\r\n     * |`sideways-lr`|`ltr`|`btt`|\r\n     * |`sideways-lr`|`rtl`|`ttb`|\r\n     */\r\n    inlineDirection: PhysicalDirection;\r\n\r\n    /**\r\n     * Simplified version of `inlineDirection`:\r\n     * \r\n     * * `horizontal` for `horizontal-tb`\r\n     * * `vertical` for all others\r\n     */\r\n    inlineOrientation: PhysicalOrientation;\r\n\r\n    /**\r\n     * Represents the direction text flows, line by line.\r\n     * \r\n     * * `ttb` for `horizontal-tb`, regardless of direction\r\n     * * `rtl` for `vertical-rl` & `sideways-rl`, regardless of direction\r\n     * * `ltr` for `vertical-lr` & `sideways-lr`, regardless of direction\r\n     */\r\n    blockDirection: PhysicalDirection;\r\n\r\n    /**\r\n     * Simplified version of `blockDirection`:\r\n     * \r\n     * * `vertical` for `horizontal-tb`\r\n     * * `horizontal` for all others\r\n     */\r\n    blockOrientation: PhysicalOrientation;\r\n\r\n    /**\r\n     * Represents how you can *physically* refer to the size of the element in the *inline* size.\r\n     * \r\n     * * `width` for `horizontal-tb`, regardless of direction\r\n     * * `height` for all others\r\n     */\r\n    inlineSize: PhysicalSize;\r\n\r\n    /**\r\n     * Represents how you can *physically* refer to the size of the element in the *block* size.\r\n     * \r\n     * * `height` for `horizontal-tb`, regardless of direction\r\n     * * `width` for all others\r\n     */\r\n    blockSize: PhysicalSize;\r\n\r\n    /**\r\n     * For each glyph, ascenders to descenders *physically* go:\r\n     * \r\n     * * `ttb` for `horizontal-tb`\r\n     * * `rtl` for `vertical-rl`, `vertical-lr`, & `sideways-rl`\r\n     * * `ltr` for `sideways-lr`\r\n     */\r\n    overUnderDirection: PhysicalDirection;\r\n\r\n    /**\r\n     * For each glyph, its \"left\" side (think of this relative to `writing-mode` but *not* relative to `direction`, or alternatively what `text-align: left` means) to its \"right\" side *physically* goes from:\r\n     * \r\n     * * `ltr` for `horizontal-tb`\r\n     * * `ttb` for `vertical-rl`, `vertical-lr`, & `sideways-rl`\r\n     * * `btt` for `sideways-lr`\r\n     */\r\n    leftRightDirection: PhysicalDirection;\r\n}\r\n\r\nconst HorizontalTbLtr: LogicalDirectionInfo = {\r\n    inlineDirection: \"ltr\",\r\n    blockDirection: \"ttb\",\r\n\r\n    inlineOrientation: \"horizontal\",\r\n    blockOrientation: \"vertical\",\r\n\r\n    inlineSize: \"width\",\r\n    blockSize: \"height\",\r\n\r\n    leftRightDirection: \"ltr\",\r\n    overUnderDirection: \"ttb\"\r\n};\r\n\r\nconst HorizontalTbRtl: LogicalDirectionInfo = {\r\n    ...HorizontalTbLtr,\r\n    inlineDirection: \"rtl\",\r\n};\r\n\r\nconst VerticalRlLtr: LogicalDirectionInfo = {\r\n    inlineDirection: \"ttb\",\r\n    blockDirection: \"rtl\",\r\n\r\n    inlineOrientation: \"vertical\",\r\n    blockOrientation: \"horizontal\",\r\n\r\n    inlineSize: \"height\",\r\n    blockSize: \"width\",\r\n\r\n    leftRightDirection: \"ttb\",\r\n    overUnderDirection: \"rtl\"\r\n};\r\n\r\nconst VerticalRlRtl: LogicalDirectionInfo = {\r\n    ...VerticalRlLtr,\r\n    inlineDirection: \"btt\"\r\n};\r\n\r\n\r\nconst SidewaysRlLtr: LogicalDirectionInfo = { ...VerticalRlLtr };\r\nconst SidewaysRlRtl: LogicalDirectionInfo = { ...VerticalRlRtl };\r\n\r\nconst VerticalLrLtr: LogicalDirectionInfo = {\r\n    ...VerticalRlLtr,\r\n    blockDirection: \"ltr\",\r\n};\r\n\r\nconst VerticalLrRtl: LogicalDirectionInfo = {\r\n    ...VerticalRlRtl,\r\n    blockDirection: \"ltr\",\r\n};\r\n\r\nconst SidewaysLtLtr: LogicalDirectionInfo = {\r\n    ...VerticalLrLtr,\r\n    inlineDirection: \"btt\",\r\n\r\n    leftRightDirection: \"btt\",\r\n    overUnderDirection: \"ltr\"\r\n};\r\n\r\nconst SidewaysLtRtl: LogicalDirectionInfo = {\r\n    ...SidewaysLtLtr,\r\n    inlineDirection: \"ttb\"\r\n};\r\n\r\n\r\n\r\nconst HorizontalTb = {\r\n    ltr: HorizontalTbLtr,\r\n    rtl: HorizontalTbRtl\r\n} as const;\r\n\r\nconst VerticalRl = {\r\n    ltr: VerticalRlLtr,\r\n    rtl: VerticalRlRtl\r\n} as const;\r\n\r\nconst VerticalLr = {\r\n    ltr: VerticalLrLtr,\r\n    rtl: VerticalLrRtl\r\n} as const;\r\n\r\nconst SidewaysRl = {\r\n    ltr: SidewaysRlLtr,\r\n    rtl: SidewaysRlRtl\r\n} as const;\r\n\r\nconst SidewaysLr = {\r\n    ltr: SidewaysLtLtr,\r\n    rtl: SidewaysLtRtl\r\n} as const;\r\n\r\nconst WritingModes = {\r\n    \"horizontal-tb\": HorizontalTb,\r\n    \"vertical-lr\": VerticalLr,\r\n    \"vertical-rl\": VerticalRl,\r\n    \"sideways-lr\": SidewaysLr,\r\n    \"sideways-rl\": SidewaysRl\r\n} as const;\r\n","import { useState } from \"../preact-extensions/use-state.js\";\r\nimport { useLayoutEffect, useRef } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n/**\r\n * \r\n * Allows a component to use the boolean result of a media query as part of its render.\r\n * \r\n * @remarks Please note that there is a re-render penalty incurred by using this hook -- it will\r\n * always cause any component that uses it to re-render one extra time on mount as it\r\n * stores the result of the media query. This can be mitigated with the `defaultGuess`\r\n * parameter -- if you guess correctly (`true`/`false`), then there's no penalty. Hooray.\r\n * \r\n * @param query - Must be in parens, e.g. `(max-width: 600px)`\r\n * @param defaultGuess - Optional. If you pass the same value that's measured after rendering, no re-render will occur.\r\n * @returns `UseMediaQueryReturnType`\r\n */\r\nexport const useMediaQuery = monitored(function useMediaQuery(query: string | null | undefined, defaultGuess?: boolean): UseMediaQueryReturnType {\r\n\r\n    const queryList = useRef<MediaQueryList | null>();\r\n\r\n    // queryList.current ??= (query == null ? null : matchMedia(query))\r\n    // This ^^^ is not done because it seems to cause reflows at inopportune moments.\r\n    // Specifically on iOS Safari (tested on 12).\r\n    // It's always iOS Safari.\r\n    // At any rate it botches transitions that happen on a just-mounted component, somehow.\r\n    const [matches, setMatches, getMatches] = useState<null | boolean>(defaultGuess ?? null);\r\n\r\n    console.assert(!query || query.startsWith(\"(\"));\r\n\r\n    useLayoutEffect(() => {\r\n        if (!query)\r\n            return;\r\n\r\n        queryList.current = matchMedia(query);\r\n        setMatches(queryList.current.matches || false);\r\n\r\n        const handler = (e: MediaQueryListEvent) => {\r\n            setMatches(e.matches);\r\n        }\r\n\r\n        queryList.current.addEventListener(\"change\", handler, { passive: true });\r\n        return () => queryList.current?.removeEventListener(\"change\", handler);\r\n\r\n    }, [query]);\r\n\r\n    return {\r\n        matches,\r\n        getMatches\r\n    };\r\n})\r\n\r\nexport interface UseMediaQueryReturnType {\r\n    matches: boolean | null;\r\n    getMatches(): boolean | null;\r\n}\r\n\r\n","import { UseRefElementParameters, UseRefElementReturnType, useRefElement } from \"../dom-helpers/use-ref-element.js\";\r\nimport { returnNull, runImmediately, usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useCallback, useEffect } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\nexport interface UseMutationObserverParametersSelf<E extends Element> extends UseRefElementParameters<E> {\r\n    onChildList: null | ((info: { addedNodes: NodeList, removedNodes: NodeList }) => void);\r\n    onAttributes: null | ((info: { attributeName: string | null, attributeNamespace: string | null, oldValue?: string | null }) => void);\r\n    onCharacterData: null | ((info: MutationRecord) => void);\r\n    subtree: boolean;\r\n    characterDataOldValue: boolean;\r\n    attributeOldValue: boolean;\r\n    attributeFilter: string | string[];\r\n}\r\n\r\n\r\nexport interface UseMutationObserverParameters<E extends Element> extends UseRefElementParameters<E> {\r\n    mutationObserverParameters: UseMutationObserverParametersSelf<E>;\r\n}\r\n\r\nexport interface UseMutationObserverReturnType<E extends Element> extends UseRefElementReturnType<E> {\r\n\r\n}\r\n\r\n/**\r\n * Effectively just a wrapper around a `MutationObserver`.\r\n * \r\n * @compositeParams\r\n */\r\nexport const useMutationObserver = monitored(function useMutationObserver<E extends Element>({\r\n    refElementParameters,\r\n    mutationObserverParameters: { attributeFilter, subtree, onChildList, characterDataOldValue, onCharacterData, onAttributes, attributeOldValue }\r\n}: UseMutationObserverParameters<E>): UseMutationObserverReturnType<E> {\r\n\r\n    const { onElementChange, ...rest } = (refElementParameters || {})\r\n\r\n\r\n    if (typeof attributeFilter === \"string\")\r\n        attributeFilter = [attributeFilter];\r\n    const attributeKey = attributeFilter?.join(\";\");\r\n\r\n    const attributes = !!onAttributes;\r\n    const characterData = !!onCharacterData;\r\n    const childList = !!onChildList;\r\n\r\n    const stableOnChildList = useStableCallback(onChildList ?? (() => { }));\r\n    const stableOnCharacterData = useStableCallback(onCharacterData ?? (() => { }));\r\n    const stableOnAttributes = useStableCallback(onAttributes ?? (() => { }));\r\n\r\n    const [_getMo, setMo] = usePassiveState<MutationObserver | null, never>(useStableCallback(observer => {\r\n        const element = getElement();\r\n        if (element && observer && (!!attributeKey || !!characterData || !!childList)) {\r\n            observer.observe(element, {\r\n                attributeFilter: attributeFilter as Array<string>,\r\n                attributeOldValue,\r\n                attributes,\r\n                characterData,\r\n                characterDataOldValue,\r\n                childList,\r\n                subtree\r\n            })\r\n\r\n            return () => observer.disconnect();\r\n        }\r\n    }), returnNull, runImmediately)\r\n\r\n    const onNeedMutationObserverReset = useCallback((element: E | null) => {\r\n        if (element) {\r\n            queueMicrotask(() => {\r\n                setMo(new MutationObserver((a) => {\r\n                    for (const mutation of a) {\r\n                        switch (mutation.type) {\r\n                            case \"childList\":\r\n                                stableOnChildList(mutation);\r\n                                break;\r\n\r\n                            case \"attributes\":\r\n                                stableOnAttributes(mutation);\r\n                                break;\r\n\r\n                            case \"characterData\":\r\n                                stableOnCharacterData(mutation);\r\n                                break;\r\n                        }\r\n                    }\r\n                }));\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        onNeedMutationObserverReset(getElement());\r\n    }, [attributeKey, attributeOldValue, characterDataOldValue, subtree])\r\n\r\n    const { refElementReturn, propsStable } = useRefElement<E>({\r\n        refElementParameters: {\r\n            onElementChange: useStableCallback((e: E | null, p: E | null | undefined, r) => { onElementChange?.(e, p, r); onNeedMutationObserverReset(e); }),\r\n            ...rest\r\n        }\r\n    });\r\n    const { getElement } = refElementReturn;\r\n\r\n    return {\r\n        refElementReturn,\r\n        propsStable\r\n    };\r\n})","import { useGlobalHandler } from \"../dom-helpers/use-event-handler.js\";\r\n\r\nimport { usePassiveState } from \"../preact-extensions/use-passive-state.js\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useCallback } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n/**\r\n * Allows you to inspect when the entire URL changes, \r\n * either because the hash changed or because the Back/Forward \r\n * browser buttons were pressed.\r\n * \r\n * @remarks If the URL is set programmatically\r\n * in a way that doesn't trigger either of those, like\r\n * `history.replaceState`, well, 🤷 there's no way to track that.\r\n * So beware of other libraries that modify page history out from under you.\r\n * \r\n * In general, you'll want to inspect a specific directory of\r\n * a path, or a specific query parameter value, not the\r\n * entire URL.\r\n */\r\nexport const useUrl = monitored(function useUrl(onUrlChange: (url: string) => void) {\r\n\r\n    const [getUrl, setUrl] = usePassiveState<string, Event | undefined>(useStableCallback(onUrlChange), useCallback(() => window.location.toString(), []));\r\n\r\n    useGlobalHandler(window, \"hashchange\", (e) => {\r\n        setUrl(window.location.toString(), e);\r\n    });\r\n\r\n    useGlobalHandler(window, \"popstate\", (e: PopStateEvent) => {\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event#the_history_stack\r\n        // TODO: If this assert never fires, it's *probably* fine??\r\n        console.assert(window.location.toString() === document.location.toString());\r\n        setUrl(window.location.toString(), e);\r\n    });\r\n\r\n    return [getUrl, useCallback((newUrlOrSetter: (string | ((prev: string | undefined) => string)), action: \"push\" | \"replace\") => {\r\n        if (typeof newUrlOrSetter == \"function\") {\r\n            setUrl(prev => {\r\n                let newUrl = newUrlOrSetter(prev);\r\n                history[`${action ?? \"replace\"}State`]({}, document.title, newUrl);\r\n                return newUrl;\r\n            }, undefined)\r\n        }\r\n        else {\r\n            history[`${action ?? \"replace\"}State`]({}, document.title, newUrlOrSetter);\r\n            setUrl(newUrlOrSetter, undefined);\r\n        }\r\n    }, [])] as const;\r\n})\r\n","\r\nimport { Inputs, useEffect } from \"../util/lib.js\";\r\nimport { OmitStrong } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { UseAsyncParameters, useAsync } from \"./use-async.js\";\r\n\r\n/**\r\n * Combines the semantics of `useAsync` and `useEffect`. \r\n * \r\n * @remarks More specifically, if an event would run again, but the previous async event is still running,\r\n * then we'll wait until it finishes to run the new effect. \r\n * And while waiting, further new effect runs will bump old ones off,\r\n * only remembering the most recent request.\r\n * \r\n * @returns All values from `useAsync`, except for `syncHandler`.\r\n */\r\nexport const useAsyncEffect = monitored( function useAsyncEffect<I extends Inputs>(effect: () => Promise<(void | (() => void))>, inputs?: I, options?: OmitStrong<UseAsyncParameters<[void], [void]>, \"capture\">) {\r\n    const { syncHandler, ...rest } = useAsync(effect, { ...options, capture: null, debounce: null, throttle: null });\r\n    useEffect(syncHandler, inputs);\r\n    return rest;\r\n})\r\n","import { Inputs, useEffect as useEffectNative, useRef } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n/**\r\n * Wrap the native `useEffect` to add arguments \r\n * that allow accessing the previous value as the first argument,\r\n * as well as the changes that caused the hook to be called as the second argument.\r\n * \r\n * @param effect - Same as the default\r\n * @param inputs - Same as the default\r\n * @param impl - You can choose whether to use `useEffect` or `useLayoutEffect` by\r\n * passing one of them as this argument. By default, it's `useEffect`.\r\n */\r\nexport const useEffectDebug = monitored(function useEffectDebug<I extends Inputs>(effect: (prev: I | undefined, changes: EffectChange<I, number>[]) => (void | (() => void)), inputs?: I, impl = useEffectNative) {\r\n    const prevInputs = useRef<undefined | I>(undefined);\r\n    const effect2 = () => {\r\n        const changes: { from: any, to: any }[] = [];\r\n        if (inputs && prevInputs.current) {\r\n            for (let i = 0; i < Math.max(prevInputs.current.length, inputs.length); ++i) {\r\n                if (prevInputs.current[i] != inputs[i])\r\n                    changes[i] = { from: prevInputs.current[i], to: inputs[i] }\r\n            }\r\n        }\r\n        const ret = effect(prevInputs.current, changes);\r\n        prevInputs.current = inputs;\r\n        return ret;\r\n    };\r\n\r\n    impl(effect2, inputs);\r\n})\r\n\r\nexport interface EffectChange<I extends Inputs, N extends number> { from: I[N], to: I[N] }\r\n","\r\nimport { Inputs, useLayoutEffect as useLayoutEffectNative } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { EffectChange, useEffectDebug } from \"./use-effect-debug.js\";\r\n\r\n/**\r\n * Wrap the native `useLayoutEffect` to add arguments \r\n * that allow accessing the previous value as the first argument,\r\n * as well as the changes that caused the hook to be called as the second argument.\r\n * \r\n * @param effect - Same as the built-in's\r\n * @param inputs - Same as the built-in's\r\n */\r\nexport const useLayoutEffectDebug = monitored(function useLayoutEffectDebug<I extends Inputs>(effect: (prev: I | undefined, changes: EffectChange<I, number>[]) => (void | (() => void)), inputs?: I) {\r\n    return useEffectDebug(effect, inputs, useLayoutEffectNative);\r\n})\r\n","import { useGlobalHandler } from \"../dom-helpers/use-event-handler.js\";\r\nimport { StateUpdater, useLayoutEffect } from \"../util/lib.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\nimport { useStableCallback } from \"./use-stable-callback.js\";\r\nimport { useStableGetter } from \"./use-stable-getter.js\";\r\nimport { useState } from \"./use-state.js\";\r\n\r\n/* eslint-disable @typescript-eslint/no-empty-interface */\r\n/**\r\n * All types allowed by `usePersistentState`.\r\n * \r\n * Use module augmentation to add new properties to this object that `usePersistentState` will correctly understand:\r\n * \r\n * ```typescript\r\n * declare module 'preact-prop-helpers' {\r\n *     interface PersistentStates {\r\n *         numberState: number;\r\n *         stringState: string;\r\n *     }\r\n * }\r\n * ```\r\n */\r\nexport interface PersistentStates { }\r\n\r\nexport function getFromLocalStorage<Key extends (keyof PersistentStates) & string>(key: Key, converter: ((input: string) => PersistentStates[Key]) = JSON.parse, storage: Storage = localStorage): PersistentStates[Key] | null {\r\n    try {\r\n        const item = storage.getItem(key);\r\n        if (item == null)\r\n            return null;\r\n        return converter(item);\r\n    }\r\n    catch (e) {\r\n        /* eslint-disable no-debugger */\r\n        debugger;\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function storeToLocalStorage<Key extends (keyof PersistentStates) & string>(key: Key, value: PersistentStates[Key], converter: ((input: PersistentStates[Key]) => string) = JSON.stringify, storage: Storage = localStorage): void {\r\n    try {\r\n        if (value == null)\r\n            storage.removeItem(key);\r\n        else\r\n            storage.setItem(key, converter(value));\r\n    }\r\n    catch (e) {\r\n        /* eslint-disable no-debugger */\r\n        debugger;\r\n    }\r\n}\r\n\r\n/**\r\n * @remarks Use module augmentation to get the correct types for this function.\r\n * \r\n * ```typescript\r\n * declare module 'preact-prop-helpers' {\r\n *     interface PersistentStates {\r\n *         numberState: number;\r\n *         stringState: string;\r\n *     }\r\n * }\r\n * ```\r\n * @param key -  \r\n * @param initialValue -  \r\n * @param fromString -  \r\n * @param toString -  \r\n * @returns \r\n */\r\nexport const usePersistentState = monitored(function usePersistentState<Key extends keyof PersistentStates, T = PersistentStates[Key]>(key: Key | null, initialValue: T, fromString: ((value: string) => T) = JSON.parse, toString: ((value: T) => string) = JSON.stringify, storage: Storage = localStorage): [T, StateUpdater<T>, () => T] {\r\n\r\n    const [localCopy, setLocalCopy, getLocalCopy] = useState<T>(() => ((key ? (getFromLocalStorage(key, fromString as any, storage)) : null) ?? initialValue));\r\n    const getInitialValue = useStableGetter(initialValue);\r\n\r\n    // Ensure that if our key changes, we also update `localCopy` to match.\r\n    useLayoutEffect(() => {\r\n        if (key) {\r\n            const newCopy = getFromLocalStorage(key, fromString as any, storage);\r\n            setLocalCopy(newCopy ?? getInitialValue());\r\n        }\r\n    }, [key, storage])\r\n\r\n    // Listen for changes to this storage in other browser tabs\r\n    useGlobalHandler(window, \"storage\", useStableCallback((e: StorageEvent) => {\r\n\r\n        if (key && e.key === key && e.storageArea == storage) {\r\n            const newValue = e.newValue;\r\n\r\n            if (newValue != null)\r\n                setLocalCopy(fromString(newValue));\r\n            else\r\n                setLocalCopy(initialValue);\r\n        }\r\n    }));\r\n\r\n    const setValueWrapper = useStableCallback<typeof setLocalCopy>((valueOrSetter) => {\r\n\r\n        const value: PersistentStates[Key] = typeof valueOrSetter === \"function\" ? (valueOrSetter as Function)(getLocalCopy()) : valueOrSetter;\r\n\r\n        // Make sure this update is available immediately before the next render\r\n        setLocalCopy(valueOrSetter);\r\n\r\n        // Actually save the value to local storage.\r\n        if (key) {\r\n            storeToLocalStorage(key, value as PersistentStates[Key], toString, storage);\r\n\r\n            if (typeof value == \"object\" && (value as object) instanceof Date) {\r\n                console.assert(fromString != JSON.parse, \"Dates (and other non-JSON types) must be given custom fromString and toString functions.\");\r\n            }\r\n        }\r\n    });\r\n\r\n    const getValue = useStableCallback(() => {\r\n        const trueValue = !key ? undefined : getFromLocalStorage(key, fromString as any, storage);\r\n        return trueValue ?? localCopy;\r\n    });\r\n\r\n    return [localCopy, setValueWrapper, getValue];\r\n\r\n})\r\n","import { useMergedProps } from \"../dom-helpers/use-merged-props.js\";\r\nimport { ElementProps, JSX, Ref, VNode, createElement } from \"../util/lib.js\";\r\n\r\nfunction childrenIsVnode(children: ElementProps<any>[\"children\"] | null | undefined): children is VNode {\r\n    if (children && (children as VNode).type && (children as VNode).props)\r\n        return true;\r\n    return false;\r\n}\r\n\r\n/**\r\n * Passes props onto another set of props' `children`. \r\n * \r\n * @details If `children` is a VNode (e.g. a `<div>` or a `<Component>`), then the props are spread to that.\r\n * Otherwise, a new element is created with the `Tag` parameter, which defaults to `\"span\"`\r\n * \r\n * @param children \r\n * @param props \r\n * @param ref \r\n * @param Tag \r\n * @returns \r\n */\r\nexport function usePropsOnChildren(children: ElementProps<any>[\"children\"] | undefined | null, props: ElementProps<any>, ref: Ref<any> | null | undefined, Tag: keyof JSX.IntrinsicElements = 'span') {\r\n    const c = (childrenIsVnode(children) ? children : <Tag>{children}</Tag>) as any as VNode;\r\n    return createElement(c.type as any, useMergedProps(c.props, { ref: c.ref }, props, { ref }));\r\n}\r\n","\r\nimport { useUrl } from \"../observers/use-url.js\";\r\nimport { Nullable, useCallback, useEffect, useRef } from \"../util/lib.js\";\r\nimport { OmitStrong } from \"../util/types.js\";\r\nimport { OnPassiveStateChange, runImmediately, usePassiveState } from \"./use-passive-state.js\";\r\nimport { useStableCallback } from \"./use-stable-callback.js\";\r\nimport { useState } from \"./use-state.js\";\r\n\r\nexport type OnParamValueChanged<T> = OnPassiveStateChange<T, never>;\r\nexport type SetParamWithHistory<T> = (value: T | ((prevValue: T) => T), reason?: \"push\" | \"replace\") => void;\r\n\r\n/* eslint-disable @typescript-eslint/no-empty-interface */\r\n/**\r\n * All types allowed by `useSearchParamState`.\r\n * \r\n * Use module augmentation to add new properties to this object that `useSearchParamState` will correctly understand:\r\n * \r\n * ```typescript\r\n * declare module 'preact-prop-helpers' {\r\n *     interface SearchParamStates {\r\n *         numberState: number;\r\n *         stringState: string;\r\n *     \\}\r\n * \\}\r\n * ```\r\n */\r\nexport interface SearchParamStates { }\r\n\r\nfunction parseParam<Key extends keyof SearchParamStates, T = SearchParamStates[Key]>(url: Nullable<URL>, paramKey: Nullable<Key>, fromString: ((value: string | null) => T | null)): T | undefined {\r\n    if (paramKey == undefined)\r\n        return paramKey ?? undefined;\r\n\r\n    url ??= new URL(window.location.toString());\r\n    let value = url.searchParams.get(paramKey);\r\n    let ret = fromString(value) ?? undefined;\r\n    return ret;\r\n}\r\n\r\nfunction unparseParam<Key extends keyof SearchParamStates, T = SearchParamStates[Key]>(params: URLSearchParams, paramKey: Nullable<Key>, value: T, ts2: ((value: T | null) => (string | null))) {\r\n    if (paramKey == null)\r\n        return;\r\n\r\n    const type = typeof value;\r\n    if (value == null) {\r\n        params.delete(paramKey);\r\n    }\r\n    else if (type === \"boolean\") {\r\n        if (value === true) {\r\n            params.set(paramKey, \"\");\r\n        }\r\n        else {\r\n            params.set(paramKey, \"false\");\r\n        }\r\n    }\r\n    else {\r\n        params.set(paramKey, `${ts2(value ?? null)}`);\r\n    }\r\n}\r\n\r\nexport interface UseSearchParamStateParameters<Key extends keyof SearchParamStates, T = SearchParamStates[Key]> {\r\n    key: Key;\r\n    /** If there is no value in the URL for this state, then `initialValue` will be used instead. */\r\n    initialValue: T;\r\n    /** \r\n     * How is the user's history modified when the state changes if not otherwise specified? \r\n     * \"`replace`\" is recommended unless you *really* have a good reason to clog up the back button. \r\n     */\r\n    defaultReason?: Nullable<\"push\" | \"replace\">;\r\n    onValueChange?: Nullable<OnParamValueChanged<T> | null | undefined>;\r\n    stringToValue: ((value: string | null) => T | null);\r\n    // Can't just be named `toString`...\r\n    valueToString?: Nullable<((value: T | null) => (string | null)) | undefined>;\r\n}\r\n\r\n/**\r\n * Provides access to the requested Search Param's value\r\n * \r\n * @remarks Note that while this function is like usePassiveState (itself like useState and useEffect combined),\r\n * the `setState` return function is, due to browser limitations, not synchronous, but that's\r\n * like most calls to `setState` anyway I guess?\r\n * \r\n * {@include } {@link UseSearchParamStateParameters}\r\n * \r\n * {@include } {@link SearchParamStates}\r\n * \r\n * @param paramKey - The name of the URL search parameter to reference \r\n * @param type - The type of data encode/decode (`\"string\"` | `\"boolean\"` | `\"number\"` | `\"bigint\"`)\r\n * @param onParamValueChanged - Will be called any time the requested Search Parameter's value changes.\r\n */\r\nexport function useSearchParamState<Key extends keyof SearchParamStates>({ key: paramKey, defaultReason, stringToValue, initialValue, onValueChange, valueToString }: UseSearchParamStateParameters<Key, SearchParamStates[Key]>) {\r\n    type T = SearchParamStates[Key];\r\n    //fromString ??= JSON.parse;\r\n    //toString ??= JSON.stringify;\r\n    valueToString ??= (value) => `${value}`;\r\n    defaultReason ??= \"replace\";\r\n\r\n    const getInitialValue = useStableCallback(() => (parseParam(new URL(window.location.toString()), paramKey, stringToValue) ?? initialValue))\r\n\r\n\r\n    useEffect(() => {\r\n        setParamWithHistory(getInitialValue(), \"replace\");\r\n    }, [])\r\n\r\n    // We keep a local copy of our current Search Param value\r\n    // because changing it is actually an asynchronous operation\r\n    // and we can't know when it ends aside from just \"did the URL change or not\"\r\n    // so we might as well keep this state around locally to compensate.\r\n    const savedParamValue = useRef(parseParam<Key, T>(null, paramKey, stringToValue) ?? initialValue);\r\n    const [getSavedParamValue, setSavedParamValue] = usePassiveState<T, never>(onValueChange, useStableCallback(() => {\r\n        return savedParamValue.current = (parseParam<Key, T>(null, paramKey, stringToValue) ?? getInitialValue());\r\n    }), runImmediately);\r\n    const setParamWithHistory = useStableCallback<SetParamWithHistory<T>>((newValueOrUpdater, reason?: \"push\" | \"replace\") => {\r\n        let prevValue: T = parseParam<Key, T>(null, paramKey, stringToValue) ?? getInitialValue();\r\n        let nextValue: T = (typeof newValueOrUpdater == \"function\" ? (newValueOrUpdater as Function)(prevValue) : newValueOrUpdater);\r\n\r\n        let newParams = new URLSearchParams((new URL(window.location.toString()).searchParams));\r\n        unparseParam<Key, T>(newParams, paramKey, nextValue as T, valueToString!);\r\n        let nextUrl = new URL(window.location.toString());\r\n        nextUrl.search = prettyPrintParams(newParams);\r\n        reason ??= defaultReason ?? \"replace\";\r\n        history[`${reason}State`]({}, document.title, nextUrl);\r\n        setUrl(nextUrl.toString(), reason);\r\n        setSavedParamValue(nextValue);\r\n    });\r\n\r\n\r\n    // Any time the URL changes, it means the Search Param we care about might have changed.\r\n    // Parse it out and save it.\r\n    const [, setUrl] = useUrl(useStableCallback(url => {\r\n        const newParam = parseParam<Key, T>(null, paramKey, stringToValue) ?? getInitialValue();\r\n        setSavedParamValue(newParam);\r\n    }));\r\n\r\n    // Ensure we can call getValue during render--it's fine.\r\n    return [useCallback(() => { return savedParamValue.current; }, []), setParamWithHistory] as const;\r\n}\r\n\r\nexport function useSearchParamStateDeclarative<Key extends keyof SearchParamStates>({ key, defaultReason, stringToValue, initialValue, valueToString }: OmitStrong<UseSearchParamStateParameters<Key, SearchParamStates[Key]>, \"onValueChange\">) {\r\n    const [value, setLocalCopy] = useState<SearchParamStates[Key]>(parseParam<Key>(null, key, stringToValue)! ?? initialValue);\r\n    const [getValue, setValue] = useSearchParamState<Key>({\r\n        key,\r\n        stringToValue,\r\n        initialValue,\r\n        defaultReason,\r\n        onValueChange: setLocalCopy,\r\n        valueToString\r\n    });\r\n\r\n\r\n    /*useLayoutEffect(() => {\r\n        const p = parseParam(null, key, stringToValue);\r\n        setValue(p!);\r\n    }, [])*/\r\n\r\n    return [value, setValue, getValue] as const;\r\n\r\n}\r\n\r\nfunction prettyPrintParams(params: URLSearchParams) {\r\n    const paramArray = [...params.entries()].filter((key, value) => value != null);\r\n    if (paramArray.length == 0)\r\n        return \"\";\r\n\r\n\r\n    let queryString = paramArray.map(([key, value]) => {\r\n        if (value === \"\" || (value as any) === true)\r\n            return `${encodeURIComponent(key)}`;\r\n        else\r\n            return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\r\n    }).join(\"&\");\r\n\r\n    return `?${queryString}`;\r\n\r\n}\r\n","import { useEffect, useRef } from \"../util/lib.js\";\r\n\r\nexport function useWhatCausedRender(who: string, { props, state }: { props: any, state: any }) {\r\n    const prevProps = useRef<any>(undefined!);\r\n    const prevState = useRef<any>(undefined!);\r\n    useEffect(() => {\r\n        if (prevProps.current != undefined) {\r\n            const propDifferences = describeDifferences(1, who + \".props\", props, prevProps.current, 0);\r\n            if (propDifferences.length)\r\n                console.log(propDifferences);\r\n        }\r\n        if (prevState.current != undefined) {\r\n            const stateDifferences = describeDifferences(10, who + \".state\", state, prevState.current, 0);\r\n            if (stateDifferences.length)\r\n                console.log(stateDifferences);\r\n        }\r\n        prevProps.current = props;\r\n        prevState.current = state;\r\n    });\r\n}\r\n\r\ninterface DifferenceInfo {\r\n    path: string;\r\n    oldValue: unknown;\r\n    newValue: unknown;\r\n}\r\n\r\nfunction describeDifferences(maxDepth: number, path: string, lhs: any, rhs: any, depth: number): DifferenceInfo[] {\r\n    if (depth > maxDepth)\r\n        return [];\r\n    if (lhs === rhs)\r\n        return [];\r\n\r\n    if (typeof lhs != typeof rhs) {\r\n        return [{ path, newValue: lhs, oldValue: rhs }];\r\n    }\r\n    if (typeof lhs == \"number\" || typeof lhs == \"string\" || typeof rhs == \"boolean\" || lhs == null || rhs == null) {\r\n        if (lhs != rhs)\r\n            return [{ path, newValue: lhs, oldValue: rhs }];\r\n        else\r\n            return [];\r\n    }\r\n\r\n    // If we're at our max depth, just count this different in and of itself as a difference -- don't recurse down to find why.\r\n    if (lhs != rhs && depth == maxDepth) {\r\n        return [{ path, newValue: lhs, oldValue: rhs }];\r\n    }\r\n\r\n    // We don't check for equality -- we just recurse down the property chain.\r\n    const allKeys = new Set([...Object.keys(lhs ?? {}), ...Object.keys(rhs ?? {})]);\r\n    return Array.from(allKeys).map(key => describeDifferences(maxDepth, path + \".\" + key, lhs[key], rhs[key], depth + 1)).flat();\r\n}\r\n","import { noop } from \"lodash-es\";\r\nimport { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { createContext, createElement, useCallback, useContext, useEffect, useRef } from \"../util/lib.js\";\r\nimport { ElementProps, Nullable } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\ntype RafCallbackType = (msSinceLast: number, tag?: any) => void;\r\n\r\ninterface ContextType {\r\n    addCallback: (callback: RafCallbackType, tag?: any) => void;\r\n    removeCallback: (callback: RafCallbackType) => void;\r\n}\r\n\r\nconst SharedAnimationFrameContext = createContext<null | ContextType>(null);\r\n\r\n/**\r\n * When a bunch of unrelated components all use `requestAnimationFrame`,\r\n * yes, this actually is faster. I wish it wasn't. It's lame.\r\n */\r\nexport function ProvideBatchedAnimationFrames({ children }: { children: ElementProps<EventTarget>[\"children\"] }) {\r\n\r\n    const addCallback = useCallback<ContextType[\"addCallback\"]>((callbackToBeBatched, tag) => { allCallbacks.current.set(callbackToBeBatched, tag); }, []);\r\n    const removeCallback = useCallback<ContextType[\"removeCallback\"]>((callback) => { allCallbacks.current.delete(callback); }, []);\r\n\r\n    const contextInfo = useRef<ContextType>(null!);\r\n    if (contextInfo.current == null)\r\n        contextInfo.current = { addCallback, removeCallback };\r\n    const allCallbacks = useRef<Map<RafCallbackType, any>>(null!);\r\n    if (allCallbacks.current == null)\r\n        allCallbacks.current = new Map();\r\n\r\n    useEffect(() => {\r\n        let handle = -1;\r\n\r\n        function rafWithBatchedCallbacks(msSinceLast: number) {\r\n            for (const [batchedRafCallback, tag] of allCallbacks.current) {\r\n                batchedRafCallback(msSinceLast, tag);\r\n            }\r\n            handle = requestAnimationFrame(rafWithBatchedCallbacks);\r\n        }\r\n\r\n        handle = requestAnimationFrame(rafWithBatchedCallbacks);\r\n\r\n        return () => cancelAnimationFrame(handle);\r\n    }, []);\r\n\r\n    return (\r\n        createElement(SharedAnimationFrameContext.Provider, { value: contextInfo.current, children })\r\n    )\r\n}\r\n\r\nexport interface UseAnimationFrameParameters {\r\n    /**\r\n     * Callback with effectively the same rules as `requestAnimationFrame`\r\n     * \r\n     * Doesn't need to be stable.\r\n     */\r\n    callback: Nullable<((msSinceLast: number) => void)>;\r\n}\r\n\r\n/**\r\n * The callback you provide will start running every frame after the component mounts.\r\n * \r\n * @remarks Passing `null` is fine and simply stops the effect until you restart it by providing a non-null callback; it doesn't need to be stable.\r\n * \r\n * {@include } {@link UseAnimationFrameParameters}\r\n * \r\n * {@include } {@link ProvideBatchedAnimationFrames}\r\n */\r\nexport const useAnimationFrame = monitored(function useAnimationFrame({ callback }: UseAnimationFrameParameters): void {\r\n\r\n    // Get a wrapper around the given callback that's stable\r\n    const stableCallback = useStableCallback(callback ?? noop);\r\n    const hasCallback = (callback != null);\r\n\r\n    const sharedAnimationFrameContext = useContext(SharedAnimationFrameContext);\r\n\r\n    useEffect(() => {\r\n        if (sharedAnimationFrameContext) {\r\n            if (hasCallback) {\r\n                sharedAnimationFrameContext.addCallback(stableCallback);\r\n            }\r\n            else {\r\n                sharedAnimationFrameContext.removeCallback(stableCallback);\r\n            }\r\n        }\r\n        else {\r\n            if (hasCallback) {\r\n                // Get a wrapper around the wrapper around the callback\r\n                // that also calls `requestAnimationFrame` again.\r\n                const rafCallback = (ms: number) => {\r\n                    handle = requestAnimationFrame(rafCallback);\r\n                    stableCallback(ms);\r\n                }\r\n                let handle = requestAnimationFrame(rafCallback);\r\n                return () => cancelAnimationFrame(handle);\r\n            }\r\n        }\r\n    }, [sharedAnimationFrameContext, hasCallback])\r\n})\r\n","import { useStableCallback } from \"../preact-extensions/use-stable-callback.js\";\r\nimport { useStableGetter } from \"../preact-extensions/use-stable-getter.js\";\r\nimport { useEffect } from \"../util/lib.js\";\r\nimport { Nullable } from \"../util/types.js\";\r\nimport { monitored } from \"../util/use-call-count.js\";\r\n\r\n\r\n\r\nexport interface UseIntervalParameters {\r\n    /**\r\n     * The number of ms to wait before invoking `callback`.\r\n     */\r\n    interval: Nullable<number>;\r\n\r\n    /**\r\n     * Called `timeout` ms after mount, or the last change to `triggerIndex`.\r\n     */\r\n    callback: () => void;\r\n}\r\n\r\n/**\r\n * Runs a function every time the specified number of milliseconds elapses while the component is mounted.\r\n * \r\n * @remarks\r\n * {@include } {@link UseIntervalParameters}\r\n */\r\nexport const useInterval = monitored(function useInterval({ interval, callback }: UseIntervalParameters) {\r\n\r\n    // Get a wrapper around the given callback that's stable\r\n    const stableCallback = useStableCallback(callback);\r\n    const getInterval = useStableGetter(interval);\r\n\r\n    useEffect(() => {\r\n        const interval = getInterval();\r\n        let lastDelayUsed = interval;\r\n\r\n        if (interval == null)\r\n            return;\r\n\r\n\r\n        // Get a wrapper around the wrapper around the callback\r\n        // that clears and resets the interval if it changes.\r\n        const adjustableCallback = () => {\r\n            stableCallback();\r\n            const currentInterval = getInterval();\r\n            if (currentInterval != lastDelayUsed) {\r\n                clearInterval(handle);\r\n                if (currentInterval != null)\r\n                    handle = setInterval(adjustableCallback, lastDelayUsed = currentInterval);\r\n            }\r\n        }\r\n        let handle = setInterval(adjustableCallback, interval);\r\n        return () => clearInterval(handle);\r\n    }, []);\r\n})\r\n\r\n"],"names":["EventMapping","em","Unset","useBeforeLayoutEffect","useCallbackNative","useState","useStateP","shuffle","lodashShuffle","useEffectNative","useLayoutEffectNative","_jsx"],"mappings":"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"}